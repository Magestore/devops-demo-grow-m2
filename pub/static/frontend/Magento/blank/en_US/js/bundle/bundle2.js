require.config({
    config: {
        'jsbuild':{"Magestore_Webpos/js/model/checkout/cart/data/cart.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine([\n    'ko',\n    'Magestore_Webpos/js/helper/general'\n], function (ko, Helper) {\n    'use strict';\n    return {\n        KEY: {\n            QUOTE_INIT:'quote_init',\n            ITEMS:'items',\n            SHIPPING:'shipping',\n            PAYMENT:'payment',\n            TOTALS:'totals',\n            QUOTE_ID:\"quote_id\",\n            TILL_ID:\"till_id\",\n            CURRENCY_ID:\"currency_id\",\n            CUSTOMER_ID:\"customer_id\",\n            CUSTOMER_DATA:\"customer_data\",\n            BILLING_ADDRESS:\"billing_address\",\n            SHIPPING_ADDRESS:\"shipping_address\",\n            STORE_ID:\"store_id\",\n            STORE:\"store\",\n        },\n        DATA:{\n            STATUS: {\n                SUCCESS: '1',\n                ERROR: '0'\n            }\n        },\n        PAGE:{\n            CART:\"cart\",\n            CHECKOUT:\"checkout\"\n        },\n        apply_tax_after_discount: (Helper.getBrowserConfig('tax/calculation/apply_after_discount') == 1)?true:false,\n        items: ko.observableArray(),\n        totals: ko.observableArray(),\n        extraTotals: ko.observableArray(),\n        quoteTotals: ko.observableArray(),\n        hasErrors: ko.observable(false),\n        errorMessages: ko.observable(),\n        getItem: function(itemId){\n            var self = this;\n            var item = false;\n            var foundItem = ko.utils.arrayFirst(self.items(), function(item) {\n                return (item.item_id() == itemId);\n            });\n            if(foundItem){\n                item = foundItem;\n            }\n            return item;\n        },\n        getMaxDiscountAmount: function(taxAfterDiscount){\n            var self = this;\n            var max = 0;\n            var appliedDiscount = 0;\n            if(self.items().length > 0){\n                taxAfterDiscount = (typeof taxAfterDiscount != undefined)?taxAfterDiscount:self.apply_tax_after_discount;\n                ko.utils.arrayForEach(self.items(), function (item) {\n                    max += (taxAfterDiscount == false)?(item.base_row_total() + item.base_tax_amount()):item.base_row_total();\n                });\n            }\n            max -= appliedDiscount;\n            return max;\n        },\n        getMaxItemDiscountAmount: function(item_id, taxAfterDiscount){\n            var self = this;\n            var max = 0;\n            var item = self.getItem(item_id);\n            if(item !== false){\n                taxAfterDiscount = (typeof taxAfterDiscount != undefined)?taxAfterDiscount:self.apply_tax_after_discount;\n                max = (taxAfterDiscount == false)?(item.base_row_total() + item.base_tax_amount()):item.base_row_total();\n            }\n            return max;\n        }\n    };\n});","Magestore_Webpos/js/model/synchronization/synchronization-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/synchronization/synchronization',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/synchronization/synchronization';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/staff/current-staff.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'ko'\n    ],\n    function (ko) {\n        'use strict';\n\n        var staffId = ko.observable(window.webposConfig.staffId);\n        var staffResourceAccess = ko.observableArray(window.webposConfig.staffResourceAccess);\n        var customerGroupOfStaff = ko.observable(window.webposConfig.customerGroupOfStaff);\n        var staffName = ko.observable(window.webposConfig.staffName);\n        var maximum_discount_percent = ko.observable(window.webposConfig.maximum_discount_percent);\n\n        return {\n            staffId: staffId,\n            staffName: staffName,\n            staffResourceAccess: staffResourceAccess,\n            customerGroupOfStaff: customerGroupOfStaff,\n            maximum_discount_percent: maximum_discount_percent,\n\n            setStaffId: function(staff) {\n                staffId(staff);\n            },\n\n            getStaffId: function () {\n                return staffId;\n            },\n\n            setStaffResourceAccess: function(resource) {\n                staffResourceAccess(resource);\n            },\n\n            getStaffResourceAccess: function () {\n                return staffResourceAccess;\n            },\n\n            getCustomerGroupOfStaff: function () {\n                return customerGroupOfStaff;\n            },\n            \n            getStaffName: function () {\n                return staffName;\n            },\n            \n            setStaffName: function (name) {\n                staffName(name);\n            },\n            \n            getMaximumDiscountPercent: function () {\n                return maximum_discount_percent;\n            }\n\n        };\n    }\n);\n","Magestore_Webpos/js/model/staff/staff.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/staff/staff'\n    ],\n    function ($,modelAbstract, restResource) {\n        \"use strict\";\n        return modelAbstract.extend({\n            mode: \"online\",\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), {});\n                this.setResourceCollection({});\n            },\n            changePassWord: function(postData, deferred){\n                if(!deferred) {\n                    deferred = $.Deferred();\n                }\n                this.getResource().changePassWord(postData,deferred);\n                return deferred;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/log/action-log.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/log/action-log',\n        'Magestore_Webpos/js/model/collection/log/action-log'\n    ],\n    function ($, ko, modelAbstract, logIndexedDb, logCollection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setResource('', logIndexedDb());\n                this.setResourceCollection(logCollection());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/directory/currency.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/directory/currency',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/directory/currency',\n        'Magestore_Webpos/js/model/collection/directory/currency'\n    ],\n    function ($, modelAbstract, customerRest, customerIndexedDb, customerCollection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'currency',\n            initialize: function () {\n                this._super();\n                this.setResource(customerRest(), customerIndexedDb());\n                this.setResourceCollection(customerCollection());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/directory/country.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/directory/currency',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/directory/country',\n        'Magestore_Webpos/js/model/collection/directory/country'\n    ],\n    function ($, modelAbstract, customerRest, customerIndexedDb, customerCollection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'country',\n            initialize: function () {\n                this._super();\n                this.setResource(customerRest(), customerIndexedDb());\n                this.setResourceCollection(customerCollection());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'uiElement',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function ($, Element, eventmanager) {\n        \"use strict\";\n\n        return Element.extend({\n            /* Set Mode For Collection*/\n            mode: 'offline',\n            model: {},\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },\n            /* Get Current Mode*/\n            getMode: function () {\n                return this.mode;\n            },\n            /* Set Mode For Collection*/\n            setMode: function (mode) {\n                this.mode = mode;\n                return this;\n            },\n            /**\n             * Set model to colelction\n             */\n            setModel: function (model) {\n                this.model = model;\n                return this;\n            },\n            /**\n             * Get model from Collection\n             */\n            getModel: function () {\n                return this.model;\n            },\n            /* Get Data*/\n            getData: function () {\n                return this.data;\n            },\n            /* Set data For Collection*/\n            setData: function (data) {\n                this.data = data;\n                return this;\n            },\n            /* Set Resource Offline Or Online*/\n            setResource: function (onlineResource, offlineResource) {\n                this.onlineResource = onlineResource;\n                this.offlineResource = offlineResource;\n                return this;\n            },\n            /* Get Current Resource*/\n            getResource: function () {\n                if (this.getMode() == 'offline') {\n                    return this.offlineResource;\n                } else {\n                    return this.onlineResource;\n                }\n            },\n            /* Get Resource Online*/\n            getResourceOnline: function () {\n                return this.onlineResource;\n            },\n            /* Get Resource Offline*/\n            getResourceOffline: function () {\n                return this.offlineResource;\n            },\n            /* Set Order*/\n            setOrder: function (field, direction) {\n                var orderCondition = {\n                    \"field\": field,\n                    \"direction\": direction\n                };\n                this.queryParams.orderParams.push(orderCondition);\n                return this;\n            },\n            /* Collection Filter*/\n            addFieldToFilter: function (field, value, condition) {\n                var self = this;\n                var filterCondition = {\n                    \"field\": field,\n                    \"value\": value,\n                    \"condition\": condition\n                };\n                if ($.isArray(field)) {\n                    var orFilter = [];\n                    $.each(field, function (index, value) {\n                        filterCondition = {\n                            \"field\": value[0],\n                            \"value\": value[1],\n                            \"condition\": value[2]\n                        };\n                        orFilter.push(filterCondition);\n                    });\n                    self.queryParams.paramOrFilter.push(orFilter);\n                } else {\n                    this.queryParams.filterParams.push(filterCondition);\n                }\n\n                return this;\n            },\n            /* Filter by param*/\n            addParamToFilter: function (field, value) {\n                var paramCondition = {\n                    \"field\": field,\n                    \"value\": value\n                };\n                this.queryParams.paramToFilter.push(paramCondition);\n                return this;\n            },\n            _loadBefore: function() {\n                var eventData = {'collection': this};\n                // eventmanager.dispatch('collection_load_before', eventData);\n                if(this.getModel().event_prefix){\n                    eventmanager.dispatch(this.getModel().event_prefix + '_collection_load_before', eventData);\n                }                \n            },            \n            /* Load Collection*/\n            load: function (deferred) {\n                if(!deferred)\n                    deferred = $.Deferred();\n                if (!this.getResource())\n                    return;\n                var self = this;                \n                self._loadBefore();\n                var cdeferred = this.getResource().queryCollectionData(this);\n                cdeferred.done(function (data){\n                    self.setData(data);\n                    /* after load collection */\n                    self._loadAfter(data);\n                    if(self.deferred) {\n                        self.deferred.done(function(eventdata){\n                            deferred.resolve(data);\n                            self.reset();\n                        }); \n                    } else {\n                        deferred.resolve(data);\n                        self.reset();\n                    }\n                }).fail(function (data){\n                     deferred.reject(data);\n                     self.reset();\n                }).always(function(response){\n                    self.reset();\n                });\n                //self.reset();\n                return deferred;\n            },\n            _loadAfter: function(response) {\n                var eventData = {'collection': this, 'response': response};\n                // eventmanager.dispatch('collection_load_after', eventData);\n                if(this.getModel().event_prefix){\n                    eventmanager.dispatch(this.getModel().event_prefix + '_collection_load_after', eventData);\n                }                \n            },\n            /* Set Page Size*/\n            setPageSize: function (pageSize) {\n                this.queryParams.pageSize = pageSize;\n                return this;\n            },\n            /* Set Current Page*/\n            setCurPage: function (curPage) {\n                this.queryParams.currentPage = curPage;\n                return this;\n            },\n            /* Reset Collection*/\n            reset: function () {\n                var self = this;\n                self.cleanData();\n                self.destroy();\n                this.queryParams.filterParams = [];\n                this.queryParams.orderParams = [];\n                this.queryParams.currentPage = '';\n                this.queryParams.pageSize = '';\n                this.queryParams.paramToFilter = [];\n                this.queryParams.paramOrFilter = [];\n                return this;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/sales/order.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/sales/order',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/sales/order'\n\n    ],\n    function ($,ko, collectionAbstract, orderRest, orderIndexedDb) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Set Mode For Collection*/\n            mode: 'offline',\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: []\n            },\n            \n            initialize: function () {\n                this._super();\n                this.setResource(orderRest(), orderIndexedDb());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/sales/order/invoice.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/sales/order/invoice',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/sales/order/invoice'\n\n    ],\n    function ($,ko, collectionAbstract, invoiceRest, invoiceIndexedDb) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Set Mode For Collection*/\n            mode: 'offline',\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: []\n            },\n            \n            initialize: function () {\n                this._super();\n                this.setResource(invoiceRest(), invoiceIndexedDb());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/sales/order/creditmemo.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/sales/order/creditmemo',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/sales/order/creditmemo'\n\n    ],\n    function ($,ko, collectionAbstract, creditmemoRest, creditmemoIndexedDb) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Set Mode For Collection*/\n            mode: 'offline',\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: []\n            },\n            \n            initialize: function () {\n                this._super();\n                this.setResource(creditmemoRest(), creditmemoIndexedDb());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/sales/order/shipment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/sales/order/shipment',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/sales/order/shipment'\n\n    ],\n    function ($,ko, collectionAbstract, shipmentRest, shipmentIndexedDb) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Set Mode For Collection*/\n            mode: 'offline',\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: []\n            },\n            \n            initialize: function () {\n                this._super();\n                this.setResource(shipmentRest(), shipmentIndexedDb());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/sales/order/payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/sales/order/payment',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/sales/order/payment'\n\n    ],\n    function ($,ko, collectionAbstract, paymentRest, paymentIndexedDb) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Set Mode For Collection*/\n            mode: 'offline',\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: []\n            },\n            \n            initialize: function () {\n                this._super();\n                this.setResource(paymentRest(), paymentIndexedDb());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/shift/shift.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/shift/shift',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/shift/shift'\n    ],\n    function ($,ko, collectionAbstract, restResource, indexeddbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },            \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexeddbResource());\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/collection/checkout/taxrate.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/taxrate',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/checkout/taxrate'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/checkout/taxrule.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/taxrule',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/checkout/taxrule'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/checkout/payment-popup.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/payment',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/checkout/payment'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/checkout/shipping.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/shipping',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/checkout/shipping'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/checkout/payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/payment',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/checkout/payment'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/checkout/taxclass.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/taxclass',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/checkout/taxclass'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/integration/store-credit.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/integration/storecredit/store-credit',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/integration/storecredit/store-credit'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/integration/reward-points.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/integration/rewardpoints/reward-points',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/integration/rewardpoints/reward-points'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/integration/rewardpoints/rate.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/integration/rewardpoints/rate',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/integration/rewardpoints/rate'\n\n    ],\n    function ($, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/collection/log/action-log.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/log/action-log'\n    ],\n    function (collectionAbstract, logResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource('', logResource());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/directory/currency.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/directory/currency',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/directory/currency'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/directory/country.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/directory/country',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/directory/country'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/config/config.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/config/config',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/config/config'\n\n    ],\n    function (collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/collection/catalog/category.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/catalog/category',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/catalog/category'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/collection/catalog/product.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/catalog/product',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/catalog/product'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },            \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            },          \n        });\n    }\n);","Magestore_Webpos/js/model/collection/catalog/product/swatch.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/catalog/product/swatch',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/catalog/product/swatch'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/collection/inventory/location.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/inventory/location',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/inventory/location'\n\n    ],\n    function ($, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/collection/inventory/stock-item.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/inventory/stock-item',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/inventory/stock-item'\n\n    ],\n    function ($,ko, collectionAbstract, restResource, indexedDbResource) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/collection/customer/complain.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/customer/complain',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/customer/complain'\n\n    ],\n    function ($,ko, collectionAbstract, complainRest, complainIndexedDb) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(complainRest(), complainIndexedDb());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/customer/group.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/customer/group',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/customer/group'\n\n    ],\n    function ($,ko, collectionAbstract, customerGroupRest, customerGroupIndexedDb) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(customerGroupRest(), customerGroupIndexedDb());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/collection/customer/customer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/customer/customer',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/customer/customer',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function ($,ko, collectionAbstract, customerRest, customerIndexedDb, Helper) {\n        \"use strict\";\n\n        return collectionAbstract.extend({\n            /* Query Params*/\n            queryParams: {\n                filterParams: [],\n                orderParams: [],\n                pageSize: '',\n                currentPage: '',\n                paramToFilter: [],\n                paramOrFilter: []\n            },              \n            initialize: function () {\n                this._super();\n                this.setResource(customerRest(), customerIndexedDb());\n                this.mode = (Helper.isUseOnline('customers'))?'online':'offline';\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/config/local-config.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery'\n    ],\n    function ($) {\n        \"use strict\";\n        return {\n            prepareKey: function(key) {\n                return 'webpos_' + WEBPOS.getConfig('staffId') + '_' + key;\n            },\n            prepareValueForSave: function (value) {\n                return value;\n            },\n            prepareValueForGet: function (value) {\n                return value;\n            },            \n            save: function(key, value) {\n                key = this.prepareKey(key);\n                value = this.prepareValueForSave(value);\n                return localStorage.setItem(key, value);\n            },\n            get: function(key) {\n                key = this.prepareKey(key);\n                var value = localStorage.getItem(key);  \n                return this.prepareValueForGet(value);             \n            },\n        };\n    }\n);","Magestore_Webpos/js/model/config/config.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/config/config',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/config/config',\n        'Magestore_Webpos/js/model/collection/config/config'\n    ],\n    function (modelAbstract, restResource, indexedDbResource, collection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'config',\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n                this.setResourceCollection(collection());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/config/config-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/config/config',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/config/config';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/catalog/product-factory.js":"/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/catalog/product',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/catalog/product';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/catalog/category.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/catalog/category',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/catalog/category',\n        'Magestore_Webpos/js/model/collection/catalog/category'\n    ],\n    function ($,ko, modelAbstract, restResource, indexedDbResource, collection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'category',\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n                this.setResourceCollection(collection());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/catalog/category-factory.js":"/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/catalog/category',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/catalog/category';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/catalog/product.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\nrequire([\n    'Magestore_Webpos/js/model/catalog/product/type/configurable',\n    'Magestore_Webpos/js/model/catalog/product/type/bundle',\n    'Magestore_Webpos/js/model/catalog/product/type/grouped',\n    'Magestore_Webpos/js/model/catalog/product/type/downloadable',\n    'Magestore_Webpos/js/model/catalog/product/type/storecredit',\n    'Magestore_Webpos/js/model/catalog/product/type/simple',\n    ]);\n    \ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/model/abstract',\n            'Magestore_Webpos/js/model/resource-model/magento-rest/catalog/product',\n            'Magestore_Webpos/js/model/resource-model/indexed-db/catalog/product',\n            'Magestore_Webpos/js/model/collection/catalog/product',\n            'Magestore_Webpos/js/model/inventory/stock-item-factory',\n            'Magestore_Webpos/js/model/catalog/product/type/configurable-factory',\n            'Magestore_Webpos/js/model/catalog/product/type/bundle-factory',\n            'Magestore_Webpos/js/model/catalog/product/type/grouped-factory',\n            'Magestore_Webpos/js/model/catalog/product/type/downloadable-factory',\n            'Magestore_Webpos/js/model/catalog/product/type/storecredit-factory',\n            'Magestore_Webpos/js/model/catalog/product/type/simple-factory',            \n            'Magestore_Webpos/js/helper/alert',\n            'mage/translate',\n            'Magestore_Webpos/js/action/notification/add-notification',\n            'Magestore_Webpos/js/helper/general'\n        ],\n        function ($, ko, modelAbstract, restResource, indexedDbResource, collection, StockItemFactory,\n                ConfigurableFactory, BundleFactory, GroupedFactory, DownloadableFactory, StoreCreditFactory, SimpleFactory,\n                Alert, $t, AddNoti, Helper) {\n            \"use strict\";\n            return modelAbstract.extend({\n                event_prefix: 'catalog_product',\n                sync_id:'product',\n                initialize: function () {\n                    this._super();\n                    this.setResource(restResource(), indexedDbResource());\n                    this.setResourceCollection(collection());\n                },\n                /**\n                 * Get isalable information\n                 * \n                 * @param {int} childId;\n                 * @returns {bool}\n                 */\n                isSalable: function (childId) {\n                    if(Helper.isStockOnline()){\n                        return this.data['is_salable'];\n                    }\n                    return this.getTypeInstance().isSalable(childId);\n                },\n                /**\n                 * Can buy product\n                 * \n                 * @param {int|float} requestQty;\n                 * @param {int} childId;\n                 * @param {int} customerGroup;\n                 * @returns {}\n                 */\n                canBuy: function (requestQty, childId, customerGroup) {\n                    if(Helper.isStockOnline()){\n                        return {stock_error:false, can_buy:this.data['is_salable'], message:'This product is currently out of stock'};\n                    }\n                    return this.getTypeInstance().canBuy(requestQty, childId, customerGroup);\n                },  \n                /**\n                 * Update product qty (qty = qty + changeQty)\n                 * Do not update qty if not manage stock\n                 * \n                 * @param {int|float} changeQty\n                 * @param {int} childId\n                 */\n                updateStock: function(changeQty, childId) {\n                    /* update stock qty */\n                    StockItemFactory.create().updateQty(childId, changeQty);\n                },\n                /**\n                 * Get stock-item model\n                 * \n                 */\n                getStockItem: function() {\n                    return StockItemFactory.get().setProduct(this);\n                },\n                /**\n                 * Get product qty\n                 * \n                 * @param {int} childId;\n                 * @returns {Float|Int}\n                 */\n                getQty: function (childId) {\n                    if(Helper.isStockOnline()){\n                        return this.data['qty']\n                    }\n                    return this.getTypeInstance().getQty(childId);\n                },\n                /**\n                 * Get min_sale_qty\n                 * \n                 * @param {int} childId\n                 * @param {int} customerGroup\n                 * @returns {Float|Int}\n                 */\n                getMinSaleQty: function (childId, customerGroup) {\n                    if(Helper.isStockOnline()){\n                        return (this.data['minimum_qty'])?parseFloat(this.data['minimum_qty']):1;\n                    }\n                    return this.getTypeInstance().getMinSaleQty(childId, customerGroup);\n                },  \n                /**\n                 * Get max_sale_qty\n                 * \n                 * @param {int} childId\n                 * @returns {Float|Int}\n                 */\n                getMaxSaleQty: function (childId) {\n                    if(Helper.isStockOnline()){\n                        return (this.data['maximum_qty'])?parseFloat(this.data['maximum_qty']):0;\n                    }\n                    return this.getTypeInstance().getMaxSaleQty(childId);\n                },                  \n                /**\n                 * Mange stock of product or not\n                 * \n                 * @param {int} childId;\n                 * @return {Boolean};\n                 */                \n                isManageStock: function(childId) {\n                    return this.getTypeInstance().isManageStock(childId);\n                },\n                /**\n                 * Allow to backorder or not\n                 * \n                 * @param {int} childId;\n                 * @return {Boolean};\n                 */                \n                isBackorder: function(childId) {\n                    return this.getTypeInstance().isBackorder(childId);\n                },\n                /**\n                 * get product type instance\n                 * \n                 * @returns {object}\n                 */\n                getTypeInstance: function () {\n                   // if (!this.typeInstance) {\n                        if (this.data['type_id']) {\n                            switch (this.data['type_id']) {\n                                case 'configurable':\n                                    this.typeInstance = ConfigurableFactory.get();\n                                    break;\n                                case 'bundle':\n                                    this.typeInstance = BundleFactory.get();\n                                    break;\n                                case 'grouped':\n                                    this.typeInstance = GroupedFactory.get();\n                                    break;\n                                case 'downloadable':\n                                    this.typeInstance = DownloadableFactory.get();\n                                    break;       \n                                case 'customercredit':\n                                    this.typeInstance = StoreCreditFactory.get();\n                                    break;\n                                default:\n                                    this.typeInstance = SimpleFactory.get();\n                            }\n                            this.typeInstance.setProduct(this);\n                            this.typeInstance.refreshStockData();\n                        }\n                   // }\n                    return this.typeInstance;\n                },\n                /**\n                 * get product info buy request to add to cart\n                 * @param {object} product\n                 * @returns {json object}\n                 */\n                getInfoBuyRequest: function(customer_group){\n                    var product = this.data;\n                    if(!product.options && (product.type_id == \"configurable\" || product.type_id == \"grouped\" || product.type_id == \"bundle\" || product.type_id == \"customercredit\")){\n                        product.options = 1;\n                    }\n                    var infoBuyRequest = {\n                        id:product.id,\n                        product_id:product.id,\n                        child_id:(product.child_id)?product.child_id:product.id,\n                        product_name:product.name,\n                        unit_price:this.getFinalPrice(),\n                        product_type:product.type_id,\n                        type_id:product.type_id,\n                        sku:product.sku,\n                        is_out_of_stock:false,\n                        tier_prices:product.tier_prices,\n                        tax_class_id:product.tax_class_id,\n                        stock:product.stock,\n                        stocks:product.stocks,\n                        hasOption:(product.options == 1)?true:false,\n                        qty_increment:product.qty_increment,\n                        is_qty_decimal:(product.is_qty_decimal == 1)?true:false,\n                        qty:(product.qty_increment > 0)?product.qty_increment:1,\n                        is_virtual:product.is_virtual,\n                        is_salable:product.is_salable\n                    };\n                    if(product.image){\n                        infoBuyRequest.image_url = product.image;\n                    }\n                    if(product.selected_options){\n                        infoBuyRequest.options = this.getOptionsInfoRequest(product.selected_options);\n                    }\n                    if(product.super_attribute){\n                        infoBuyRequest.super_attribute = this.getOptionsInfoRequest(product.super_attribute);\n                    }\n                    if(product.super_group){\n                        infoBuyRequest.super_group = this.getOptionsInfoRequest(product.super_group);\n                    }\n                    if(product.bundle_option){\n                        infoBuyRequest.bundle_option = this.getOptionsInfoRequest(product.bundle_option);\n                    }\n                    if(product.bundle_option_qty){\n                        infoBuyRequest.bundle_option_qty = this.getOptionsInfoRequest(product.bundle_option_qty);\n                    }\n                    if(product.bundle_childs_qty){\n                        infoBuyRequest.bundle_childs_qty = this.getOptionsInfoRequest(product.bundle_childs_qty);\n                    }\n                    if(product.options_label){\n                        infoBuyRequest.options_label = this.getOptionsLabelInfoRequest(product.options_label);\n                    }\n                    if(product.custom_options_label){\n                        infoBuyRequest.options_label = (infoBuyRequest.options_label)?infoBuyRequest.options_label:'';\n                        infoBuyRequest.options_label += this.getOptionsLabelInfoRequest(product.custom_options_label);\n                    }\n                    if(typeof product.qty != \"undefined\"){\n                        var qtyForCart = parseFloat(product.qty);\n                        var increment = parseFloat(product.qty_increment);\n                        if((increment > 0) && qtyForCart%increment > 0){\n                            qtyForCart -= parseFloat(qtyForCart%increment);\n                            qtyForCart = (qtyForCart > 0)?qtyForCart:increment;\n                        }\n                        infoBuyRequest.qty = parseFloat(qtyForCart);\n                    }\n                    if(typeof product.unit_price != \"undefined\"){\n                        infoBuyRequest.unit_price = product.unit_price;\n                    }\n                    if(product.stocks){\n                        var child_id = (infoBuyRequest.child_id)?infoBuyRequest.child_id:infoBuyRequest.product_id;\n                        infoBuyRequest.maximum_qty = this.getMaxSaleQty(child_id,customer_group);\n                        infoBuyRequest.minimum_qty = this.getMinSaleQty(child_id,customer_group);\n                    }else{\n                        if(Helper.isStockOnline()) {\n                            infoBuyRequest.maximum_qty = this.getMaxSaleQty();\n                            infoBuyRequest.minimum_qty = this.getMinSaleQty();\n                        }\n                    }\n                    if(product.credit_price_amount){\n                        infoBuyRequest.credit_price_amount = product.credit_price_amount;\n                    }else{\n                        if(product.storecredit_type == 3){\n                            var values = product.customercredit_value.split(',');\n                            var rate = product.storecredit_rate;\n                            infoBuyRequest.credit_price_amount = parseFloat(values[0]) * parseFloat(rate);\n                        }else{\n                            infoBuyRequest.credit_price_amount = product.customercredit_value;\n                        }\n                    }\n                    if(product.amount){\n                        infoBuyRequest.amount = product.amount;\n                    }else{\n                        infoBuyRequest.amount = product.final_price;\n                    }\n                    infoBuyRequest.productObject = this.data;\n                    return infoBuyRequest;\n                },\n                /**\n                 * prepare option data for api params\n                 * @param {object} data\n                 * @returns {Array}\n                 */\n                getOptionsInfoRequest: function(data){\n                    var options = [];\n                    if(data){\n                        ko.utils.arrayForEach(data, function (option) {\n                            options.push({\n                                code: option.id,\n                                value: ($.isArray(option.value) && option.value.length == 1)?option.value[0]:option.value\n                            });\n                        });\n                    }\n                    return options;\n                },\n                /**\n                 * \n                 * @param {Array} data\n                 * @returns {String}\n                 */\n                getOptionsLabelInfoRequest: function(data){\n                    var labels = \"\";\n                    if(data){\n                        if($.isArray(data)){\n                            ko.utils.arrayForEach(data, function (label,index) {\n                                if(label && label.value){\n                                    labels += (index == data.length - 1)?label.value:label.value+\", \";\n                                }\n                            });\n                        }else{\n                            labels = data;\n                        }\n                    }\n                    return labels;\n                },\n                /**\n                 * remove temporary data\n                 * @param {object} product\n                 */\n                resetTempAddData: function(){\n                    var product = this.data;\n                    product.qty = 1;\n                    product.unit_price = this.getFinalPrice();\n                    product.selected_options = \"\";\n                    product.super_attribute = \"\";\n                    product.super_group = \"\";\n                    product.bundle_option = \"\";\n                    product.bundle_option_qty = \"\";\n                    product.bundle_childs_qty = \"\";\n                    product.options_label = \"\";\n                    product.not_enough_qty = \"\";\n                },\n                /**\n                 * Get final_price of product\n                 * @return float\n                 */\n                getFinalPrice: function(){\n                    var finalPrice = this.data.final_price ? this.data.final_price : this.data.price;\n                    return finalPrice;\n                },\n                /**\n                 * \n                 * @param {Object} data\n                 * @returns {Boolean}\n                 */\n                validateQtyInCart: function(data){\n                    this.setData(data);\n                    var canBuy = this.canBuy(data.qty,parseInt(data.child_id),data.customer_group);\n                    if(canBuy.stock_error && canBuy.stock_error == true){\n                        var message = $t('Stock item cannot be loaded, please reload the stock item data from Synchronization page');\n                        AddNoti(message, true, 'danger', $t('Error'));\n                        return false;\n                    }else{\n                        if(!canBuy.can_buy){\n                            Alert({\n                                priority:'warning',\n                                title: $t('Warning'),\n                                message: canBuy.message\n                            });\n                            return false;\n                        }\n                    }\n                    return true;\n                },\n                /**\n                 * \n                 * @param {Object} data\n                 * @returns {Boolean}\n                 */\n                checkStockItemsInCart: function(data){\n                    this.setData(data);\n                    var canBuy = this.canBuy(data.qty,data.child_id,data.customer_group);\n                    if(!canBuy.can_buy){\n                        return canBuy.message;\n                    }\n                    return true;\n                }\n            });\n        }\n);","Magestore_Webpos/js/model/catalog/product/detail-popup.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract'\n    ],\n    function ($,ko, modelAbstract) {\n        \"use strict\";\n        return modelAbstract.extend({\n            itemId: ko.observable(),\n            type: ko.observable(),\n            initialize: function () {\n                this._super();\n            },\n            setItem: function (item) {\n                this.itemId(item.id);\n            },\n            getItemId: function () {\n                return this.itemId();\n            },\n            setType: function (type) {\n                this.type(type);\n            },\n            getType: function () {\n                return this.type();\n            },\n            showPopup: function(event){\n                $(\"#popup-product-detail\").show();\n                $(\"#popup-product-detail\").removeClass(\"fade\");\n                $(\".wrap-backover\").show();\n\n                $(document).click(function(e) {\n                    if( e.target.id == 'popup-product-detail') {\n                        $(\"#popup-product-detail\").hide();\n                        $(\".wrap-backover\").hide();\n                        $('.notification-bell').show();\n                        $('#c-button--push-left').show();\n                    }\n                });\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/catalog/product/swatch-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/catalog/product/swatch',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/catalog/product/swatch';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/catalog/product/detail-popup-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/catalog/product/detail-popup',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/catalog/product/detail-popup';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/catalog/product/swatch.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/catalog/product/swatch',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/catalog/product/swatch',\n        'Magestore_Webpos/js/model/collection/catalog/product/swatch'\n    ],\n    function ($,ko, modelAbstract, restResource, indexedDbResource, collection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'swatch',\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n                this.setResourceCollection(collection());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/catalog/product/type/simple.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/model/catalog/product/type/abstract',\n        ],\n        function ($, ko, typeAbstract) {\n            \"use strict\";\n            return typeAbstract.extend({\n                childStocks: {},\n                isSalable: function(childId) {\n                    if(!childId) {\n                        childId = this.product.data['id'];\n                    }\n                    return this._super(childId);\n                },\n                canBuy: function(requestQty, childId, customerGroup) {\n                    if(!childId) {\n                        childId = this.product.data['id'];\n                    }\n                    return this._super(requestQty, childId, customerGroup);\n                },                \n                getChildProductIds: function() {\n                    return [this.product.data['id']];\n                },                \n                getChildStock: function(childId) {\n                    childId = this.product.data['id'];\n                    var child = this.childStocks[childId];\n                    if(!child) {\n                        var stocks = this.getProduct().data.stocks;\n                        for (var i in stocks) {\n                            if (childId) {\n                                if (stocks[i].product_id == childId) {\n                                    child = stocks[i];\n                                    this.childStocks[childId] = child;\n                                    break;\n                                }\n                            }\n                        }  \n                    }\n                    return child;\n                },                \n            });\n        }\n);","Magestore_Webpos/js/model/catalog/product/type/composite.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'underscore',\n            'Magestore_Webpos/js/model/catalog/product/type/abstract',\n        ],\n        function ($, ko, _, typeAbstract) {\n            \"use strict\";\n            return typeAbstract.extend({\n                getChildStock: function(childId) {\n                    var child = this.childStocks[childId];\n                    if(!child) {\n                        if(childId == this.getProduct().data.id) {\n                            /* get stock of parent product */\n                            this.childStocks[childId] = this.getProduct().data.stock;\n                            child = this.childStocks[childId];\n                        } else {\n                            /* get stock of child */\n                            var stocks = this.getProduct().data.stocks;\n                            for (var i in stocks) {\n                                if (childId) {\n                                    if (stocks[i].product_id == childId) {\n                                        child = stocks[i];\n                                        this.childStocks[childId] = child;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    return child;\n                },\n                isSalable: function (childId) {\n                    /* check isalable of child */\n                    if(childId) {\n                        return this._super(childId);\n                    }\n                    /* check isalable of parent */\n                    //if(!this.salableChecked) {\n                        this.is_salable = false;\n                        /* check isalable of parent stock */\n                        if(this.getChildStock(this.getProduct().data.id)) {\n                            /* check out-stock of composite product */\n                            this.getProduct().data.stock.qty=9999;\n                            if(!this.isSalable(this.getProduct().data.id)) {\n                               this.is_salable = false;\n                               this.salableChecked = true;\n                               return this.is_salable;\n                            }\n                        }\n                        /* composite product is in-stock */\n                         /* then check isalable of childs */\n                        for(var i in this.getProduct().data.childs) {\n                            var childId = this.getProduct().data.childs[i];\n                            /* check isalable of one child */\n                            if(this.isSalable(childId)) {\n                                this.is_salable = true;\n                                break;\n                            }\n                        }\n                        \n                        this.salableChecked = true;\n                   // }\n                    return this.is_salable;\n                },         \n            });\n        }\n);","Magestore_Webpos/js/model/catalog/product/type/grouped-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/catalog/product/type/grouped',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/catalog/product/type/grouped';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/catalog/product/type/configurable.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'underscore',\n            'Magestore_Webpos/js/model/catalog/product/type/composite',\n        ],\n        function ($, _, typeComposite) {\n            \"use strict\";\n            return typeComposite.extend({\n                childStocks: {},\n                getChildProductIds: function () {\n                    var childIds = [];\n                    var jsonConfig = this.getProduct().data.json_config;\n                    jsonConfig = eval('(' + jsonConfig + ')');\n                    var attributes = jsonConfig.attributes;\n                    if (attributes) {\n                        for (var attributeId in attributes) {\n                            var options = attributes[attributeId].options;\n                            for (var optionId in options) {\n                                for (var i in options[optionId].products) {\n                                    childIds.push(parseInt(options[optionId].products[i]));\n                                }\n                            }\n                        }\n                    }\n                    childIds = _.uniq(childIds);\n                    return childIds;\n                }\n            });\n        }\n);","Magestore_Webpos/js/model/catalog/product/type/storecredit.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'underscore',\n            'Magestore_Webpos/js/model/catalog/product/type/composite',\n        ],\n        function ($, _, typeComposite) {\n            \"use strict\";\n            return typeComposite.extend({\n            });\n        }\n);","Magestore_Webpos/js/model/catalog/product/type/grouped.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'Magestore_Webpos/js/model/catalog/product/type/composite',\n        ],\n        function ($, typeComposite) {\n            \"use strict\";\n            return typeComposite.extend({\n                childStocks: {},\n                getChildProductIds: function () {\n                    var childIds = [];\n                    var options = this.product.data['grouped_options'];\n                    for(var i in options) {\n                        childIds.push(parseInt(options[i].id));\n                    }\n                    return childIds;\n                }\n            });\n        }\n);","Magestore_Webpos/js/model/catalog/product/type/storecredit-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/catalog/product/type/storecredit',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/catalog/product/type/storecredit';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/catalog/product/type/simple-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/catalog/product/type/simple',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/catalog/product/type/simple';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/catalog/product/type/bundle.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'underscore',\n            'Magestore_Webpos/js/model/catalog/product/type/composite',\n        ],\n        function ($, _, typeComposite) {\n            \"use strict\";\n            return typeComposite.extend({\n                childStocks: {},\n                getChildProductIds: function () {\n                    var childIds = [];\n                    var childs = this.getProduct().data.bundle_options;\n                    for (var i in childs) {\n                        var item = childs[i];\n                        for (var j in item.items) {\n                            var cItem = item.items[j];\n                            childIds.push(parseInt(cItem.entity_id));\n                        }\n                    }\n                    childIds = _.uniq(childIds);\n                    return childIds;\n                },\n                isSalable: function (childId) {\n                    /* check isSalable of child */\n                    if (childId) {\n                        return this._super(childId);\n                    }\n                    //if (!this.salableChecked) {\n                        /* check isalable of parent stock */\n                        this.getProduct().data.stock.qty=9999;\n                        if(this.getChildStock(this.getProduct().data.id)) {\n                            if(!this.isSalable(this.getProduct().data.id)) {\n                               this.is_salable = false;\n                               this.salableChecked = true;\n                               return this.is_salable;\n                            }\n                        }                        \n                        /* check isslable of all childs */\n                        this.is_salable = this.isSalableAllItem();\n                        this.salableChecked = true;\n                   // }\n                    return this.is_salable;\n                },\n                isSalableAllItem: function () {\n                    this.is_salable = false;\n                    var selections = this.getProduct().data.bundle_options;\n                    var requiredOptionIds = {};\n                    var salableSelectionCount = 0;\n                    for (var i in selections) {\n                        /* not required selection */\n                        if (selections[i].required != 1) {\n                            continue;\n                        }\n                        requiredOptionIds[selections[i].id] = 0;\n                        for (var j in selections[i].items) {\n                            /* get child item & child-stock */\n                            var child = selections[i].items[j];\n                            var childStock = this.getChildStock(child.entity_id);\n                            var qty = this.getQty(child.entity_id);\n                            var isManageStock = this.isManageStock(child.entity_id);\n                            var isInStock = this.isInStock(child.entity_id);\n                            var isBackorder = this.isBackorder(child.entity_id);\n                            var selectionEnoughQty = false;\n                            /* do not manage stock */\n                            if (!isManageStock) {\n                                selectionEnoughQty = true;\n                            } else if(!isInStock) {\n                                selectionEnoughQty = false;\n                            } else if(isBackorder > 0){\n                                selectionEnoughQty = true;\n                            } else {\n                                selectionEnoughQty = (qty >= parseFloat(child.selection_qty));\n                            }\n                            \n                            /* this child is salable */\n                            if (/*child.selection_can_change_qty == '1' ||*/ selectionEnoughQty) {\n                                if (requiredOptionIds[selections[i].id] != 1) {\n                                    salableSelectionCount++;\n                                    requiredOptionIds[selections[i].id] = 1;\n                                }\n                            }\n                        }\n                    }\n                    /* all required childs are salable */\n                    if (salableSelectionCount == _.keys(requiredOptionIds).length) {\n                        this.is_salable = true;\n                    }\n                    return this.is_salable;\n                }\n            });\n        }\n);","Magestore_Webpos/js/model/catalog/product/type/configurable-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/catalog/product/type/configurable',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/catalog/product/type/configurable';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/catalog/product/type/bundle-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/catalog/product/type/bundle',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/catalog/product/type/bundle';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/catalog/product/type/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [   \n            'require',\n            'ko',\n            'jquery',\n            'uiElement',\n            'mageUtils',\n            'mage/translate',\n            'Magestore_Webpos/js/model/inventory/stock-item-factory',\n            'Magestore_Webpos/js/helper/general'\n        ],\n        function (require, ko, $, Element, utils, $t, StockItemFactory, Helper) {\n            \"use strict\";\n            return Element.extend({\n                childStocks: {},\n                isStockOnline: ko.pureComputed(function(){\n                    return (Helper.isUseOnline('products') && Helper.isUseOnline('stocks'));\n                }),\n                initialize: function () {\n                    this._super();\n                },\n                \n                /**\n                 * Get isablable status\n                 * \n                 * @returns {Boolean}\n                 */\n                isSalable: function (childId) {\n                    if (typeof childId == 'undefined') {\n                        this.is_salable = true;\n                        //this.salableChecked = true;\n                    }\n                    //if (!this.salableChecked) {\n                        var minQty = parseFloat(WEBPOS.getConfig('cataloginventory/item_options/min_qty'));\n                        this.is_salable = false;\n                        var stockItem = this.getChildStock(childId);\n\n                        if (!stockItem) {\n                            /* do not found stock data */\n                            this.is_salable = false;\n                            this.salableChecked = true;\n                            return this.is_salable;\n                        }\n                        var qty = this.getQty(childId);\n                        var isManageStock = this.isManageStock(childId);\n                        var isInStock = this.isInStock(childId);\n                        var isBackorder = this.isBackorder(childId);\n                        if (!isManageStock) {\n                            /* do not manage stock */\n                            this.is_salable = true;\n                        } else if (!isInStock) {\n                            /* out-stock status */\n                            this.is_salable = false;\n                        } else {\n                            /* check available qty */\n                            if (qty > minQty) {\n                                this.is_salable = true;\n                            } else {\n                                /* allow backorders */\n                                if (isBackorder > 0) {\n                                    this.is_salable = true;\n                                } else {\n                                    /* do not allow backorders  */\n                                    this.is_salable = false;\n                                }\n                            }\n                        }\n                        //this.salableChecked = true;\n                    //}\n                    return this.is_salable;\n                },\n                canBuy: function (requestQty, childId, customerGroup) {\n                    var self = this;\n                    var result = {'can_buy': false, 'message': ''};\n                    var minQty = parseFloat(WEBPOS.getConfig('cataloginventory/item_options/min_qty'));\n                    this.can_buy = false;\n                    var stockItem = this.getChildStock(childId);\n                    var inStockQty = this.getQty(childId);\n                    var qty = inStockQty- parseFloat(requestQty);\n                    var isManageStock = this.isManageStock(childId);\n                    var isInStock = this.isInStock(childId);\n                    var isBackorder = this.isBackorder(childId);\n\n                    if (!isManageStock) {\n                        /* do not manage stock */\n                        this.can_buy = true;\n                    } else if (!isInStock) {\n                        /* out-stock status */\n                        this.can_buy = false;\n                    } else {\n                        /* check available qty */\n                        if (qty >= minQty) {\n                            this.can_buy = true;\n                        } else {\n                            /* allow backorders */\n                            if (isBackorder > 0) {\n                                this.can_buy = true;\n                            } else {\n                                /* do not allow backorders */\n                                this.can_buy = false;\n                            }\n                        }\n                    }\n\n                    if (this.can_buy === true) {\n                        var stockModel = StockItemFactory.get();\n                        result = stockModel.validateQtyInCart(requestQty, stockItem, customerGroup);\n                        this.can_buy = result.can_buy;\n                    } else {\n                        result['can_buy'] = false;\n                        if (isInStock && requestQty > minQty + 1) {\n                            var productName = this.getProduct().data['product_name'];\n                            result['message'] = utils.template($t('We don\\'t have as many \"${ $.productName }\" as you requested. The current in-stock qty is \"${ $.inStockQty}\"'),\n                                    {productName: productName, inStockQty: inStockQty});\n                        } else {\n                            result['message'] = $t('This product is currently out of stock');\n                        }\n                    }\n                    if(!stockItem && !self.isStockOnline()){\n                        result['stock_error'] = true;\n                    }\n                    return result;\n                },\n                /**\n                 * Get qty of child product\n                 * \n                 * @param {int} childId\n                 * @returns {int|float}\n                 */\n                getQty: function (childId) {\n                    var qty = 0;\n                    var child = this.getChildStock(childId);\n                    qty = child ? child.qty : qty;\n                    return parseFloat(qty);\n                },\n                /**\n                 * Get min_sale_qty of child product\n                 * \n                 * @param {int} childId\n                 * @param {int} customerGroup\n                 * @returns {int|float}\n                 */                \n                getMinSaleQty: function(childId, customerGroup) {\n                    var stockModel = StockItemFactory.get();\n                    var stockItem = this.getChildStock(childId);\n                    return stockModel.getMinSaleQty(stockItem, customerGroup);                    \n                },\n                /**\n                 * Get max_sale_qty of child product\n                 * \n                 * @param {int} childId\n                 * @returns {int|float}\n                 */                \n                getMaxSaleQty: function(childId) {\n                    var stockModel = StockItemFactory.get();\n                    var stockItem = this.getChildStock(childId);\n                    return stockModel.getMaxSaleQty(stockItem);                    \n                },                \n                /**\n                 * Update qty of child product\n                 * \n                 * @param {int|float} changeQty\n                 * @param {int} childId\n                 */\n                updateStock: function (changeQty, childId) {\n                    var childStock = this.getChildStock(childId);\n                    /* do not manage stock */\n                    if (!this.isManageStock(childId)) {\n                        return;\n                    }\n                    var minQty = parseFloat(WEBPOS.getConfig('cataloginventory/item_options/min_qty'));\n                    childStock.qty = parseFloat(childStock.qty) + parseFloat(changeQty);\n                    if (childStock.qty <= minQty) {\n                        childStock.is_in_stock = false;\n                    }\n                    var stockModel = StockItemFactory.get();\n                    /* save stock data to local database */\n                    stockModel.setMode('offline').setPush(false);\n                    stockModel.setData(childStock).save();\n                },\n                /**\n                 * Mange stock of product or not\n                 * \n                 * @return {Boolean};\n                 */\n                isManageStock: function (childId) {\n                    var manageStock = WEBPOS.getConfig('cataloginventory/item_options/manage_stock');\n                    manageStock = manageStock > 0 ? true : false;\n                    var child = this.getChildStock(childId);\n                    if (child) {\n                        manageStock = child['use_config_manage_stock'] ? manageStock : child['manage_stock'];\n                    }\n                    return manageStock;\n                },\n                /**\n                 * Allow to backorder or not\n                 * \n                 * @returns {Boolean}\n                 */\n                isBackorder: function (childId) {\n                    var backorders = WEBPOS.getConfig('cataloginventory/item_options/backorders');\n                    var child = this.getChildStock(childId);\n                    if (child) {\n                        backorders = child['use_config_backorders'] ? backorders : child['backorders'];\n                    }\n                    return backorders;\n                },\n                /**\n                 * Allow to backorder or not\n                 * \n                 * @returns {Boolean}\n                 */\n                isInStock: function (childId) {\n                    var isInStock = false;\n                    var child = this.getChildStock(childId);\n                    if (child) {\n                        isInStock = child['is_in_stock'];\n                    }\n                    return isInStock;\n                },\n                getChildStock: function (childId) {\n                    return {};\n                },\n                /**\n                 * \n                 * @returns {object}\n                 */\n                getProduct: function () {\n                    return this.product;\n                },\n                /**\n                 * \n                 * @param {object} product\n                 * @returns {object}\n                 */\n                setProduct: function (product) {\n                    this.product = product;\n                    return this;\n                },\n                getChildProductIds: function () {\n                    return []\n                },\n                refreshStockData: function () {\n                    this.salableChecked = false;\n                    this.childStocks = {};\n                }\n            });\n        }\n);","Magestore_Webpos/js/model/catalog/product/type/downloadable.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/model/catalog/product/type/simple',\n        ],\n        function ($, ko, typeAbstract) {\n            \"use strict\";\n            return typeAbstract.extend({\n                childStocks: {},               \n            });\n        }\n);","Magestore_Webpos/js/model/catalog/product/type/downloadable-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/catalog/product/type/downloadable',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/catalog/product/type/downloadable';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/inventory/location-factory.js":"/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/inventory/location',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/inventory/location';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/inventory/location.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/inventory/location',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/inventory/location',\n        'Magestore_Webpos/js/model/collection/inventory/location'\n    ],\n    function ($, modelAbstract, restResource, indexedDbResource, collection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n                this.setResourceCollection(collection());\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/inventory/stock-item.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'Magestore_Webpos/js/model/abstract',\n            'Magestore_Webpos/js/model/resource-model/magento-rest/inventory/stock-item',\n            'Magestore_Webpos/js/model/resource-model/indexed-db/inventory/stock-item',\n            'Magestore_Webpos/js/model/collection/inventory/stock-item',\n            'mage/translate',\n            'Magestore_Webpos/js/action/notification/add-notification',\n            'Magestore_Webpos/js/helper/general'\n        ],\n        function ($, modelAbstract, restResource, indexedDbResource, collection, $t, AddNoti, Helper) {\n            \"use strict\";\n            return modelAbstract.extend({\n                event_prefix: 'stock_item',\n                sync_id: 'stock_item',\n                product: {},\n                initialize: function () {\n                    this._super();\n                    this.setResource(restResource(), indexedDbResource());\n                    this.setResourceCollection(collection());\n                },\n                /*\n                 * Load stock item by product_id\n                 * \n                 * @param {int} productId\n                 * @returns {Deferred}\n                 */\n                loadByProductId: function (productId) {\n                    var self = this;\n                    var deferred = $.Deferred();\n                    var collection = this.getCollection();\n                    collection.reset();\n                    var idFieldName = 'product_id';\n                    if(Helper.isStockOnline()){\n                        collection.setMode('online');\n                        idFieldName = 'e.entity_id';\n                    }\n                    collection.addFieldToFilter(idFieldName, productId, 'eq');\n                    var cdeferred = collection.load();\n                    cdeferred.done(function (data) {\n                        if (data.items[0]) {\n                            self.data = data.items[0];\n                        }\n                        return deferred.resolve(self);\n                    });\n                    return deferred;\n                },\n                /**\n                 * Update Qty to stock-item then reload the stock-data in product list\n                 * \n                 * @param {int} productId\n                 * @param {int|float} changeQty\n                 * @returns {Deferred}\n                 */\n                updateQty: function (productId, changeQty) {\n                    var deferred = $.Deferred();\n                    this.setMode('offline').setPush(false).setLog(false);\n                    var cdeferred = this.loadByProductId(productId);\n                    var self = this;\n                    cdeferred.done(function (data) {\n                        var manageStock = WEBPOS.getConfig('cataloginventory/item_options/manage_stock');\n                        manageStock = manageStock > 0 ? true : false;\n                        manageStock = self.data['use_config_manage_stock'] ? manageStock : self.data['manage_stock'];  \n                        /* do not manage stock */\n                        if(!manageStock) {\n                            return;\n                        }\n                        var backorders = WEBPOS.getConfig('cataloginventory/item_options/backorders');\n                        backorders = self.data['use_config_backorders'] ? backorders : self.data['backorders'];  \n                        \n                        var minQty = parseFloat(WEBPOS.getConfig('cataloginventory/item_options/min_qty'));\n                        self.data.qty = parseFloat(self.data.qty) + parseFloat(changeQty);\n                        if (self.data.qty <= minQty && backorders == 0) {\n                            /* not backorders */\n                            self.data.is_in_stock = false;\n                        } else {\n                            self.data.is_in_stock = true;\n                        }\n                        self.save(deferred);\n                    });\n                    \n                    return deferred;\n                },\n                /**\n                 * Load stock items by product ids\n                 * \n                 * @param {array} productIds\n                 * @returns {Deferred}\n                 */\n                loadByProductIds: function (productIds) {\n                    var deferred = $.Deferred();\n                    var idFieldName = 'product_id';\n                    if(Helper.isStockOnline()){\n                        this.getCollection().setMode('online');\n                        idFieldName = 'e.entity_id';\n                    }\n                    var collection = this.getCollection().addFieldToFilter(idFieldName, productIds, 'in');\n                    collection.load().done(function (data) {\n                        deferred.resolve(data.items);\n                    });                    \n                    return deferred;\n                },\n                /*\n                 * Add stock data to list of products\n                 */\n                addStockItemToProducts: function (products) {\n                    var deferred = $.Deferred();\n                    var productIds = [];\n                    for (var i in products) {\n                        productIds.push(products[i].id);\n                    }\n                    var idFieldName = (Helper.isStockOnline())?'e.entity_id':'product_id';\n                    if(Helper.isStockOnline()){\n                        this.getCollection().setMode('online');\n                    }\n                    var collection = this.getCollection().addFieldToFilter(idFieldName, productIds, 'in');\n                    var cdeferred = collection.load();\n                    var self = this;\n                    cdeferred.done(function (data) {\n                        if (data.items) {\n                            for (var i in data.items) {\n                                for (var j in products) {\n                                    if (products[j].id == data.items[i].product_id) {\n                                        products[j].stock = data.items[i];\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                        return deferred.resolve(products);\n                    });\n                    return deferred;\n                },\n                /**\n                 * Get product from stock-item\n                 * \n                 */\n                getProduct: function () {\n                    return this.product;\n                },\n                /**\n                 * Set product to stock-item\n                 * \n                 */\n                setProduct: function (productModel) {\n                    this.product = productModel;\n                    return this;\n                },\n                /**\n                 * Get min sale qty\n                 * \n                 * @param {} stockItem\n                 * @param {int} customerGroup\n                 * @returns {int|float}\n                 */\n                getMinSaleQty: function (stockItem, customerGroup) {\n                    if(!stockItem){\n                        return 1;\n                    }\n                    var minSaleQty = parseFloat(stockItem['min_sale_qty']);\n                    if (stockItem['use_config_min_sale_qty']) {\n                        minSaleQty = 0;\n                        var minSaleQtyConfigs = WEBPOS.getConfig('cataloginventory/item_options/min_sale_qty');\n                        if (!Array.isArray(minSaleQtyConfigs)) {\n                            minSaleQtyConfigs = JSON.parse(minSaleQtyConfigs);\n                        }\n                        var found = false;\n                        var defaultMinQty = 0;\n                        if (Array.isArray(minSaleQtyConfigs)) {\n                            for (var i in minSaleQtyConfigs) {\n                                /* check by group customer */\n                                if (customerGroup == minSaleQtyConfigs[i]['group']) {\n                                    minSaleQty = parseFloat(minSaleQtyConfigs[i].value);\n                                    found = true;\n                                }\n                                /* get default value for all customer group */\n                                if (minSaleQtyConfigs[i]['group'] == 32000) {\n                                    defaultMinQty = parseFloat(minSaleQtyConfigs[i].value);\n                                }\n                            }\n                            if (!found) {\n                                minSaleQty = defaultMinQty;\n                            }\n                        } else {\n                            minSaleQty = parseFloat(minSaleQtyConfigs);\n                        }\n                    }\n                    return minSaleQty;\n                },\n                /**\n                 * Get max sale qty\n                 * \n                 * @param {} stockItem\n                 * @returns {int|float}\n                 */\n                getMaxSaleQty: function (stockItem) {\n                    if(stockItem){\n                        var maxSaleQty = parseFloat(stockItem['max_sale_qty']);\n                        if (stockItem['use_config_max_sale_qty']) {\n                            maxSaleQty = parseFloat(WEBPOS.getConfig('cataloginventory/item_options/max_sale_qty'));\n                        }\n                        return maxSaleQty;\n                    }else{\n                        return 0;\n                    }\n                },                \n                /**\n                 * \n                 * @param {type} requestQty\n                 * @param {type} childId\n                 * @param {type} customerGroup\n                 * @returns {}\n                 */\n                validateQtyInCart: function (requestQty, stockItem, customerGroup) {\n                    var result = {'can_buy': false, 'message': ''};\n                    if (!customerGroup) {\n                        customerGroup = 0;\n                    }\n                    /* check max_sale_qty */\n                    var maxSaleQty = this.getMaxSaleQty(stockItem);\n                    if (requestQty > maxSaleQty) {\n                        result['can_buy'] = false;\n                        result['message'] = $t('The most you may purchase is') + ' ' + maxSaleQty;\n                        return result;\n                    }\n                    /* check min_sale_qty */\n                    var minSaleQty = this.getMinSaleQty(stockItem, customerGroup);\n                    if (requestQty < minSaleQty) {\n                        result['can_buy'] = false;\n                        result['message'] = $t('The fewest you may purchase is') + ' ' + minSaleQty;\n                        return result;\n                    }\n                    result['can_buy'] = true;\n                    return result;\n                },\n                /**\n                 * Get is_in_stock status\n                 * \n                 * @returns {Boolean}\n                 */\n                isInStock: function() {\n                    if(this.data['is_in_stock'] === false) {\n                        return false;\n                    }\n                    var minQty = parseFloat(WEBPOS.getConfig('cataloginventory/item_options/min_qty'));\n                    var qty = parseFloat(this.data.qty);   \n                    if(qty > minQty) {\n                        return true;\n                    }\n                    return false;\n                }\n            });\n        }\n);","Magestore_Webpos/js/model/inventory/stock-item-factory.js":"/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/inventory/stock-item',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/inventory/stock-item';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/customer/current-customer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'ko',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/checkout'\n    ],\n    function (ko, CartModel, CheckoutModel) {\n        'use strict';\n        var data = ko.observableArray([]);\n        var fullName = ko.observable('Guest');\n        var customerId = ko.observable(0);\n        var customerEmail = ko.observable('');\n        var object = {\n            data: data,\n            fullName: fullName,\n            customerId: customerId,\n            customerEmail: customerEmail,\n            setCustomerId: function(cusId) {\n                customerId(cusId);\n                CartModel.addCustomer({\n                    id:cusId, \n                    email:data.email,\n                    group_id:data.group_id\n                });\n            },\n\n            getCustomerId: function () {\n                return CartModel.customerId();\n            },\n\n            setData: function (customerData) {\n                data(customerData);\n            },\n\n            getData: function () {\n                return data;\n            },\n\n            setCustomerEmail: function (email) {\n                customerEmail(email)\n            },\n\n            getCustomerEmail: function () {\n                return customerEmail;\n            },\n\n            setFullName: function (fName) {\n                fullName(fName);\n            },\n\n            getFullName: function () {\n                return fullName;\n            },\n            \n            saveBillingAddress: function( data ){\n                CheckoutModel.saveBillingAddress( data );\n            },\n            \n            saveShippingAddress: function( data ){\n                CheckoutModel.shippingAddress( data );\n            }\n        };\n        CartModel.CartCustomerModel(object);\n        return object;\n    }\n);\n","Magestore_Webpos/js/model/customer/complain.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/customer/complain',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/customer/complain',\n        'Magestore_Webpos/js/model/collection/customer/complain'\n    ],\n    function ($, modelAbstract, complainRest, complainIndexedDb, complainCollection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'customer_complain',\n            initialize: function () {\n                this._super();\n                this.setResource(complainRest(), complainIndexedDb());\n                this.setResourceCollection(complainCollection());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/customer/group.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/customer/group',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/customer/group',\n        'Magestore_Webpos/js/model/collection/customer/group'\n    ],\n    function ($, modelAbstract, customerGroupRest, customerGroupIndexedDb, customerGroupCollection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'group',\n            initialize: function () {\n                this._super();\n                this.setResource(customerGroupRest(), customerGroupIndexedDb());\n                this.setResourceCollection(customerGroupCollection());\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/customer/customer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/customer/customer',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/customer/customer',\n        'Magestore_Webpos/js/model/collection/customer/customer',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function ($, ko, modelAbstract, customerRest, customerIndexedDb, customerCollection, Helper) {\n        \"use strict\";\n        var customerSelected = ko.observable(null);\n        return modelAbstract.extend({\n            customerSelected: customerSelected,\n            event_prefix: 'customer',\n            sync_id:'customer',\n            initialize: function () {\n                this._super();\n                this.setResource(customerRest(), customerIndexedDb());\n                this.setResourceCollection(customerCollection());\n                this.mode = (Helper.isUseOnline('customers'))?'online':'offline';\n            },\n            setSelectedCustomer: function(customerId) {\n                customerSelected(customerId);\n            },\n            getSelectedCustomer: function() {\n                return customerSelected;\n            },\n\n            prepareBeforeSave: function () {\n                var data = this.data;\n                delete data['group_label'];\n                delete data['telephone'];\n                delete data['full_name'];\n                //delete data['subscriber_status'];\n                delete data['additional_attributes'];\n                delete data['indexeddb_id'];\n                if (typeof data.addresses !='undefined') {\n                    $.each(data.addresses, function (index, value) {\n                         if (typeof value.address_type != 'undefined') {\n                             delete value['address_type'];\n                             data.addresses[index] = value;\n                         }\n                    });\n                }\n                this.data = data;\n                return this;\n            },\n\n            _saveBefore: function(){\n                this._super();\n                if(this.mode == 'online'){\n                    this.prepareBeforeSave();\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/customer/customer-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/customer/customer',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/customer/customer';\n                return Factory.getSingleton(key, ModelClass);\n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/customer/group-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/customer/group',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/customer/group';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/customer/checkout/current-edit-address.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\ndefine(\n    ['ko'],\n    function (ko) {\n        'use strict';\n        var currentEditAddress = ko.observable(null);\n        return {\n            currentEditAddress: currentEditAddress,\n            setCurrentEditAddress: function (address) {\n                this.currentEditAddress(address);\n            },\n            getCurrentEditAddress: function () {\n                return this.currentEditAddress();\n            }\n        };\n    }\n);\n","Magestore_Webpos/js/helper/order.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine([\n    'jquery',\n    'Magestore_Webpos/js/helper/staff',\n    'Magestore_Webpos/js/helper/price',\n    'Magestore_Webpos/js/helper/datetime'\n], function ($, Staff, HelperPrice, HelperDateTime) {\n    'use strict';\n    return {\n        generateId:generateUniqueId,\n        setLastId:setLastId\n    };\n    \n    function generateUniqueId(){\n        var currentTime = HelperDateTime.getBaseCurrentTime();\n        var staffId = HelperPrice.toNumber(Staff.getStaffId());\n        var offlineId = \"WP\"+staffId+\"\"+currentTime;\n        return offlineId;\n    }\n    \n    function generateOfflineIncrementId(){\n        var lastId = HelperPrice.toNumber(window.webposConfig.last_offline_order_id);\n        if(lastId > 0){\n            var newIdNumber = lastId + 1;\n            var offlineId = \"WP\"+newIdNumber;\n            return offlineId;\n        }else{\n            var staffId = HelperPrice.toNumber(Staff.getStaffId());\n            var newIdNumber = staffId * 100000000 + lastId + 1;\n            var offlineId = \"WP\"+newIdNumber;\n            return offlineId;\n        }\n    }\n    \n    function setLastId(id){\n        window.webposConfig.last_offline_order_id = id;\n    }\n});","Magestore_Webpos/js/helper/general.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine([\n    'ko',\n    'jquery',\n    'Magestore_Webpos/js/helper/staff',\n    'Magestore_Webpos/js/helper/datetime',\n    'mage/translate',\n    'Magestore_Webpos/js/helper/price',\n    'Magestore_Webpos/js/helper/alert',\n    'Magestore_Webpos/js/helper/datetime',\n    'Magestore_Webpos/js/action/notification/add-notification',\n    'Magestore_Webpos/js/model/event-manager',\n    'Magestore_Webpos/js/model/config/local-config',\n\n], function (ko, $, Staff, HelperDateTime, Translate, HelperPrice, Alert, HelperDatetime, AddNotification, EventManager, LocalConfig) {\n    'use strict';\n    var Helper = {\n        isOnlineCheckout: ko.observable(),\n        isOnCheckoutPage: ko.observable(false),\n        initialize: function () {\n            var self = this;\n            self.initCheckoutMode();\n            EventManager.observer('checkout_mode_configuration_change', function(){\n                self.initCheckoutMode();\n                EventManager.dispatch('checkout_mode_configuration_change_after', '');\n            });\n            return self;\n        },\n        initCheckoutMode: function(){\n            var self = this;\n            var checkoutMode = self.getLocalConfig('os_checkout/enable_online_mode');\n            self.isOnlineCheckout((checkoutMode == 1) ? true : false);\n        },\n        alert: function (priority, title, message) {\n            if (typeof priority == 'string') {\n                Alert({\n                    priority: priority,\n                    title: title,\n                    message: message\n                });\n            } else {\n                Alert(priority);\n            }\n        },\n        convertAndFormatPrice: function (amount, from, to) {\n            return HelperPrice.convertAndFormat(amount, from, to);\n        },\n        convertAndFormatWithoutSymbol: function (amount, from, to) {\n            return HelperPrice.convertAndFormatWithoutSymbol(amount, from, to);\n        },\n        convertPrice: function (amount, from, to) {\n            return HelperPrice.currencyConvert(amount, from, to);\n        },\n        formatPrice: function (value) {\n            return HelperPrice.formatPrice(value);\n        },\n        formatPriceWithoutSymbol: function (value) {\n            return HelperPrice.formatPriceWithoutSymbol(value);\n        },\n        toBasePrice: function (value) {\n            return HelperPrice.toBasePrice(value);\n        },\n        toNumber: function (value) {\n            return HelperPrice.toNumber(value);\n        },\n        correctPrice: function (value) {\n            return HelperPrice.correctPrice(value);\n        },\n        roundPrice: function (value) {\n            return HelperPrice.roundPrice(value);\n        },\n        getPriceHelper: function () {\n            return HelperPrice;\n        },\n        __: function (string) {\n            return Translate(string);\n        },\n        getDatetimeHelper: function () {\n            return HelperDatetime;\n        },\n        addNotification: function (message, showAlert, alertPriority, alertTitle) {\n            AddNotification(message, showAlert, alertPriority, alertTitle);\n        },\n        dispatchEvent: function (eventName, data, timeout) {\n            EventManager.dispatch(eventName, data, timeout);\n        },\n        observerEvent: function (eventName, function_callback) {\n            EventManager.observer(eventName, function_callback);\n        },\n        getObject: function (objectPath) {\n\n        },\n        getBrowserConfig: function (path) {\n            return (window.webposConfig[path]) ? window.webposConfig[path] : \"\";\n        },\n        saveBrowserConfig: function (path, value) {\n            window.webposConfig[path] = value;\n        },\n        isHavePermission: function (resource) {\n            return Staff.isHavePermission(resource);\n        },\n        saveLocalConfig: function (configPath, value) {\n            LocalConfig.save(configPath, value);\n        },\n        getLocalConfig: function (configPath) {\n            return LocalConfig.get(configPath);\n        },\n        isStoreCreditEnable: function () {\n            var plugin = this.getBrowserConfig('plugins');\n            var plugins_config = this.getBrowserConfig('plugins_config');\n            if (plugin && plugin.length > 0 && $.inArray('os_store_credit', plugin) !== -1) {\n                if (plugins_config && plugins_config['os_store_credit']) {\n                    return (plugins_config['os_store_credit']['customercredit/general/enable']) ? true : false;\n                }\n            }\n            return false;\n        },\n        isRewardPointsEnable: function () {\n            var plugin = this.getBrowserConfig('plugins');\n            var plugins_config = this.getBrowserConfig('plugins_config');\n            if (plugin && plugin.length > 0 && $.inArray('os_reward_points', plugin) !== -1) {\n                if (plugins_config && plugins_config['os_reward_points']) {\n                    return (plugins_config['os_reward_points']['rewardpoints/general/enable']) ? true : false;\n                }\n            }\n            return false;\n        },\n        isGiftCardEnable: function () {\n            var plugin = this.getBrowserConfig('plugins');\n            var plugins_config = this.getBrowserConfig('plugins_config');\n            if (plugin && plugin.length > 0 && $.inArray('os_gift_card', plugin) !== -1) {\n                if (plugins_config && plugins_config['os_gift_card']) {\n                    return (plugins_config['os_gift_card']['giftvoucher/general/active']) ? true : false;\n                }\n            }\n            return false;\n        },\n        getPluginConfig: function (pluginCode, path) {\n            var plugin = this.getBrowserConfig('plugins');\n            var plugins_config = this.getBrowserConfig('plugins_config');\n            if (plugin && plugin.length > 0 && $.inArray(pluginCode, plugin) !== -1) {\n                if (plugins_config && plugins_config[pluginCode]) {\n                    return plugins_config[pluginCode][path];\n                }\n            }\n            return false;\n        },\n        isProductPriceIncludesTax: function () {\n            return (window.webposConfig['tax/calculation/price_includes_tax'] == '1') ? true : false;\n        },\n        isDiscountOnPriceIncludesTax: function () {\n            return (window.webposConfig['tax/calculation/discount_tax'] == '1') ? true : false;\n        },\n        isCartDisplayIncludeTax: function (type) {\n            if (type) {\n                var EXCLUDE = '1';\n                var INCLUDE = '2';\n                var BOTH = '3';\n                switch (type) {\n                    case 'price':\n                        return (window.webposConfig['tax/cart_display/price'] == EXCLUDE) ? false : true;\n                        break;\n                    case 'subtotal':\n                        return (window.webposConfig['tax/cart_display/subtotal'] == EXCLUDE) ? false : true;\n                        break;\n                }\n            }\n            return true;\n        },\n        /**\n         * Check cross border trade\n         * @returns {boolean}\n         */\n        isEnableCrossBorderTrade: function () {\n            var self = this;\n            var cross_border_trade_enabled = self.getBrowserConfig('tax/calculation/cross_border_trade_enabled');\n            if (self.isProductPriceIncludesTax() && typeof cross_border_trade_enabled != 'undefined' && cross_border_trade_enabled == 1) {\n                return true;\n            }\n            return false;\n        },\n        /**\n         * Check cross border trade\n         * @returns {boolean}\n         */\n        isShowTaxFinal: function () {\n            var self = this;\n            var apply_after_discount = self.getBrowserConfig('tax/calculation/apply_after_discount');\n            var showFinal = (apply_after_discount == 1 && self.isProductPriceIncludesTax());\n            return showFinal ? true : false;\n        },\n        /**\n         * @param key\n         * @returns {*}\n         */\n        getOnlineConfig: function (key) {\n            var data = this.getBrowserConfig('online_data');\n            if (data && typeof data[key] != 'undefined') {\n                return data[key];\n            }\n            return false;\n        },\n        /**\n         * @param key\n         * @param value\n         */\n        saveOnlineConfig: function (key, value) {\n            var data = this.getBrowserConfig('online_data');\n            if (data) {\n                data[key] = value;\n            }\n        },\n        /**\n         * @param section\n         * @returns {boolean}\n         */\n        isUseOnline: function(section){\n            var self = this;\n            var sections = self.getOnlineConfig('sections');\n            var isAll = ($.inArray('all', sections.split(',')) >= 0);\n            var isInArray = ($.inArray(section.toString(), sections.split(',')) >= 0);\n            return ((isAll || isInArray) && self.isOnlineCheckout());\n        },\n        /**\n         * Return true if use stocks online\n         */\n        isStockOnline: function(){\n            return (this.isUseOnline('products') && this.isUseOnline('stocks'));\n        }\n    };\n    return Helper.initialize();\n});","Magestore_Webpos/js/helper/datetime.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine([\n    'jquery',\n], function ($, priceUtils, accounting) {\n    'use strict';\n\n\n    return {\n        getMonthShortText: getMonthShortText,\n        getWeekDay: getWeekDay,\n        getTimeOfDay: getTimeOfDay,\n        getFullDate: getFullDate,\n        getFullDatetime: getFullDatetime,\n        getSqlDatetime: getSqlDatetime,\n        getTime: getTime,\n        getDate: getFullDate,\n        getBaseCurrentTime: getBaseCurrentTime,\n        getBaseSqlDatetime: getBaseSqlDatetime,\n        formatDate: formatDate,\n        twoDigits: twoDigits,\n        getBaseTime: getBaseTime,\n        toCurrentTime: toCurrentTime,\n        stringToCurrentTime:stringToCurrentTime\n    };\n\n    /**\n     * return short form of month: Jan\n     * @param dateString\n     * @returns {*}\n     */\n    function getMonthShortText(dateString) {\n        var monthText = [];\n        monthText[1] = \"Jan\";\n        monthText[2] = \"Feb\";\n        monthText[3] = \"Mar\";\n        monthText[4] = \"Apr\";\n        monthText[5] = \"May\";\n        monthText[6] = \"Jun\";\n        monthText[7] = \"Jul\";\n        monthText[8] = \"Aug\";\n        monthText[9] = \"Sept\";\n        monthText[10] = \"Oct\";\n        monthText[11] = \"Nov\";\n        monthText[12] = \"Dec\";\n\n        var date =\"\";\n        if(!dateString){\n            date = new Date();\n        }\n        else{\n            if (typeof dateString === 'string') {\n                date = new Date(dateString.replace(/-/g, \"/\"));\n            } else {\n                date = reFormatDateString(dateString);\n            }\n\n        }\n        \n        return monthText[date.getMonth()+1];\n    }\n\n    /**\n     * return day in month: 23\n     * @param dateString\n     * @returns {number}\n     */\n    function getDay(dateString) {\n        var date =\"\";\n        if(!dateString){\n            date = new Date();\n        }\n        else{\n            date = reFormatDateString(dateString);\n        }\n        return date.getDate();\n    }\n\n    function reFormatDateString(dateString) {\n        var date = '';\n        if (typeof dateString === 'string') {\n            date = new Date(dateString.split(' ').join('T'))\n        } else {\n            date = new Date(dateString);\n        }\n        return date;\n    }\n\n    /**\n     * return text day in week: Monday\n     * @param dateString\n     * @returns {*}\n     */\n    function getWeekDay(dateString) {\n\n\n        var date =\"\";\n        if(!dateString){\n            date = new Date();\n        }\n        else{\n            date = reFormatDateString(dateString);\n        }\n\n        var weekDay = [];\n        weekDay[1] = \"Monday\";\n        weekDay[2] = \"Tuesday\";\n        weekDay[3] = \"Wednesday\";\n        weekDay[4] = \"Thursday\";\n        weekDay[5] = \"Friday\";\n        weekDay[6] = \"Saturday\";\n        weekDay[0] = \"Sunday\";\n\n        return weekDay[date.getDay()];\n    }\n\n    /**\n     * return a string with format: 15:30PM\n     * @param dateString\n     * @returns {*}\n     */\n    function getTimeOfDay(dateString) {\n\n        var date =\"\";\n        if(!dateString){\n            date = new Date();\n        }\n        else{\n            date = reFormatDateString(dateString);\n        }\n        if (date.toDateString() == 'Invalid Date')\n        {\n            return false;\n        }\n        var hour = date.getHours();\n        var minute = date.getMinutes();\n        var beforeMidday = \" AM\";\n\n\n        if (hour >12){\n            beforeMidday = \" PM\";\n        }\n\n\n        if (minute < 10) {\n            minute = \"0\" + minute;\n        }\n\n        if (hour < 10) {\n            hour = \"0\" + hour;\n        }\n\n        var result = hour + \":\" + minute + beforeMidday;\n\n\n        return result;\n    }\n\n    /**\n     * return a date with format: Thursday 4 May, 2016\n     *\n     * @param dateString\n     * @returns {string}\n     */\n    function getFullDate(dateString) {\n        var date =\"\";\n        if(!dateString){\n            date = new Date();\n        }\n        else{\n            date = reFormatDateString(dateString);\n        }\n\n        var result = getWeekDay(dateString) + \" \" + getDay(dateString) + \" \" + getMonthShortText(dateString) + \", \" + date.getFullYear();\n       \n        return result;\n    }\n\n    /**\n     * return a date time with format: Thursday 4 May, 2016 15:26PM\n     * @param dateString\n     * @returns {string}\n     */\n    function getFullDatetime(dateString) {\n        return getFullDate(dateString) + \" \" + getTimeOfDay(dateString);\n    }\n    \n    /**\n     * return a date time with format: 2016 15:26PM\n     * @param dateString\n     * @returns {string}\n     */\n    function getTime(dateString) {\n        return getTimeOfDay(dateString);\n    }\n\n    /**\n     * return a string of datetime with sql format:\n     * 2016-06-22 23:30:52\n     * @param dateString\n     * @returns {string}\n     */\n    function getSqlDatetime(dateString) {\n\n        var date =\"\";\n        if(!dateString){\n            date = new Date();\n        }\n        else{\n            date = reFormatDateString(dateString);\n        }\n\n        var month = date.getMonth() + 1;\n        if (month < 10) {\n            month = \"0\" + month;\n        }\n\n        var day = date.getDate();\n        if (day < 10) {\n            day = \"0\" + day;\n        }\n\n        var hour = date.getHours();\n        if (hour < 10) {\n            hour = \"0\" + hour;\n        }\n        var minute = date.getMinutes();\n        if (minute < 10) {\n            minute = \"0\" + minute;\n        }\n        var second = date.getSeconds();\n        if (second < 10) {\n            second = \"0\" + second;\n        }\n        return date.getFullYear() + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + minute + \":\" + second;\n    }\n    \n    function getBaseCurrentTime(){\n        var currentTime = $.now();\n        var date = new Date(currentTime);\n        var diff = date.getTimezoneOffset();\n        currentTime = currentTime + diff*60000;\n        return currentTime;\n    }\n    \n    function getBaseTime(time){\n        var date = new Date(time);\n        var diff = date.getTimezoneOffset();\n        time = date.getTime() + diff*60000;\n        return time;\n    }\n    \n    function toCurrentTime(time){\n        var date = new Date(time);\n        var diff = date.getTimezoneOffset();\n        time = time - diff*60000;\n        return time;\n    }\n    \n    function getBaseSqlDatetime(currentTime){\n        if(!currentTime){\n            currentTime = getBaseCurrentTime();\n        }else{\n            currentTime = getBaseTime(currentTime);\n        }\n        return getSqlDatetime(currentTime);\n    }\n\n    /* Format Data*/\n    function formatDate(dateTime) {\n        return dateTime.getFullYear() + \"-\" + twoDigits(1 + dateTime.getMonth()) + \"-\" +\n            twoDigits(dateTime.getDate()) + \" \" + twoDigits(dateTime.getHours()) + \":\" +\n            twoDigits(dateTime.getMinutes()) + \":\" + twoDigits(dateTime.getSeconds());\n    }\n    /* Format Two Digits*/\n    function twoDigits(n) {\n        return n > 9 ? \"\" + n: \"0\" + n;\n    }\n\n    function stringToCurrentTime(dateString){\n        var time = new Date(dateString);\n        var currentTime = toCurrentTime(time.getTime());\n        return currentTime;\n    }\n});\n","Magestore_Webpos/js/helper/pole.js":"/*\n * Magestore\n *\n * NOTICE OF LICENSE\n *\n * This source file is subject to the Magestore.com license that is\n * available through the world-wide-web at this URL:\n * http://www.magestore.com/license-agreement.html\n *\n * DISCLAIMER\n *\n * Do not edit or add to this file if you wish to upgrade this extension to newer\n * version in the future.\n *\n * @category    Magestore\n * @package     Magestore_Webpos\n * @copyright   Copyright (c) 2016 Magestore (http://www.magestore.com/)\n * @license     http://www.magestore.com/license-agreement.html\n */\n\n/*global define*/\ndefine(\n    [\n        'jquery'\n    ],\n    function ($) {\n        'use strict';\n        return function (line1,line2) {\n            if (window.webposConfig.enable_pole_display) {\n                $.ajax({\n                    url: 'http://localhost:60000/' +  line1 + ';' + line2,\n                    method: 'GET'\n                });\n            }\n        }\n    }\n);\n","Magestore_Webpos/js/helper/shift.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine([\n    'jquery',\n    'Magestore_Webpos/js/model/shift/shift',\n   \n], function ($, shiftModel) {\n    'use strict';\n\n\n    return {\n        getCurrentShiftData: getCurrentShiftData,\n        parseFloat: parseFloat,\n        checkHasOpenShift: checkHasOpenShift\n    };\n\n    function getCurrentShiftData() {\n        var currentShiftData = {};\n        var currentShift = shiftModel();\n        console.log(window.webposConfig.shiftId);\n        var t = currentShift.load(window.webposConfig.shiftId);\n        t.done(function (data) {\n            console.log(data);\n            return data;\n        });\n    }\n\n    function parseFloat(value) {\n        if(!value) {\n            return 0;\n        }\n        value = parseFloat(value);\n        return value;\n    }\n\n    function checkHasOpenShift(items) {\n        var hasOpen = false;\n        var shiftId = 0;\n        items.forEach(\n            function (shiftItem, index) {\n                if(parseInt(shiftItem.status) == 0){\n                    shiftId = shiftItem.shift_id;\n                    hasOpen =  true;\n                }\n            }\n        );\n        return {hasOpen:hasOpen, shiftId:shiftId};\n    }\n\n});","Magestore_Webpos/js/helper/full-screen-loader.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    ['jquery'],\n    function ($) {\n        'use strict';\n\n        var containerId = '.loading-mask';\n\n        return {\n\n            /**\n             * Start full page loader action\n             */\n            startLoader: function () {\n                $(containerId).show();\n                $('#c-mask').hide();\n            },\n\n            /**\n             * Stop full page loader action\n             */\n            stopLoader: function () {\n                $(containerId).hide();\n                $('#c-mask').show();\n            }\n        };\n    }\n);\n","Magestore_Webpos/js/helper/price.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine([\n    'jquery',\n    'Magento_Catalog/js/price-utils',\n    'Magestore_Webpos/js/accounting.min'\n], function ($, priceUtils, accounting) {\n    'use strict';\n\n    return {\n        formatPrice: formatPrice,\n        formatPriceWithoutSymbol: formatPriceWithoutSymbol,\n        currencyConvert:currencyConvert,\n        convertAndFormat:convertAndFormat,\n        convertAndFormatWithoutSymbol:convertAndFormatWithoutSymbol,\n        toNumber: toNumber,\n        toPositiveNumber: toPositiveNumber,\n        toBasePrice: toBasePrice,\n        correctPrice: correctPrice,\n        roundPrice: roundPrice,\n        comparePrice: comparePrice,\n    };\n\n    function formatPrice(amount) {\n        amount = parseFloat(amount);\n        amount = toNumber(amount);\n        var correctedAmount = amount;\n        var priceFormat = window.webposConfig.priceFormat;\n        return priceUtils.formatPrice(correctedAmount, priceFormat);\n    }\n\n    function formatPriceWithoutSymbol(amount) {\n        amount = parseFloat(amount);\n        amount = toNumber(amount);\n        var correctedAmount = amount;\n        var priceFormat = window.webposConfig.priceFormat;\n        var newPriceFormat = $.extend(true, {}, priceFormat);\n        newPriceFormat.pattern = '%s';\n        return priceUtils.formatPrice(correctedAmount, newPriceFormat);\n    }\n\n    function currencyConvert(amount,from,to) {\n        if(!from){\n            from = window.webposConfig.baseCurrencyCode;\n        }\n        if(!to){\n            to = window.webposConfig.currentCurrencyCode;\n        }\n        var fromRate = 0;\n        var toRate = 0;\n        if(typeof WEBPOS.getConfig == 'function' && WEBPOS.getConfig('currencies') && WEBPOS.getConfig('currencies')[from] && WEBPOS.getConfig('currencies')[from]['currency_rate']) {\n            fromRate = WEBPOS.getConfig('currencies')[from]['currency_rate'];\n        }\n        if(typeof WEBPOS.getConfig == 'function' && WEBPOS.getConfig('currencies') && WEBPOS.getConfig('currencies')[to] && WEBPOS.getConfig('currencies')[to]['currency_rate']) {\n            toRate = WEBPOS.getConfig('currencies')[to]['currency_rate'];\n        }\n        if(fromRate && toRate) {\n            amount = parseFloat(amount) * parseFloat(toRate) / parseFloat(fromRate);\n        }\n        return amount;\n    }\n    function convertAndFormat(amount,from,to) {\n        amount = currencyConvert(amount,from,to);\n        return formatPrice(amount);\n    }\n\n    function convertAndFormatWithoutSymbol(amount,from,to) {\n        amount = currencyConvert(amount,from,to);\n        return formatPriceWithoutSymbol(amount);\n    }\n\n    function toNumber(string) {\n        var priceFormat = window.webposConfig.priceFormat;\n        var decimalSymbolNumber = priceFormat.decimalSymbol;\n        var groupSymbolNumber = priceFormat.groupSymbol;\n        var result = accounting.unformat(string, decimalSymbolNumber);\n        //result = accounting.formatNumber(result, 4, decimalSymbolNumber);\n        return result;\n    }\n\n    function toPositiveNumber(amount) {\n        if(!amount){\n            return 0;\n        }\n        amount = parseFloat(amount);\n        amount = toNumber(amount);\n        amount = Math.abs(amount);\n        return amount;\n    }\n    \n    function toBasePrice(amount){\n        var from = window.webposConfig.currentCurrencyCode;\n        var to = window.webposConfig.baseCurrencyCode;\n        return currencyConvert(amount,from,to);\n    }\n    \n    function roundPrice(amount){\n        amount = toNumber(amount);\n        var priceFormat = window.webposConfig.priceFormat;\n        // var correctedAmount = amount.toFixed(priceFormat.precision);\n        var floatAmount = amount * Math.pow(10,priceFormat.precision);\n        var initAmount = parseInt(floatAmount);\n        var diff = (floatAmount - initAmount)*10;\n        if(diff >= 5){\n            var correctedAmount = Math.ceil(amount * Math.pow(10,priceFormat.precision))/Math.pow(10,priceFormat.precision);\n        }else{\n            var correctedAmount = Math.floor(amount * Math.pow(10,priceFormat.precision))/Math.pow(10,priceFormat.precision);\n        }\n        return parseFloat(correctedAmount);\n    }\n\n    function correctPrice(amount){\n        amount = toNumber(amount);\n        var priceFormat = window.webposConfig.priceFormat;\n        var correctedAmount = amount.toFixed(priceFormat.precision);\n        return parseFloat(correctedAmount);\n    }\n    \n    function comparePrice(amountA, amountB) {\n        if(Math.round(amountA * 100) > Math.round(amountB * 100)) {\n            return 1;\n        } else if(Math.round(amountA * 100) < Math.round(amountB * 100)) {\n            return -1;\n        }\n        return 0;\n    }\n});","Magestore_Webpos/js/helper/staff.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine([\n    'jquery',\n    'Magestore_Webpos/js/model/staff/current-staff'\n], function ($, currentStaff) {\n    'use strict';\n\n    return {\n        getStaffId: getStaffId,\n        isHavePermission: isHavePermission,\n        getCustomerGroupOfStaffNumber: getCustomerGroupOfStaffNumber,\n        getCustomerGroupOfStaff: getCustomerGroupOfStaff,\n        getStaffName: getStaffName,\n        canShowOrderMenu: canShowOrderMenu,\n        getMaximumDiscountPercent: getMaximumDiscountPercent,\n    };\n\n    function getStaffId() {\n        return currentStaff.staffId();\n    }\n\n    function isHavePermission(resource) {\n        var allResourceAccess = currentStaff.staffResourceAccess();\n        if ($.inArray(resource, allResourceAccess) > -1 || $.inArray('Magestore_Webpos::all', allResourceAccess) > -1) {\n            return 1;\n        }\n        return 0;\n    }\n    \n    function getCustomerGroupOfStaffNumber() {\n        return currentStaff.customerGroupOfStaff().split(\",\").map(Number);\n    }\n    \n    function getCustomerGroupOfStaff() {\n        return currentStaff.customerGroupOfStaff().split(\",\");\n    }\n\n    function getStaffName() {\n        return currentStaff.staffName();\n    }\n    \n    function getMaximumDiscountPercent() {\n        return currentStaff.getMaximumDiscountPercent();\n    }\n\n    function canShowOrderMenu() {\n\n        if (!this.isHavePermission('Magestore_Webpos::manage_order')\n            && !this.isHavePermission('Magestore_Webpos::manage_order_me')\n            && !this.isHavePermission('Magestore_Webpos::manage_order_location')\n            && !this.isHavePermission('Magestore_Webpos::manage_all_order')\n        ) {\n            return false;\n        } else {\n            return true;\n        }\n\n    }\n\n});\n","Magestore_Webpos/js/helper/alert.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/alert',\n    'Magestore_Webpos/js/lib/jquery.toaster',\n    'mage/translate'\n], function ($, Alert, $toaster, Translate) {\n    'use strict';\n    return function(data) {\n        if(data && data.priority){\n            $.toaster({\n                priority: data.priority,\n                title: Translate(data.title),\n                message: Translate(data.message)\n            });\n        }else{\n            Alert({\n                title: Translate(data.title),\n                content: Translate(data.content),\n                autoOpen: true,\n                clickableOverlay: true,\n                focus: \"\",\n                actions: {\n                    always: function(){\n                    }\n                }\n            });\n        }\n    }\n});\n","Magestore_Webpos/js/view/menu.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/view/menu/group',\n        'Magestore_Webpos/js/view/menu/item',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract',\n        'Magestore_Webpos/js/lib/cookie',\n        'Magestore_Webpos/js/helper/full-screen-loader',\n        'Magento_Ui/js/modal/confirm',\n        'mage/translate'\n    ],\n    function ($,ko, Component, Group, Item, restAbstract, Cookies, fullScreenLoader, confirm, Translate) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/menu'\n            },\n            initialize: function () {\n                this._super();\n            },\n            /**\n             * \n             * @param {id:'',title:''} dataObject\n             * @param int position\n             * @returns void\n             */\n            addMenuGroup: function (dataObject, position) {\n                var object = new Group();\n                object.initData(dataObject);\n                var validateMenu = true;\n                $.each(this.elems(), function(){\n                    if(object && object.id && this.id == object.id){\n                        validateMenu = false;\n                        var datetime = \"Logged time: \" + new Date();\n                        console.log(datetime+':\\nMenu group with id \"'+ data.id + '\" already existed');\n                    }\n                });\n                if(object && object.id && object.title && validateMenu == true){\n                    this.insertChild(object, position);\n                    var datetime = \"Logged time: \" + new Date();\n                    console.log(datetime+':\\nAdded menu group: '+ object.title);\n                }\n            },\n            /**\n             * \n             * @param {id:'',title:'', group:'',is_display:'1',icon_class:''} dataObject\n             * @param int position\n             * @returns void\n             */\n            addMenuItem: function (dataObject, position) {\n                var object = new Item();\n                object.initData(dataObject);\n                var foundGroup = false;\n                var childs = this.elems();\n                $.each(childs, function(){\n                    if(object && object.data.group && this.id == object.data.group){\n                        foundGroup = true;\n                        this.insertChild(object,position);\n                        var datetime = \"Logged time: \" + new Date();\n                        console.log(datetime+':\\nAdded menu item: '+ object.data.title);\n                    }\n                });\n                if(foundGroup == false){\n                    var datetime = \"Logged time: \" + new Date();\n                    console.log(datetime+':\\nNot found menu group with id \"'+ object.data.group + '\" ');\n                }\n            },\n\n            logout: function () {\n                var deferredSession = this.getSessionId();\n                deferredSession.done(function (response) {\n                    var sessionId = response;\n                    confirm({\n                        content: Translate('Are you sure you want to logout?'),\n                        actions: {\n                            confirm: function () {\n                                var apiUrl = '/webpos/staff/logout';\n                                var deferred = $.Deferred();\n                                Cookies.remove('WEBPOSSESSION');\n                                fullScreenLoader.startLoader();\n\n                                restAbstract().setPush(true).setLog(false).callRestApi(\n                                    apiUrl + '?session=' + sessionId,\n                                    'post',\n                                    {},\n                                    {\n                                    },\n                                    deferred\n                                );\n\n                                deferred.always(function (data) {\n                                    window.location.reload();\n                                });\n                            },\n                            always: function (event) {\n                                event.stopImmediatePropagation();\n                            }\n                        }\n                    });\n                });\n\n            },\n\n            getSessionId: function () {\n                var deferred = $.Deferred();\n                deferred.resolve(Cookies.get('WEBPOSSESSION'));\n                return deferred;\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/layout.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\nvar arrayBlock = [\n    'require',\n    'Magestore_Webpos/js/view/base/abstract',\n    'Magestore_Webpos/js/view/catalog/product/detail-popup',\n    'Magestore_Webpos/js/view/sales/order/list',\n    'Magestore_Webpos/js/view/sales/order/view',\n    'Magestore_Webpos/js/view/sales/order/view/payment',\n    'Magestore_Webpos/js/view/sales/order/action',\n    'Magestore_Webpos/js/view/sales/order/sendemail',\n    'Magestore_Webpos/js/view/sales/order/comment',\n    'Magestore_Webpos/js/view/sales/order/invoice',\n    'Magestore_Webpos/js/view/sales/order/shipment',\n    'Magestore_Webpos/js/view/sales/order/creditmemo',\n    'Magestore_Webpos/js/view/sales/order/cancel',\n    'Magestore_Webpos/js/view/checkout/cart/discountpopup',\n    'Magestore_Webpos/js/view/checkout/customer/add-billing-address',\n    'Magestore_Webpos/js/view/checkout/cart',\n    'Magestore_Webpos/js/view/checkout/customer/edit-customer',\n    'Magestore_Webpos/js/view/container',\n    'Magestore_Webpos/js/view/catalog/product-list',\n    'Magestore_Webpos/js/view/sales/order/hold-view',\n    'Magestore_Webpos/js/view/checkout/checkout/renderer/payment',\n    'Magestore_Webpos/js/view/shift/cash-transaction/activity',\n    'Magestore_Webpos/js/view/catalog/category/breadcrumbs',\n    'Magestore_Webpos/js/view/checkout/checkout/payment_popup',\n    'Magestore_Webpos/js/view/checkout/checkout/shipping',\n    'Magestore_Webpos/js/view/checkout/checkout/payment',\n    'Magestore_Webpos/js/view/checkout/checkout/payment_selected',\n    'Magestore_Webpos/js/view/checkout/checkout/payment_creditcard',\n    'Magestore_Webpos/js/view/checkout/checkout/swipe/jquery.cardswipe',\n    'Magestore_Webpos/js/view/checkout/customer/add-shipping-address',\n    'Magestore_Webpos/js/view/checkout/checkout/receipt',\n    'Magestore_Webpos/js/view/customer/customer-view',\n    'Magestore_Webpos/js/view/catalog/category/cell-grid',\n    'Magestore_Webpos/js/view/checkout/customer/add-customer',\n    'Magestore_Webpos/js/view/shift/shift/shift-listing',\n    'Magestore_Webpos/js/view/shift/shift/shift-detail',\n    'Magestore_Webpos/js/view/shift/sales-summary/sales-summary',\n    'Magestore_Webpos/js/view/shift/sales-summary/zreport',\n    'Magestore_Webpos/js/view/shift/cash-transaction/cash-adjustment',\n    'Magestore_Webpos/js/view/shift/shift/close-shift'\n];\n\ndefine(\n    arrayBlock\n    ,\n    function (require,\n              view_base_abstract,\n              view_catalog_product_detailpopup,\n              view_sales_order_list,\n              view_sales_order_view,\n              view_sales_order_view_payment,\n              view_sales_order_action,\n              view_sales_order_sendemail,\n              view_sales_order_comment,\n              view_sales_order_invoice,\n              view_sales_order_shipment,\n              view_sales_order_creditmemo,\n              view_sales_order_cancel,\n              view_checkout_cart_discountpopup,\n              view_checkout_customer_addbillingaddress,\n              view_checkout_cart,\n              view_checkout_customer_editcustomer,\n              view_container,\n              view_catalog_productlist,\n              view_sales_order_holdview,\n              view_checkout_checkout_renderer_payment,\n              view_shift_cashtransaction_activity,\n              view_catalog_category_breadcrumbs,\n              view_checkout_checkout_payment_popup,\n              view_checkout_checkout_shipping,\n              view_checkout_checkout_payment,\n              view_checkout_checkout_payment_selected,\n              view_checkout_checkout_payment_creditcard,\n              view_checkout_checkout_swipe_jquerycardswipe,\n              view_checkout_customer_addshippingaddress,\n              view_checkout_checkout_receipt,\n              view_customer_customerview,\n              view_catalog_category_cellgrid,\n              view_checkout_customer_addcustomer,\n              view_shift_shift_shiftlisting,\n              view_shift_shift_shiftdetail,\n              view_shift_salessummary_salessummary,\n              view_shift_salessummary_zreport,\n              view_shift_cashtransaction_cashadjustment,\n              view_shift_shift_closeshift\n    ) {\n        \"use strict\";\n\n        return {\n            \n            getSingleton: function (viewName) {\n                var view = this._convertModelPath(viewName);\n                if(!window.webposViews) {\n                    window.webposViews = {};\n                } \n                if(!window.webposViews[view]) {\n                     var viewClass = require('Magestore_Webpos/js/'+viewName);\n                     window.webposViews[view] = viewClass();\n                }\n                return window.webposViews[view];                \n            },\n            \n            create: function (viewName) {\n                var view = this._convertModelPath(viewName);\n                if(!window.webposViews) {\n                    window.webposViews = {};\n                }        \n                var viewClass = require('Magestore_Webpos/js/'+viewName);\n                window.webposViews[view] = viewClass();\n                return window.webposViews[view];\n            },\n\n            /**\n             * convert model name to key\n             *\n             * @param string modelName\n             * @returns string\n             */\n            _convertModelPath: function (modelName) {\n                modelName = modelName.replace(/\\//gi, '_');\n                modelName = modelName.replace(/-/gi, '');\n                modelName = modelName.replace(/\\./gi, '');\n                return modelName;\n            }\n        };\n    }\n);","Magestore_Webpos/js/view/container.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract'\n    ],\n    function ($,ko, modelAbstract) {\n        \"use strict\";\n        return modelAbstract.extend({\n\n            initialize: function () {\n                this._super();\n            },\n            init: function (containerId) {\n                var self = this;\n                self.elementId = containerId;\n            },\n            toggleArea: function () {\n                var self = this;\n                $.each($('.pos_container.active'),function(){\n                    if($(this).attr('id') != self.elementId){\n                        $(this).removeClass('active');\n                    }\n                });\n                if ($('#' + self.elementId).length > 0) {\n                    if ($('#' + self.elementId).hasClass('active')) {\n                        $('#' + self.elementId).removeClass(\"active\");\n                    } else {\n                        $('#' + self.elementId).addClass(\"active\");\n                    }\n                    if(self.elementId != \"checkout_container\"){\n                        $('#'+self.elementId).addClass(\"pos_container\");\n                    }\n                }\n                self.showMainContainer();\n            },\n            showMainContainer: function(){\n                if ($('#c-menu--push-left').length > 0) {\n                    $('#c-menu--push-left').removeClass(\"is-active\");\n                }\n                if ($('#o_wrapper').length > 0)\n                    $('#o_wrapper').removeClass(\"has-push-left\");\n                if ($('#o-wrapper').length > 0) {\n                    $('#o-wrapper').removeClass(\"has-push-left\");\n                }\n                if ($('body').length > 0) {\n                    $('body').removeClass(\"has-active-menu\");\n                }\n                if ($('#c-mask').length > 0) {\n                    $('#c-mask').removeClass(\"is-active\");\n                }\n                if ($('#c-button--push-left').length > 0) {\n                    $('#c-button--push-left').attr('disabled', false);\n                }\n            }\n\n        })\n    }\n);","Magestore_Webpos/js/view/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'mage/translate',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'Magestore_Webpos/js/model/event-manager',\n        \n    ],\n    function ($, ko, Component, Translate, HelperPrice, Alert, HelperDatetime, AddNotification, EventManager) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: ''\n            },\n            initialize: function () {\n                this._super();\n            },\n            alert: function(priority, title, message){\n                Alert({\n                    priority: priority,\n                    title: title,\n                    message: message\n                });\n            },\n            convertAndFormatWithoutSymbol: function(amount,from,to){\n                return HelperPrice.convertAndFormatWithoutSymbol(amount,from,to);\n            },\n            convertAndFormatPrice: function(amount,from,to){\n                return HelperPrice.convertAndFormat(amount,from,to);\n            },\n            convertPrice: function(amount,from,to){\n                return HelperPrice.currencyConvert(amount,from,to);\n            },\n            formatPriceWithoutSymbol: function(value){\n                return HelperPrice.formatPriceWithoutSymbol(value);\n            },\n            formatPrice: function(value){\n                return HelperPrice.formatPrice(value);\n            },\n            toBasePrice: function(value){\n                return HelperPrice.toBasePrice(value);\n            },\n            getPriceHelper: function(){\n                return HelperPrice;\n            },\n            __: function(string){\n                return Translate(string);\n            },\n            getDatetimeHelper: function(){\n                return HelperDatetime;\n            },\n            addNotification: function(message, showAlert, alertPriority, alertTitle){\n                AddNotification(message, showAlert, alertPriority, alertTitle);\n            },\n            dispatchEvent: function(eventName, data, timeout){\n                EventManager.dispatch(eventName, data, timeout);\n            },\n            observerEvent: function(eventName, function_callback){\n                EventManager.observer(eventName, function_callback);\n            },\n            getObject: function(objectPath){\n\n            },\n            setModel : function(modelpath){\n                this.model = this.getObject(modelpath);\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/sales/order/hold-view.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'mage/translate',\n        'Magestore_Webpos/js/view/base/abstract',\n        'Magestore_Webpos/js/model/sales/order/total',\n        'Magestore_Webpos/js/action/cart/checkout',\n        'Magestore_Webpos/js/action/cart/cancel-onhold',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function (\n        $, \n        ko,\n        OrderFactory,\n        $t,\n        Component,\n        orderTotal,\n        Checkout,\n        CancelOnhold,\n        priceHelper,\n        Helper\n    ) {\n        \"use strict\";\n\n        return Component.extend({\n            orderData: ko.observable(null),\n            orderListView: ko.observable(''),\n            isShowActionPopup: ko.observable(false),\n            isEmptyData: ko.observable(false),\n            totalValues: ko.observableArray([]),\n            canInvoice: ko.observable(true),\n            canCancel: ko.observable(true),\n            canShip: ko.observable(true),\n            canCreditmemo: ko.observable(true),\n            canSync: ko.observable(true),\n            isOnHold: ko.observable(true),\n            defaults: {\n                template: 'Magestore_Webpos/sales/order/hold-view',\n                templateTop: 'Magestore_Webpos/sales/order/hold/top',\n                templateBilling: 'Magestore_Webpos/sales/order/hold/billing',\n                templateShipping: 'Magestore_Webpos/sales/order/hold/shipping',\n                templateShippingMethod: 'Magestore_Webpos/sales/order/hold/shipping-method',\n                templatePaymentMethod: 'Magestore_Webpos/sales/order/hold/payment-method',\n                templateTotal: 'Magestore_Webpos/sales/order/hold/total',\n                templateItems: 'Magestore_Webpos/sales/order/hold/items',\n                templateComments: 'Magestore_Webpos/sales/order/view/comments',\n            },\n\n            initialize: function () {\n                this._super();\n                var self = this;\n                ko.computed(function() {\n                    return self.orderData();\n                }).subscribe(function() {\n                    if(self.orderData()){\n                        self.canInvoice(OrderFactory.get().setData(self.orderData.call()).canInvoice());\n                        self.canCancel(OrderFactory.get().setData(self.orderData.call()).canCancel());\n                        self.canShip(OrderFactory.get().setData(self.orderData.call()).canShip());\n                        self.canCreditmemo(OrderFactory.get().setData(self.orderData.call()).canCreditmemo());\n                        self.canSync(OrderFactory.get().setData(self.orderData.call()).canSync());\n                        self.isOnHold(OrderFactory.get().setData(self.orderData.call()).isOnHold());\n                    }\n                });\n                \n                self.isNotOnHold = ko.pureComputed(function(){\n                    return (self.isOnHold())?false:true;\n                });\n            },\n            \n            setData: function(data, object){\n                this.orderData(data);\n                this.orderListView(object);\n                this.isShowActionPopup(false);\n                this.isEmptyData(false);\n                var self = this;\n                this.totalValues([]);\n                var totalArray = orderTotal.getTotalOrderHold();\n                if(data)\n                    $.each(totalArray, function(index, value){\n                        var order_currency_code = self.orderData().order_currency_code;\n                        var current_currency_code = window.webposConfig.currentCurrencyCode;\n                        if(\n                            (order_currency_code == current_currency_code) &&\n                            (value.totalName == 'base_total_paid' || value.totalName == 'webpos_base_change'\n                            || value.totalName == 'base_discount_amount' || value.totalName == 'base_grand_total'\n                            || value.totalName == 'base_subtotal'|| value.totalName == 'base_tax_amount'\n                            || value.totalName == 'base_shipping_amount')\n                        ){\n                            if((self.orderData()[value.totalName] && self.orderData()[value.totalName]!=0) || value.required){\n                                var totalCode = value.totalName.replace(\"base_\", \"\");\n                                self.totalValues.push(\n                                    {\n                                        totalValue: priceHelper.formatPrice(self.orderData()[totalCode]),\n                                        totalLabel: value.totalName == 'base_discount_amount' &&\n                                        (self.orderData().discount_description || self.orderData().coupon_code)?\n                                        $t(value.totalLabel)+' ('+(self.orderData().discount_description?\n                                            self.orderData().discount_description:self.orderData().coupon_code)+\n                                        ')':$t(value.totalLabel)\n                                    }\n                                );\n                            }\n                        }else{\n                            if((self.orderData()[value.totalName] && self.orderData()[value.totalName]!=0) || value.required){\n                                self.totalValues.push(\n                                    {\n                                        totalValue: self.convertAndFormatPrice(self.orderData()[value.totalName]),\n                                        totalLabel: value.totalName=='base_discount_amount'&&\n                                        (self.orderData().discount_description || self.orderData().coupon_code)?\n                                        $t(value.totalLabel)+' ('+(self.orderData().discount_description?\n                                            self.orderData().discount_description:self.orderData().coupon_code)+\n                                        ')':$t(value.totalLabel)\n                                    }\n                                );\n                            }\n                        }\n                    });\n            },\n\n            showActionPopup: function(data){\n                if(this.orderViewObject.isShowActionPopup.call())\n                    this.orderViewObject.isShowActionPopup(false);\n                else\n                    this.orderViewObject.isShowActionPopup(true);\n            },\n\n            showPopup: function(type){\n                this.isShowActionPopup(false);\n                this.popupArray[type].display(true);\n            }, \n\n            getAddressType: function(type){\n                switch (type) {\n                    case 'billing':\n                        return this.orderData.call().billing_address;\n                        break;\n                    case 'shipping':\n                        return this.orderData.call().extension_attributes.shipping_assignments[0].shipping.address;\n                        break;\n                }\n            },\n\n            convertAndFormatPrice: function(price, from, to){\n                return priceHelper.convertAndFormat(price, from, to);\n            },\n\n            getCustomerName: function(type) {\n                var address = this.getAddressType(type);                \n                return address.firstname + ' ' + address.lastname;\n            },\n\n            getAddress: function(type){\n                var address = this.getAddressType(type);\n                var city = address.city ? address.city + ', ': '';\n                var region = address.region ? address.region + ', ' : '';\n                var postcode = address.postcode ? address.postcode + ', ' : '';\n                return city + region + postcode + address.country_id;\n            },\n            \n            getJsObject: function(){\n                return {\n                    orderView: this,\n                    orderListView: this.orderListView.call(),\n                }\n            },\n            \n            continueProcessing: function(){\n                Checkout(this.orderData());\n                this.orderData(null);\n                this.orderListView()._prepareItems();\n            },\n            \n            cancelOnhold: function(){\n                CancelOnhold(this.orderData());\n                this.orderData(null);\n                this.orderListView()._prepareItems();\n                this.isEmptyData(true);\n            },\n            canShowComment: function () {\n                var canShowComment = false;\n                if (this.orderData() && this.orderData().status_histories) {\n                    $.each(this.orderData().status_histories, function (index, value) {\n                        if (value.comment && value.comment != '') canShowComment = true;\n                    });\n                }\n                return canShowComment;\n            },\n            getItemPriceFormated: function(item){\n                var self = this;\n                var formated = ''\n                if(item){\n                    var displayIncludeTax = Helper.isCartDisplayIncludeTax('price');\n                    var displayIncludeTax = false;\n                    if(window.webposConfig.currentCurrencyCode == self.orderData().order_currency_code){\n                        formated = (displayIncludeTax)?item.price_incl_tax:item.price;\n                    }else{\n                        if(window.webposConfig.currentCurrencyCode == self.orderData().base_currency_code){\n                            formated = (displayIncludeTax)?item.base_price_incl_tax:item.base_price;\n                        } else{\n                            formated = (displayIncludeTax)?item.base_price_incl_tax:item.base_price;\n                            formated = priceHelper.currencyConvert(formated,self.orderData().base_currency_code, window.webposConfig.currentCurrencyCode);\n                        }\n                    }\n                }\n                return priceHelper.formatPrice(formated);\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/sales/order/action.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/view/base/abstract',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    \n    function ($, ko, ViewManager, Component,  priceHelper, datetimeHelper, eventManager) {\n        \"use strict\";\n\n        return Component.extend({\n            orderData: ko.observable(null),\n            parentView: ko.observable(''),\n            isVisible: ko.observable(false),\n            classIn: ko.observable(''),\n            stypeDisplay: ko.observable('none'),\n\n            initialize: function () {\n                this._super();\n            },\n\n            setData: function(data, object){\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                this.orderData(data);\n                this.parentView(object);\n                eventManager.dispatch('sales_order_set_data_view_action', {'order': data});\n                viewManager.getSingleton('view/sales/order/view/payment').orderData(data);\n                viewManager.getSingleton('view/sales/order/view/payment').parentView(object);\n            },\n\n            getJsObject: function(){\n                return {\n                    parentView: this.parentView(),\n                }\n            },\n            \n            getAddressType: function(type){\n                switch (type) {\n                    case 'billing':\n                        return this.orderData.call().billing_address;\n                        break;\n                    case 'shipping':\n                        return this.orderData.call().extension_attributes.shipping_assignments[0].shipping.address;\n                        break;\n                }\n            },\n\n            getCustomerName: function(type) {\n                var address = this.getAddressType(type);\n                return address.firstname + ' ' + address.lastname;\n            },\n\n            getAddress: function(type){\n                var address = this.getAddressType(type);\n                var city = address.city ? address.city + ', ': '';\n                var region = address.region ? address.region + ', ' : '';\n                var postcode = address.postcode ? address.postcode + ', ' : '';\n                return city + region + postcode + address.country_id;\n            },\n            \n            display: function (isShow) {\n                if(isShow) {\n                    this.isVisible(true);\n                    this.stypeDisplay('block');\n                    this.classIn('in');\n                    $('.notification-bell').hide();\n                    $('#c-button--push-left').hide();\n                }else {\n                    this.isVisible(false);\n                    this.stypeDisplay('none');\n                    this.classIn('');\n                    $('.notification-bell').show();\n                    $('#c-button--push-left').show();\n                }\n            },\n\n            convertAndFormatPrice: function(price, from, to){\n                return priceHelper.convertAndFormat(price, from, to);\n            },\n\n            formatPrice: function(price){\n                return priceHelper.formatPrice(price);\n            },\n\n            currencyConvert: function(price, from, to){\n                return priceHelper.currencyConvert(price, from, to);\n            },\n            \n            toBasePrice: function(price){\n                return priceHelper.toBasePrice(price);\n            },\n            \n            getPriceHelper: function (){\n                return priceHelper;\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/sales/order/view.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n    \ndefine(\n    [\n        'require',\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/view/layout',\n        'underscore',\n        'mage/translate',\n        'Magestore_Webpos/js/view/base/abstract',\n        'Magestore_Webpos/js/model/sales/order/total',\n        'Magestore_Webpos/js/model/sales/order/status',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/action/cart/checkout',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/action/cart/reorder',\n        'Magestore_Webpos/js/helper/general'\n\n    ],\n    function (\n              require,\n              $,\n              ko,\n              OrderFactory,\n              ViewManager,\n              _,\n              $t,\n              Component,\n              orderTotal,\n              orderStatus,\n              CheckoutModel,\n              eventmanager,\n              Checkout,\n              priceHelper,\n              datetimeHelper,\n              ReOrder,\n              Helper\n    ) {\n        \"use strict\";\n\n        return Component.extend({\n            orderData: ko.observable(null),\n            orderListView: ko.observable(''),\n            isShowActionPopup: ko.observable(false),\n            totalValues: ko.observableArray([]),\n            statusObject: orderStatus.getStatusObjectView(),\n            isCanceled: ko.observable(true),\n            canInvoice: ko.observable(true),\n            canCancel: ko.observable(true),\n            canShip: ko.observable(true),\n            canCreditmemo: ko.observable(true),\n            canSync: ko.observable(true),\n            canTakePayment: ko.observable(false),\n            canUnhold: ko.observable(false),\n            isFirstLoad: true,\n            defaults: {\n                template: 'Magestore_Webpos/sales/order/view',\n                templateTop: 'Magestore_Webpos/sales/order/view/top',\n                templateBilling: 'Magestore_Webpos/sales/order/view/billing',\n                templateShipping: 'Magestore_Webpos/sales/order/view/shipping',\n                templateShippingMethod: 'Magestore_Webpos/sales/order/view/shipping-method',\n                templatePaymentMethod: 'Magestore_Webpos/sales/order/view/payment-method',\n                templateTotal: 'Magestore_Webpos/sales/order/view/total',\n                templateItems: 'Magestore_Webpos/sales/order/view/items',\n                templateComments: 'Magestore_Webpos/sales/order/view/comments',\n            },\n\n            initialize: function () {\n                this._super();\n                var self = this;\n                ko.pureComputed(function () {\n                    return self.orderData();\n                }).subscribe(function () {\n                    if (self.orderData()) {\n                        var orderModel = OrderFactory.get();\n                        self.isCanceled(orderModel.setData(self.orderData()).isCanceled());\n                        self.canInvoice(orderModel.setData(self.orderData()).canInvoice());\n                        self.canCancel(orderModel.setData(self.orderData()).canCancel());\n                        self.canShip(orderModel.setData(self.orderData()).canShip());\n                        self.canCreditmemo(orderModel.setData(self.orderData()).canCreditmemo());\n                        self.canSync(orderModel.setData(self.orderData()).canSync());\n                        self.canTakePayment(orderModel.setData(self.orderData()).canTakePayment())\n                        self.canUnhold(orderModel.setData(self.orderData()).canUnhold())\n                    }\n                });\n                self.cannotSync = ko.pureComputed(function () {\n                    return (self.orderData() && self.orderData().state) ? self.orderData().state != 'notsync' : false;\n                });\n\n                self.showInvoiceButton = ko.pureComputed(function () {\n                    return (self.canInvoice() && self.cannotSync());\n                });\n                eventmanager.observer('sales_order_afterSave', function (event, data) {\n                    if (data.response && data.response.entity_id > 0) {\n                        var deferedSave = $.Deferred();\n                        OrderFactory.get().setData(data.response).setMode('offline').save(deferedSave);\n                        self.orderListView().updateOrderListData(data.response);\n                    }\n                });\n                if (this.isFirstLoad) {\n                    $(\"body\").click(function () {\n                        self.isShowActionPopup(false);\n                    });\n                    this.isFirstLoad = false;\n                }\n            },\n\n            afterRender: function () {\n                var calheight, heightfooter, heightheader, heighttop, heightsumtotal;\n                heightfooter = $('.footer-order').height();\n                heightheader = $('#webpos_order_view_container .o-header-nav').height();\n                heighttop = $('#webpos_order_view_container .sum-info-top').height();\n                heightsumtotal = $('#webpos_order_view_container .total-due').height();\n                calheight = heightfooter + heightheader + heightsumtotal + heighttop + 60;\n                $('#webpos_order_view_container main').height('calc(100vh - '+ calheight +'px)');\n            },\n            setData: function (data, object) {\n                this.orderData(data);\n                this.orderListView(object);\n                this.isShowActionPopup(false);\n                var self = this;\n                this.totalValues([]);\n                var totalArray = orderTotal.getTotalOrderView();\n                if (self.orderData())\n                    $.each(totalArray, function (index, value) {\n                        var order_currency_code = self.orderData().order_currency_code;\n                        var current_currency_code = window.webposConfig.currentCurrencyCode;\n                        if (\n                            order_currency_code == current_currency_code\n                        ) {\n                            if ((self.orderData()[value.totalName] && self.orderData()[value.totalName] != 0) || value.required) {\n                                var totalCode = value.totalName.replace(\"base_\", \"\");\n                                self.totalValues.push(\n                                    {\n                                        totalValue: (value.isPrice)?priceHelper.formatPrice(self.orderData()[totalCode]):self.orderData()[totalCode]+' '+value.valueLabel,\n                                        totalLabel: value.totalName == 'base_discount_amount' &&\n                                        (self.orderData().discount_description || self.orderData().coupon_code) ?\n                                        $t(value.totalLabel) + ' (' + (self.orderData().discount_description ?\n                                            self.orderData().discount_description : self.orderData().coupon_code) +\n                                        ')' : $t(value.totalLabel)\n                                    }\n                                );\n                            }\n                        } else {\n                            if ((self.orderData()[value.totalName] && self.orderData()[value.totalName] != 0) || value.required) {\n                                self.totalValues.push(\n                                    {\n                                        totalValue: (value.isPrice)?self.convertAndFormatPrice(self.orderData()[value.totalName]):self.orderData()[value.totalName]+' '+value.valueLabel,\n                                        totalLabel: value.totalName=='base_discount_amount'&&\n                                            (self.orderData().discount_description || self.orderData().coupon_code)?\n                                            $t(value.totalLabel)+' ('+(self.orderData().discount_description?\n                                            self.orderData().discount_description:self.orderData().coupon_code)+\n                                            ')':$t(value.totalLabel)\n                                    }\n                                );\n                            }\n                        }\n                    });\n            },\n\n            showActionPopup: function (data, event) {\n                event.stopPropagation();\n                if (this.orderViewObject.isShowActionPopup.call())\n                    this.orderViewObject.isShowActionPopup(false);\n                else\n                    this.orderViewObject.isShowActionPopup(true);\n            },\n\n            showPopup: function (type) {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                this.isShowActionPopup(false);\n                if (!this.popupArray) {\n                    this.popupArray = {\n                        sendemail: viewManager.getSingleton('view/sales/order/sendemail'),\n                        comment: viewManager.getSingleton('view/sales/order/comment'),\n                        invoice: viewManager.getSingleton('view/sales/order/invoice'),\n                        shipment: viewManager.getSingleton('view/sales/order/shipment'),\n                        refund: viewManager.getSingleton('view/sales/order/creditmemo'),\n                        cancel: viewManager.getSingleton('view/sales/order/cancel'),\n                        payment: viewManager.getSingleton('view/sales/order/view/payment')\n                    }\n                }\n                this.popupArray[type].display(true);\n            },\n\n            getAddressType: function (type) {\n                switch (type) {\n                    case 'billing':\n                        return this.orderData.call().billing_address;\n                        break;\n                    case 'shipping':\n                        return this.orderData.call().extension_attributes.shipping_assignments[0].shipping.address;\n                        break;\n                }\n            },\n\n            getCustomerName: function (type) {\n                var address = this.getAddressType(type);\n                return address.firstname + ' ' + address.lastname;\n            },\n\n            getAddress: function (type) {\n                var address = this.getAddressType(type);\n                var city = address.city ? address.city + ', ' : '';\n                var region = address.region && typeof address.region == 'string' ? address.region + ', ' : '';\n                var postcode = address.postcode ? address.postcode + ', ' : '';\n                return city + region + postcode + address.country_id;\n            },\n\n            getStatus: function () {\n                var self = this;\n                return _.find(self.statusObject, function (obj) {\n                    return obj.statusClass == self.orderData().status\n                }).statusLabel;\n            },\n\n            getJsObject: function () {\n                return {\n                    orderView: this,\n                    orderListView: this.orderListView.call(),\n                }\n            },\n\n            getPrice: function (label) {\n                if (this.orderData().order_currency_code == window.webposConfig.currentCurrencyCode) {\n                    return priceHelper.formatPrice(this.orderData()[label]);\n                }\n                return this.convertAndFormatPrice(\n                    this.orderData()['base_' + label],\n                    this.orderData().base_currency_code\n                );\n            },\n\n            getGrandTotal: function () {\n                if (this.orderData().order_currency_code == window.webposConfig.currentCurrencyCode) {\n                    return priceHelper.formatPrice(this.orderData().grand_total);\n                }\n                return this.convertAndFormatPrice(this.orderData().base_grand_total, this.orderData().base_currency_code)\n            },\n\n            convertAndFormatPrice: function (price, from, to) {\n                return priceHelper.convertAndFormat(price, from, to);\n            },\n\n            canShowComment: function () {\n                var canShowComment = false;\n                if (this.orderData().status_histories) {\n                    $.each(this.orderData().status_histories, function (index, value) {\n                        if (value.comment && value.comment != '') canShowComment = true;\n                    });\n                }\n                return canShowComment;\n            },\n\n            printOrder: function () {\n                var html = $('#container-print-order')[0].innerHTML;\n                var print_window = window.open('', 'print_offline', 'status=1,width=700,height=700');\n                print_window.document.write(html);\n                print_window.print();\n            },\n            \n            syncOrder: function(){\n                CheckoutModel.syncOrder(this.orderData(),\"orderlist\");\n            },\n\n            reOrder: function () {\n                this.isShowActionPopup(false);\n                ReOrder(this.orderData());\n            },\n\n            unhold: function () {\n\n            },\n\n            showWebposPayment: function () {\n                var hasPayment = this.hasWebposPayment();\n                var showIntegration = this.showIntegration();\n                return (hasPayment || showIntegration);\n            },\n\n            hasWebposPayment: function () {\n                var hasPayment = this.orderData().webpos_order_payments && this.orderData().webpos_order_payments.length > 0;\n                return hasPayment;\n            },\n\n            showIntegration: function(){\n                var hasGiftcard = this.orderData().base_gift_voucher_discount && this.orderData().base_gift_voucher_discount < 0;\n                var hasRewardpoints = this.orderData().rewardpoints_base_discount && this.orderData().rewardpoints_base_discount < 0;\n                var isPosPayment = this.orderData().payment && this.orderData().payment.method == 'multipaymentforpos';\n                return ((hasGiftcard || hasRewardpoints) && isPosPayment);\n            },\n\n            getWebposPaymentAmount: function (data) {\n                var order_currency_code = this.orderData().order_currency_code;\n                var current_currency_code = window.webposConfig.currentCurrencyCode;\n                var amount = priceHelper.currencyConvert(\n                    data.base_payment_amount,\n                    this.orderData().base_currency_code\n                );\n                if (order_currency_code == current_currency_code) {\n                    amount = data.payment_amount;\n                }\n                return (data.base_payment_amount == 0) ? this.convertAndFormatPrice(0) : priceHelper.formatPrice(amount);\n            },\n\n            getPaidPayment: function () {\n                var payments = [];\n                if (this.showWebposPayment()) {\n                    if(this.hasWebposPayment()){\n                        var allPayments = this.orderData().webpos_order_payments;\n                        $.each(allPayments, function (index, payment) {\n                            if (priceHelper.toNumber(payment.base_payment_amount) > 0) {\n                                if(payment.reference_number && !payment.addedRef){\n                                    payment.addedRef = true;\n                                    payment.method_title += ' ( ' + payment.reference_number + ' )';\n                                }\n                                payments.push(payment);\n                            }\n                        });\n                    }\n                    if(this.showIntegration()){\n                        var hasGiftcard = this.orderData().base_gift_voucher_discount && this.orderData().base_gift_voucher_discount < 0;\n                        if(hasGiftcard){\n                            var baseAmount = this.orderData().base_gift_voucher_discount;\n                            var amount = this.orderData().gift_voucher_discount;\n                            payments.push({\n                                base_payment_amount:-baseAmount,\n                                payment_amount:-amount,\n                                method_title: $t('Gift Voucher')\n                            });\n                        }\n                        var hasRewardpoints = this.orderData().rewardpoints_base_discount && this.orderData().rewardpoints_base_discount < 0;\n                        if(hasRewardpoints){\n                            var baseAmount = this.orderData().rewardpoints_base_discount;\n                            var amount = this.orderData().rewardpoints_discount;\n                            payments.push({\n                                base_payment_amount:-baseAmount,\n                                payment_amount:-amount,\n                                method_title: $t(\"Customer's Reward Points\")\n                            });\n                        }\n                    }\n                }\n                return payments;\n            },\n\n            getDeliveryDate: function (date) {\n                return datetimeHelper.getFullDatetime(this.orderData().webpos_delivery_date);\n                if (date)\n                    return datetimeHelper.getFullDatetime(date);\n                return datetimeHelper.getFullDatetime(this.orderData().webpos_delivery_date);\n            },\n\n            getPayLaterPayment: function () {\n                var payments = [];\n                if (this.showWebposPayment() && this.orderData().base_total_due > 0) {\n                    var allPayments = this.orderData().webpos_order_payments;\n                    $.each(allPayments, function (index, payment) {\n                        if (priceHelper.toNumber(payment.base_payment_amount) == 0) {\n                            if(payment.reference_number && !payment.addedRef){\n                                payment.addedRef = true;\n                                payment.method_title += ' ( ' + payment.reference_number + ' )';\n                            }\n                            payments.push(payment);\n                        }\n                    });\n                }\n                return payments;\n            },\n            showPayLater: function () {\n                var payments = this.getPayLaterPayment();\n                return (payments.length > 0) ? true : false;\n            },\n            getItemRowTotalFormated: function(item){\n                var self = this;\n                var formated = ''\n                if(item){\n                    if(window.webposConfig.currentCurrencyCode == self.orderData().order_currency_code){\n                        formated = item.row_total_incl_tax-item.discount_amount;\n                    }else{\n                        if(window.webposConfig.currentCurrencyCode == self.orderData().base_currency_code){\n                            formated = item.base_row_total_incl_tax-item.base_discount_amount;\n                        } else{\n                            formated = item.base_row_total_incl_tax-item.base_discount_amount;\n                            formated = priceHelper.currencyConvert(formated,self.orderData().base_currency_code, window.webposConfig.currentCurrencyCode);\n                        }\n                    }\n                }\n                return priceHelper.formatPrice(formated);\n            },\n            getItemPriceFormated: function(item){\n                var self = this;\n                var formated = ''\n                if(item){\n                    var displayIncludeTax = Helper.isCartDisplayIncludeTax('price');\n                    var displayIncludeTax = false;\n                    if(window.webposConfig.currentCurrencyCode == self.orderData().order_currency_code){\n                        formated = (displayIncludeTax)?item.price_incl_tax:item.price;\n                    }else{\n                        if(window.webposConfig.currentCurrencyCode == self.orderData().base_currency_code){\n                            formated = (displayIncludeTax)?item.base_price_incl_tax:item.base_price;\n                        } else{\n                            formated = (displayIncludeTax)?item.base_price_incl_tax:item.base_price;\n                            formated = priceHelper.currencyConvert(formated,self.orderData().base_currency_code, window.webposConfig.currentCurrencyCode);\n                        }\n                    }\n                }\n                return priceHelper.formatPrice(formated);\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/sales/order/invoice.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'underscore',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/model/checkout/payment-factory',\n        'mage/translate',\n        'Magestore_Webpos/js/view/sales/order/action',\n        'Magestore_Webpos/js/model/sales/order/invoice',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/action/sales/order/invoice/create',\n        'Magestore_Webpos/js/helper/alert',\n        'Magento_Ui/js/modal/confirm',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/general',\n\n    ],\n    function ($, ko, _, OrderFactory, PaymentFactory, $t, Component, invoice, eventmanager, createInvoiceAction, Alert, Confirm, priceHelper, Helper) {\n        \"use strict\";\n\n        return Component.extend({\n            invoiceByAmount: ko.observable(false),\n            isVisible: ko.observable(false),\n            classIn: ko.observable(''),\n            stypeDisplay: ko.observable('none'),\n            formId: 'invoice-popup-form',\n            submitArray: [],\n            submitData: {},\n            items: {},\n            comment: {},\n            paymentList: ko.observableArray([]),\n            payment: {'method_data': []},\n            payment_data: {},\n            paymentMethod: ko.observable(),\n            subtotalElement: '#invoice-popup-form td[id^=invoice_item_subtotal_]',\n            rowtotalElement: '#invoice-popup-form td[id^=invoice_item_rowtotal_]',\n            invoiceAmountId: 'input-invoice-amount',\n            invoiceAmount: ko.observable(0),\n            // invoiceAmountText: ko.observable(priceHelper.formatPrice(0)),\n            defaults: {\n                template: 'Magestore_Webpos/sales/order/invoice',\n            },\n            initialize: function () {\n                var self = this;\n                this._super();\n                this.getListPayment();\n                this.collectTotals();\n                this.invoiceByAmount(false);\n                this.listenEvents();\n            },\n\n            display: function (isShow) {\n                this.collectTotals();\n                /* check invoiceable total */\n                if (isShow) {\n\n                    if (this.invoiceable() == 0 && this.orderData().grand_total > 0) {\n                        if(this.orderData().base_total_due > 0) {\n                            Alert({\n                                priority:'warning',\n                                title:'Warning',\n                                message: $t('You must take payment on this order before creating invoice')\n                            });\n                        } else {\n                            Alert({\n                                priority:'warning',\n                                title:'Warning',\n                                message: $t('You can not create invoice for this order')\n                            });\n                        }\n                        return;\n                    }\n                    this.isVisible(true);\n                    this.stypeDisplay('block');\n                    this.classIn('in');\n                    $('#' + this.invoiceAmountId).focus();\n                    $('#' + this.invoiceAmountId).trigger('focus');\n                    $('.notification-bell').hide();\n                    $('#c-button--push-left').hide();\n                } else {\n                    this.isVisible(false);\n                    this.stypeDisplay('none');\n                    this.classIn('');\n                    $('#' + this.invoiceAmountId).val('');\n                    $('.notification-bell').show();\n                    $('#c-button--push-left').show();\n                }\n            },\n\n            /**\n             * Validate qty for invoice items\n             *\n             * @param {order item} data\n             * @param html event\n             */\n            validateQty: function (data, event) {\n                //var self = this;\n                var qty = event.target.value;\n\n                var maxQty = data.qty_ordered - data.qty_invoiced - data.qty_canceled;\n                if (qty == '' || isNaN(qty) || parseInt(qty) !== parseFloat(qty) || parseFloat(qty) < 0 || parseFloat(qty) > maxQty) {\n                    qty = maxQty;\n                }\n                /*\n                 if(event.type=='keyup')\n                 if(qty>0)\n                 $('#invoice-popup-form input[name=invoice_amount]').val('');\n                 */\n                qty = this.getInvoiceableQty(data, qty);\n\n                /*\n                 $(event.currentTarget).val(qty);\n                 $('#invoice_item_subtotal_'+data.item_id).attr('price',(qty*data.base_price));\n                 $('#invoice_item_subtotal_'+data.item_id).attr('tax',qty*(data.base_tax_amount/data.qty_ordered));\n                 $('#invoice_item_subtotal_'+data.item_id).attr('discount',qty*(data.base_discount_amount/data.qty_ordered));\n                 $('#invoice_item_subtotal_'+data.item_id).text(this.convertAndFormatPrice((qty*data.base_price)));\n                 $('#invoice_item_rowtotal_'+data.item_id).attr('price',((qty*data.base_price)-data.discount_amount/data.qty_ordered*(qty)));\n                 $('#invoice_item_rowtotal_'+data.item_id).text(this.convertAndFormatPrice(((qty*data.base_price)-data.discount_amount/data.qty_ordered*(qty))));\n                 this.invoiceSubtotal = 0;\n                 this.invoiceTaxAmount = 0;\n                 this.invoiceDiscountAmount = 0;\n                 $(this.subtotalElement).each(function(index,value){\n                 self.invoiceSubtotal += parseFloat($(value).attr('price'));\n                 self.invoiceTaxAmount += parseFloat($(value).attr('tax'));\n                 self.invoiceDiscountAmount += parseFloat($(value).attr('discount'));\n                 });\n                 $('#invoice_subtotal').text(this.convertAndFormatPrice(this.invoiceSubtotal));\n                 $('#invoice_grandtotal').text(this.convertAndFormatPrice(this.invoiceSubtotal+this.getShippingAmount()+this.invoiceTaxAmount-this.invoiceDiscountAmount));\n                 */\n            },\n\n            /**\n             * Calculate invoice amount after click invoice amount text field\n             *\n             * @param data\n             * @param event\n             */\n            calculateAmount: function (data, event) {\n                if (event.target.value == '' || event.target.value == 0) {\n                    event.target.value = this.currencyConvert(this.orderData().base_total_due);\n                    $(event.target).trigger('change');\n                }\n                $(event.target).select();\n            },\n\n            /**\n             * add Invoice amount and calculate invoice item for invoice\n             *\n             * @param data\n             * @param event\n             */\n            addInvoiceAmount: function (data, event) {\n                var self = this;\n                if (event.target.value && parseFloat(event.target.value) > 0) {\n                    var maxQty = 0;\n                    $.each(this.orderData().items, function (index, value) {\n                        if (value.parent_item_id)\n                            return;\n                        $('#invoice_item_qty_' + value.item_id).val(0);\n                        $('#invoice_item_qty_' + value.item_id).trigger('change');\n                    });\n                    $.each($('#invoice-popup-form input[id^=invoice_item_qty_]'), function (index, value) {\n                        $(value).val(0);\n                        $(value).trigger('keyup');\n                    });\n                    var baseAmount = this.getPriceHelper().currencyConvert(\n                        event.target.value,\n                        window.webposConfig.currentCurrencyCode,\n                        this.orderData().base_currency_code\n                    );\n                    var baseTotalPaid = this.orderData().base_total_paid ? this.orderData().base_total_paid : 0;\n                    var maxInvoiceAmount = parseFloat(this.orderData().base_grand_total) - parseFloat(baseTotalPaid);\n                    maxInvoiceAmount = maxInvoiceAmount > 0 ? maxInvoiceAmount : 0;\n                    baseAmount = baseAmount > maxInvoiceAmount ? maxInvoiceAmount : baseAmount;\n                    event.target.value = parseFloat(this.currencyConvert(baseAmount)).toFixed(2);\n                    this.subtotal(event.target.value);\n                    this.grandtotal(event.target.value);\n                    self.invoiceByAmount(true);\n                } else {\n                    event.target.value = '';\n                    self.invoiceByAmount(false);\n                    $.each(this.orderData().items, function (index, value) {\n                        if (value.parent_item_id)\n                            return;\n                        maxQty = value.qty_ordered - value.qty_invoiced - value.qty_canceled;\n                        $('#invoice_item_qty_' + value.item_id).val(maxQty);\n                        $('#invoice_item_qty_' + value.item_id).trigger('change');\n                    });\n                }\n            },\n\n            /**\n             * get Subtotal for invoice item after load order\n             *\n             * @param {order item}data\n             * @param {int} qty\n             * @returns {number}\n             */\n            getSubtotalItem: function (data, qty) {\n                qty = qty ? qty : data.qty_ordered - data.qty_invoiced - data.qty_canceled;\n                return qty * data.base_price;\n            },\n\n            /**\n             * get Tax amount for invoice item after load order\n             *\n             * @param {order item}data\n             * @param {int} qty\n             * @returns {number}\n             */\n            getTaxAmountItem: function (data, qty) {\n                qty = qty ? qty : data.qty_ordered - data.qty_invoiced - data.qty_canceled;\n                return qty * (data.base_tax_amount / data.qty_ordered);\n            },\n\n            /**\n             * get discount amount for invoice item after load order\n             *\n             * @param {order item}data\n             * @param {int} qty\n             * @returns {number}\n             */\n            getDiscountAmountItem: function (data, qty) {\n                qty = qty ? qty : data.qty_ordered - data.qty_invoiced - data.qty_canceled;\n                return qty * (data.base_discount_amount / data.qty_ordered);\n            },\n\n            /**\n             * get row total amount for invoice item after load order\n             *\n             * @param {order item}data\n             * @param {int} qty\n             * @returns {number}\n             */\n            getRowTotalItem: function (data, qty) {\n                return this.getSubtotalItem(data, qty) + this.getTaxAmountItem(data, qty) - this.getDiscountAmountItem(data, qty);\n            },\n\n            /**\n             * get Subtotal for invoice after load order\n             *\n             * @returns {number}\n             */\n            getSubtotal: function () {\n                if (this.invoiceByAmount() == true) {\n                    return this.toBasePrice(this.subtotal());\n                }\n                var subtotal = 0;\n                if (this.orderData().items)\n                    $.each(this.orderData().items, function (index, value) {\n                        if (!value.parent_item_id && parseFloat(value.qty_ordered) - parseFloat(value.qty_invoiced) - parseFloat(value.qty_canceled) > 0)\n                            subtotal += value.base_price * (value.qty_ordered - value.qty_invoiced - value.qty_canceled);\n                    });\n                return subtotal;\n            },\n\n            /**\n             * get shipping amount for invoice after load order\n             *\n             * @returns {number}\n             */\n            getShippingAmount: function () {\n                if (this.orderData().base_shipping_invoiced)\n                    return 0;\n                else if (this.orderData().base_shipping_amount)\n                    return parseFloat(this.orderData().base_shipping_amount);\n                else\n                    return 0;\n            },\n\n            /**\n             * get shipping discount amount for invoice after load order\n             *\n             * @returns {number}\n             */\n            getShippingDiscountAmount: function () {\n                if (this.orderData().base_shipping_invoiced)\n                    return 0;\n                else if (this.orderData().base_shipping_discount_amount)\n                    return parseFloat(this.orderData().base_shipping_discount_amount);\n                else\n                    return 0;\n            },\n\n            /**\n             * get Grand Total for invoice after load order\n             *\n             * @returns {number}\n             */\n            getGrandTotal: function () {\n                if (this.invoiceByAmount() == true) {\n                    return this.toBasePrice(this.grandtotal());\n                }\n                var base_tax_amount = 0, base_discount_amount = 0;\n                if (this.orderData().items)\n                    $.each(this.orderData().items, function (index, value) {\n                        if (!value.parent_item_id && parseFloat(value.qty_ordered) - parseFloat(value.qty_invoiced) - parseFloat(value.qty_canceled) > 0) {\n                            base_tax_amount += value.base_tax_amount / value.qty_ordered * (value.qty_ordered - value.qty_invoiced - value.qty_canceled);\n                            base_discount_amount += value.base_discount_amount / value.qty_ordered * (value.qty_ordered - value.qty_invoiced - value.qty_canceled);\n                        }\n                    });\n                var grantotal = this.getSubtotal() + this.getShippingAmount() + base_tax_amount - base_discount_amount;\n                return (grantotal < this.orderData().base_grand_total)?grantotal:this.orderData().base_grand_total;\n            },\n\n            /**\n             * get List Payment for invoice\n             */\n            getListPayment: function () {\n                var self = this;\n                var deferred = $.Deferred();\n                PaymentFactory.get().setMode('offline').getCollection().load(deferred);\n                deferred.done(function (response) {\n                    var payments = [{value: '0', label: $t('--- Please select ---')}];\n                    if (response.items) {\n                        $.each(response.items, function (index, value) {\n                            if (!value.is_pay_later) {\n                                payments.push({value: value.code, label: value.title});\n                            }\n                        });\n                    }\n                    self.paymentList(payments);\n                    createInvoiceAction.paymentList(payments);\n                });\n            },\n\n            /**\n             *\n             *\n             * @param data\n             * @param event\n             */\n            validateAmount: function (data, event) {\n                var value = event.target.value;\n                this.invoiceAmount(priceHelper.toPositiveNumber(value));\n            },\n\n            saveInvoiceOffline: function () {\n\n            },\n\n            /**\n             * submit invoice\n             */\n            submit: function () {\n                var self = this;\n                if (priceHelper.comparePrice(self.grandTotal(), self.invoiceable()) > 0) {\n                    Alert({\n                        title: 'Warning',\n                        content: 'You cannot create invoice over the total paid amount of this order.'\n                    });\n                } else {\n                    Confirm({\n                        content: $t('Are you sure you want to submit this invoice?'),\n                        actions: {\n                            confirm: function () {\n                                self.submitArray = $('#' + self.formId).serializeArray();\n                                //$('#invoice-popup-form input[name=invoice_amount]').val('');\n                                self.saveInvoiceOffline(self.submitArray);\n                                var deferred = $.Deferred();\n                                var data = self.orderData();\n                                createInvoiceAction.execute(self.submitArray, data, deferred, self);\n                                self.paymentMethod(\"\");\n                            },\n                            always: function (event) {\n                                event.stopImmediatePropagation();\n                            }\n                        }\n                    });\n                }\n            },\n            selectPayment: function (data, event) {\n                this.paymentMethod(event.target.value);\n            },\n            /**\n             * Listen events\n             *\n             */\n            listenEvents: function () {\n                var self = this;\n                eventmanager.observer('sales_order_invoice_afterSave', function (event, data) {\n                    if (data.response && data.response.entity_id > 0) {\n                        var deferedSave = $.Deferred();\n                        OrderFactory.get().setData(data.response).setMode('offline').save(deferedSave);\n                        self.parentView().updateOrderListData(data.response);\n                    }\n                });\n\n                eventmanager.observer('sales_order_list_load_order', function (event, data) {\n                    self.collectItemTotals(data.order);\n                });\n\n                eventmanager.observer('sales_order_set_data_view_action', function (event, data) {\n                    self.initInvoiceQtyItems();\n                });\n            },\n            collectItemTotals: function (orderData) {\n                if (!orderData)\n                    return;\n\n                for (var i in orderData.items) {\n                    var item = orderData.items[i];\n                    /* init invoice qty of item */\n                    item.qtyToInvoice = ko.observable(0);\n\n                    /* collect subtotal of item */\n                    item.subTotalItem = ko.pureComputed(function () {\n                        return parseFloat(this.qtyToInvoice()) * parseFloat(this.base_price);\n                    }.bind(item));\n\n                    /* collect tax of item */\n                    item.taxAmountItem = ko.pureComputed(function () {\n                        return parseFloat(this.qtyToInvoice()) * parseFloat(this.base_tax_amount) / parseFloat(this.qty_ordered);\n                    }.bind(item));\n\n                    /* collect discount of item */\n                    item.discountAmountItem = ko.pureComputed(function () {\n                        return parseFloat(this.qtyToInvoice()) * parseFloat(this.base_discount_amount) / parseFloat(this.qty_ordered);\n                    }.bind(item));\n\n                    /* collect row total of item */\n                    item.rowTotalItem = ko.pureComputed(function () {\n                        var total = this.subTotalItem() + this.taxAmountItem() - this.discountAmountItem();\n                        if(total > 0){\n                            if(this.rewardpoints_discount){\n                                total -= this.rewardpoints_discount;\n                            }\n                            if(this.gift_voucher_discount) {\n                                total -= this.gift_voucher_discount;\n                            }\n                        }\n                        return total;\n                    }.bind(item));\n\n                    /* collect external discount of item */\n                    item.points_base_discount = ko.pureComputed(function () {\n                        var total = this.subTotalItem() + this.taxAmountItem() - this.discountAmountItem();\n                        return (total > 0)?this.rewardpoints_base_discount:0;\n                    }.bind(item));\n                    item.voucher_base_discount = ko.pureComputed(function () {\n                        var total = this.subTotalItem() + this.taxAmountItem() - this.discountAmountItem();\n                        return (total > 0)?this.base_gift_voucher_discount:0;\n                    }.bind(item));\n                }\n            },\n            collectTotals: function (orderData) {\n                var self = this;\n                var currentCurrencyCode = window.webposConfig.currentCurrencyCode;\n                /* collect invoiceable total */\n                this.totalDue = ko.pureComputed(function () {\n                    if (self.orderData.call()) {\n                        var baseTotalDue = 0;\n                        if (currentCurrencyCode == self.orderData().order_currency_code) {\n                            baseTotalDue = self.orderData().total_due;\n                        } else {\n                            if (currentCurrencyCode == self.orderData().base_currency_code) {\n                                baseTotalDue = self.orderData().base_total_due;\n                            } else {\n                                baseTotalDue = priceHelper.currencyConvert(self.orderData().base_total_due, self.orderData().base_currency_code, currentCurrencyCode);\n                            }\n                        }\n                        baseTotalDue = Helper.toBasePrice(baseTotalDue);\n                        return (baseTotalDue)?Helper.correctPrice(baseTotalDue):0;\n                    } else {\n                        return 0;\n                    }\n                });\n                this.totalPaid = ko.pureComputed(function () {\n                    if (self.orderData.call()) {\n                        var baseTotalPaid = 0;\n                        var baseTotalRefunded = 0;\n                        if (currentCurrencyCode == self.orderData().order_currency_code) {\n                            baseTotalPaid = self.orderData().total_paid;\n                        } else {\n                            if (currentCurrencyCode == self.orderData().base_currency_code) {\n                                baseTotalPaid = self.orderData().base_total_paid;\n                            } else {\n                                baseTotalPaid = priceHelper.currencyConvert(self.orderData().base_total_paid, self.orderData().base_currency_code, currentCurrencyCode);\n                            }\n                        }\n                        baseTotalPaid = Helper.toBasePrice(baseTotalPaid);\n                        return (baseTotalPaid)?Helper.correctPrice(baseTotalPaid):0;\n                    } else {\n                        return 0;\n                    }\n                });\n                this.totalInvoiced = ko.pureComputed(function () {\n                    if (self.orderData.call()) {\n                        var baseTotalInvoiced = 0;\n                        if (currentCurrencyCode == self.orderData().order_currency_code) {\n                            baseTotalInvoiced = self.orderData().total_invoiced;\n                        } else {\n                            if (currentCurrencyCode == self.orderData().base_currency_code) {\n                                baseTotalInvoiced = self.orderData().base_total_invoiced;\n                            } else {\n                                baseTotalInvoiced = priceHelper.currencyConvert(self.orderData().base_total_invoiced, self.orderData().base_currency_code, currentCurrencyCode);\n                            }\n                        }\n                        baseTotalInvoiced = Helper.toBasePrice(baseTotalInvoiced);\n                        return (baseTotalInvoiced)?Helper.correctPrice(baseTotalInvoiced):0;\n                    } else {\n                        return 0;\n                    }\n                });\n                this.totalRefunded = ko.pureComputed(function () {\n                    if (self.orderData.call()) {\n                        var baseTotalRefunded = 0;\n                        if (currentCurrencyCode == self.orderData().order_currency_code) {\n                            baseTotalRefunded = self.orderData().total_refunded;\n                        } else {\n                            if (currentCurrencyCode == self.orderData().base_currency_code) {\n                                baseTotalRefunded = self.orderData().base_total_refunded;\n                            } else {\n                                baseTotalRefunded = priceHelper.currencyConvert(self.orderData().base_total_refunded, self.orderData().base_currency_code, currentCurrencyCode);\n                            }\n                        }\n                        baseTotalRefunded = Helper.toBasePrice(baseTotalRefunded);\n                        return (baseTotalRefunded)?Helper.correctPrice(baseTotalRefunded):0;\n                    } else {\n                        return 0;\n                    }\n                });\n                this.invoiceable = ko.pureComputed(function () {\n                    if (self.orderData.call()) {\n                        var baseTotalInvoiced = self.totalInvoiced();\n                        var baseTotalPaid = self.totalPaid();\n                        var baseTotalRefunded = self.totalRefunded();\n\n                        var totalAmount = parseFloat(Helper.correctPrice(baseTotalPaid)) - parseFloat(baseTotalInvoiced);\n                        var totalAmount = Helper.correctPrice(totalAmount);\n                        return (totalAmount > self.totalPaid())?self.totalPaid():totalAmount;\n                    } else {\n                        return 0;\n                    }\n                });\n                /* collect subTotal */\n                this.subTotal = ko.pureComputed(function () {\n                    var subtotal = 0;\n                    if (self.orderData.call()) {\n                        $.each(self.orderData.call().items, function (index, value) {\n                            subtotal += (value.subTotalItem())?value.subTotalItem():0;\n                        });\n                    }\n                    var baseSubtotal = 0;\n                    if (currentCurrencyCode == self.orderData().order_currency_code) {\n                        baseSubtotal = Helper.toBasePrice(self.orderData().subtotal);\n                    } else {\n                        baseSubtotal = self.orderData().base_subtotal;\n                    }\n                    var subtotal = (subtotal < baseSubtotal)?subtotal:baseSubtotal;\n                    return subtotal;\n                });\n                /* collect tax amount */\n                this.taxAmount = ko.pureComputed(function () {\n                    var base_tax_amount = 0;\n                    if (self.orderData.call()) {\n                        $.each(self.orderData.call().items, function (index, value) {\n                            if(value.base_tax_amount){\n                                base_tax_amount += parseFloat(value.base_tax_amount) / parseFloat(value.qty_ordered) * value.qtyToInvoice();\n                            }\n                         });\n                    }\n                    return base_tax_amount;\n                });\n                /* collect discount amount */\n                this.discountAmount = ko.pureComputed(function () {\n                    var base_discount_amount = 0;\n                    if (self.orderData.call()) {\n                        $.each(self.orderData.call().items, function (index, value) {\n                            if(value.base_discount_amount){\n                                base_discount_amount += parseFloat(value.base_discount_amount) / parseFloat(value.qty_ordered) * value.qtyToInvoice();\n                            }\n                        });\n                        base_discount_amount += self.getShippingDiscountAmount();\n                    }\n                    return base_discount_amount;\n                });\n                /* collect grandTotal */\n                this.grandTotal = ko.pureComputed(function () {\n                    var grandtotal = 0;\n                    if (self.orderData.call()) {\n                        $.each(self.orderData.call().items, function (index, value) {\n                            grandtotal += (value.rowTotalItem())?value.rowTotalItem():0;\n                        });\n                        grandtotal = (grandtotal > 0)?grandtotal:0;\n                        grandtotal += self.getShippingAmount();\n                    }\n                    /* round the grandtotal up to 4 numbers after ',' */\n                    // grandtotal = Math.round(grandtotal * 10000) / 10000;\n                    var baseGrandTotal = 0;\n                    if (currentCurrencyCode == self.orderData().order_currency_code) {\n                        baseGrandTotal = Helper.toBasePrice(self.orderData().grand_total);\n                    } else {\n                        baseGrandTotal = self.orderData().base_grand_total;\n                    }\n                    var grandtotal = (grandtotal < baseGrandTotal)?grandtotal:baseGrandTotal;\n                    return grandtotal;\n                });\n                if(Helper.isRewardPointsEnable()) {\n                    this.pointsDiscount = ko.pureComputed(function () {\n                        var discount = 0;\n                        if (self.orderData.call()) {\n                            $.each(self.orderData.call().items, function (index, value) {\n                                if(value.qtyToInvoice() > 0){\n                                    discount += value.rewardpoints_discount;\n                                }\n                            });\n                        }\n                        return -discount;\n                    });\n                    this.pointsDiscount.subscribe(function(value){\n                        var hasPoint = (value < 0)?true:false;\n                        self.hasRewardpoints(hasPoint);\n                    });\n                }\n                if(Helper.isGiftCardEnable()) {\n                    this.voucherDiscount = ko.pureComputed(function () {\n                        var discount = 0;\n                        if (self.orderData.call()) {\n                            $.each(self.orderData.call().items, function (index, value) {\n                                if(value.qtyToInvoice() > 0) {\n                                    discount += value.gift_voucher_discount;\n                                }\n                            });\n                        }\n                        return -discount;\n                    });\n                    this.voucherDiscount.subscribe(function(value){\n                        var hasVoucher = (value < 0)?true:false;\n                        self.hasGiftcard(hasVoucher);\n                    });\n                }\n            },\n            /**\n             * Get remaining qty need to invoice\n             *\n             * @returns {int|float}\n             */\n            getInvoiceQty: function (item) {\n                var qty = parseFloat(item.qty_ordered) - parseFloat(item.qty_invoiced) - parseFloat(item.qty_canceled);\n                qty = qty > 0 ? qty : 0;\n                return qty;\n            },\n            setInvoiceQty: function (item, invoiceQty) {\n                item.qtyToInvoice(invoiceQty);\n            },\n            /**\n             * Initial invoice qty of items\n             *\n             */\n            initInvoiceQtyItems: function () {\n                var self = this;\n                var orderData = this.orderData();\n                if (!orderData)\n                    return;\n                var minDecimalValue = WEBPOS.getConfig('general/min_decimal_value');\n                if (orderData.items) {\n                    $.each(orderData.items, function (index, value) {\n                        if (!value.parent_item_id && self.getInvoiceQty(value) > 0) {\n                            /* get max qty to invoice */\n                            var invoiceQty = self.getInvoiceQty(value);\n                            self.setInvoiceQty(value, invoiceQty);\n                            self.orderData(orderData);\n                            /* compare grandTotal with invoiceable */\n                            if (priceHelper.comparePrice(self.grandTotal(), self.invoiceable()) > 0) {\n                                for (var i = 1; i <= invoiceQty; i++) {\n                                    /* decrease invoiceQty in item */\n                                    self.setInvoiceQty(value, invoiceQty - i);\n                                    self.orderData(orderData);\n                                    /* compare grandTotal with invoiceable again */\n                                    if (priceHelper.comparePrice(self.grandTotal(), self.invoiceable()) < 1) {\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    });\n                }\n            },\n            /**\n             * Validate grandTotal of invoice after added items to invoice\n             *\n             */\n            getInvoiceableQty: function (item, invoiceQty) {\n                var self = this;\n                var orderData = this.orderData();\n                var correctInvoiceQty = invoiceQty;\n                var isInvoiceOverTotalPaid = false;\n                var minDecimalValue = WEBPOS.getConfig('general/min_decimal_value');\n                $.each(orderData.items, function (index, value) {\n                    if (value.item_id == item.item_id) {\n                        /* set qty to invoice */\n                        self.setInvoiceQty(value, invoiceQty);\n                        self.orderData(orderData);\n                        /* compare grandTotal with invoiceable */\n                        if (priceHelper.comparePrice(self.grandTotal(), self.invoiceable()) > 0 ) {\n                            isInvoiceOverTotalPaid = true;\n                            for (var i = 1; i <= invoiceQty; i++) {\n                                /* decrease invoiceQty in item */\n                                self.setInvoiceQty(value, invoiceQty - i);\n                                self.orderData(orderData);\n                                /* compare grandTotal with invoiceable again */\n                                if (priceHelper.comparePrice(self.grandTotal(), self.invoiceable()) < 1) {\n                                    correctInvoiceQty = value.qtyToInvoice();\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                });\n                if (isInvoiceOverTotalPaid) {\n                    Alert({\n                        title: 'Warning',\n                        content: 'You must take payment on this order to create invoice for more items.'\n                    });\n                }\n                return correctInvoiceQty;\n            },\n            hasRewardpoints: ko.observable(false),\n            hasGiftcard: ko.observable(false)\n        });\n    }\n);","Magestore_Webpos/js/view/sales/order/creditmemo.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'mage/translate',\n        'Magestore_Webpos/js/view/sales/order/action',\n        'Magestore_Webpos/js/model/sales/order/creditmemo',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/action/sales/order/creditmemo/create',\n        'Magento_Ui/js/modal/confirm',\n        'Magestore_Webpos/js/helper/general',\n        \n    ],\n    function ($, ko, OrderFactory, $t, Component, creditmemo, eventmanager, createCreditmemoAction, Confirm, Helper) {\n        \"use strict\";\n\n        return Component.extend({\n            isVisible: ko.observable(false),\n            classIn: ko.observable(''),\n            stypeDisplay: ko.observable('none'),\n            formId: 'creditmemo-popup-form',\n            submitArray: [],\n            defaults: {\n                template: 'Magestore_Webpos/sales/order/creditmemo',\n            },\n            creditAmount: ko.observable(0),\n            maxCreditAmount: ko.observable(0),\n            giftcardAmount: ko.observable(0),\n            maxGiftcardAmount: ko.observable(0),\n            initialize: function () {\n                var self = this;\n                this._super();\n                this.shippingRefunded = ko.pureComputed(function(){\n                    if(!self.orderData().base_shipping_refunded)\n                        return self.currencyConvert(self.orderData().base_shipping_amount);\n                    else if(self.orderData().base_shipping_amount - self.orderData().base_shipping_refunded > 0)\n                        return self.currencyConvert(self.orderData().base_shipping_amount - self.orderData().base_shipping_refunded);\n                    return 0;\n                });\n                eventmanager.observer('sales_order_creditmemo_afterSave', function(event, data){\n                    if(data.response && data.response.entity_id>0){\n                        var deferedSave = $.Deferred();\n                        OrderFactory.get().setData(data.response).setMode('offline').save(deferedSave);\n                        self.parentView().updateOrderListData(data.response);\n                    }\n                });\n                if(Helper.isStoreCreditEnable()) {\n                    self.isVisible.subscribe(function (value) {\n                        self.validateAdditionalAmount();\n                        if (value && self.orderData()) {\n                            var baseTotalRefunded = (self.orderData().base_total_refunded)?parseFloat(self.orderData().base_total_refunded):0;\n                            var baseCreditDiscount = (self.orderData().base_customercredit_discount)?parseFloat(self.orderData().base_customercredit_discount):0;\n                            var creditDiscount = parseFloat(Helper.convertPrice(baseCreditDiscount - baseTotalRefunded));\n                            creditDiscount = (creditDiscount > 0)?creditDiscount:0;\n                            creditDiscount = Helper.correctPrice(creditDiscount);\n                            if(self.maxCreditAmount() && creditDiscount > self.maxCreditAmount()){\n                                creditDiscount = self.maxCreditAmount();\n                            }\n                            self.creditAmount(creditDiscount);\n                            self.orderData().credit_amount_to_refund = creditDiscount;\n                        }else{\n                            self.creditAmount(0);\n                        }\n\n                    });\n                    self.maxCreditAmount.subscribe(function (value) {\n                        value = Helper.correctPrice(value);\n                        if(value > self.creditAmount()){\n                            self.creditAmount(value);\n                        }\n                    });\n                }\n                if(Helper.isGiftCardEnable()) {\n                    self.isVisible.subscribe(function (value) {\n                        self.validateAdditionalAmount();\n                        if (value && self.orderData()) {\n                            var baseGiftcardDiscount = self.orderData().base_gift_voucher_discount;\n                            var giftcardDiscount = parseFloat(Helper.convertPrice(baseGiftcardDiscount));\n                            self.giftcardAmount(-giftcardDiscount);\n                            self.orderData().giftcard_amount_to_refund = -giftcardDiscount;\n                        }else{\n                            self.giftcardAmount(0);\n                        }\n                    });\n                    self.maxGiftcardAmount.subscribe(function (value) {\n                        self.giftcardAmount(value);\n                    });\n                }\n\n                self.canRefundGiftcard = ko.pureComputed(function(){\n                    var moduleEnable = Helper.isGiftCardEnable();\n                    var orderUsedVoucher = false;\n                    if (self.orderData()) {\n                        orderUsedVoucher = (self.orderData().base_gift_voucher_discount < 0)?true:false;\n                    }\n                    return (moduleEnable && orderUsedVoucher);\n                });\n            },\n\n            validateQty: function(data, event){\n                var qty = $(event.currentTarget).val();\n                var maxQty = data.qty_invoiced - data.qty_refunded;\n                if(qty == '' || isNaN(qty) || parseInt(qty) !== parseFloat(qty) || parseFloat(qty)<0 || parseFloat(qty)>maxQty){\n                    qty = maxQty;\n                }\n                $(event.currentTarget).val(qty);\n                this.validateAdditionalAmount();\n            },\n\n            submit: function(data, event){\n                event.target.disabled = true;\n                var self = this;\n                Confirm({\n                    content: $t('Are you sure you want to refund this order?'),\n                    actions: {\n                        confirm: function (confirmEvent) {\n                            confirmEvent.target.disabled = true;\n                            self.submitArray = $('#' + self.formId).serializeArray();\n                            createCreditmemoAction.execute(self.submitArray, self.orderData(), $.Deferred(), self);\n                        },\n                        always: function (confirmEvent) {\n                            event.target.disabled = false;\n                            confirmEvent.stopImmediatePropagation();\n                        }\n                    }\n                });\n            },\n\n            canRefundByStorecredit: function(){\n                var moduleEnable = Helper.isStoreCreditEnable();\n                return (moduleEnable);\n            },\n            saveCreditAmount: function(data, event){\n                var amount = Helper.toBasePrice(Helper.toNumber(event.target.value));\n                var maxCreditAmount = this.maxCreditAmount();\n                var maxCreditAmountFormated = Helper.convertAndFormatPrice(maxCreditAmount);\n                if(amount > maxCreditAmount){\n                    amount = maxCreditAmount;\n                    Helper.alert('warning', 'Message', 'Maximum credit amount to refund is '+maxCreditAmountFormated);\n                }\n                this.orderData().credit_amount_to_refund = amount;\n                amount = Helper.convertAndFormatWithoutSymbol(amount);\n                this.creditAmount(amount);\n            },\n            saveGiftcardAmount: function(data, event){\n                var amount = Helper.toBasePrice(Helper.toNumber(event.target.value));\n                amount = (amount > 0)?amount:0;\n                var maxGiftcardAmount = this.maxGiftcardAmount();\n                var giftcardAmount = Helper.convertAndFormatPrice(maxGiftcardAmount);\n                if(amount > maxGiftcardAmount){\n                    amount = maxGiftcardAmount;\n                    Helper.alert('warning', 'Message', 'Maximum gift voucher amount to refund is '+giftcardAmount);\n                }\n                this.orderData().giftcard_amount_to_refund = amount;\n                amount = Helper.convertAndFormatWithoutSymbol(amount);\n                this.giftcardAmount(amount);\n            },\n            validateAdditionalAmount: function(){\n                var self = this;\n                var inputs = $(\"input[name^='items'].refund-input-qty\");\n                if(inputs.length > 0){\n                    var maxCredit = 0\n                    var maxGiftcard = 0;\n                    var items = this.orderData().items;\n                    $.each(inputs, function(){\n                        var qty = this.value;\n                        var itemid = this.getAttribute('itemid');\n                        if(itemid){\n                            var item = self.getOrderItemById(itemid);\n                            if(item){\n                                var credit = item.base_price_incl_tax * item.qty_ordered  - item.base_discount_amount;\n                                // if(window.webposConfig['tax/calculation/price_includes_tax'] == 0){\n                                //     credit += item.base_tax_amount;\n                                // }\n                                if (item.base_gift_voucher_discount) {\n                                    credit -= item.base_gift_voucher_discount;\n                                }\n                                if (item.rewardpoints_base_discount) {\n                                    credit -= item.rewardpoints_base_discount;\n                                }\n                                credit = (qty / item.qty_ordered) * credit;\n                                maxCredit += credit;\n\n                                if(Helper.isGiftCardEnable() && item.base_gift_voucher_discount){\n                                    var giftcard = (qty/item.qty_ordered)*item.base_gift_voucher_discount;\n                                    maxGiftcard += giftcard;\n                                }\n                            }\n                        }\n                    });\n                    if(Helper.isStoreCreditEnable()) {\n                        maxCredit = Helper.convertPrice(maxCredit);\n                        self.maxCreditAmount(Helper.correctPrice(maxCredit));\n                    }\n                    if(Helper.isGiftCardEnable()) {\n                        maxGiftcard = Helper.convertPrice(maxGiftcard);\n                        self.maxGiftcardAmount(Helper.correctPrice(maxGiftcard));\n                    }\n                }else{\n                    if(Helper.isStoreCreditEnable()) {\n                        var maxAmount = (self.orderData())?self.orderData().base_customercredit_discount:0;\n                        maxAmount = (maxAmount)?Helper.correctPrice(Helper.convertPrice(maxAmount)):0;\n                        self.maxCreditAmount(maxAmount);\n                    }\n                    if(Helper.isGiftCardEnable()) {\n                        var maxAmount = (self.orderData())?self.orderData().base_gift_voucher_discount:0;\n                        maxAmount = (maxAmount)?Helper.correctPrice(Helper.convertPrice(maxAmount)):0;\n                        self.maxGiftcardAmount(maxAmount);\n                    }\n                }\n            },\n            getOrderItemById: function(itemId){\n                var items = this.orderData().items;\n                if(itemId && items.length > 0) {\n                    var itemFound = ko.utils.arrayFirst(items, function (item) {\n                        return item.item_id == itemId;\n                    });\n                    return (itemFound)?itemFound:false;\n                }\n                return false\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/sales/order/list.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'require',\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/view/layout',\n        'mage/translate',\n        'Magestore_Webpos/js/view/base/list/collection-list',\n        'Magestore_Webpos/js/model/sales/order/status',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/helper/staff',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function (require, $, ko, OrderFactory, ViewManager, $t,\n              listAbstract,\n              orderStatus, eventManager,\n              priceHelper, datetimeHelper, staffHelper,\n              Helper) {\n        \"use strict\";\n\n        var hadObserver = ko.observable(false);\n\n        return listAbstract.extend({\n            items: ko.observableArray([]),\n            model: '',\n            collection: '',\n            isShowHeader: false,\n            isSearchable: true,\n            pageSize: 10,\n            curPage: 1,\n            selectedOrder: ko.observable(null),\n            searchKey: '',\n            groupDays: [],\n            isOnline: true,\n            currentItemIsExist: false,\n            statusObject: orderStatus.getStatusObject(),\n            statusBtn: '.wrap-status-orders ul li',\n            statusArray: [],\n            statusArrayDefault: orderStatus.getStatusArray(),\n            viewPermission: [],\n            isFirstLoad: true,\n            isSearching: ko.observable(false),\n            defaults: {\n                template: 'Magestore_Webpos/sales/order/list',\n            },\n\n            initialize: function () {\n                this._super();\n                this.render();\n                if(hadObserver() == false){\n                    hadObserver(true);\n                    this.listenMenuShowContainerAfterEvent();\n                }\n            },\n\n            _processResponse: function (response) {\n                var self = this;\n                var items = [];\n                var orderList = response.items;\n                var dayIndex = -1;\n                this.currentItemIsExist = false;\n                $.each(orderList, function (index, value) {\n                    var createdAt =  new Date(value.created_at.split(' ').join('T'));\n                    var day = createdAt.toLocaleDateString(); \n                    if (self.groupDays.indexOf(day.toString()) == -1) {\n                        dayIndex++;\n                        self.groupDays.push(day);\n                        items[dayIndex] = {};\n                        items[dayIndex].day = day;\n                        items[dayIndex].orderItems = [];\n                        items[dayIndex].orderItems.push(value);\n                    } else {\n                        if (items[self.groupDays.indexOf(day.toString())]) {\n                            items[self.groupDays.indexOf(day.toString())].orderItems.push(value);\n                        } else {\n                            items[self.groupDays.indexOf(day.toString())] = {};\n                            items[self.groupDays.indexOf(day.toString())].day = day;\n                            items[self.groupDays.indexOf(day.toString())].orderItems = [];\n                            items[self.groupDays.indexOf(day.toString())].orderItems.push(value);\n                        }\n                    }\n                    if (self.selectedOrder() == value.entity_id) {\n                        self.currentItemIsExist = true;\n                    }\n                });\n                if (!this.currentItemIsExist)\n                    this.loadItem(orderList[0]);\n                return items;\n            },\n\n            _prepareItems: function () {\n                var self = this;\n                this.startLoading();\n                if(self.isSearching()){\n                    return false;\n                }\n                self.isSearching(true);\n                this.groupDays = [];\n                var mode = (Helper.isUseOnline('orders'))?'online':'offline';\n                this.collection = OrderFactory.get().setMode(mode).getCollection().reset();\n                if (this.viewPermission.length == 0) {\n                    this.setItems([]);\n                    self.isSearching(false);\n                    return;\n                }\n                if (this.searchKey)\n                    this.collection.addFieldToFilter(\n                        [\n                            ['increment_id', '%'+this.searchKey.toLowerCase()+'%', 'like'],\n                            ['customer_email', '%'+this.searchKey.toLowerCase()+'%', 'like'],\n                            ['customer_firstname', '%'+this.searchKey.toLowerCase()+'%', 'like'],\n                            ['customer_lastname', '%'+this.searchKey.toLowerCase()+'%', 'like'],\n                            ['customer_fullname', '%'+this.searchKey.toLowerCase()+'%', 'like']\n                        ]\n                    );\n                if (this.statusArray.length > 0)\n                    this.collection.addFieldToFilter('status', this.statusArray, 'in');\n                else\n                    this.collection.addFieldToFilter('status', this.statusArrayDefault, 'in');\n                if (this.viewPermission.indexOf('manage_all_order') >= 0) {\n                } else {\n                    if(this.viewPermission.indexOf('manage_order_me') >= 0 && this.viewPermission.indexOf('manage_order_location') >= 0)\n                        this.collection.addFieldToFilter(\n                            [\n                                ['webpos_staff_id', staffHelper.getStaffId(), 'eq'],\n                                ['location_id', window.webposConfig.locationId, 'eq'],\n                            ] \n                        );\n                    else if (this.viewPermission.indexOf('manage_order_me') >= 0)\n                        this.collection.addFieldToFilter('webpos_staff_id', staffHelper.getStaffId(), 'eq');\n                    else if (this.viewPermission.indexOf('manage_order_location') >= 0)\n                        this.collection.addFieldToFilter('location_id', window.webposConfig.locationId, 'eq');\n                }\n\n                this.collection.setOrder('created_at', 'DESC');\n                this.collection.setPageSize(this.pageSize).setCurPage(this.curPage);\n                var deferred = $.Deferred();\n                this.collection.load(deferred);\n                deferred.done(function (response) {\n                    self.isOnline = true;\n                    var items = self._processResponse(response);\n                    self.items(items);\n                    self.finishLoading();\n                    self.isSearching(false);\n                });\n            },\n\n            lazyload: function (element, event) {\n                var scrollHeight = event.target.scrollHeight;\n                var clientHeight = event.target.clientHeight;\n                var scrollTop = event.target.scrollTop;\n                if (scrollHeight - (clientHeight + scrollTop) <= 0 && this.canLoad() === true) {\n                    this.startLoading();\n                    this.pageSize += 10;\n                    this.refresh = false;\n                    this._prepareItems();\n                }\n            },\n\n            formatDateGroup: function (dateString) {\n                return dateString;\n                var date = \"\";\n                if (!dateString) {\n                    date = new Date();\n                } else {\n                    date = new Date(dateString);\n                }\n                var month = date.getMonth() + 1;\n                if (month < 10) {\n                    month = \"0\" + month;\n                }\n                return date.getDate() + '/' + month + '/' + date.getFullYear();\n            },\n\n            orderSearch: function (data, event) {\n                this.collection.reset();\n                this.searchKey = event.target.value;\n                this._prepareItems();\n            },\n\n            filterStatus: function (data, event) {\n                this.isOnline = false;\n                var el = $(event.currentTarget);\n                if (el.hasClass('selected')) {\n                    el.removeClass('selected');\n                    this.statusArray.splice(this.statusArray.indexOf(el.attr('status')), 1);\n                }\n                else {\n                    el.addClass('selected');\n                    this.statusArray.push(el.attr('status'));\n                }\n                this._prepareItems();\n            },\n\n            resetFilterStatus: function () {\n                var self = this;\n                this.statusArray = [];\n                $.each($(this.statusBtn), function (index, value) {\n                    $(value).removeClass('selected');\n                })\n            },\n\n            loadItem: function (data, event) {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                eventManager.dispatch('sales_order_list_load_order', {'order': data});\n                if (!this.orderViewObject) {\n                    this.orderViewObject = viewManager.getSingleton('view/sales/order/view');\n                }\n                this.orderViewObject.setData(data, this);\n                viewManager.getSingleton('view/sales/order/action').setData(data, this);\n                this.selectedOrder(data ? data.entity_id : null);\n            },\n\n            updateOrderListData: function (item) {\n                var items = this.items();\n                for (var index in items) {\n                    var createdAt = item.created_at;\n                    var createdAt =  new Date(createdAt.split(' ').join('T'));\n                    var day = createdAt.toLocaleDateString();\n                    if (day == items[index].day) {\n                        for (var i in items[index].orderItems) {\n                            if (item.entity_id == items[index].orderItems[i].entity_id) {\n                                items[index].orderItems[i] = item;\n                                this.resetData();\n                                this.setItems(items);\n                                this.loadItem(null);\n                                this.loadItem(item);\n                            }\n                        }\n                    }\n                }\n            },\n\n            getCustomerName: function (data) {\n                if (data.customer_firstname && data.customer_lastname)\n                    return data.customer_firstname + ' ' + data.customer_lastname;\n                if (data.customer_email)\n                    return data.customer_email;\n                if (data.billing_address) {\n                    if (data.billing_address.firstname && data.billing_address.lastname)\n                        return data.billing_address.firstname + ' ' + data.billing_address.lastname;\n                    if (data.billing_address.email)\n                        return data.billing_address.email;\n                }\n\n            },\n\n            getGrandTotal: function (data) {\n                var self = this;\n                var grandTotal = 0;\n                if(window.webposConfig.currentCurrencyCode == data.order_currency_code){\n                    grandTotal = data.grand_total;\n                }else{\n                    if(window.webposConfig.currentCurrencyCode == data.base_currency_code){\n                        grandTotal = data.base_grand_total;\n                    } else{\n                        grandTotal = priceHelper.currencyConvert(data.base_grand_total,data.base_currency_code, window.webposConfig.currentCurrencyCode);\n                    }\n                }\n                return priceHelper.formatPrice(grandTotal);\n            },\n\n            getCreatedAt: function (data) {\n                return this.getTime(data.created_at);\n            },\n\n            /**\n             * return a date time with format: 15:26 PM\n             * @param dateString\n             * @returns {string}\n             */\n            getTime: function (dateString) {\n                var currentTime = datetimeHelper.stringToCurrentTime(dateString);\n                return datetimeHelper.getTime(currentTime);\n            },\n\n            render: function () {\n                var self = this;\n                self._render();\n                eventManager.observer('order_pull_after', function (event, data) {\n                    if (data && data.status == 'notsync')\n                        self.loadItem(null);\n                    self.isOnline = false;\n                    self._prepareItems();\n                });\n                eventManager.observer('show_container_after', function (event, id) {\n                    if (id == \"orders_history\") {\n                        self._prepareItems();\n                    }\n                });\n                if (staffHelper.isHavePermission('Magestore_Webpos::manage_order_me'))\n                    this.viewPermission.push('manage_order_me');\n                if (staffHelper.isHavePermission('Magestore_Webpos::manage_order_location'))\n                    this.viewPermission.push('manage_order_location');\n                if (staffHelper.isHavePermission('Magestore_Webpos::manage_all_order'))\n                    this.viewPermission.push('manage_all_order');\n                if (this.isFirstLoad) {\n                    this._prepareItems();\n                    this.isFirstLoad = false;\n                }\n            },\n\n            listenMenuShowContainerAfterEvent: function () {\n                var self = this;\n                eventManager.observer('orders_history_show_container_after', function (event, eventData) {\n                    self.render();\n                });\n            }\n\n        });\n    }\n);","Magestore_Webpos/js/view/sales/order/sendemail.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'mage/translate',\n        'Magestore_Webpos/js/view/sales/order/action',\n        \n    ],\n    function ($, ko, OrderFactory, $t, Component) {\n        \"use strict\";\n\n        return Component.extend({\n            inputId: 'input-send-email-order',\n            isVisible: ko.observable(false),\n            classIn: ko.observable(''),\n            stypeDisplay: ko.observable('none'),\n            invalidEmail: ko.observable(false),\n            customerEmail: ko.observable(''),\n            \n            defaults: {\n                template: 'Magestore_Webpos/sales/order/sendemail',\n            },\n\n            initialize: function () {\n                this._super();\n\n            },\n\n            display: function (isShow) {\n                if(isShow) {\n                    if(!this.orderData() || !this.orderData().customer_email) {\n                        return;\n                    }\n                    this.customerEmail(this.orderData().customer_email);\n                    this.invalidEmail(false);\n                    this.isVisible(true);\n                    this.stypeDisplay('block');\n                    this.classIn('in');\n                    $('.notification-bell').hide();\n                    $('#c-button--push-left').hide();\n                }else {\n                    this.isVisible(false);\n                    this.stypeDisplay('none');\n                    this.classIn('');\n                    $('.notification-bell').show();\n                    $('#c-button--push-left').show();\n                }\n            },\n            \n            sendEmail: function(){\n                var email = $('#'+this.inputId).val();\n                if(email){\n                    if(!this.validateEmail(email)){\n                        this.invalidEmail(true);\n                        return;\n                    }\n                }\n                var jsObject = this.getJsObject();\n                var deferred = $.Deferred();\n                OrderFactory.get().setData(this.orderData()).setMode('online').sendEmail(jsObject, email, deferred);\n                this.invalidEmail(false);\n                this.addNotification($t('An email has been sent for this order!'), true, 'success', 'Success');\n                this.display(false);\n            },\n\n            validateEmail: function(email) {\n                var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                return re.test(email);\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/sales/order/cancel.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'mage/translate',\n        'Magestore_Webpos/js/view/sales/order/action',\n        'Magento_Ui/js/modal/confirm',\n        \n    ],\n    function ($, ko, OrderFactory, $t, Component, Confirm) {\n        \"use strict\";\n\n        return Component.extend({\n            inputId: 'input-add-cancel-comment-order',\n            isVisible: ko.observable(false),\n            classIn: ko.observable(''),\n            stypeDisplay: ko.observable('none'),\n            \n            defaults: {\n                template: 'Magestore_Webpos/sales/order/cancel',\n            },\n\n            initialize: function () {\n                this._super();\n\n            },\n            \n            getCommentObject: function(comment){\n                var today = new Date();\n                var createdAt = today.toISOString().substring(0, 10) + today.toISOString().substring(11, 19);\n                return {\n                    \"comment\": comment,\n                    \"createdAt\": createdAt,\n                    \"entityId\": 0,\n                    \"entityName\": \"string\",\n                    \"isCustomerNotified\": 1,\n                    \"isVisibleOnFront\": 1,\n                    \"parentId\": this.orderData().entity_id,\n                    \"status\": 'canceled',\n                    \"extensionAttributes\": {}\n                }\n            },\n\n            cancel: function() {\n                var self = this;\n                Confirm({\n                    content: $t('Are you sure you want to cancel this order?'),\n                    actions: {\n                        confirm: function () {\n                            var comment = $('#' + self.inputId).val();\n                            if (comment)\n                                var comment = self.getCommentObject(comment);\n                            else\n                                var comment = null;\n                            OrderFactory.get().setData(self.orderData()).setMode('online').cancel(self.orderData(), comment, $.Deferred());\n                            self.addNotification($t('The order has been canceled successfully.'), true, 'success', 'Success');\n                            self.display(false);\n                        },\n                        always: function (event) {\n                            event.stopImmediatePropagation();\n                        }\n                    }\n                });\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/sales/order/print.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/sales/order/action',\n        'Magestore_Webpos/js/model/sales/order/total',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/helper/datetime'\n    ],\n    function ($, ko, Component, orderTotal, Helper, DateHelper) {\n        \"use strict\";\n\n        //noinspection JSDuplicatedDeclaration\n        return Component.extend({\n            containerId: 'container-print-order',\n            totalsCode: ko.observableArray(),\n            configs: ko.observableArray(),\n            customerAdditionalInfomation: ko.observableArray(),\n            defaults: {\n                template: 'Magestore_Webpos/sales/order/print',\n            },\n\n            initialize: function () {\n                this._super();\n                var self = this;\n                ko.pureComputed(function() {\n                    return self.orderData();\n                }).subscribe(function() {\n                    if(self.orderData()){\n                        self.initDefaultData();\n                        $(\"#webpos_sales_order_receipt_barcode\").html(\"\").barcode(self.getOrderData('increment_id'), \"code128\", {\n                            output:\"css\",\n                            bgColor: \"#FFFFFF\",\n                            color: \"#000000\",\n                            barWidth: 1,\n                            barHeight: 20\n                        });\n                    }\n                });\n                \n            },\n\n            initDefaultData: function(){\n                var totalsCode =[\n                    {code:'subtotal',title:'Subtotal', required:true, sortOrder: 1, isPrice: true},\n                    {code:'shipping_amount',title:'Shipping', required:true, sortOrder: 10, isPrice: true},\n                    {code:'tax_amount',title:'Tax', required:true,  sortOrder: 20, isPrice: true},\n                    {code:'discount_amount',title:'Discount', required:false,  sortOrder: 30, isPrice: true},\n                    {code:'grand_total',title:'Grand Total', required:true,  sortOrder: 40, isPrice: true},\n                    {code:'total_paid',title:'Total Paid', required:true,  sortOrder: 50, isPrice: true},\n                    {code:'total_due',title:'Total Due', required:true,  sortOrder: 60, isPrice: true}\n                ];\n                var eventData = {\n                    totals:totalsCode\n                };\n                Helper.dispatchEvent('prepare_receipt_totals', eventData);\n                totalsCode.sort(function(a, b) {\n                    if(!a.sortOrder){\n                        a.sortOrder = 2;\n                    }\n                    if(!b.sortOrder){\n                        b.sortOrder = 2;\n                    }\n                    return parseFloat(a.sortOrder) - parseFloat(b.sortOrder);\n                });\n                this.totalsCode(totalsCode);\n\n                var configs = [\n                    {code:'auto_print',value:window.webposConfig[\"webpos/receipt/general/auto_print\"]},\n                    {code:'font_type',value:window.webposConfig[\"webpos/receipt/content/font_type\"]},\n                    {code:'footer_text',value:window.webposConfig[\"webpos/receipt/content/footer_text\"]},\n                    {code:'header_text',value:window.webposConfig[\"webpos/receipt/content/header_text\"]},\n                    {code:'show_cashier_name',value:window.webposConfig[\"webpos/receipt/optional/show_cashier_name\"]},\n                    {code:'show_comment',value:window.webposConfig[\"webpos/receipt/optional/show_comment\"]},\n                    {code:'show_receipt_logo',value:window.webposConfig[\"webpos/receipt/optional/show_receipt_logo\"]},\n                    {code:'logo',value:window.webposConfig[\"webpos/general/webpos_logo\"]}\n                ];\n                this.configs(configs);\n            },\n            \n            formatPrice: function(string){\n                return Helper.formatPrice(string);\n            },\n\n            getConfigData: function(code){\n                if(this.configs()){\n                    var config = ko.utils.arrayFirst(this.configs(), function(config){\n                        return (config && config.code == code);\n                    });\n                    if(config){\n                        return config.value;\n                    }\n                }\n                return \"\";\n            },\n\n            hasRefundAmount: function(){\n                return (this.getOrderData('total_refunded')>0)?true:false;\n            },\n\n            getRefundAmount: function(){\n                return this.getOrderData('total_refunded')+\" \"+this.getOrderData('total_refunded');\n            },\n            \n            getOrderData: function (key) {\n                var self = this;\n                var data = false;\n                if(self.orderData()){\n                    data = self.orderData();\n                    if(key){\n                        if(typeof data[key] != \"undefined\"){\n                            data = data[key];\n                        }else{\n                            data = \"\"\n                        }\n                    }\n                }\n                return data;\n            },\n            isAutoPrint: function(){\n                return (this.getConfigData('auto_print') == 1)?true:false;\n            },\n            getFont: function(){\n                return this.getConfigData('font_type');\n            },\n            getFooterHtml: function(){\n                return this.getConfigData('footer_text');\n            },\n            getHeaderHtml: function(){\n                return this.getConfigData('header_text');\n            },\n            hasHeaderHtml: function(){\n                return (this.getConfigData('header_text'))?true:false;\n            },\n            isShowCashierName: function(){\n                return (this.getConfigData('show_cashier_name')== 1)?true:false;\n            },\n            isShowComment: function(){\n                return (this.getConfigData('show_comment') == 1 && this.getComment())?true:false;\n            },\n            isShowLogo: function(){\n                return (this.getConfigData('show_receipt_logo')== 1)?true:false;\n            },\n            getLogoPath: function(){\n                return this.getConfigData('logo');\n            },\n            getIncrementId: function(){\n                return \"#\"+this.getOrderData('increment_id');\n            },\n            getCreatedDate: function(){\n                return DateHelper.getDate(this.getOrderData('created_at'));\n            },\n            getCashierName: function(){\n                return this.getOrderData('webpos_staff_name');\n            },\n            getCreatedTime: function(){\n            \tvar createdAt = this.getOrderData('created_at');\n                var currentTime = DateHelper.stringToCurrentTime(createdAt);\n                return DateHelper.getTime(currentTime);\n            },\n            getComment: function(){\n                return this.getOrderData('customer_note');\n            },\n            getShipping: function(){\n                return this.getOrderData('shipping_description');\n            },\n            hasShipping: function(){\n                return (this.getOrderData('shipping_amount')>0)?true:false;\n            },\n            getCustomerName: function(){\n                return this.getOrderData('customer_firstname')+\" \"+this.getOrderData('customer_lastname');\n            },\n            hasCustomerName: function(){\n                return (this.getOrderData('customer_firstname') || this.getOrderData('customer_lastname'))?true:false;\n            },\n            getWebposChange: function(){\n                return this.getOrderData('webpos_change')+\" \"+this.getOrderData('webpos_change');\n            },\n            hasWebposChange: function(){\n                return (this.getOrderData('webpos_change')>0)?true:false;\n            },\n            getPayment: function(){\n                var payments = [];\n                if(this.getOrderData('webpos_order_payments') && this.getOrderData('webpos_order_payments').length > 0){\n                    $.each(this.getOrderData('webpos_order_payments'), function(index, payment) {\n                        if(payment.payment_amount > 0){\n                            payments.push(payment);\n                        }\n                    });\n                }\n                return payments;\n            },\n            hasPayment: function(){\n                return (this.getPayment() && this.getPayment().length >0)?true:false;\n            },\n            getItems: function(){\n                return this.getOrderData('items');\n            },\n            getOrderTotals: function(){\n                var self = this;\n                var totals = [];\n                if(self.totalsCode() && self.totalsCode().length > 0){\n                    $.each(self.totalsCode(), function(index, data) {\n                        var amount = self.getOrderData(data.code);\n                        if(amount || (data.required && data.required == true)){\n                            var amount = self.getOrderData(data.code);\n                            var value = (data.isPrice == false)?(amount +' '+data.valueLabel):self.formatPrice(amount);\n                            if(data.code == 'discount_amount' &&\n                                (self.getOrderData('discount_description') || self.getOrderData('coupon_code'))){\n                                var total = {\n                                    'label':data.title + ' ('+self.getOrderData('discount_description')+')',\n                                    'value':value\n                                };\n                            }else{\n                                var total = {\n                                    'label':data.title,\n                                    'value':value\n                                };\n                            }\n                            totals.push(total);\n                        }\n                    });\n                }\n                return totals;\n            }\n            \n        });\n    }\n);","Magestore_Webpos/js/view/sales/order/comment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'mage/translate',\n        'Magestore_Webpos/js/view/sales/order/action',\n        \n    ],\n    function ($, ko, OrderFactory, $t, Component) {\n        \"use strict\";\n\n        return Component.extend({\n            inputId: 'input-add-comment-order',\n            isVisible: ko.observable(false),\n            classIn: ko.observable(''),\n            stypeDisplay: ko.observable('none'),\n            \n            defaults: {\n                template: 'Magestore_Webpos/sales/order/comment',\n            },\n\n            initialize: function () {\n                this._super();\n            },\n            \n            getCommentObject: function(comment){\n                var today = new Date();\n                var createdAt = today.toISOString().substring(0, 10) + today.toISOString().substring(11, 19);\n                return {\n                    \"statusHistory\": {\n                        \"comment\": comment,\n                        \"createdAt\": createdAt,\n                        \"entityId\": 0,\n                        \"entityName\": \"string\",\n                        \"isCustomerNotified\": 1,\n                        \"isVisibleOnFront\": 1,\n                        \"parentId\": this.orderData().entity_id,\n                        \"status\": this.orderData().status,\n                        \"extensionAttributes\": {}\n                    }\n                }\n            },\n\n            addComment: function(){\n                var self = this;\n                var comment = $('#'+this.inputId).val();\n                if(comment){\n                    var comment = this.getCommentObject(comment);\n                    OrderFactory.get().setData(this.orderData()).setMode('online').addComment(this.orderData(), comment, $.Deferred());\n                    this.addNotification($t('Add order comment successfully!'), true, 'success', 'Success');\n                    this.display(false);\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/sales/order/hold-list.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/view/layout',\n        'mage/translate',\n        'Magestore_Webpos/js/view/base/list/collection-list',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/datetime',\n        \n    ],\n    function ($, ko, OrderFactory, ViewManager, $t, listAbstract, Event, priceHelper, datetimeHelper) {\n        \"use strict\";\n\n        return listAbstract.extend({\n            items: ko.observableArray([]),\n            collection: '',\n            isShowHeader: false,\n            isSearchable: true,\n            pageSize: 100,\n            curPage: 1,\n            selectedOrder: ko.observable(null),\n            searchKey: '',\n            groupDays: [],\n            statusObject: ko.observableArray([\n                {statusClass: 'pending', statusTitle: 'Pending', statusLabel: 'Pe'},\n                {statusClass: 'processing', statusTitle: 'Processing', statusLabel: 'Pr'},\n                {statusClass: 'complete', statusTitle: 'Complete', statusLabel: 'Co'},\n                {statusClass: 'canceled', statusTitle: 'Canceled', statusLabel: 'Ca'},\n                {statusClass: 'closed', statusTitle: 'Closed', statusLabel: 'Cl'},\n                {statusClass: 'notsync', statusTitle: 'Not sync', statusLabel: 'Ns'},\n                {statusClass: 'onhold', statusTitle: 'Not sync', statusLabel: 'Ho'}\n            ]),\n            statusBtn: '.wrap-status-orders ul li',\n            statusArray: ['onhold', 'holded'],\n            \n            defaults: {\n                template: 'Magestore_Webpos/sales/order/hold-list',\n            },\n\n            initialize: function () {\n                this._super();\n                this.listenMenuShowContainerAfterEvent();\n            },\n            \n            _processResponse: function(response){\n                var self = this;\n                var items = [];\n                var orderList = response.items;\n                var dayIndex = -1;\n                $.each(orderList, function(index,value){\n                    if(index==0)\n                        if(value)\n                            self.loadItem(value);\n                    var createdAt = value.created_at;\n                    var day = createdAt.split(' ')[0];\n                    if(self.groupDays.indexOf(day)==-1){\n                        dayIndex++;\n                        self.groupDays.push(day);\n                        items[dayIndex] = {};\n                        items[dayIndex].day = day;\n                        items[dayIndex].orderItems = [];\n                        items[dayIndex].orderItems.push(value);\n                    }else{\n                        items[self.groupDays.indexOf(day)].orderItems.push(value);\n                    }\n                });\n                return items;\n            },\n            \n            _prepareItems: function () {\n                var self = this;\n                this.resetData();\n                this.groupDays = [];\n                this.collection = OrderFactory.get().setMode('offline').getCollection();\n                if(this.searchKey)\n                    this.collection.addFieldToFilter(\n                        [\n                            ['increment_id', this.searchKey, 'like'],\n                            ['customer_email', this.searchKey, 'like'],\n                            ['customer_firstname', this.searchKey, 'like'],\n                            ['customer_lastname', this.searchKey, 'like'],\n                            ['customer_telephone', this.searchKey, 'like']\n                        ]\n                    ); \n                this.collection.addFieldToFilter('status', this.statusArray, 'in');\n                this.collection.setOrder('entity_id', 'DESC');\n                var deferred = $.Deferred();\n                this.collection.load(deferred);\n                deferred.done(function(response){\n                    var items = self._processResponse(response);\n                    self.setItems(items);\n                    if(items.length == 0){\n                        ViewManager.getSingleton('view/sales/order/hold-view').orderData('');\n                    }\n                });\n            },\n\n            orderSearch: function(data, event){\n                this.collection.reset();\n                this.searchKey = event.target.value;\n                this._prepareItems();\n            },\n\n            filterStatus: function(data, event){\n                var el = $(event.currentTarget);\n                if(el.hasClass('selected')) {\n                    el.removeClass('selected');\n                    this.statusArray.splice(this.statusArray.indexOf(el.attr('status')), 1);\n                }\n                else {\n                    el.addClass('selected');\n                    this.statusArray.push(el.attr('status'));\n                }\n                this._prepareItems();\n            },\n\n            resetFilterStatus: function(){\n                var self = this;\n                $.each($(this.statusBtn), function(index, value){\n                    $(value).addClass('selected');\n                    self.statusArray.splice(self.statusArray.indexOf($(value).attr('status')), 1);\n                    self.statusArray.push($(value).attr('status'));\n                })\n            },\n\n            loadItem: function(data, event){\n                ViewManager.getSingleton('view/sales/order/hold-view').setData(data, this);\n                this.selectedOrder(data.entity_id);\n            },\n\n            updateOrderListData: function (item) {\n                var items = this.items();\n                for (var index in items){\n                    var createdAt = item.created_at;\n                    var day = createdAt.split(' ')[0];\n                    if(day == items[index].day){\n                        for(var i in items[index].orderItems){\n                            if(item.entity_id == items[index].orderItems[i].entity_id) {\n                                items[index].orderItems[i] = item;\n                                this.resetData();\n                                this.setItems(items);\n                                this.loadItem(item);\n                            }\n                        }\n                    }\n                }\n            },\n\n            formatPrice: function(price){\n                return priceHelper.formatPrice(price);\n            },\n            \n            getCustomerName: function(data){\n                if(data.customer_firstname && data.customer_lastname)\n                    return data.customer_firstname + ' ' + data.customer_lastname;\n                return data.customer_email;\n            },\n\n            getGrandTotal: function(data){\n                return priceHelper.convertAndFormat(data.base_grand_total);\n            },\n\n            getCreatedAt: function(data){\n                return this.getTime(data.created_at);\n            },\n\n            /**\n             * return a date time with format: 15:26 PM\n             * @param dateString\n             * @returns {string}\n             */\n            getTime: function(dateString) {\n                return datetimeHelper.getTime(dateString);\n            },\n            \n            render: function() {\n                this._render();\n            },\n            \n            listenMenuShowContainerAfterEvent: function () {\n                var self = this;\n                Event.observer('on_hold_orders_show_container_after', function (event, eventData) {\n                    self.render();\n                });\n            }  \n            \n        });\n    }\n);","Magestore_Webpos/js/view/sales/order/shipment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'mage/translate',\n        'Magestore_Webpos/js/view/sales/order/action',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/action/sales/order/shipment/create',\n        'Magento_Ui/js/modal/confirm',\n        \n    ],\n    function ($, ko, OrderFactory, $t, Component, eventmanager, createShipmentAction, Confirm) {\n        \"use strict\";\n\n        return Component.extend({\n            isVisible: ko.observable(false),\n            classIn: ko.observable(''),\n            stypeDisplay: ko.observable('none'),\n            formId: 'shipment-popup-form',\n            submitArray: [],\n            submitData: {\n                \"entity\":{\n                    \"orderId\": 0,\n                    \"emailSent\": 0,\n                    \"items\": [],\n                    \"tracks\": [],\n                    \"comments\": []\n                }\n            },\n            items: {},\n            comment: {},\n            track: {},\n\n            defaults: {\n                template: 'Magestore_Webpos/sales/order/shipment',\n            },\n\n            initialize: function () {\n                var self = this;\n                this._super();\n                eventmanager.observer('sales_order_shipment_afterSave', function(event, data){\n                    if(data.response && data.response.entity_id>0){\n                        var deferedSave = $.Deferred();\n                        OrderFactory.get().setData(data.response).setMode('offline').save(deferedSave);\n                        self.parentView().updateOrderListData(data.response);\n                    }\n                });\n            },\n\n            validateQty: function(data, event){\n                var qty = event.target.value;\n                var maxQty = data.qty_ordered - data.qty_shipped - data.qty_refunded - data.qty_canceled;\n                if(qty=='')\n                    qty = maxQty;\n                if(isNaN(qty) || parseFloat(qty)<0 || parseFloat(qty)>maxQty)\n                    qty = maxQty;\n                event.target.value = qty;\n            },\n            \n            submit: function(){\n                var self = this;\n                Confirm({\n                    content: $t('Are you sure you want to ship this order?'),\n                    actions: {\n                        confirm: function () {\n                            self.submitArray = $('#'+self.formId).serializeArray();\n                            createShipmentAction.execute(self.submitArray, self.orderData(), $.Deferred(), self);\n                        },\n                        always: function (event) {\n                            event.stopImmediatePropagation();\n                        }\n                    }\n                });\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/sales/order/view/payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'require',\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/checkout/payment-factory',\n        'Magestore_Webpos/js/view/layout',\n        'mage/translate',\n        'Magestore_Webpos/js/view/base/list/collection-list',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/action/sales/order/payment/create',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_Webpos/js/helper/price',\n        'Magento_Ui/js/modal/confirm',\n        'Magestore_Webpos/js/view/checkout/checkout/renderer/payment-factory',\n    ],\n    function (require, $, ko, PaymentFactory, ViewManager, $t, colGrid, eventmanager, createPaymentAction, Alert, PriceHelper, Confirm, RenderPaymentFactory) {\n        \"use strict\";\n\n        return colGrid.extend({\n            items: ko.observableArray([]),\n            columns: ko.observableArray([]),\n            isVisible: ko.observable(false),\n            classIn: ko.observable(''),\n            stypeDisplay: ko.observable('none'),\n            formId: 'payment_popup_form',\n            addMorePaymentBtn: 'add_more_payment_btn',\n            morePaymentFormId: 'order_more_payment_container',\n            isShowMorePayment: ko.observable(false),\n            orderData: ko.observable(null),\n            parentView: ko.observable(''),\n            filterAttribute: 'code',\n            selectedPayments: ko.observableArray([]),\n            currentTotal: ko.observable(),\n            baseRemainTotal: ko.observable(),\n            remainTotalValue: ko.observable(),\n            remainTotal: ko.observable(''),\n            isAllPaymentSelected: ko.observable(true),\n            baseTotalDue: 0,\n            totalDue: 0,\n\n            defaults: {\n                template: 'Magestore_Webpos/sales/order/view/payment',\n                templatePaymentSelected: 'Magestore_Webpos/sales/order/view/payment/payment_selected',\n                templatePaymentList: 'Magestore_Webpos/sales/order/view/payment/payment_list',\n                templatePaymentListPopup: 'Magestore_Webpos/sales/order/view/payment/payment_list_popup'\n            },\n            initialize: function () {\n                var self = this;\n                this._super();\n                this._render();\n                this._prepareItems();\n                ko.pureComputed(function () {\n                    return self.orderData();\n                }).subscribe(function () {\n                    if (self.orderData()) {\n                        self.selectedPayments([]);\n                        self.isShowMorePayment(false);\n                        self.isAllPaymentSelected(false);\n                        self.totalDue = self.orderData().total_due ? self.orderData().total_due : 0\n                        self.baseTotalDue = self.orderData().base_total_due ? self.orderData().base_total_due : 0\n                        self.baseRemainTotal(self.baseTotalDue);\n                        if(window.webposConfig.currentCurrencyCode == self.orderData().order_currency_code){\n                            self.remainTotalValue(self.totalDue);\n                        }else{\n                            if(window.webposConfig.currentCurrencyCode == self.orderData().base_currency_code){\n                                self.remainTotalValue(self.baseTotalDue);\n                                self.totalDue = self.baseTotalDue;\n                            } else{\n                                var remainValue = PriceHelper.currencyConvert(self.baseTotalDue,self.orderData().base_currency_code, window.webposConfig.currentCurrencyCode);\n                                self.remainTotalValue(remainValue);\n\n                                var totalDue = PriceHelper.currencyConvert(self.baseTotalDue,self.orderData().base_currency_code, window.webposConfig.currentCurrencyCode);\n                                self.totalDue = totalDue;\n                            }\n                        }\n                        self.remainTotal(PriceHelper.formatPrice(self.remainTotalValue()));\n                        self._prepareCollection();\n                        self.showActivePayments();\n                    }\n                    ;\n                });\n            },\n\n            display: function (isShow) {\n                if (isShow) {\n                    this.isVisible(true);\n                    this.stypeDisplay('block');\n                    this.classIn('in');\n                    $('.notification-bell').hide();\n                    $('#c-button--push-left').hide();\n\n                } else {\n                    this.isVisible(false);\n                    this.stypeDisplay('none');\n                    this.classIn('');\n                    $('.notification-bell').show();\n                    $('#c-button--push-left').show();\n                }\n            },\n\n            resetViewData: function (data) {\n                this.orderData(null);\n                this.parentView().updateOrderListData(data);\n            },\n\n            _prepareCollection: function () {\n                this.filterAttribute = 'code';\n                this.collection = PaymentFactory.get().setMode('offline').getCollection().addFieldToFilter('type', 0, 'eq');\n\n            },\n\n            _prepareColumns: function () {\n                this.addColumn({\n                    headerText: \"Title\",\n                    rowText: \"title\",\n                    renderer: RenderPaymentFactory.get()\n                });\n            },\n\n            setPaymentMethod: function (data, event) {\n                this.addPayment(data);\n            },\n\n            addPayment: function (data) {\n                var self = this;\n                this.isAllPaymentSelected(true);\n                $.each(self.items(), function (index, item) {\n                    if (item.code == data.code) {\n                        item.hide = true;\n                    }\n                    if (typeof item.hide == 'undefined' || !item.hide) {\n                        self.isAllPaymentSelected(false);\n                    }\n                });\n                this.selectedPayments.push({\n                    id: this.selectedPayments().length,\n                    code: data.code,\n                    iconClass: \"icon-iconPOS-payment-\" + data.code,\n                    title: data.title,\n                    price: data.price,\n                    type: data.type,\n                    is_pay_later: data.is_pay_later,\n                    is_reference_number: data.is_reference_number,\n                    cart_total: this.remainTotalValue(),\n                    base_cart_total: this.baseRemainTotal(),\n                    paid_amount: this.remainTotalValue(),\n                    base_paid_amount: this.baseRemainTotal(),\n                    cart_total_formated: PriceHelper.formatPrice(this.remainTotalValue()),\n                });\n                this.reCalculateTotal();\n            },\n\n            editReferenceNumber: function (data, event) {\n                var seletctedId = data.id;\n                this.selectedPayments()[seletctedId].reference_number = event.target.value;\n            },\n\n            editPaymentPrice: function (data, event) {\n                var price = Math.abs(PriceHelper.toNumber(event.target.value));\n                var selectedId = data.id;\n                event.target.value = PriceHelper.formatPrice(price);\n                this.selectedPayments()[selectedId].base_cart_total = PriceHelper.toBasePrice(price);\n                this.selectedPayments()[selectedId].cart_total = price;\n                this.selectedPayments()[selectedId].base_paid_amount = PriceHelper.toBasePrice(price);\n                this.selectedPayments()[selectedId].paid_amount = price;\n                this.reCalculateTotal(selectedId);\n            },\n\n            removeSelectedPayment: function (data, event) {\n                var self = this;\n                this.selectedPayments.remove(data);\n                this.isAllPaymentSelected(false);\n                $.each(self.items(), function (index, item) {\n                    if (item.code == data.code) {\n                        item.hide = false;\n                    }\n                });\n                this.reCalculateTotal();\n                this.showActivePayments();\n                this.isShowMorePayment(false);\n            },\n\n            reCalculateTotal: function (selectedId) {\n                var currentTotal = 0;\n                var currentBaseTotal = 0;\n                $.each(this.selectedPayments(), function (index, item) {\n                    currentTotal += PriceHelper.toNumber(item.cart_total);\n                    currentBaseTotal += PriceHelper.toNumber(item.base_cart_total);\n                });\n                this.currentTotal(currentTotal);\n                this.remainTotalValue(this.totalDue - currentTotal);\n                this.baseRemainTotal(this.baseTotalDue - currentBaseTotal);\n                if(this.remainTotalValue() < 0){\n                    this.remainTotal(PriceHelper.formatPrice(-this.remainTotalValue()));\n                }else{\n                    this.remainTotal(PriceHelper.formatPrice(this.remainTotalValue()));\n                }\n                if (selectedId && this.remainTotalValue() < 0) {\n                    this.selectedPayments()[selectedId].paid_amount += this.remainTotalValue();\n                    this.selectedPayments()[selectedId].base_paid_amount += this.baseRemainTotal();\n                };\n                this.checkAddPayment(this.remainTotalValue());\n            },\n\n            checkAddPayment: function (remainTotal) {\n                if (remainTotal > 0) {\n                    $('#' + this.addMorePaymentBtn).prop('disabled', false);\n                } else {\n                    $('#' + this.addMorePaymentBtn).prop('disabled', true);\n                }\n            },\n\n            showActivePayments: function () {\n                if (this.selectedPayments().length > 0)\n                    $('#' + this.addMorePaymentBtn).prop('disabled', false);\n                else\n                    $('#' + this.addMorePaymentBtn).prop('disabled', true);\n            },\n\n            addMorePayment: function () {\n                if (this.isShowMorePayment())\n                    this.isShowMorePayment(false);\n                else\n                    this.isShowMorePayment(true);\n            },\n\n            setPaymentMethodPopup: function (data, event) {\n                this.setPaymentMethod(data, event);\n                this.addMorePayment();\n            },\n\n            formatPrice: function (price) {\n                PriceHelper.formatPrice(\n                    price,\n                    this.orderData().base_currency_code,\n                    window.webposConfig.currentCurrencyCode\n                );\n            },\n\n            submit: function (data, event) {\n                event.target.disabled = true;\n                var self = this;\n                Confirm({\n                    content: $t('Are you sure you want to take payment on this order?'),\n                    actions: {\n                        confirm: function (confirmEvent) {\n                            confirmEvent.target.disabled = true;\n                            createPaymentAction.execute(self.selectedPayments(), self.orderData(), $.Deferred(), self);\n                        },\n                        always: function (confirmEvent) {\n                            event.target.disabled = false;\n                            confirmEvent.stopImmediatePropagation();\n                        }\n                    }\n                });\n\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/shift/shift/shift-detail.js":"/*\r\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\r\n *  See COPYING.txt for license details.\r\n *\r\n */\r\n\r\ndefine(\r\n    [ 'jquery',\r\n        'ko',\r\n        'uiComponent',\r\n        'Magestore_Webpos/js/helper/datetime',\r\n        'Magestore_Webpos/js/helper/staff'\r\n    ],\r\n    function ($, ko, Component, datetimeHelper, staffHelper) {\r\n        \"use strict\";\r\n\r\n        return Component.extend({\r\n            shiftData: ko.observable({}),\r\n            shiftOpenedAt: ko.observable(''),\r\n            isClosedShift: ko.observable(false),\r\n            noSalesSummary: ko.observable('main-content'),\r\n\r\n            defaults: {\r\n                template: 'Magestore_Webpos/shift/shift/shift-detail',\r\n            },\r\n            canMakeAdjustment: ko.pureComputed(function(){\r\n                return (staffHelper.isHavePermission('Magestore_Webpos::manage_shift_adjustment'))?true:false;\r\n            }),\r\n            initialize: function () {\r\n                this._super();\r\n            },\r\n\r\n            setShiftData: function(data){\r\n                this.shiftData(data);\r\n                this.shiftOpenedAt(datetimeHelper.getFullDate(data.opened_at));\r\n                if (data.status == 1){\r\n                    this.isClosedShift(true);\r\n                }\r\n                else {\r\n                    this.isClosedShift(false);\r\n                }\r\n                if(data.sale_summary.length == 0){\r\n                    this.noSalesSummary(\"no-sales-summary main-content\");\r\n                }\r\n                else {\r\n                    this.noSalesSummary(\"main-content\");\r\n                }\r\n            },\r\n            \r\n            afterClosedShift: function () {\r\n                this.isClosedShift(true);\r\n            },\r\n\r\n            afterRenderCashAdjustmentButton: function () {\r\n                $('.footer-shift .btn-make-adjustment').click(function (event) {\r\n                    //var ptop = (event.pageY/2) - 785;\r\n                    var ptop = 150;\r\n                    $(\"#popup-make-adjustment\").addClass('fade-in');\r\n                    $(\"#popup-make-adjustment\").css({top: ptop + 'px'}).fadeIn(350);\r\n                    $(\".wrap-backover\").show();\r\n                    $('.notification-bell').hide();\r\n                    $('#c-button--push-left').hide();\r\n                });\r\n\r\n                $('.wrap-backover').click(function () {\r\n                    $(\".popup-for-right\").hide();\r\n                    $(\".popup-for-right\").removeClass('fade-in');\r\n                    $(\".wrap-backover\").hide();\r\n                    $('.notification-bell').show();\r\n                    $('#c-button--push-left').show();\r\n                });\r\n            },\r\n\r\n            afterRenderCloseButton: function () {\r\n                $('.footer-shift .btn-close-shift').click(function (event) {\r\n                    //var ptop = (event.pageY/2) - 185;\r\n                    var ptop = 150;\r\n                    $(\"#popup-close-shift\").addClass('fade-in');\r\n                    $(\"#popup-close-shift\").css({ top: ptop + 'px'}).fadeIn(350);\r\n                    $(\".wrap-backover\").show();\r\n                    $('.notification-bell').hide();\r\n                    $('#c-button--push-left').hide();\r\n                });\r\n\r\n                $('.wrap-backover').click(function () {\r\n                    $(\".popup-for-right\").hide();\r\n                    $(\".popup-for-right\").removeClass('fade-in');\r\n                    $(\".wrap-backover\").hide();\r\n                    $('.notification-bell').show();\r\n                    $('#c-button--push-left').show();\r\n                });\r\n            },\r\n\r\n            afterRenderZReportButton: function () {\r\n                $('.footer-shift .btn-print').click(function () {\r\n                    var ptop = 10;\r\n                    $(\"#print-shift-popup\").addClass('fade-in');\r\n                    $(\"#print-shift-popup\").css({ top: ptop + 'px'});\r\n                    $(\".wrap-backover\").show();\r\n                    $('.notification-bell').hide();\r\n                    $('#c-button--push-left').hide();\r\n                });\r\n\r\n                $('.wrap-backover').click(function () {\r\n                    $(\".popup-for-right\").hide();\r\n                    $(\".popup-for-right\").removeClass('fade-in');\r\n                    $(\".wrap-backover\").hide();\r\n                    $('.notification-bell').show();\r\n                    $('#c-button--push-left').show();   \r\n                });\r\n            }\r\n\r\n        });\r\n    }\r\n);\r\n","Magestore_Webpos/js/view/shift/shift/close-shift.js":"/*\r\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\r\n *  See COPYING.txt for license details.\r\n *\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'ko',\r\n        'uiComponent',\r\n        'Magestore_Webpos/js/model/shift/cash-transaction',\r\n        'Magestore_Webpos/js/model/shift/shift',\r\n        'Magestore_Webpos/js/helper/price',\r\n        'Magestore_Webpos/js/helper/datetime',\r\n        'Magestore_Webpos/js/action/notification/add-notification',\r\n        'Magestore_Webpos/js/model/event-manager',\r\n        'Magestore_Webpos/js/model/resource-model/magento-rest/shift/shift'\r\n    ],\r\n    function ($, ko, Component, cashTransactionModel, shift, priceHelper, datetimeHelper, notification, Event, shiftOnlineResource) {\r\n        \"use strict\";\r\n\r\n        return Component.extend({\r\n\r\n            shiftData: ko.observable({}),\r\n            balance: ko.observable(''),\r\n            closed_amount: ko.observable(''),\r\n            closed_note: ko.observable(''),\r\n            cash_left: ko.observable(''),\r\n            closedAmountFormatted: ko.observable(''),\r\n            cashLeftFormatted: ko.observable(''),\r\n            keypressWaiting: '',\r\n            cashLeftErrorMessage: ko.observable(''),\r\n            staffId: ko.observable(window.webposConfig.staffId),\r\n            staffName: ko.observable(window.webposConfig.staffName),\r\n            saveOfflineCompleted: ko.observable(0),\r\n\r\n            defaults: {\r\n                template: 'Magestore_Webpos/shift/shift/close-shift',\r\n            },\r\n\r\n            initialize: function () {\r\n                this._super();\r\n\r\n                //recalculate closedAmountFormatted when closed_amount changed.\r\n                this.closedAmountFormatted = ko.pureComputed(function () {\r\n                    this.validateInputAmount();\r\n                    return priceHelper.formatPrice(this.closed_amount());\r\n                }, this);\r\n\r\n                //recalculate cashLeftFormatted when cash_left changed.\r\n                this.cashLeftFormatted = ko.pureComputed(function () {\r\n                    this.validateInputAmount();\r\n                    return priceHelper.formatPrice(this.cash_left());\r\n                }, this);\r\n\r\n            },\r\n\r\n            /**\r\n             * check if cash_left is less than closed amount or not\r\n             * @returns {boolean}\r\n             */\r\n            validateInputAmount: function () {\r\n                if (this.cash_left() > this.closed_amount()) {\r\n                    this.cashLeftErrorMessage(\"Cash left must be less than the Closed amount\");\r\n                    return false;\r\n                }\r\n                else {\r\n                    this.cashLeftErrorMessage(\"\");\r\n                    return true;\r\n                }\r\n            },\r\n\r\n            //set all cash transaction data of the selected shift to Items\r\n            //each transaction is an Item\r\n            setData: function (data) {\r\n                this.setItems(data);\r\n            },\r\n\r\n            //set all information of the selected shift to ShiftData\r\n            //call this funciton from shift-listing\r\n            setShiftData: function (data) {\r\n                this.shiftData(data);\r\n                this.initData();\r\n            },\r\n\r\n            /* update value of the estimated cash in the cash drawer*/\r\n            initData: function () {\r\n                this.balance(this.shiftData().balance);\r\n                this.balance(priceHelper.formatPrice(this.balance()));\r\n            },\r\n\r\n            //get data from the form and call to CashTransaction model then save to database\r\n            closeShift: function () {\r\n                if (!this.validateInputAmount()) {\r\n                    return;\r\n                }\r\n                this.saveOfflineCompleted(0);\r\n                //this.saveOfflineLastTransaction();\r\n                this.saveOfflineShift();\r\n                this.closeForm();\r\n            },\r\n\r\n            /**\r\n             * do some additional task when everything is completed.\r\n             */\r\n            closeCompleted: function () {\r\n                //set the current open shift to null\r\n                window.webposConfig.shiftId = '';\r\n                //clear input value\r\n                this.cash_left('');\r\n                this.closed_amount('');\r\n                this.closed_note('');\r\n\r\n            },\r\n\r\n            /**\r\n             * prepare data to update shift\r\n             * @returns {{}}\r\n             */\r\n            getShiftDataOnline: function () {\r\n                var postData = {};\r\n                var removedValue = priceHelper.toPositiveNumber(this.closed_amount()) - priceHelper.toPositiveNumber(this.cash_left());\r\n                postData.base_currency_code = window.webposConfig.baseCurrencyCode;\r\n                postData.shift_currency_code = window.webposConfig.currentCurrencyCode;\r\n                postData.shift_id = this.shiftData().shift_id;\r\n                postData.entity_id = this.shiftData().entity_id;\r\n                postData.staff_id = priceHelper.toPositiveNumber(this.shiftData().staff_id);\r\n                postData.location_id = priceHelper.toPositiveNumber(this.shiftData().location_id);\r\n                postData.float_amount = priceHelper.toPositiveNumber(this.shiftData().float_amount);\r\n                postData.base_float_amount = priceHelper.currencyConvert(postData.float_amount, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode);\r\n                postData.closed_amount = priceHelper.toPositiveNumber(this.closed_amount());\r\n                postData.base_closed_amount = priceHelper.currencyConvert(postData.closed_amount, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode);\r\n                postData.closed_at = datetimeHelper.getBaseSqlDatetime();\r\n                postData.opened_at = this.shiftData().opened_at;\r\n                postData.closed_note = this.closed_note();\r\n                postData.cash_left = priceHelper.toPositiveNumber(this.cash_left());\r\n                postData.base_cash_left = priceHelper.currencyConvert(postData.cash_left, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode);\r\n                postData.status = 1;\r\n                postData.total_sales = priceHelper.toPositiveNumber(this.shiftData().total_sales);\r\n                postData.base_total_sales = priceHelper.currencyConvert(postData.total_sales, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode);\r\n                postData.balance = priceHelper.toPositiveNumber(this.cash_left());\r\n                postData.base_balance = priceHelper.currencyConvert(postData.balance, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode);\r\n                postData.opened_note = this.shiftData().opened_note;\r\n                postData.cash_added = this.shiftData().cash_added;\r\n                postData.base_cash_added = priceHelper.currencyConvert(postData.cash_added, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode);\r\n                postData.cash_removed = priceHelper.toPositiveNumber(this.shiftData().cash_removed) + removedValue;\r\n                postData.base_cash_removed = priceHelper.currencyConvert(postData.cash_removed, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode);\r\n                postData.cash_sale = priceHelper.toPositiveNumber(this.shiftData().cash_sale);\r\n                postData.base_cash_sale = priceHelper.currencyConvert(postData.cash_sale, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode);\r\n\r\n                return postData;\r\n            },\r\n\r\n            /**\r\n             *\r\n             * @returns {*|{}}\r\n             */\r\n            getShiftDataOffline: function () {\r\n                var postData = this.getShiftDataOnline();\r\n                var lastTransactionData = this.getLastTransactionData();\r\n\r\n                postData.sale_summary = this.shiftData().sale_summary;\r\n                postData.cash_transaction = this.shiftData().cash_transaction;\r\n                if (lastTransactionData.value > 0) {\r\n                    postData.cash_transaction.push(lastTransactionData);\r\n                }\r\n                postData.zreport_sales_summary = this.shiftData().zreport_sales_summary;\r\n                return postData;\r\n            },\r\n\r\n            /**\r\n             *\r\n             */\r\n            saveOfflineShift: function () {\r\n                var self = this;\r\n                var shiftModel = shift();\r\n                var postData = self.getShiftDataOffline();\r\n                var deferred = shiftModel.setData(postData).setMode('offline').update();\r\n                deferred.done(function (response) {\r\n                    if (response) {\r\n                        //show notification\r\n                        //notification('Shift closed! Balance=' + priceHelper.formatPrice(postData.balance) + ', Total Sales='+ priceHelper.formatPrice(postData.total_sales), true, 'success', 'Notice');\r\n                        Event.dispatch('after_closed_shift', response);\r\n                        //self.syncTransaction();\r\n                        self.syncShift();\r\n                    }\r\n                });\r\n            },\r\n\r\n            syncShift: function () {\r\n                var self = this;\r\n                var postData = this.getShiftDataOnline();\r\n                var deferred = $.Deferred();\r\n                shiftOnlineResource().setPush(true).createShift(postData, deferred, \"sync_offline_shift_after\");\r\n                deferred.always(function (response) {\r\n                    self.closeCompleted();\r\n                });\r\n            },\r\n\r\n            /**\r\n             * prepare data for the last transaction: remove cash from cash drawer before closing a shift.\r\n             * @returns {{shift_id: (*|exports.indexes.shift_id|{unique}|schema.shift.indexes.shift_id), location_id: (*|exports.indexes.location_id|{unique}), value: number, base_value: *, note: string, balance: *, base_balance: *, type: string, base_currency_code: *, transaction_currency_code: *, created_at: string}}\r\n             */\r\n            getLastTransactionData: function () {\r\n                var value = priceHelper.toPositiveNumber(this.closed_amount()) - priceHelper.toPositiveNumber(this.cash_left());\r\n                var balance = priceHelper.toPositiveNumber(this.cash_left());\r\n\r\n                var data = {\r\n                    'shift_id': this.shiftData().shift_id,\r\n                    'location_id': priceHelper.toPositiveNumber(this.shiftData().location_id),\r\n                    'value': value,\r\n                    'base_value': priceHelper.currencyConvert(value, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode),\r\n                    'note': 'Remove cash when closed Shift',\r\n                    'balance': balance,\r\n                    'base_balance': priceHelper.currencyConvert(balance, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode),\r\n                    'type': 'remove',\r\n                    'base_currency_code': window.webposConfig.baseCurrencyCode,\r\n                    'transaction_currency_code': window.webposConfig.currentCurrencyCode,\r\n                    'created_at': datetimeHelper.getBaseSqlDatetime()\r\n                };\r\n\r\n                return data;\r\n            },\r\n\r\n            closeForm: function () {\r\n                $(\".popup-for-right\").hide();\r\n                $(\".popup-for-right\").removeClass('fade-in');\r\n                $(\".wrap-backover\").hide();\r\n                $('.notification-bell').show();\r\n                $('#c-button--push-left').show();\r\n            },\r\n\r\n            cashLeftChange: function (data, event) {\r\n                this.cash_left(priceHelper.toNumber(event.target.value));\r\n\r\n            },\r\n\r\n            closedAmountChange: function (data, event) {\r\n                this.closed_amount(priceHelper.toNumber(event.target.value));\r\n            }\r\n        });\r\n    }\r\n);","Magestore_Webpos/js/view/shift/shift/open-shift.js":"/*\r\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\r\n *  See COPYING.txt for license details.\r\n *\r\n */\r\n\r\ndefine(\r\n    [ 'jquery',\r\n        'ko',\r\n        'uiComponent',\r\n        'Magestore_Webpos/js/model/shift/shift',\r\n        'Magestore_Webpos/js/model/shift/current-shift',\r\n        'Magestore_Webpos/js/helper/price',\r\n        'Magestore_Webpos/js/helper/shift',\r\n        'Magestore_Webpos/js/action/notification/add-notification',\r\n        'Magestore_Webpos/js/model/resource-model/magento-rest/shift/shift',\r\n        'Magestore_Webpos/js/helper/datetime',\r\n        'Magestore_Webpos/js/model/event-manager',\r\n    ],\r\n    function ($, ko, Component, shift, currentShift, priceHelper, shiftHelper, notification, onlineResource, datetimeHelper, Event) {\r\n        \"use strict\";\r\n\r\n        return Component.extend({\r\n            float_amount: ko.observable(''),\r\n            opened_note: ko.observable(''),\r\n            locationId: ko.observable(window.webposConfig.locationId),\r\n            shiftId: ko.observable(window.webposConfig.shiftId),\r\n            floatAmountFormatted: ko.observable(''),\r\n            staffId: ko.observable(window.webposConfig.staffId),\r\n            staffName: ko.observable(window.webposConfig.staffName),\r\n\r\n            defaults: {\r\n                template: 'Magestore_Webpos/shift/shift/open-shift',\r\n            },\r\n\r\n            initialize: function () {\r\n                this._super();\r\n\r\n                this.floatAmountFormatted = ko.pureComputed(function () {\r\n\r\n                    return priceHelper.formatPrice(this.float_amount());\r\n                }, this)\r\n            },\r\n\r\n            /**\r\n             * prepare data to update shift to online database using rest Api\r\n             */\r\n\r\n            getOnlineData: function () {\r\n                var postData = {};\r\n                postData.float_amount = priceHelper.toPositiveNumber(this.float_amount());\r\n                postData.base_float_amount = priceHelper.currencyConvert(postData.float_amount, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode);\r\n                postData.balance = priceHelper.toPositiveNumber(this.float_amount());\r\n                postData.base_balance = priceHelper.currencyConvert(postData.balance, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode);\r\n                postData.opened_note = this.opened_note();\r\n                postData.base_currency_code = window.webposConfig.baseCurrencyCode;\r\n                postData.shift_currency_code = window.webposConfig.currentCurrencyCode;\r\n                postData.status = 0;\r\n                postData.staff_id = priceHelper.toPositiveNumber(this.staffId());\r\n                postData.location_id = priceHelper.toPositiveNumber(this.locationId());\r\n                postData.opened_at = datetimeHelper.getBaseSqlDatetime();\r\n                postData.closed_amount = 0;\r\n                postData.base_closed_amount = 0;\r\n                postData.closed_at = datetimeHelper.getBaseSqlDatetime();\r\n                postData.closed_note = \"\";\r\n                postData.cash_left = 0;\r\n                postData.base_cash_left = 0;\r\n                postData.total_sales = 0;\r\n                postData.base_total_sales = 0;\r\n                postData.cash_added = postData.float_amount;\r\n                postData.base_cash_added = postData.base_float_amount;\r\n                postData.cash_removed = 0;\r\n                postData.base_cash_removed = 0;\r\n                postData.cash_sale = 0;\r\n                postData.base_cash_sale = 0;\r\n                return postData;\r\n            },\r\n\r\n            /**\r\n             * get all data of a shift to be store in indexed-db.\r\n             * The data format is like an item in listing page.\r\n             */\r\n            getOfflineData: function () {\r\n                var postData = this.getOnlineData();\r\n                postData['entity_id'] = 0;\r\n                postData['sale_summary'] = [];\r\n                postData['cash_transaction'] = [];\r\n                postData['zreport_sales_summary'] = {grand_total: 0, discount_amount: 0, total_refunded: 0}\r\n                return postData;\r\n            },\r\n\r\n            OpenNewShift: function () {\r\n                \r\n                var self = this;\r\n                var shiftModel = shift();\r\n                var offlineData = self.getOfflineData();\r\n                \r\n                var deferred = shiftModel.setData(offlineData).setMode('offline').update();\r\n                deferred.done(function (response) {\r\n\r\n                    if(response){\r\n                        Event.dispatch('refresh_shift_listing',response);\r\n                        self.syncShift(response.shift_id);\r\n                    }\r\n                });\r\n\r\n                this.closeForm();\r\n                //show notification\r\n                //notification('Shift opened! Float Amount=' + priceHelper.formatPrice(postData.float_amount), true, 'success', 'Notice');\r\n            },\r\n\r\n            syncShift: function (shiftId) {\r\n                var self = this;\r\n                var params = this.getOnlineData();\r\n                params.shift_id = shiftId;\r\n                \r\n                var deferred = $.Deferred();\r\n                onlineResource().setPush(true).createShift(params,deferred, \"open_shift_after\");\r\n                deferred.done(function (response) {\r\n                    //Event.dispatch('sync_offline_shift_after',[{'action':params,'response':response}]);\r\n                    self.clearInput();\r\n\r\n                });\r\n            },\r\n\r\n            closeForm: function () {\r\n                $(\".popup-for-right\").hide();\r\n                $(\".popup-for-right\").removeClass('fade-in');\r\n                $(\".wrap-backover\").hide();\r\n                $('.notification-bell').show();\r\n                $('#c-button--push-left').show();\r\n            },\r\n\r\n            floatAmountChange: function (data,event) {\r\n                this.float_amount(priceHelper.toNumber(event.target.value));\r\n            },\r\n\r\n            //clear input value\r\n            clearInput: function () {\r\n                this.float_amount('');\r\n                this.opened_note('');\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magestore_Webpos/js/view/shift/shift/shift-listing.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/view/base/list/collection-list',\n        'Magestore_Webpos/js/model/shift/shift',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/shift',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/model/staff/current-staff',\n        'Magestore_Webpos/js/model/event-manager',\n        \n    ],\n    function ($, ko, ViewManager, colGrid, shift, priceHelper, shiftHelper, datetimeHelper, CurrentStaff, Event) {\n        \"use strict\";\n\n        return colGrid.extend({\n            items: ko.observableArray([]),\n            columns: ko.observableArray([]),\n            selectedId: ko.observable(null),\n            canOpenShift: ko.observable(true),\n            shiftListingData: ko.observable({}),\n            staffId: ko.observable(window.webposConfig.staffId),\n            hasNoShift: ko.observable(false),\n\n            defaults: {\n                template: 'Magestore_Webpos/shift/shift/shift-listing',\n            },\n            initialize: function () {\n                this.listenMenuClickedEvent();\n                this.isShowHeader = true;\n                this._super();\n                this._render();\n            },\n            _prepareCollection: function () {\n                if (this.collection == null) {\n                    this.collection = shift().getCollection();\n                    this.collection.addFieldToFilter('staff_id', window.webposConfig.staffId, 'eq');\n                }\n            },\n            loadItem: function (data, event) {\n                this.initData(data);\n                this.selectedId(data.shift_id);\n            },\n\n            getSelectedId: function () {\n                return this.selectedId();\n            },\n\n            _prepareItems: function () {\n                var deferred = $.Deferred();\n                var self = this;\n                this.getCollection().setOrder('opened_at', 'DESC').load(deferred);\n                this.startLoading();\n                deferred.done(function (data) {\n                    self.finishLoading();\n                    self.setItems(data.items);\n                    if (data.total_count > 0) {\n                        self.hasNoShift(false);\n                        self.shiftListingData(data);\n                        var checkOpen = shiftHelper.checkHasOpenShift(data.items);\n                        if (checkOpen.hasOpen) {\n                            self.canOpenShift(false);\n                            window.webposConfig.shiftId = checkOpen.shiftId;\n                        }\n                        else {\n                            window.webposConfig.shiftId = '';\n                            self.canOpenShift(true);\n                        }\n                        self.initData(data.items[0]);\n                        self.selectedId(data.items[0].shift_id);\n                    }\n                    else {\n                        self.hasNoShift(true);\n                    }\n\n                });\n            },\n\n            getDateOnly: function (dateString) {\n                var currentTime = datetimeHelper.stringToCurrentTime(dateString);\n                var datetime = this.reFormatDateString(currentTime);\n                return datetimeHelper.getWeekDay(currentTime) + \" \" + datetime.getDate() + \" \" + datetimeHelper.getMonthShortText(currentTime);\n            },\n\n            getTimeOnly: function (dateString) {\n                var currentTime = datetimeHelper.stringToCurrentTime(dateString);\n                var datetime = this.reFormatDateString(currentTime);\n                return datetimeHelper.getTimeOfDay(datetime);\n            },\n\n\n            reFormatDateString: function (dateString) {\n                var date = '';\n                if (typeof dateString === 'string') {\n                    date = new Date(dateString.split(' ').join('T'))\n                } else {\n                    date = new Date(dateString);\n                }\n                return date;\n            },\n\n\n            initData: function (data) {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                viewManager.getSingleton('view/shift/sales-summary/sales-summary').setData(data.sale_summary);\n                viewManager.getSingleton('view/shift/sales-summary/sales-summary').setShiftData(data);\n                viewManager.getSingleton('view/shift/cash-transaction/activity').setData(data.cash_transaction);\n                viewManager.getSingleton('view/shift/cash-transaction/activity').setShiftData(data);\n                viewManager.getSingleton('view/shift/shift/shift-detail').setShiftData(data);\n                viewManager.getSingleton('view/shift/cash-transaction/cash-adjustment').setShiftData(data);\n                viewManager.getSingleton('view/shift/shift/close-shift').setShiftData(data);\n                viewManager.getSingleton('view/shift/sales-summary/zreport').setShiftData(data);\n            },\n\n            afterRenderOpenButton: function () {\n                $('#shift_container .icon-add .icon-iconPOS-add').click(function () {\n                    $(\"#popup-open-shift\").addClass('fade-in');\n                    $(\".wrap-backover\").show();\n                    $('.notification-bell').hide();\n                    $('#c-button--push-left').hide();\n                });\n                $('.wrap-backover').click(function () {\n                    $(\".wrap-backover\").hide();\n                    $('.notification-bell').show();\n                    $('#c-button--push-left').show();\n                });\n            },\n\n            refreshData: function () {\n                this.collection = shift().getCollection();\n                this.collection.addFieldToFilter('staff_id', window.webposConfig.staffId, 'eq');\n                this._prepareItems();\n            },\n\n            listenMenuClickedEvent: function () {\n                var self = this;\n                Event.observer('register_shift_show_container_after', function (event, eventData) {\n                    self.refreshData();\n                });\n            },\n\n            toNumber: function (amount) {\n                return priceHelper.toNumber(amount);\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/shift/sales-summary/zreport.js":"/*\r\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\r\n *  See COPYING.txt for license details.\r\n *\r\n */\r\n\r\ndefine(\r\n    [ 'jquery',\r\n        'ko',\r\n        'uiComponent',\r\n\r\n        'Magestore_Webpos/js/helper/price',\r\n        'Magestore_Webpos/js/helper/datetime',\r\n\r\n\r\n    ],\r\n    function ($, ko, Component,  priceHelper, datetimeHelper) {\r\n        \"use strict\";\r\n\r\n        return Component.extend({\r\n            shiftData:  ko.observable({}),\r\n            openedAtFormatted: ko.observable(''),\r\n            closedAtFormatted: ko.observable(''),\r\n            floatAmountFormatted: ko.observable(0),\r\n            cashLeftFormatted: ko.observable(0),\r\n            closedAmountFormatted: ko.observable(0),\r\n            totalSalesFormatted: ko.observable(0),\r\n            refundFormatted: ko.observable(0),\r\n            discountFormatted: ko.observable(0),\r\n            cashAddedFormatted: ko.observable(0),\r\n            cashRemovedFormatted: ko.observable(0),\r\n            cashSaleFormatted: ko.observable(0),\r\n            giftcardFormatted: ko.observable(0),\r\n            rewardpointsFormatted: ko.observable(0),\r\n            hasGiftcard: ko.observable(false),\r\n            hasRewardPoints: ko.observable(false),\r\n            staffName: ko.observable(window.webposConfig.staffName),\r\n\r\n            defaults: {\r\n                template: 'Magestore_Webpos/shift/sales-summary/zreport',\r\n            },\r\n\r\n            initialize: function () {\r\n                this._super();\r\n            },\r\n            /**\r\n             * return a date time with format: Thursday 4 May, 2016 15:26PM\r\n             * @param dateString\r\n             * @returns {string}\r\n             */\r\n            getFullDatetime: function (dateString) {\r\n                var currentTime = datetimeHelper.stringToCurrentTime(dateString);\r\n                return datetimeHelper.getFullDatetime(currentTime);\r\n            },\r\n            setShiftData: function(data){\r\n                this.shiftData(data);\r\n                \r\n                //init data\r\n                this.openedAtFormatted(this.getFullDatetime(data.opened_at));\r\n                this.closedAtFormatted(this.getFullDatetime(data.closed_at));\r\n                this.floatAmountFormatted(priceHelper.formatPrice(data.float_amount));\r\n                this.closedAmountFormatted(priceHelper.formatPrice(data.closed_amount));\r\n                this.cashLeftFormatted(priceHelper.formatPrice(data.cash_left));\r\n                this.cashAddedFormatted(priceHelper.formatPrice(data.cash_added));\r\n                this.cashRemovedFormatted(priceHelper.formatPrice(data.cash_removed));\r\n                this.cashSaleFormatted(priceHelper.formatPrice(data.cash_sale));\r\n\r\n                //calculate total sales\r\n                var zreport_sales_summary = data.zreport_sales_summary;\r\n\r\n                this.totalSalesFormatted(priceHelper.formatPrice(zreport_sales_summary['grand_total']));\r\n                this.refundFormatted(priceHelper.formatPrice(zreport_sales_summary['total_refunded']));\r\n                this.discountFormatted(priceHelper.formatPrice(zreport_sales_summary['discount_amount']));\r\n                this.giftcardFormatted(priceHelper.formatPrice(zreport_sales_summary['giftvoucher_discount']));\r\n                this.rewardpointsFormatted(priceHelper.formatPrice(zreport_sales_summary['rewardpoints_discount']));\r\n                var giftcardDiscount = parseFloat(zreport_sales_summary['giftvoucher_discount']);\r\n                var rewardpointsDiscount = parseFloat(zreport_sales_summary['rewardpoints_discount']);\r\n                this.hasGiftcard((giftcardDiscount > 0)?true:false);\r\n                this.hasRewardPoints((rewardpointsDiscount > 0)?true:false);\r\n            },\r\n\r\n            getFont: function(){\r\n                return window.webposConfig[\"webpos/receipt/font_type\"];\r\n            },\r\n            printReport: function () {\r\n                var html = $('#zreport-print-content').html();\r\n                var print_window = window.open('', 'print_offline', 'status=1,width=700,height=700');\r\n                print_window.document.write(html);\r\n                print_window.print();\r\n            },\r\n            \r\n            formatPrice: function (value) {\r\n                return priceHelper.formatPrice(value);\r\n            }\r\n\r\n        });\r\n    }\r\n);","Magestore_Webpos/js/view/shift/sales-summary/sales-summary.js":"/*\r\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\r\n *  See COPYING.txt for license details.\r\n *\r\n */\r\n\r\ndefine(\r\n    [ 'jquery',\r\n        'ko',\r\n        'Magestore_Webpos/js/view/base/grid/abstract',\r\n        'Magestore_Webpos/js/helper/price',\r\n    ],\r\n    function ($, ko, listAbstract, priceHelper) {\r\n        \"use strict\";\r\n\r\n        return listAbstract.extend({\r\n            shiftData: ko.observable({}),\r\n            saleSummaryData: ko.observable({}),\r\n            items: ko.observableArray([]),\r\n            columns: ko.observableArray([]),\r\n            total_sales: ko.observable(0),\r\n            paymentMethodClass: ko.observable(null),\r\n            priceFormatter: ko.observable(''),\r\n            hasData: ko.observable(false),\r\n            isNotSync: ko.observable(true),\r\n\r\n            defaults: {\r\n                template: 'Magestore_Webpos/shift/sales-summary/sales-summary',\r\n            },\r\n\r\n            initialize: function () {\r\n\r\n                this._super();\r\n                this._render();\r\n            },\r\n\r\n            setData: function(data){\r\n                if(!data){\r\n                    this.hasData(false);\r\n                    return;\r\n                }\r\n                this.setItems(data);\r\n                if (data.length == 0){\r\n                   this.hasData(false);\r\n                }\r\n                else {\r\n                    this.hasData(true);\r\n                }\r\n            },\r\n\r\n            setShiftData: function(data){\r\n                this.shiftData(data);\r\n                this.total_sales(data.total_sales);\r\n                this.checkSync();\r\n\r\n            },\r\n            generatePaymentCode: function (paymentMethod) {\r\n                return \"icon-iconPOS-payment-\" + paymentMethod;\r\n            },\r\n            \r\n            checkSync: function () {\r\n\r\n                if(priceHelper.toPositiveNumber(this.shiftData().entity_id) > 0){\r\n                    this.isNotSync(false);\r\n                }\r\n                else {\r\n                    this.isNotSync(true);\r\n                }\r\n            },\r\n\r\n            setSyncSuccessful: function () {\r\n                this.isNotSync(false);\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magestore_Webpos/js/view/shift/cash-transaction/activity.js":"/*\r\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\r\n *  See COPYING.txt for license details.\r\n *\r\n */\r\n\r\ndefine(\r\n    [ 'jquery',\r\n        'ko',\r\n        'Magestore_Webpos/js/view/base/grid/abstract',\r\n        'Magestore_Webpos/js/helper/datetime',\r\n        'Magestore_Webpos/js/helper/price',\r\n\r\n\r\n    ],\r\n    function ($, ko, listAbstract, datetimeHelper, priceHelper) {\r\n        \"use strict\";\r\n\r\n        return listAbstract.extend({\r\n            shiftData:  ko.observable({}),\r\n            saleSummaryData: ko.observable({}),\r\n            items: ko.observableArray([]),\r\n            columns: ko.observableArray([]),\r\n            staffName: ko.observable(window.webposConfig.staffName),\r\n\r\n            defaults: {\r\n                template: 'Magestore_Webpos/shift/cash-transaction/activity',\r\n            },\r\n\r\n            initialize: function () {\r\n                this._super();\r\n                this._render();\r\n            },\r\n\r\n\r\n            setData: function(data){\r\n\r\n                this.setItems(data);\r\n            },\r\n\r\n            setShiftData: function(data){\r\n\r\n                this.shiftData(data);\r\n            },\r\n            \r\n            getTransactionSymbol: function (type, value) {\r\n                if(!value){\r\n                    return \"\";\r\n                }\r\n                if(parseInt(value)==0){\r\n                    return \"\";\r\n                }\r\n\r\n\r\n                var symbol = \"+\";\r\n                if(type == \"remove\"){\r\n                    symbol = \"-\";\r\n                }\r\n                return symbol;\r\n            },\r\n\r\n            steveFormatPrice: function (amount) {\r\n                amount = parseFloat(amount);\r\n                return priceHelper.formatPrice(amount);\r\n\r\n            },\r\n            /**\r\n             * return a date time with format: Thursday 4 May, 2016 15:26PM\r\n             * @param dateString\r\n             * @returns {string}\r\n             */\r\n            getFullDatetime: function (dateString) {\r\n                var currentTime = datetimeHelper.stringToCurrentTime(dateString);\r\n                return datetimeHelper.getFullDatetime(currentTime);\r\n            },\r\n        });\r\n    }\r\n);\r\n","Magestore_Webpos/js/view/shift/cash-transaction/cash-adjustment.js":"/*\r\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\r\n *  See COPYING.txt for license details.\r\n *\r\n */\r\n\r\ndefine(\r\n    [\r\n        'jquery',\r\n        'ko',\r\n        'uiComponent',\r\n        'Magestore_Webpos/js/model/shift/cash-transaction',\r\n        'Magestore_Webpos/js/model/shift/shift',\r\n        'Magestore_Webpos/js/helper/price',\r\n        'Magestore_Webpos/js/helper/datetime',\r\n        'Magestore_Webpos/js/model/event-manager',\r\n        'Magestore_Webpos/js/model/resource-model/magento-rest/shift/shift',\r\n        'Magestore_Webpos/js/model/resource-model/magento-rest/shift/cash-transaction'\r\n    ],\r\n    function ($, ko, Component, cashTransactionModel, shift, priceHelper, datetimeHelper, Event, shiftOnlineResource, transactionOnlineResource) {\r\n        \"use strict\";\r\n\r\n        return Component.extend({\r\n            shiftData: ko.observable({}),\r\n            value: ko.observable(''),\r\n            note: ko.observable(''),\r\n            add_cash_class: ko.observable('cash_adjustment_active'),\r\n            remove_cash_class: ko.observable('cash_adjustment_inactive'),\r\n            valueFormatted: ko.observable(''),\r\n            balance: ko.observable(''),\r\n            balanceFormatted: ko.observable(''),\r\n            valueErrorMessage: ko.observable(''),\r\n            type: ko.observable('add'),\r\n            staffId: ko.observable(window.webposConfig.staffId),\r\n            staffName: ko.observable(window.webposConfig.staffName),\r\n\r\n            defaults: {\r\n                template: 'Magestore_Webpos/shift/cash-transaction/cash-adjustment',\r\n            },\r\n\r\n            initialize: function () {\r\n                this._super();\r\n                this.valueFormatted = ko.pureComputed(function () {\r\n                    return priceHelper.formatPrice(this.value());\r\n                }, this)\r\n            },\r\n\r\n            //set all cash transaction data of the selected shift to Items\r\n            //each transaction is an Item\r\n            setData: function (data) {\r\n                this.setItems(data);\r\n            },\r\n\r\n            //set all information of the selected shift to ShiftData\r\n            //call this function from shift-listing\r\n            setShiftData: function (data) {\r\n                this.shiftData(data);\r\n                this.balance(data.balance);\r\n                this.balanceFormatted(priceHelper.formatPrice(data.balance));\r\n            },\r\n\r\n            //change the value of type to \"add\"\r\n            addCash: function () {\r\n                this.type('add');\r\n                this.add_cash_class('cash_adjustment_active');\r\n                this.remove_cash_class('cash_adjustment_inactive');\r\n            },\r\n\r\n            //change the value of type to \"remove\"\r\n            removeCash: function () {\r\n                this.type('remove');\r\n                this.add_cash_class('cash_adjustment_inactive');\r\n                this.remove_cash_class('cash_adjustment_active');\r\n            },\r\n\r\n            //get data from the form and call to CashTransaction model then save to database\r\n            createCashAdjustment: function () {\r\n                if (!this.validateInputAmount()) {\r\n                    return;\r\n                }\r\n\r\n                this.saveShiftOffline();\r\n                this.closeForm();\r\n\r\n            },\r\n\r\n            getShiftDataOnline: function () {\r\n                var postData = {};\r\n                var finalValue = this.parseIntValue(this.value());\r\n                if (this.type() == 'remove') {\r\n                    finalValue = finalValue * (-1);\r\n                }\r\n                var balance = this.parseIntValue(this.shiftData().balance);\r\n\r\n                postData.balance = balance + finalValue;\r\n                if (this.type() == 'add') {\r\n                    postData.cash_added = this.parseIntValue(this.shiftData().cash_added) + this.parseIntValue(this.value());\r\n                    postData.cash_removed = this.parseIntValue(this.shiftData().cash_removed);\r\n                }\r\n                else {\r\n                    postData.cash_added = this.parseIntValue(this.shiftData().cash_added);\r\n                    postData.cash_removed = this.parseIntValue(this.shiftData().cash_removed) + this.parseIntValue(this.value());\r\n                }\r\n                postData.base_currency_code = this.shiftData().base_currency_code\r\n                postData.shift_currency_code = this.shiftData().shift_currency_code;\r\n                postData.shift_id = this.shiftData().shift_id;\r\n                postData.entity_id = this.shiftData().entity_id;\r\n                postData.staff_id = this.shiftData().staff_id;\r\n                postData.location_id = this.shiftData().location_id;\r\n                postData.float_amount = this.shiftData().float_amount;\r\n                postData.base_float_amount = priceHelper.currencyConvert(postData.float_amount, postData.shift_currency_code, postData.base_currency_code);\r\n                postData.closed_amount = this.shiftData().closed_amount;\r\n                postData.base_closed_amount = priceHelper.currencyConvert(postData.closed_amount, postData.shift_currency_code, postData.base_currency_code);\r\n                postData.closed_at = this.shiftData().closed_at;\r\n                postData.closed_note = this.shiftData().closed_note;\r\n                postData.cash_left = this.shiftData().cash_left;\r\n                postData.base_cash_left = priceHelper.currencyConvert(postData.cash_left, postData.shift_currency_code, postData.base_currency_code);\r\n                postData.status = this.shiftData().status;\r\n                postData.total_sales = this.shiftData().total_sales;\r\n                postData.base_total_sales = priceHelper.currencyConvert(postData.total_sales, postData.shift_currency_code, postData.base_currency_code);\r\n                //postData.balance = balance;\r\n                postData.base_balance = priceHelper.currencyConvert(postData.balance, postData.shift_currency_code, postData.base_currency_code);\r\n                postData.opened_note = this.shiftData().opened_note;\r\n                //postData.cash_added = this.shiftData().cash_added;\r\n                postData.base_cash_added = priceHelper.currencyConvert(postData.cash_added, postData.shift_currency_code, postData.base_currency_code);\r\n                //postData.cash_removed = this.shiftData().cash_removed;\r\n                postData.base_cash_removed = priceHelper.currencyConvert(postData.cash_removed, postData.shift_currency_code, postData.base_currency_code);\r\n                postData.cash_sale = this.shiftData().cash_sale;\r\n                postData.base_cash_sale = priceHelper.currencyConvert(postData.cash_sale, postData.shift_currency_code, postData.base_currency_code);\r\n                return postData;\r\n            },\r\n\r\n            getShiftDataOffline: function () {\r\n                var postData = this.getShiftDataOnline();\r\n                var lastTransaction = this.getCashTransactionDataOnline();\r\n\r\n                postData.opened_at = this.shiftData().opened_at;\r\n                postData.sale_summary = this.shiftData().sale_summary;\r\n                postData.cash_transaction = this.shiftData().cash_transaction;\r\n                postData.zreport_sales_summary = this.shiftData().zreport_sales_summary;\r\n                postData.cash_transaction.push(lastTransaction);\r\n                return postData;\r\n            },\r\n\r\n            getCashTransactionDataOnline: function () {\r\n                var finalValue = this.value();\r\n                if (this.type() == 'remove') {\r\n                    finalValue = finalValue * (-1);\r\n                }\r\n\r\n                var balance = this.parseIntValue(this.shiftData().balance);\r\n                balance = balance + finalValue;\r\n                var data = {\r\n                    'shift_id': this.shiftData().shift_id,\r\n                    'location_id': this.shiftData().location_id,\r\n                    'value': this.value(),\r\n                    'base_value': priceHelper.currencyConvert(this.value(), window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode),\r\n                    'note': this.note(),\r\n                    'balance': balance,\r\n                    'base_balance': priceHelper.currencyConvert(balance, window.webposConfig.currentCurrencyCode, window.webposConfig.baseCurrencyCode),\r\n                    'type': this.type(),\r\n                    'base_currency_code': window.webposConfig.baseCurrencyCode,\r\n                    'transaction_currency_code': window.webposConfig.currentCurrencyCode,\r\n                    'created_at': datetimeHelper.getBaseSqlDatetime()\r\n\r\n                };\r\n\r\n                return data;\r\n            },\r\n\r\n            syncTransaction: function () {\r\n                var self = this;\r\n                var postData = this.getCashTransactionDataOnline();\r\n                var deferred = $.Deferred();\r\n                transactionOnlineResource().setPush(true).createTransaction(postData, deferred);\r\n                deferred.always(function (response) {\r\n                    self.clearInput();\r\n                });\r\n            },\r\n\r\n            saveShiftOffline: function () {\r\n                var self = this;\r\n                var postData = this.getShiftDataOffline();\r\n                var shiftModel = shift();\r\n                var deferred = shiftModel.setData(postData).setMode('offline').update();\r\n\r\n                deferred.done(function (response) {\r\n                    if (response) {\r\n                        Event.dispatch('refresh_shift_listing', response);\r\n                        self.syncTransaction();\r\n                    }\r\n                });\r\n            },\r\n\r\n            synShiftOnline: function () {\r\n                var self = this;\r\n                var postData = this.getShiftDataOnline();\r\n                var deferred = $.Deferred();\r\n\r\n                shiftOnlineResource().setPush(true).createShift(postData, deferred);\r\n                deferred.done(function (response) {\r\n                    //close the cash adjustment form\r\n                    self.clearInput();\r\n                });\r\n            },\r\n\r\n            closeForm: function () {\r\n                $(\".popup-for-right\").hide();\r\n                $(\".popup-for-right\").removeClass('fade-in');\r\n                $(\".wrap-backover\").hide();\r\n                $('.notification-bell').show();\r\n                $('#c-button--push-left').show();\r\n            },\r\n\r\n            clearInput: function () {\r\n                //clear input value\r\n                this.value('');\r\n                this.note('');\r\n            },\r\n\r\n            valueChange: function (data, event) {\r\n                this.value(priceHelper.toNumber(event.target.value));\r\n                this.validateInputAmount();\r\n            },\r\n\r\n            /**\r\n             * check if remove value is less than current balance or not\r\n             * @returns {boolean}\r\n             */\r\n            validateInputAmount: function () {\r\n                if ((this.value() > this.balance()) && (this.type() == 'remove')) {\r\n                    this.valueErrorMessage(\"Remove amount must be less than the balance!\");\r\n                    return false;\r\n                }\r\n\r\n                if (this.value() <= 0) {\r\n                    this.valueErrorMessage(\"Amount must be greater than 0!\");\r\n                    return false;\r\n                }\r\n\r\n                this.valueErrorMessage(\"\");\r\n                return true;\r\n            },\r\n\r\n            //parseInt a field from SQL.\r\n            parseIntValue: function (value) {\r\n                if (!value) {\r\n                    return 0;\r\n                }\r\n                value = parseFloat(value);\r\n                return value;\r\n            }\r\n        });\r\n    }\r\n);\r\n","Magestore_Webpos/js/view/base/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/model/directory/country',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/action/notification/add-notification',\n    ],\n    function ($, ko, Component, priceHelper, countryModel, datetimeHelper, notification) {\n        \"use strict\";\n        return Component.extend({\n            setData: function() {\n\n            },\n\n            formatPrice: function(price){\n                return priceHelper.formatPrice(price);\n            },\n\n            getCountryName: function(code, deferred){\n                countryModel().load(code, deferred);\n\n            },\n\n            /**\n             * return a date with format: Thursday 4 May, 2016\n             *\n             * @param dateString\n             * @returns {string}\n             */\n            getFullDate: function (dateString) {\n                return datetimeHelper.getFullDate(dateString);\n            },\n\n\n            /**\n             * return a date time with format: Thursday 4 May, 2016 15:26PM\n             * @param dateString\n             * @returns {string}\n             */\n            getFullDatetime: function (dateString) {\n                return datetimeHelper.getFullDatetime(dateString);\n            },\n\n            addNotification: function(message, isShowToaster, priority, title){\n                return notification(message, isShowToaster, priority, title);\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/base/grid/collection-grid.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/view/base/list/collection-list',\n        ],\n        function ($, ko, collectionList) {\n            \"use strict\";\n\n            return collectionList.extend({\n                defaults: {\n                    template: 'Magestore_Webpos/base/grid/abstract',\n                },\n                \n                initialize: function () {\n                    this.isShowHeader = true;\n                    this._super();\n                },\n            });\n        }\n);","Magestore_Webpos/js/view/base/grid/cell-grid.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/view/base/grid/collection-grid',\n        ],\n        function ($, ko, colGrid) {\n            \"use strict\";\n\n            return colGrid.extend({\n                defaults: {\n                    template: 'Magestore_Webpos/base/grid/cell-grid',\n                },                \n                initialize: function () {\n                    this._super();\n                },\n            });\n        }\n);","Magestore_Webpos/js/view/base/grid/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/view/base/list/abstract',\n        ],\n        function ($, ko, listAbstract) {\n            \"use strict\";\n            return listAbstract.extend({\n                defaults: {\n                    template: 'Magestore_Webpos/base/grid/abstract',\n                },\n\n                initialize: function () {\n                    this.isShowHeader = true;\n                    this._super();\n                },\n            });\n        }\n);\n","Magestore_Webpos/js/view/base/grid/renderer/price.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/view/base/grid/renderer/abstract',\n        ],\n        function ($, ko, renderAbstract) {\n            \"use strict\";\n            return renderAbstract.extend({\n                render: function (item) {\n                    return \"$\" + item.price.toFixed(2);\n                }\n            });\n        }\n);","Magestore_Webpos/js/view/base/grid/renderer/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/view/base/abstract',\n        ],\n        function ($, ko, viewAbstract) {\n            \"use strict\";\n            return viewAbstract.extend({\n                render: function (item) {\n                    \n                },\n                getGrid: function () {\n                    \n                },\n            });\n        }\n);","Magestore_Webpos/js/view/base/list/collection-list.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/model/abstract',\n            'Magestore_Webpos/js/view/base/list/abstract',\n            'Magestore_Webpos/js/model/event-manager'\n        ],\n        function ($, ko, model, listAbstract,eventManager) {\n            \"use strict\";\n\n            return listAbstract.extend({\n                reload: true,\n                loading: ko.observable(false),\n                initialize: function () {\n                    this.pageSize = 20;\n                    this.collection = null;\n                    this._super();\n                },\n                getCollection: function () {\n                    this._prepareCollection();\n                    return this.collection;\n                },\n                _render: function () {\n                    \n                    if(!this.collection) {\n                        this._prepareCollection();\n                    }\n                    this._super();\n                    \n                    var self = this;\n                    if(self.reload && self.collection.getModel().sync_id) {\n                        var eventName = self.collection.getModel().sync_id + '_pull_after';\n                        eventManager.observer(eventName, function () {\n                            self.refresh = true;\n                            self.isOnline = false;\n                            self.collection.setMode('offline');\n                            self._prepareItems();\n                        });\n\n                        var eventsearchName = self.collection.getModel().sync_id + '_search_after';\n                        eventManager.observer(eventsearchName, function (event,data) {\n                            self.searchKey = String(data);\n                            self.refresh = true;\n                            self.isOnline = false;\n                            self.collection.setMode('offline');\n                            self._prepareItems();\n                        });\n                    }                    \n                },\n                _prepareCollection: function () {\n                    /* implement in child class */\n                },\n                _prepareItems: function () {\n                    var self = this;\n                    if(self.loading() == true){\n                        return false;\n                    }\n                    self.loading(true);\n                    if (this.refresh) {\n                        this.curPage = 1;\n                    }\n                    \n                    var deferred = self.getCollection().load();\n                    self.startLoading();\n\n                    deferred.done(function (data) {\n                        self.loading(false);\n                        self.finishLoading();\n                        self.setItems(data.items);\n                    });\n                    \n                    deferred.fail(function (error) {\n                        self.loading(false);\n                    });\n                },\n                filter: function (element, event) {\n                    this.searchKey = event.target.value;\n                    this.refresh = true;\n                    this._prepareItems();\n                },\n                lazyload: function (element, event) {\n                    var scrollHeight = event.target.scrollHeight;\n                    var clientHeight = event.target.clientHeight;\n                    var scrollTop = event.target.scrollTop;\n                    if (scrollTop > (scrollHeight - clientHeight) * 0.6 && this.canLoad() === true) {\n                        this.startLoading();\n                        this.curPage++;\n                        this.refresh = false;\n                        this._prepareItems();\n                    }\n                }\n            });\n        }\n);","Magestore_Webpos/js/view/base/list/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/view/base/abstract',\n        ],\n        function ($, ko, viewAbstract) {\n            \"use strict\";\n\n            return viewAbstract.extend({\n                items: ko.observableArray([]),\n                columns: ko.observableArray([]),\n                isShowHeader: false,\n                isSearchable: true,\n                pageSize: 10,\n                curPage: 1,\n\n                defaults: {\n                    template: 'Magestore_Webpos/base/list/abstract',\n                },\n                initialize: function () {\n                    this._super();\n                    this.searchKey = null;\n                    this.refresh = true;\n                    this.isLoading = false;\n                    //this._render();\n                },\n                _render: function() {\n                    this._prepareColumns();\n                    this._prepareItems();\n                },\n                \n                _prepareItems: function () {\n                    \n                },\n                _prepareColumns: function () {\n\n                },\n\n                addItems: function (items) {\n                    for (var i in items) {\n                        items[i].columns = this.columns;\n                    }\n                    ko.utils.arrayPushAll(this.items, items);\n                },\n                setItems: function (items) {\n                    if(this.refresh === true) {\n                        this.resetData();\n                    }\n                    this.addItems(items);\n                },\n                resetData: function () {\n                    // this.destroyViewModel();\n                    this.items([]);\n                },\n                destroyViewModel:function () {\n                    this.destroy();\n                    this.clear();\n                },\n                addColumn: function (column) {\n                    column.grid = this;\n                    var exited = false;\n                    for(var i in this.columns()) {\n                        if(this.columns()[i].rowText == column.rowText) {\n                            exited = true;\n                            break;\n                        }\n                    }\n                    if(!exited) {\n                        this.columns.push(column);\n                    }\n                },\n                filter: function () {\n\n                },\n                canLoad: function() {\n                    return !this.isLoading;\n                },\n                startLoading: function() {\n                    this.isLoading = true;\n                },\n                finishLoading: function() {\n                    this.isLoading = false;\n                }\n            });\n        }\n);\n","Magestore_Webpos/js/view/base/form/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/base/abstract',\n        'Magestore_Webpos/js/view/base/form/element/fieldset'\n    ],\n    function ($, ko, viewAbstract, fieldset) {\n        \"use strict\";\n        return viewAbstract.extend({\n            fieldsets: ko.observableArray([]),\n            fieldsetView: fieldset,\n            dataModel: ko.observable(''),\n\n            defaults: {\n                template: 'Magestore_Webpos/base/form/abstract',\n            },\n\n            isShowHeader: true,\n\n            initialize: function () {\n                this._render();\n                this._super();\n            },\n\n            _render: function() {\n                //this.setFormData();\n                this._prepareForm();\n            },\n\n            createFieldset: function(id ,data){\n                var fieldset = this.fieldsetView().create(id, data, this.dataModel());\n                return fieldset;\n            },\n\n            addFieldset: function(element){\n                var htmlRender = element.render();\n                this.fieldsets.push(htmlRender);\n            },\n\n            setFormData: function(data){\n                this.dataModel(data);\n            },\n\n            _prepareForm: function(){\n                \n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/base/form/element/checkbox.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/view/base/form/element/abstract'\n        ],\n        function ($, ko, elementAbstract) {\n            \"use strict\";\n            return elementAbstract.extend({\n                id: ko.observable(''),\n                data: ko.observableArray([]),\n                \n                initialize: function () {\n                    this._super();\n                },\n                \n                render: function(){\n                    var id = this.id.call() ? 'id=\"'+this.id.call()+'\"' : '';\n                    var name = this.data().name ? ' name=\"'+this.data().name+'\"' : '';\n                    var attr = id + name;\n                    var optionHtml = '';\n                    var elmentValue = this.data().value;\n                    if(this.data().options)\n                        $.each(this.data().options, function(index, value) {\n                            var checked = elmentValue && elmentValue.indexOf(index) != -1 ? ' checked=\"checked\"' : '';\n                            optionHtml += '<input type=\"checkbox\" '+name+' value=\"'+index+'\"'+checked+'/>'+value+'</br>';\n                        });\n                    return optionHtml;\n                }\n            });\n        }\n);\n","Magestore_Webpos/js/view/base/form/element/radio.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/view/base/form/element/abstract'\n        ],\n        function ($, ko, elementAbstract) {\n            \"use strict\";\n            return elementAbstract.extend({\n                id: ko.observable(''),\n                data: ko.observableArray([]),\n                \n                initialize: function () {\n                    this._super();\n                },\n                \n                render: function(){\n                    var id = this.id.call() ? 'id=\"'+this.id.call()+'\"' : '';\n                    var name = this.data().name ? ' name=\"'+this.data().name+'\"' : '';\n                    var attr = id + name;\n                    var optionHtml = '';\n                    var elmentValue = this.data().value;\n                    if(this.data().options)\n                        $.each(this.data().options, function(index, value) {\n                            var checked = elmentValue && elmentValue == index ? ' checked=\"checked\"' : '';\n                            optionHtml += '<input type=\"radio\" '+name+' value=\"'+index+'\"'+checked+'/>'+value;\n                        });\n                    return optionHtml;\n                }\n            });\n        }\n);\n","Magestore_Webpos/js/view/base/form/element/select.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/view/base/form/element/abstract'\n        ],\n        function ($, ko, elementAbstract) {\n            \"use strict\";\n            return elementAbstract.extend({\n                id: ko.observable(''),\n                data: ko.observableArray([]),\n                \n                initialize: function () {\n                    this._super();\n                },\n                \n                render: function(){\n                    var id = this.id.call() ? 'id=\"'+this.id.call()+'\"' : '';\n                    var name = this.data().name ? ' name=\"'+this.data().name+'\"' : '';\n                    var attr = id + name;\n                    var optionHtml = '<option value=\"\">---Please select an option---</option>';\n                    var elmentValue = this.data().value;\n                    if(this.data().options)\n                        $.each(this.data().options, function(index, value) {\n                            var selected = elmentValue && elmentValue == index ? ' selected=\"selected\"' : '';\n                            optionHtml += '<option value=\"'+index+'\"'+selected+'>'+value+'</option>';\n                        });\n                    return '<select '+attr+'>'+\n                        optionHtml+\n                    '<select>';\n                }\n            });\n        }\n);\n","Magestore_Webpos/js/view/base/form/element/fieldset.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'underscore',\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/base/abstract',\n        'Magestore_Webpos/js/view/base/form/element/text',\n        'Magestore_Webpos/js/view/base/form/element/select',\n        'Magestore_Webpos/js/view/base/form/element/radio',\n        'Magestore_Webpos/js/view/base/form/element/checkbox',\n    ],\n    function (_, $, ko, viewAbstract, textElement, selectElement, radioElement, checkboxElement) {\n        \"use strict\";\n\n        var webPosFormFieldsetData = {\n            title: '',\n            class: '',\n            style: '',\n            legend:'',\n            columns: 1,\n        };\n\n        return viewAbstract.extend({\n            id: ko.observable(''),\n            data: ko.observableArray([]),\n            fields: ko.observableArray([]),\n            rows: ko.observableArray([]),\n            dataModel: {},\n\n            mappingField: {\n                'text': textElement(),\n                'select': selectElement(),\n                'radio': radioElement(),\n                'checkbox': checkboxElement(),\n            },\n\n            defaults: {\n                template: 'Magestore_Webpos/base/form/element/fieldset',\n            },\n\n            initialize: function () {\n                this._super();\n            },\n\n            create: function(id, data, dataModel){\n                this.dataModel = dataModel;\n                if(!data.columns)\n                    data.columns = 1;\n                this.id(id);\n                this.fields([]);\n                this.rows([]);\n                data = this.renderClassFromColumns(data);\n                this.data(data);\n                return this;\n            },\n\n            addField: function(id, type, data){\n                data = this._prepareFieldData(id, type, data);\n                this.fields.push(data);\n                if(this.fields.call().length==this.data.call().columns) {\n                    this.rows.push({fields: this.fields(), data: this.data()});\n                    this.fields([]);\n                }\n            },\n\n            _prepareFieldData: function(id, type, data){\n                if(this.dataModel[data.name] && !data.value)\n                    data.value = this.dataModel[data.name];\n                var ele = this.getMappingField(type, data);\n                ele.id(id);\n                ele.data(data);\n                data.htmlRender = ele.render();\n                return data;\n            },\n\n            getMappingField: function(type, data){\n                if(data['renderer']){\n                    if(typeof data['renderer'] == 'object')\n                        return data['renderer'];\n                    if(typeof data['renderer'] == 'function')\n                        return data['renderer']();\n                }\n                return this.mappingField[type];\n            },\n\n            renderClassFromColumns: function(data){\n                if(!data.class)\n                    data.class = '';\n                data.class += ' row';\n                var colClass = 12/data.columns;\n                data.class += ' col-xs-'+colClass;\n                return data;\n            },\n\n            render: function(){\n                if(this.fields.call().length>0)\n                    this.rows.push({fields: this.fields(), data: this.data()});\n                return {id: this.id.call(), data: this.data(), rows: this.rows()};\n            },\n        });\n    }\n);\n","Magestore_Webpos/js/view/base/form/element/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/base/abstract',\n    ],\n    function ($, ko, viewAbstract) {\n        \"use strict\";\n        var webPosFormFieldData = {\n            type: '',\n            label: '',\n            title: '',\n            class: '',\n            style: '',\n            disabled:'',\n            readonly:'',\n            placeholder:'',\n            checked:'',\n            legend:'',\n            options:'',\n            value: '',\n            isShowLabel: '',\n        };\n        \n        return viewAbstract.extend({\n            id: ko.observable(''),\n            data: ko.observableArray([]),\n\n            defaults: {\n                template: 'Magestore_Webpos/base/form/element/abstract',\n            },\n\n            initialize: function () {\n                this._super();\n            },\n\n            resetData: function() {\n                this.id('');\n                this.data([]);\n                return this;\n            },\n            \n            getId: function(){\n                return this.id;\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/checkout/checkout.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'mageUtils',\n        'uiComponent',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/view/settings/general/checkout/auto-check-promotion-rules',\n        'Magestore_Webpos/js/model/checkout/cart/totals-factory',\n        'mage/validation'\n    ],\n    function ($, ko, ViewManager, utils, Component, CheckoutModel, CartModel, Helper, AutoCheckPromotion, TotalsFactory) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout'\n            },\n            payAble: ko.observable(true),\n            initialize: function(){\n                this._super();\n                Helper.observerEvent('go_to_checkout_page', function(){\n                    var autoCheckPromotion =  Helper.getLocalConfig(AutoCheckPromotion().configPath);\n                    if(!Helper.isUseOnline('checkout') && autoCheckPromotion == true){\n                        CheckoutModel.autoCheckPromotion();\n                    }\n                });\n                Helper.observerEvent('checkout_select_customer_after', function(event, data){\n                    var autoCheckPromotion =  Helper.getLocalConfig(AutoCheckPromotion().configPath);\n                    if(autoCheckPromotion == true){\n                        if(!Helper.isUseOnline('checkout') && Helper.isOnCheckoutPage()) {\n                            CheckoutModel.autoCheckPromotion();\n                        }\n                    }\n                });\n                CheckoutModel.autoCheckingPromotion.subscribe(function(value){\n                    if(value == true){\n                        $('#checkout-loader').show();\n                    }else{\n                        $('#checkout-loader').hide();\n                    }\n                });\n                var self = this;\n                TotalsFactory.get().grandTotal.subscribe(function(value){\n                    self.payAble((value > 0)?true:false);\n                });\n\n                Helper.observerEvent('start_place_order', function(){\n                    self.placeOrder();\n                });\n            },\n            loading: ko.pureComputed(function(){\n                return (CheckoutModel.loading() == true)?true:false;\n            }),\n            cartTotal: ko.pureComputed(function(){\n                return Helper.formatPrice((TotalsFactory.get().getTotalValue('grand_total')) ? TotalsFactory.get().getTotalValue('grand_total'):0);\n            }),\n            remainTotal: ko.pureComputed(function(){\n                return Helper.formatPrice((CheckoutModel.remainTotal()) ? Math.abs(CheckoutModel.remainTotal()) : 0);\n            }),\n            selectedShippingTitle: ko.pureComputed(function(){\n                return (CheckoutModel.selectedShippingTitle())?CheckoutModel.selectedShippingTitle():\"\";\n            }),\n            selectedShippingCode: ko.pureComputed(function(){\n                return (CheckoutModel.selectedShippingCode())?CheckoutModel.selectedShippingCode():\"\";\n            }),\n            selectedShippingPrice: ko.pureComputed(function(){\n                return (CheckoutModel.selectedShippingPrice())?CheckoutModel.selectedShippingPrice():\"\";\n            }),\n            shippingHeader: ko.pureComputed(function() {\n                return \"Shipping: \"+CheckoutModel.selectedShippingTitle();\n            }),\n            shipAble: ko.pureComputed(function(){\n                return (CartModel.isVirtual())?false:true;\n            }),\n            checkoutButtonLabel: ko.pureComputed(function(){\n                var label = Helper.__(\"Place Order\");\n                if(Helper.toNumber(CheckoutModel.remainTotal()) > 0 && CheckoutModel.createInvoice() != true\n                    && CheckoutModel.selectedPayments().length > 0){\n                    label = Helper.__(\"Mark as partial\");\n                }\n                return label;\n            }),\n            remainTitle: ko.pureComputed(function () {\n                if(CheckoutModel.remainTotal() > 0)\n                    return 'Remain money';\n                return 'Expected Change';\n            }),\n            canPaid: ko.pureComputed(function(){\n                var canCreate = true;\n                if(CheckoutModel.remainTotal() > 0 || !CheckoutModel.isAllowToCreateInvoice()) {\n                    canCreate = false;\n                }\n                CheckoutModel.createInvoice(canCreate);\n                var select = $('#can_paid');\n                if($('#can_paid').find('.ios-ui-select') != undefined){\n                    var bootstrapSlide = $('#can_paid').find('.ios-ui-select');\n                    if(canCreate == true){\n                        bootstrapSlide.addClass('checked');\n                    }else{\n                        bootstrapSlide.removeClass('checked');\n                    }\n                }\n                return canCreate;\n            }),\n            canShip: ko.pureComputed(function(){\n                var canCreate = true;\n                if(!CheckoutModel.createShipment()) {\n                    canCreate = false;\n                }\n                var createShipButton = $('#can_ship');\n                if(createShipButton.length > 0 && createShipButton.find('.ios-ui-select') != undefined){\n                    var bootstrapSlide = createShipButton.find('.ios-ui-select');\n                    if(canCreate == true){\n                        bootstrapSlide.addClass('checked');\n                    }else{\n                        bootstrapSlide.removeClass('checked');\n                    }\n                }\n                return canCreate;\n            }),\n            placeOrder: function(){\n                if(CheckoutModel.placingOrder() == true){\n                    Helper.alert({\n                        priority: \"warning\",\n                        title: \"Message\",\n                        message: \"Placing order, please wait...\"\n                    });\n                    return;\n                }\n                if((!CheckoutModel.selectedPayments() || CheckoutModel.selectedPayments().length <= 0)\n                   && TotalsFactory.get().getTotalValue('grand_total') > 0){\n                    Helper.alert({\n                        priority: \"danger\",\n                        title: \"Message\",\n                        message: \"Please select the payment method\"\n                    });\n                    return;\n                }\n                if (!this.validateForm('#form-checkout-creditcard')) {\n                    return;\n                }\n                if(!CheckoutModel.selectedShippingCode()){\n                    CheckoutModel.useWebposShipping();\n                }\n                if(Helper.isUseOnline('checkout')){\n                    if(!CartModel.hasOnlineQuote()){\n                        Helper.alert({\n                            priority: \"danger\",\n                            title: \"Message\",\n                            message: \"The quote does not exist for online checkout\"\n                        });\n                        return false;\n                    }\n                    if( CheckoutModel.selectedPayments()[0] != undefined &&\n                        CheckoutModel.selectedPayments()[0].type == '1'){\n                        CheckoutModel.startAuthorizePopup();\n                    }\n                    if(!CheckoutModel.isPrepaid()){\n                        CheckoutModel.placeOrderOnline();\n                    }\n                    return true;\n                }else{\n                    if( CheckoutModel.selectedPayments()[0] != undefined &&\n                        CheckoutModel.selectedPayments()[0].type == '1'){\n                        CheckoutModel.submitOrderOnline();\n                        CheckoutModel.startAuthorizePopup();\n                        return;\n                    }\n                }\n                if(!CartModel.canCheckoutStorecredit()){\n                    Helper.alert({\n                        priority: \"danger\",\n                        title: \"Message\",\n                        message: \"Please select customer\"\n                    });\n                    return;\n                }\n                CheckoutModel.createOrder();\n            },\n            initCheckboxStyle: function(){\n                $(\".ios\").iosCheckbox();\n            },\n            afterRenderButton: function () {\n                $('.checkout-footer .add-payment').click(function (event) {\n                    var ptop = event.pageY - 130;\n                    $(\"#add-more-payment\").addClass('fade-in');\n\n                    $(\".wrap-backover\").show();\n                });\n                $('.wrap-backover').click(function () {\n                    $(\".popup-for-right\").hide();\n                    $(\".popup-for-right\").removeClass('fade-in');\n                    $(\".wrap-backover\").hide();\n                    $('.notification-bell').show();\n                    if($('#checkout_container').hasClass('showMenu')){\n                        $('#c-button--push-left').show();\n                        $('#c-button--push-left').removeClass('hide');\n                    }else{\n                        $('#c-button--push-left').hide();\n                        $('#c-button--push-left').addClass('hide');\n                    }\n                });\n            },\n            afterRenderCheckout: function(){\n                CheckoutModel.initDefaultData();\n            },\n            createInvoice: function(data,event){\n                var createInvoice = (event.target.checked) ? true : false;\n                CheckoutModel.createInvoice(createInvoice);\n            },\n            createShipment: function(data,event){\n                var createShipment = (event.target.checked)?true:false;\n                CheckoutModel.createShipment(createShipment);\n            },\n            /* Validation Form*/\n            validateForm: function (form) {\n                return $(form).validation() && $(form).validation('isValid');\n            },\n            addMorePayments: function () {\n                ViewManager.getSingleton('view/checkout/checkout/payment_popup')._prepareItems();\n                $(\"#add-more-payment\").addClass('fade-in');\n                $(\".wrap-backover\").show();\n                $(\".notification-bell\").hide();\n            },\n            showPayments: ko.pureComputed(function(){\n                if(TotalsFactory.get().getTotalValue('grand_total') > 0 || TotalsFactory.get().hasSpecialDiscount() == true)\n                    return true;\n                return false;\n            })\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/cart.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'require',\n        'jquery',\n        'ko',   \n        'Magestore_Webpos/js/view/layout',\n        'uiComponent',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/checkout/cart/items',\n        'Magestore_Webpos/js/model/customer/current-customer',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/cart/totals-factory',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function (require, $, ko, ViewManager, Component, CartModel, CheckoutModel, Items, currentCustomer, Alert, Helper, TotalsFactory, Event) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/cart'\n            },\n            renderedItems: ko.observable(false),\n            renderedTotals: ko.observable(false),\n            currentCustomerName: ko.pureComputed(function() {\n                return currentCustomer.fullName();\n            }),\n            currentCustomerId: ko.pureComputed(function() {\n                return CartModel.customerId();\n            }),\n            isShowCustomerId: ko.pureComputed(function() {\n                return currentCustomer.customerId()!= 0;\n            }),\n            PAGE:{\n                CART:\"cart\",\n                CHECKOUT:\"checkout\"\n            },\n            currentPage: CartModel.currentPage,\n            isOnCheckoutPage: CartModel.isOnCheckoutPage,\n            cartTitle: ko.pureComputed(function() {\n                return \"Cart (\"+ Items.totalItems() + \")\";\n            }),\n            initialize: function () {\n                this._super();\n                var self = this;\n                this.renderedPage = ko.pureComputed(function(){\n                    return (self.renderedItems() && self.renderedTotals() && CartModel.loading() != true);\n                });\n                if(!this.currentPage()){\n                    this.currentPage(this.PAGE.CART);\n                }\n                this.createdOrder = ko.pureComputed(function(){\n                    return CheckoutModel.isCreatedOrder();\n                });\n                Event.observer('go_to_checkout_page', function(){\n                    self.switchToCheckout();\n                });\n                Event.observer('go_to_cart_page', function(){\n                    self.switchToCart();\n                    Event.dispatch('focus_search_input', '');\n                });\n                Event.observer('start_new_order', function(){\n                    self.switchToCart();\n                    self.emptyCart();\n                    Event.dispatch('focus_search_input', '');\n                });\n                Event.observer('save_cart_online_after', function(event, data){\n                    if(data && data.response && data.response.quote_init){\n                        Event.dispatch('go_to_checkout_page', '', true);\n                    }\n                });\n            },\n            goToCheckoutPage: function(){\n                if($('#webpos_checkout').length > 0){\n                    $('#webpos_checkout').addClass(\"active\");\n                    var categoryWith = $('#checkout_container .col-left').width();\n                    $('#checkout_container').css({\n                        left:\"-\"+categoryWith+\"px\"\n                    });\n                    $('#popup-change-customer').addClass('active-on-checkout');\n                }\n            },\n            goToCartPage: function(){\n                if($('#webpos_checkout').length > 0){\n                    $('#webpos_checkout').removeClass(\"active\");\n                    $('#checkout_container').css({\n                        left:\"0px\"\n                    });\n                    $('#popup-change-customer').removeClass('active-on-checkout');\n                }\n            },\n            hideMenuButton: function(){\n                if($('#c-button--push-left').length > 0){\n                    $('#c-button--push-left').hide();\n                    $('#c-button--push-left').addClass('hide');\n                }\n            },\n            showMenuButton: function(){\n                if($('#c-button--push-left').length > 0){\n                    $('#c-button--push-left').show();\n                    $('#c-button--push-left').removeClass('hide');\n                }\n            },\n            transformInterface: function(){\n                var self = this;\n                switch(self.currentPage()){\n                    case self.PAGE.CART:\n                        self.goToCartPage();\n                        self.showMenuButton();\n                        break;\n                    case self.PAGE.CHECKOUT:\n                        self.goToCheckoutPage();\n                        self.hideMenuButton();\n                        break;\n                }\n            },\n            switchToCart: function(){\n                this.currentPage(this.PAGE.CART);\n                this.transformInterface();\n                $('#checkout_container').addClass('showMenu');\n            },\n            switchToCheckout: function(){\n                if(Items.isEmpty()){\n                    return;\n                }else{\n                    this.currentPage(this.PAGE.CHECKOUT);\n                    this.transformInterface();\n                    $('#checkout_container').removeClass('showMenu');\n                }\n            },\n            initNotePopup: function(){\n                $(\"[data-toggle=popover]\").popover({\n                    html: true,\n                    content: function () {\n                        var content = $(this).attr(\"data-popover-content\");\n                        return $(content).children(\".popover-body\").html();\n                    },\n                    title: function () {\n                        var title = $(this).attr(\"data-popover-content\");\n                        return $(title).children(\".popover-heading\").html();\n                    }\n                });\n                $('[rel=\"popover\"]').popover({\n                    trigger: 'focus',\n                    container: 'body',\n                    html: true,\n                    content: function () {\n                        var clone = $($(this).data('popover-content')).clone(true).removeClass('hide');\n                        return clone;\n                    }\n                }).click(function (e) {\n                    e.preventDefault();\n                });\n                if($('.pos_modal_link').length > 0){\n                    $('.pos_modal_link').click(function(){\n                        $('#form-add-note').addClass(\"hide\");\n                        $('#form-add-note').removeClass(\"show\");\n                        $('#form-add-note').hide();\n                        if($(this).data(\"target\")){\n                            var target = $(this).data(\"target\");\n                            if($(target).length > 0){\n                                $(target).removeClass(\"fade\");\n                                $(target).addClass(\"show\");\n                                $(target).addClass(\"fade-in\");\n                                $(target).show();\n                                $('#c-button--push-left').hide();\n                                if($(target+' .pos_overlay').length > 0){\n                                    $(target+' .pos_overlay').click(function(){\n                                        $(target).addClass(\"fade\");\n                                        $(target).removeClass(\"show\");\n                                        $(target).removeClass(\"fade-in\");\n                                        $(target).hide();\n                                        if($('#checkout_container').hasClass('showMenu')){\n                                            $('#c-button--push-left').show();\n                                            $('#c-button--push-left').removeClass('hide');\n                                        }else{\n                                            $('#c-button--push-left').hide();\n                                            $('#c-button--push-left').addClass('hide');\n                                        }\n                                    });\n                                }\n                                if($(target+' button').length > 0){\n                                    $(target+' button').each(function(){\n                                        if($(this).data(\"dismiss\") && $(this).data(\"dismiss\") == \"modal\"){\n                                            $(this).click(function(){\n                                                $(target).addClass(\"fade\");\n                                                $(target).removeClass(\"show\");\n                                                $(target).removeClass(\"fade-in\");\n                                                $(target).hide();\n                                                if($('#checkout_container').hasClass('showMenu')){\n                                                    $('#c-button--push-left').show();\n                                                    $('#c-button--push-left').removeClass('hide');\n                                                }else{\n                                                    $('#c-button--push-left').hide();\n                                                    $('#c-button--push-left').addClass('hide');\n                                                }\n                                            });\n                                        }\n                                    });\n                                }\n                            }\n                        }\n                    });\n                }\n            },\n            showAddtitionalAction: function(){\n                if($('#form-add-note').hasClass(\"show\")){\n                    $('#form-add-note').addClass(\"hide\");\n                    $('#form-add-note').removeClass(\"show\");\n                    $('#form-add-note').hide();\n                }else{\n                    $('#form-add-note').removeClass(\"hide\");\n                    $('#form-add-note').addClass(\"show\");\n                    $('#form-add-note').show();\n                    $('#form-add-note').mouseout(function(){\n                        $('#form-add-note').addClass(\"hide\");\n                        $('#form-add-note').removeClass(\"show\");\n                        $('#form-add-note').hide();\n                    });\n                    $('#form-add-note').mouseover(function(){\n                        $('#form-add-note').removeClass(\"hide\");\n                        $('#form-add-note').addClass(\"show\");\n                        $('#form-add-note').show();\n                    });\n                }\n            },\n            showCartDiscountPopup: function(event){\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                if(this.isOnCheckoutPage()){\n                    viewManager.getSingleton('view/checkout/cart/discountpopup').isOnCheckout(true);\n                }else{\n                    viewManager.getSingleton('view/checkout/cart/discountpopup').isOnCheckout(false);\n                }\n                viewManager.getSingleton('view/checkout/cart/discountpopup').show();\n            },\n            afterRenderCart: function(){\n\n            },\n            addTestProducts: function(){\n                CartModel.addTestProducts();\n            },\n\n            changeCustomer: function () {\n                $('#popup-change-customer').addClass('fade-in');\n                $('.wrap-backover').show();\n                $('.notification-bell').hide();\n                $('#c-button--push-left').hide();\n                Helper.dispatchEvent('checkout_customer_list_show_after',{});\n            },\n\n            editCustomer: function () {\n                $('#form-edit-customer').removeClass('fade');\n                $('#form-edit-customer').addClass('fade-in');\n                $('#form-edit-customer').addClass('show');\n                $('.wrap-backover').show();\n                $('.notification-bell').hide();\n                $('#c-button--push-left').hide();\n            },\n\n            emptyCart: function(){\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                if(Helper.isUseOnline('checkout') && CartModel.hasOnlineQuote()){\n                    CartModel.removeCartOnline();\n                }else{\n                    CartModel.emptyCart();\n                }\n                viewManager.getSingleton('view/checkout/cart/discountpopup').resetData();\n                TotalsFactory.get().updateDiscountTotal();\n                Event.dispatch('focus_search_input', '');\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/checkout/payment_selected.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'mage/translate',\n        'uiComponent',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/cart/totals-factory',\n    ],\n    function ($, ko, $t, Component, CheckoutModel, PriceHelper, Helper, TotalsFactory) {\n        \"use strict\";\n        return Component.extend({\n            DATA:{\n                VISIBILITY_PAYMENT_TYPE: '1',\n                VALID: '1',\n                INVALID: '0'\n            },\n            FREE_PAYMENT_CODE:'free',\n            MULTIPLE_PAYMENT_CODE:'multipaymentforpos',\n            WEBPOS_PAYMENTS:['cashforpos','ccforpos','codforpos','cp1forpos','cp2forpos', 'paypal_integration'],\n            currentTotal: ko.observable(),\n            cartTotal: ko.pureComputed(function(){\n                return TotalsFactory.get().getTotalValue('grand_total');\n            }),\n            baseCartTotal: ko.pureComputed(function(){\n                return TotalsFactory.get().getBaseTotalValue('grand_total');\n            }),\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout/payment_selected'\n            },\n            initialize: function () {\n                this._super();\n                this.selectedPayment = '#payment_selected';\n                this.creditCardPayment = '#payment_creditcard';\n                this.paymentList = '#payment_list';\n                this.addPaymentButton = '#add_payment_button';\n                this.rightPopup = '.popup-for-right';\n                this.wrapBackover = '.wrap-backover';\n                if(this.currentTotal() == undefined){\n                    CheckoutModel.remainTotal(this.cartTotal());\n                    CheckoutModel.baseRemainTotal(this.baseCartTotal());\n                }\n            },\n            initPayments: function () {\n                CheckoutModel.selectedPayments([]);\n                CheckoutModel.remainTotal(0);\n                CheckoutModel.baseRemainTotal(0);\n                this.currentTotal(undefined);\n                if($(this.creditCardPayment) !== undefined){\n                    $(this.creditCardPayment).hide();\n                }\n                if($(this.selectedPayment) !== undefined){\n                    $(this.selectedPayment).hide();\n                }\n                if($(this.paymentList) !== undefined){\n                    $(this.paymentList).show();\n                }\n            },\n            setPayments: function (payments) {\n                CheckoutModel.selectedPayments(payments);\n            },\n            getPayments: function () {\n                var self = this;\n                var selectedPayments = CheckoutModel.selectedPayments();\n                selectedPayments = $.grep(selectedPayments, function(data) {\n                    return ($.inArray(parseFloat(data.type), self.visibilityPaymentType())  >= 0);\n                });\n                return selectedPayments;\n            },\n            visibilityPaymentType: function () {\n                return [0,2];\n            },\n            addPayment: function(data){\n                this.setPaymentMethod(data);\n                // if(CheckoutModel.selectedPayments().length <= 0){\n                //     CheckoutModel.paymentCode(data.code);\n                // }\n                // if(CheckoutModel.selectedPayments().length > 0){\n\n                var iconClass = \"icon-iconPOS-payment-\"+data.code;\n\n                if(\n                    (data.code == 'authorizenet_directpost') ||\n                    (data.code == 'payflowpro') ||\n                    (CheckoutModel.selectedPayments().length <= 0)\n                ){\n                    CheckoutModel.paymentCode(data.code);\n                    iconClass = \"icon-iconPOS-payment-ccforpos\";\n                }else{\n                    CheckoutModel.paymentCode('multipaymentforpos');\n                }\n                // }\n                if(data.is_pay_later == '1'){\n                    CheckoutModel.selectedPayments.push({\n                        id:CheckoutModel.selectedPayments().length,\n                        code:data.code,\n                        iconClass:iconClass,\n                        title:data.title,\n                        price:data.price,\n                        type:data.type,\n                        is_pay_later:data.is_pay_later,\n                        is_reference_number:data.is_reference_number,\n                        cart_total:0,\n                        base_cart_total:0,\n                        paid_amount:0,\n                        base_paid_amount:0,\n                        cart_total_formated: PriceHelper.convertAndFormat(0),\n                        is_extension_method: false\n                    });\n                    // this.disableAddPaymentButton();\n                }else{\n                    this.removePayLaterPayment();\n                    var paymentData = {\n                        id:CheckoutModel.selectedPayments().length,\n                        code:data.code,\n                        iconClass:iconClass,\n                        title:data.title,\n                        price:data.price,\n                        type:data.type,\n                        is_pay_later:data.is_pay_later,\n                        is_reference_number:data.is_reference_number,\n                        cart_total:CheckoutModel.remainTotal(),\n                        base_cart_total:CheckoutModel.baseRemainTotal(),\n                        paid_amount:CheckoutModel.remainTotal(),\n                        base_paid_amount:CheckoutModel.baseRemainTotal(),\n                        cart_total_formated: PriceHelper.formatPrice(CheckoutModel.remainTotal()),\n                        is_extension_method: false\n                    }\n                    if(data.is_extension){\n                        paymentData.paid_amount = data.paid_amount;\n                        paymentData.cart_total = data.cart_total;\n                    }\n                    CheckoutModel.selectedPayments.push(paymentData);\n                    CheckoutModel.remainTotal(0);\n                    CheckoutModel.baseRemainTotal(0);\n                    this.reCalculateTotal(-1);\n                    this.disableAddPaymentButton();\n                }\n                this.hidePaymentPopup();\n            },\n            getExtensionPayment: function(code){\n                if(code){\n                    var item = ko.utils.arrayFirst(CheckoutModel.selectedPayments(), function (item) {\n                        return item.code == code;\n                    });\n                    return (item) ? item : false;\n                }\n                return false;\n            },\n            addExtensionPayment: function(data){\n                if(data && data.code){\n                    var self = this;\n                    var item = self.getExtensionPayment(data.code);\n                    if(item !== false) {\n                        self.updatePaymentPrice(data.code, data.price, data.base_price, item);\n                    }else{\n                        this.removePayLaterPayment();\n                        var paymentData = {\n                            id:CheckoutModel.selectedPayments().length,\n                            code:data.code,\n                            iconClass:\"icon-iconPOS-payment-\"+data.code,\n                            title:data.title,\n                            price:data.price,\n                            base_price:data.base_price,\n                            type:data.type,\n                            is_pay_later:data.is_pay_later,\n                            is_reference_number:data.is_reference_number,\n                            is_extension_method:data.is_extension_method,\n                            cart_total:data.cart_total,\n                            base_cart_total:data.base_cart_total,\n                            paid_amount:data.paid_amount,\n                            base_paid_amount:data.base_paid_amount,\n                            cart_total_formated: ko.observable(PriceHelper.formatPrice(data.cart_total)),\n                            actions: data.actions\n                        }\n                        CheckoutModel.selectedPayments.push(paymentData);\n                        this.reCalculateTotal(paymentData.id);\n                    }\n                }\n            },\n            updatePaymentPrice: function(code, amount, baseAmount, item){\n                if(code){\n                    var self = this;\n                    item = (item)?item:self.getExtensionPayment(code);\n                    if(item !== false) {\n                        CheckoutModel.selectedPayments()[item.id].cart_total = amount;\n                        CheckoutModel.selectedPayments()[item.id].base_cart_total = baseAmount;\n                        CheckoutModel.selectedPayments()[item.id].paid_amount = amount;\n                        CheckoutModel.selectedPayments()[item.id].base_paid_amount = baseAmount;\n                        CheckoutModel.selectedPayments()[item.id].cart_total_formated(PriceHelper.formatPrice(amount));\n                        self.reCalculateTotal(item.id);\n                    }\n                }\n            },\n            editPaymentPrice: function (data, event) {\n                var seletctedId = data.id;\n                var paymentPrice = PriceHelper.toNumber(event.target.value);\n                event.target.value = PriceHelper.formatPrice(PriceHelper.toNumber(event.target.value));\n                CheckoutModel.selectedPayments()[seletctedId].cart_total = paymentPrice;\n                CheckoutModel.selectedPayments()[seletctedId].base_cart_total = PriceHelper.toBasePrice(paymentPrice);\n                CheckoutModel.selectedPayments()[seletctedId].paid_amount = paymentPrice;\n                CheckoutModel.selectedPayments()[seletctedId].base_paid_amount = PriceHelper.toBasePrice(paymentPrice);\n                this.reCalculateTotal(seletctedId);\n            },\n            reCalculateTotal: function (seletctedId) {\n                var currenTotal = 0;\n                var currenBaseTotal = 0;\n                ko.utils.arrayForEach(CheckoutModel.selectedPayments(), function(item, index) {\n                    item.id = index;\n                    currenTotal += PriceHelper.toNumber(item.cart_total);\n                    currenBaseTotal += PriceHelper.toNumber(item.base_cart_total);\n                });\n                this.currentTotal(currenTotal);\n                this.checkAddPayment(currenTotal);\n                CheckoutModel.remainTotal(this.cartTotal() - currenTotal);\n                CheckoutModel.baseRemainTotal(this.baseCartTotal() - currenBaseTotal);\n                if(seletctedId >= 0 && CheckoutModel.remainTotal() < 0) {\n                    this.setTotalWithoutChange(seletctedId, CheckoutModel.remainTotal(), CheckoutModel.baseRemainTotal());\n                }\n            },\n            setTotalWithoutChange: function (seletctedId, remailTotal, baseRemainTotal) {\n                var cartTotal = CheckoutModel.selectedPayments()[seletctedId].cart_total;\n                var baseCartTotal = CheckoutModel.selectedPayments()[seletctedId].base_cart_total;\n                CheckoutModel.selectedPayments()[seletctedId].paid_amount = cartTotal + remailTotal;\n                CheckoutModel.selectedPayments()[seletctedId].base_paid_amount = baseCartTotal + baseRemainTotal;\n            },\n            checkAddPayment: function (currenTotal) {\n                if(currenTotal < this.cartTotal()){\n                    $(this.addPaymentButton).prop('disabled', false);\n                }else{\n                    $(this.addPaymentButton).prop('disabled', true);\n                }\n            },\n            disableAddPaymentButton: function () {\n                $(this.addPaymentButton).prop('disabled', true);\n            },\n            hidePaymentPopup:function () {\n                $(this.rightPopup).hide();\n                $(this.rightPopup).removeClass('fade-in');\n                $(this.wrapBackover).hide()\n            },\n            removeSelectedPayment: function (data, event) {\n                CheckoutModel.selectedPayments.remove(data);\n                this.reCalculateTotal(-1);\n                this.showActivePayments();\n                if(data.is_extension_method == true && data.actions && data.actions.remove){\n                    data.actions.remove();\n                }\n            },\n            removePayLaterPayment: function (data, event) {\n                ko.utils.arrayForEach(CheckoutModel.selectedPayments(), function(item) {\n                    if(item != undefined) {\n                        if (item.is_pay_later == '1') {\n                            CheckoutModel.selectedPayments.remove(item);\n                        }\n                    }\n                });\n            },\n            showActivePayments: function () {\n                if(CheckoutModel.selectedPayments().length == 0){\n                    if($(this.selectedPayment) !== undefined){\n                        $(this.selectedPayment).hide();\n                    }\n                    if($(this.creditCardPayment) !== undefined){\n                        $(this.creditCardPayment).hide();\n                    }\n                    if($(this.paymentList) !== undefined){\n                        $(this.paymentList).show();\n                    }\n                    $(this.addPaymentButton).prop('disabled', false);\n                }\n            },\n            isShowReferenceNumber: function (check) {\n                if(check == '1'){\n                    return true;\n                }\n                return false;\n            },\n            editReferenceNumber: function (data, event) {\n                var seletctedId = data.id;\n                CheckoutModel.selectedPayments()[seletctedId].reference_number = event.target.value;\n            },\n            getRefenceNumberText: function () {\n                return $t('Reference Number');\n            },\n            getRefenrenceNumberId: function (code) {\n                return code+'_reference_number';\n            },\n            renewPayments: function () {\n                CheckoutModel.selectedPayments([]);\n                this.currentTotal(undefined);\n                if (Helper.isUseOnline('checkout')) {\n                    CheckoutModel.remainTotal(TotalsFactory.get().getOnlineValue('grand_total'));\n                    CheckoutModel.baseRemainTotal(Helper.toBasePrice(TotalsFactory.get().getOnlineValue('grand_total')));\n                }else{\n                    CheckoutModel.remainTotal(TotalsFactory.get().getTotalValue('grand_total'));\n                    CheckoutModel.baseRemainTotal(TotalsFactory.get().getBaseTotalValue('grand_total'));\n                }\n                if($(this.paymentList) !== undefined){\n                    $(this.paymentList).show();\n                }\n                Helper.dispatchEvent('payments_reset_after', '');\n            },\n            checkVisibleInputBox: function (check) {\n                if(check == '1'){\n                    return false;\n                }\n                return true;\n            },\n            setPaymentMethod: function(data){\n                var self = this;\n                if(data && data.code){\n                    var paymentMethod = ($.inArray(data.code, self.WEBPOS_PAYMENTS) >= 0)?self.MULTIPLE_PAYMENT_CODE:data.code;\n                    if(Helper.isUseOnline('checkout') && (paymentMethod != CheckoutModel.paymentCode())){\n                        CheckoutModel.savePaymentMethodOnline(paymentMethod);\n                    }else{\n                        CheckoutModel.paymentCode(paymentMethod);\n                    }\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/checkout/receipt.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/lib/jquery-barcode'\n    ],\n    function ($, ko, Component, Helper, DateHelper, CheckoutModel) {\n        \"use strict\";\n\n        return Component.extend({\n            containerId: 'checkout_success_print_receipt',\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout/receipt'\n            },\n            totalsCode: ko.observableArray(),\n            configs: ko.observableArray(),\n            customerAdditionalInfomation: ko.observableArray(),\n            initialize: function () {\n                this._super();\n                this.orderData = ko.pureComputed(function(){\n                    var result = CheckoutModel.createOrderResult();\n                    return (result && result.increment_id)?result:false;\n                });\n            },\n            \n            initDefaultData: function(){\n                var totalsCode =[\n                    {code:'subtotal',title:'Subtotal', required:true, sortOrder: 1, isPrice: true},\n                    {code:'shipping_amount',title:'Shipping', required:true, sortOrder: 10, isPrice: true},\n                    {code:'tax_amount',title:'Tax', required:true,  sortOrder: 20, isPrice: true},\n                    {code:'discount_amount',title:'Discount', required:false,  sortOrder: 30, isPrice: true},\n                    {code:'grand_total',title:'Grand Total', required:true,  sortOrder: 40, isPrice: true},\n                    {code:'total_paid',title:'Total Paid', required:true,  sortOrder: 50, isPrice: true},\n                    {code:'total_due',title:'Total Due', required:true,  sortOrder: 60, isPrice: true}\n                ];\n                var customerAdditionalInfomation = [];\n                var eventData = {\n                    customer_id:this.getOrderData('customer_id'),\n                    totals:totalsCode,\n                    accountInfo:customerAdditionalInfomation\n                };\n                Helper.dispatchEvent('prepare_receipt_totals', eventData);\n                totalsCode.sort(function(a, b) {\n                    if(!a.sortOrder){\n                        a.sortOrder = 2;\n                    }\n                    if(!b.sortOrder){\n                        b.sortOrder = 2;\n                    }\n                    return parseFloat(a.sortOrder) - parseFloat(b.sortOrder);\n                });\n                this.totalsCode(totalsCode);\n                this.customerAdditionalInfomation(customerAdditionalInfomation);\n\n                var configs = [\n                    {code:'auto_print',value:window.webposConfig[\"webpos/receipt/general/auto_print\"]},\n                    {code:'font_type',value:window.webposConfig[\"webpos/receipt/content/font_type\"]},\n                    {code:'footer_text',value:window.webposConfig[\"webpos/receipt/content/footer_text\"]},\n                    {code:'header_text',value:window.webposConfig[\"webpos/receipt/content/header_text\"]},\n                    {code:'show_cashier_name',value:window.webposConfig[\"webpos/receipt/optional/show_cashier_name\"]},\n                    {code:'show_comment',value:window.webposConfig[\"webpos/receipt/optional/show_comment\"]},\n                    {code:'show_receipt_logo',value:window.webposConfig[\"webpos/receipt/optional/show_receipt_logo\"]},\n                    {code:'logo',value:window.webposConfig[\"webpos/general/webpos_logo\"]}\n                ];\n                this.configs(configs);\n            },\n            \n            formatPrice: function(string){\n                return Helper.formatPrice(string);\n            },\n            \n            getConfigData: function(code){\n                if(this.configs()){\n                    var config = ko.utils.arrayFirst(this.configs(), function(config){\n                        return (config && config.code == code);\n                    });\n                    if(config){\n                        return config.value;\n                    }\n                }\n                return \"\";\n            },\n            \n            getOrderData: function (key) {\n                var self = this;\n                var data = false;\n                if(self.orderData()){\n                    data = self.orderData();\n                    if(key){\n                        if(typeof data[key] != \"undefined\"){\n                            data = data[key];\n                        }else{\n                            data = \"\"\n                        }\n                    }\n                }\n                return data;\n            },\n            \n            isAutoPrint: function(){\n                return (this.getConfigData('auto_print') == 1)?true:false;\n            },\n            \n            getFont: function(){\n                return this.getConfigData('font_type');\n            },\n            getFooterHtml: function(){\n                return this.getConfigData('footer_text');\n            },\n            getHeaderHtml: function(){\n                return this.getConfigData('header_text');\n            },\n            hasHeaderHtml: function(){\n                return (this.getConfigData('header_text'))?true:false;\n            },\n            isShowCashierName: function(){\n                return (this.getConfigData('show_cashier_name')== 1)?true:false;\n            },\n            isShowComment: function(){\n                return (this.getConfigData('show_comment')== 1 && this.getComment())?true:false;\n            },\n            isShowLogo: function(){\n                return (this.getConfigData('show_receipt_logo')== 1)?true:false;\n            },\n            getLogoPath: function(){\n                return this.getConfigData('logo');\n            },\n            getIncrementId: function(){\n                return \"#\"+this.getOrderData('increment_id');\n            },\n            getCreatedDate: function(){\n                return DateHelper.getDate(this.getOrderData('created_at'));\n            },\n            getCashierName: function(){\n                return this.getOrderData('webpos_staff_name');\n            },\n            getCreatedTime: function(){\n                var createdAt = this.getOrderData('created_at');\n                var currentTime = DateHelper.stringToCurrentTime(createdAt);\n                return DateHelper.getTime(currentTime);\n            },\n            getComment: function(){\n                return this.getOrderData('customer_note');\n            },\n            getShipping: function(){\n                return this.getOrderData('shipping_description');\n            },\n            hasShipping: function(){\n                return (this.getOrderData('shipping_amount')>0)?true:false;\n            },\n            getCustomerName: function(){\n                return this.getOrderData('customer_firstname')+\" \"+this.getOrderData('customer_lastname');\n            },\n            hasCustomerName: function(){\n                return (this.getOrderData('customer_firstname') || this.getOrderData('customer_lastname'))?true:false;\n            },\n            getWebposChange: function(){\n                return this.getOrderData('webpos_change')+\" \"+this.getOrderData('webpos_change');\n            },\n            hasWebposChange: function(){\n                return (this.getOrderData('webpos_change')>0)?true:false;\n            },\n            getPayment: function(){\n                var payments = [];\n                if(this.getOrderData('webpos_order_payments') && this.getOrderData('webpos_order_payments').length > 0){\n                    ko.utils.arrayForEach(this.getOrderData('webpos_order_payments'), function(payment) {\n                        if(payment.payment_amount > 0){\n                            payments.push(payment);\n                        }\n                    });\n                }\n                return payments;\n            },\n            hasPayment: function(){\n                return (this.getPayment() && this.getPayment().length >0)?true:false;\n            },\n            getItems: function(){\n                return this.getOrderData('items');\n            },\n            getOrderTotals: function(){\n                var self = this;\n                var totals = [];\n                if(self.totalsCode() && self.totalsCode().length > 0){\n                    ko.utils.arrayForEach(self.totalsCode(), function(data) {\n                        var amount = self.getOrderData(data.code);\n                        if(amount || (data.required && data.required == true)){\n                            var value = (data.isPrice == false)?(amount +' '+data.valueLabel):self.formatPrice(amount);\n                            var total = {\n                                'label':data.title,\n                                'value':value\n                            };\n                            totals.push(total);\n                        }\n                    });\n                }\n                return totals;\n            },\n            getCustomerAdditionalInfo: function(){\n                var self = this;\n                if(self.customerAdditionalInfomation() && self.customerAdditionalInfomation().length > 0){\n                    return self.customerAdditionalInfomation();\n                }\n                return [];\n            },\n            toHtml: function(){\n                var self = this;\n                var html = \"\";\n                if($(\"#\"+self.containerId).length > 0){\n                    var settings = {\n                        output:\"css\",\n                        bgColor: \"#FFFFFF\",\n                        color: \"#000000\",\n                        barWidth: 1,\n                        barHeight: 20\n                      };\n                    $(\"#webpos_checkout_receipt_barcode\").html(\"\").barcode(this.getOrderData('increment_id'), \"code128\", settings);\n                    html = $(\"#\"+self.containerId).html();\n                }\n                return html;\n            }\n            \n        });\n    }\n);","Magestore_Webpos/js/view/checkout/checkout/payment_creditcard.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/checkout/checkout/payment_selected'\n    ],\n    function ($,ko, SelectedPayment) {\n        \"use strict\";\n        return SelectedPayment.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout/payment_creditcard'\n            },\n            visibilityPaymentType: function () {\n                return [1];\n            },\n            getCcYearsValues: function() {\n                return _.map(WEBPOS.config.cc_years, function(value, key) {\n                    return {\n                        'value': key,\n                        'year': value\n                    }\n                });\n            },\n            getCcMonthsValues: function() {\n                return _.map(WEBPOS.config.cc_months, function(value, key) {\n                    return {\n                        'value': key,\n                        'month': value\n                    }\n                });\n            },\n            getCcTypesValues: function() {\n                return _.map(WEBPOS.config.cc_types, function(value, key) {\n                    return {\n                        'value': key,\n                        'type': value\n                    }\n                });\n            },\n        });\n    }\n);\n","Magestore_Webpos/js/view/checkout/checkout/payment_popup.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'require',\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/view/base/list/collection-list',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/checkout/payment-popup',\n        'Magestore_Webpos/js/view/checkout/checkout/renderer/payment-factory',\n    ],\n    function (require, $, ko, ViewManager, colGrid, CheckoutModel, Payment, RenderPaymentFactory) {\n        \"use strict\";\n        return colGrid.extend({\n            items: ko.observableArray([]),\n            columns: ko.observableArray([]),\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout/payment_popup',\n            },\n            initialize: function () {\n                this.isShowHeader = true;\n                this.model = Payment().setMode('offline');\n                this._super();\n                this._render();\n            },\n            _prepareColumns: function () {\n                this.addColumn({headerText: \"Title\", rowText: \"title\", renderer: RenderPaymentFactory.get()});\n            },\n            _prepareCollection: function () {\n                this.filterAttribute = 'code';\n                // if(this.collection == null) {\n                    this.collection = this.model.getCollection()\n                        .addFieldToFilter('type', '0', 'eq')\n                        .addFieldToFilter('code', this.getSelectPaymentCodes(), 'nin')\n                    ;\n                // }\n            },\n            setPaymentMethod: function (data, event) {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                if(data.type == '0'){\n                    viewManager.getSingleton('view/checkout/checkout/payment_selected').addPayment(data);\n                    if($('#payment_selected') !== undefined){\n                        $('#payment_selected').show();\n                    }\n                    if($('#payment_creditcard') !== undefined){\n                        $('#payment_creditcard').hide();\n                    }\n                    if($('#payment_list') !== undefined){\n                        $('#payment_list').hide();\n                    }\n                }\n            },\n            getSelectPaymentCodes: function () {\n                var selectdCodes = [];\n                ko.utils.arrayForEach(CheckoutModel.selectedPayments(), function (item) {\n                    selectdCodes.push(item.code);\n                });\n                return selectdCodes;\n            },\n            checkPaymentCollection: function () {\n                if(this.items().length > 0){\n                    return false;\n                }\n                return true;\n            },\n        });\n    }\n);\n","Magestore_Webpos/js/view/checkout/checkout/success.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'mage/translate',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function ($,ko, Component, ViewManager, CheckoutModel,  PriceHelper, Alert, AddNoti, Translate, Event) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout/success'\n            },\n            successMessage: ko.observable(),\n            successImageUrl: ko.observable(),\n            printWindow: ko.observable(),\n            initialize: function () {\n                this._super();\n                this.orderData = ko.pureComputed(function(){\n                    var result = CheckoutModel.createOrderResult();\n                    return (result && result.increment_id)?result:false;\n                });\n                this.createdOrder = ko.pureComputed(function(){\n                    var result = CheckoutModel.createOrderResult();\n                    return (result && result.increment_id)?true:false;\n                });\n                var self = this;\n                Event.observer('webpos_order_save_after',function(event,data){\n                    if(data && data.increment_id){\n                        ViewManager.getSingleton('view/checkout/checkout/receipt').initDefaultData();\n                        if(ViewManager.getSingleton('view/checkout/checkout/receipt').isAutoPrint()){\n                            self.printReceipt();\n                        }\n                    }\n                });\n            },\n            getOrderData: function(key){\n                var orderData = this.orderData();\n                var data = \"\";\n                if(orderData){\n                    data = orderData;\n                    if(key){\n                        if(typeof data[key] != \"undefined\"){\n                            data = data[key];\n                        }else{\n                            data = \"\";\n                        }\n                    }\n                }\n                return data;\n            },\n            getCustomerEmail: function(){\n                return this.getOrderData('customer_email');\n            },\n            getGrandTotal: function(){\n                return PriceHelper.formatPrice(this.getOrderData('grand_total'));\n            },\n            getOrderIdMessage: function(){\n                return \"#\"+this.getOrderData('increment_id');\n            },\n            printReceipt: function(){\n                ViewManager.getSingleton('view/checkout/checkout/receipt').initDefaultData();\n                var print_window = window.open('', 'print_offline', 'status=1,width=500,height=700');\n                var html = ViewManager.getSingleton('view/checkout/checkout/receipt').toHtml();\n                if(print_window){\n                    this.printWindow(print_window);\n                    print_window.document.write(html);\n                    print_window.print();\n                }else{\n                    AddNoti(Translate(\"Your browser has blocked the automatic popup, please change your browser setting or print the receipt manually\"), true, \"warning\", Translate('Message'));\n                }\n            },\n            startNewOrder: function(){\n                ViewManager.getSingleton('view/checkout/checkout/payment_selected').initPayments();\n                ViewManager.getSingleton('view/checkout/cart').switchToCart();\n                ViewManager.getSingleton('view/checkout/cart').emptyCart();\n                CheckoutModel.resetCheckoutData();\n                if(this.printWindow()){\n                    this.printWindow().close();\n                }\n            },\n            sendEmail: function(){\n                if(this.getCustomerEmail()){\n                    CheckoutModel.sendEmail(this.getCustomerEmail(),this.getOrderData('increment_id'));\n                    AddNoti(Translate(\"An email has been sent for this order\"), true, \"success\", Translate('Message'));\n                }else{\n                    Alert({\n                        priority:\"warning\",\n                        title: \"Warning\",\n                        message: \"Please enter the email address\"\n                    });\n                }\n            },\n            saveEmail: function(data,event){\n                if(!this.orderData()){\n                    this.orderData({});\n                }\n                this.orderData().customer_email = event.target.value;\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/checkout/shipping.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'require',\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/view/base/list/collection-list',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/model/checkout/cart/items',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/shipping-factory',\n        'Magestore_Webpos/js/helper/general',\n        'mage/calendar',\n    ],\n    function (require, $, ko, ViewManager, colGrid, CheckoutModel, PriceHelper, Items, CartModel, ShippingFactory, Helper) {\n        \"use strict\";\n        return colGrid.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout/shipping',\n            },\n            onlineItems: ko.observableArray([]),\n            initialize: function () {\n                this.isShowHeader = true;\n                this.model = ShippingFactory.get().setMode('offline');\n                this.isCheck = ko.pureComputed(function(){\n                    return CheckoutModel.selectedShippingCode();\n                });\n                this._super();\n                this._render();\n                this.initObserver();\n            },\n            initObserver: function(){\n                var self = this;\n                Helper.observerEvent('go_to_checkout_page', function(){\n                    if(!Helper.isUseOnline('checkout')){\n                        self._render();\n                    }\n                });\n                Helper.observerEvent('load_shipping_online_after', function(event, data){\n                    if(data && data.items){\n                        self.onlineItems(data.items);\n                        self._prepareItems();\n                        self.initShippingMethod();\n                    }\n                });\n            },\n            _prepareCollection: function () {\n                if(this.collection == null) {\n                    this.collection = this.model.getCollection().setOrder('price','DESC');\n                }\n                this.collection.setPageSize(10);\n                this.collection.setCurPage(1);\n            },\n            _prepareItems: function () {\n                var self = this;\n                if (Helper.isUseOnline('checkout')) {\n                    self.items(self.onlineItems());\n                }else{\n                    this._super();\n                }\n            },\n            /**\n             * Init default method if not selected, resave shipping method if selected\n             */\n            initShippingMethod: function(){\n                var self = this;\n                var selectedCode = CheckoutModel.selectedShippingCode();\n                var method = self.getShippingMethodByCode(selectedCode);\n                if(method){\n                    self.reSaveShippingMethod();\n                }else{\n                    self.saveDefaultShippingMethod();\n                }\n            },\n            /**\n             * Save shipping method\n             * @param data\n             */\n            saveShippingMethod: function (data) {\n                CheckoutModel.saveShipping(data);\n                Helper.observerEvent('save_default_payment', '');\n            },\n            /**\n             * Format shipping price\n             * @param price\n             * @param priceType\n             * @returns {*}\n             */\n            formatShippingPrice: function(price, priceType){\n                var shippingFee = 0;\n                shippingFee = price;\n                if(typeof priceType != \"undefined\"){\n                    shippingFee = (priceType == \"I\")?(shippingFee * Items.totalShipableItems()):shippingFee;\n                }\n                return Helper.convertAndFormatPrice(shippingFee);\n            },\n            /**\n             * get selected shipping method\n             * @returns {*}\n             */\n            getSelectedShippingMethod: function () {\n                var shippingList = this.items();\n                if(shippingList.length > 0){\n                    var selectedShippingCode = CheckoutModel.selectedShippingCode();\n                    var method = false;\n                    for(var i = 0; i < shippingList.length; i++){\n                        if(shippingList[i].code == selectedShippingCode) {\n                            method = shippingList[i];\n                            break;\n                        }\n                    }\n                    if(method == false){\n                        CheckoutModel.selectedShippingCode('');\n                        CheckoutModel.selectedShippingTitle('');\n                    }else{\n                        return method;\n                    }\n                }\n                return false;\n            },\n            /**\n             * get shipping method by code\n             * @returns {*}\n             */\n            getShippingMethodByCode: function (code) {\n                var shippingList = this.items();\n                if(shippingList.length > 0){\n                    var method = false;\n                    for(var i = 0; i < shippingList.length; i++){\n                        if(shippingList[i].code == code) {\n                            method = shippingList[i];\n                            break;\n                        }\n                    }\n                    return method;\n                }\n                return false;\n            },\n            /**\n             *\n             */\n            reSaveShippingMethod: function(){\n                var self = this;\n                var selectedMethod = self.getSelectedShippingMethod();\n                if(selectedMethod && !CartModel.isVirtual()){\n                    self.saveShippingMethod(selectedMethod);\n                }\n            },\n            /**\n             * get default shipping method\n             * @returns {*}\n             */\n            getDefaultShippingMethod: function () {\n                var self = this;\n                var shippingList = this.items();\n                if(shippingList.length > 0){\n                    var defaultShippingCode = Helper.getBrowserConfig('default_shipping');\n                    defaultShippingCode = (defaultShippingCode == 'webpos_shipping')?'webpos_shipping_storepickup':defaultShippingCode+'_'+defaultShippingCode;\n                    var defaultMethod = false;\n                    for(var i = 0; i < shippingList.length; i++){\n                        if(shippingList[i].code == defaultShippingCode) {\n                            defaultMethod = shippingList[i];\n                            break;\n                        }\n                        if(shippingList[i].code == 'webpos_shipping_storepickup' && defaultShippingCode == ''){\n                            defaultMethod = shippingList[i];\n                            break;\n                        }\n                    }\n                    if(defaultMethod == false){\n                        CheckoutModel.useWebposShipping();\n                        return self.getShippingMethodByCode('webpos_shipping_storepickup');\n                    }else{\n                        return defaultMethod;\n                    }\n                }\n                return false;\n            },\n            /**\n             * Save default shipping method\n             */\n            saveDefaultShippingMethod: function () {\n                var self = this;\n                var defaultMethod = self.getDefaultShippingMethod();\n                if(defaultMethod && !CartModel.isVirtual()){\n                    self.saveShippingMethod(defaultMethod);\n                }\n            },\n            /**\n             * Check default method\n             * @param code\n             * @returns {boolean}\n             */\n            isDefaultMethod: function (code) {\n                var self = this;\n                return (self.getDefaultShippingMethod() && self.getDefaultShippingMethod().code == code)?true:false;\n            },\n            /**\n             * Check config enable delivery data\n             * @returns {boolean}\n             */\n            useDeliveryTime: function () {\n                return (Helper.getBrowserConfig('webpos/general/enable_delivery_date') == 1) ? true : false;\n            },\n            /**\n             * Reset shipping list\n             */\n            resetShipping: function () {\n                var self = this;\n                if(!Helper.isUseOnline('checkout')){\n                    self._prepareItems();\n                    self.saveDefaultShippingMethod();\n                }\n            },\n            setShippingMethod: function (data, event) {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                CheckoutModel.saveShipping(data);\n                viewManager.getSingleton('view/checkout/checkout/payment').saveDefaultPaymentMethod();\n            },\n            getShippingPrice: function(price, priceType){\n                var shippingFee = 0;\n                shippingFee = price;\n                if(typeof priceType != \"undefined\"){\n                    shippingFee = (priceType == \"I\")?(shippingFee * Items.totalShipableItems()):shippingFee;\n                }\n                return PriceHelper.convertAndFormat(shippingFee);\n            },\n            checkDefaultMethod: function (code) {\n                if(this.getDefaultShippingMethod() && this.getDefaultShippingMethod().code == code){\n                    $('#'+code).prop(\"checked\", true);\n                }\n            },\n            initDate: function () {\n                var currentDate = new Date();\n                var year = currentDate.getFullYear();\n                var month = currentDate.getMonth();\n                var day = currentDate.getDate();\n                $(\"#delivery_date\").calendar({\n                    showsTime: true,\n                    controlType: 'select',\n                    timeFormat: 'HH:mm TT',\n                    showTime: false,\n                    minDate: new Date(year, month, day, '00', '00', '00', '00'),\n                });\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/checkout/payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'require',\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/view/base/list/collection-list',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/view/checkout/checkout/payment_selected',\n        'Magestore_Webpos/js/model/checkout/payment-factory',\n        'Magestore_Webpos/js/view/checkout/checkout/renderer/payment-factory',\n    ],\n    function (require, $, ko, ViewManager, colGrid, Helper, SelectedPayment, PaymentFactory, RenderPaymentFactory) {\n        \"use strict\";\n        return colGrid.extend({\n            items: ko.observableArray([]),\n            columns: ko.observableArray([]),\n            onlineItems: ko.observableArray([]),\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout/payment',\n            },\n            initialize: function () {\n                if(!this.needinitObserver){\n                    this.initObserver();\n                }\n                this.isShowHeader = true;\n                this.model = PaymentFactory.get().setMode('offline');\n                this._super();\n                this._render();\n            },\n            initObserver: function(){\n                var self = this;\n                self.needinitObserver = true;\n                Helper.observerEvent('go_to_checkout_page', function(){\n                    self.saveDefaultPaymentMethod();\n                });\n                Helper.observerEvent('save_default_payment', function(){\n                    self.saveDefaultPaymentMethod();\n                });\n                Helper.observerEvent('reset_payments_data', function(){\n                    self.collection.reset();\n                    SelectedPayment().renewPayments();\n                });\n                Helper.observerEvent('load_payment_online_after', function(event, data){\n                    if(data && data.items){\n                        for (var i in data.items) {\n                            data.items[i].columns = self.columns;\n                        }\n                        self.onlineItems(data.items);\n                        self._prepareItems();\n                        self.saveDefaultPaymentMethod();\n                    }\n                });\n            },\n            _prepareCollection: function () {\n                this.filterAttribute = 'code';\n                if(this.collection == null) {\n                    this.collection = this.model.getCollection();\n                }\n            },\n            _prepareItems: function () {\n                var self = this;\n                if (Helper.isUseOnline('checkout')) {\n                    self.items(self.onlineItems());\n                }else{\n                    var deferred = self.getCollection().load();\n                    self.startLoading();\n                    deferred.done(function (data) {\n                        self.setItems(data.items);\n                    });\n                    deferred.always(function (error) {\n                        self.finishLoading();\n                    });\n                }\n            },\n            _prepareColumns: function () {\n                this.addColumn({headerText: \"Title\", rowText: \"title\", renderer: RenderPaymentFactory.get()});\n            },\n            setPaymentMethod: function (data, event) {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                if(data.type != '1'){\n                    viewManager.getSingleton('view/checkout/checkout/payment_selected').addPayment(data);\n                    if($('#payment_selected') !== undefined){\n                        $('#payment_selected').show();\n                    }\n                    if($('#payment_creditcard') !== undefined){\n                        $('#payment_creditcard').hide();\n                    }\n                }if(data.type == '1'){\n                    viewManager.getSingleton('view/checkout/checkout/payment_creditcard').addPayment(data);\n                    if($('#payment_creditcard') !== undefined){\n                        $('#payment_creditcard').show();\n                        viewManager.getSingleton('view/checkout/checkout/swipe/jquery.cardswipe').initSwipe('webpos');\n                    }\n                    if($('#payment_selected') !== undefined){\n                        $('#payment_selected').hide();\n                    }\n                }\n                if($('#payment_list') !== undefined){\n                    $('#payment_list').hide();\n                }\n                viewManager.getSingleton('view/checkout/checkout/payment_popup')._prepareItems();\n            },\n            addExtensionMethod: function (data) {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                viewManager.getSingleton('view/checkout/checkout/payment_selected').addExtensionPayment(data);\n                if($('#payment_selected') !== undefined){\n                    $('#payment_selected').show();\n                }\n                if($('#payment_creditcard') !== undefined){\n                    $('#payment_creditcard').hide();\n                }\n                if($('#payment_list') !== undefined){\n                    $('#payment_list').hide();\n                }\n                viewManager.getSingleton('view/checkout/checkout/payment_popup')._prepareItems();\n            },\n            getDefaultPaymentMethod: function () {\n                var paymentList = this.items();\n                if (Helper.isUseOnline('checkout')) {\n                    paymentList = this.onlineItems();\n                }\n                if(paymentList.length > 0){\n                    for(var i = 0; i < paymentList.length; i++){\n                        if(paymentList[i].is_default == '1'){\n                            return paymentList[i];\n                        }\n                    }\n                }\n                return false;\n            },\n            saveDefaultPaymentMethod: function () {\n                this.renewPayments();\n                if(this.getDefaultPaymentMethod()){\n                    this.setPaymentMethod(this.getDefaultPaymentMethod());\n                }\n            },\n            renewPayments: function () {\n                SelectedPayment().renewPayments();\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/checkout/checkout/integration/store-credit.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/checkout/checkout/integration/abstract',\n        'Magestore_Webpos/js/view/settings/general/storecredit/auto-sync-balance',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/integration/store-credit-factory',\n    ],\n    function ($, ko, Abstract, AutoSyncBalance, Helper, CartModel, StoreCreditFactory) {\n        \"use strict\";\n        return Abstract.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout/integration/storecredit'\n            },\n            initialize: function () {\n                this._super();\n                this.model = StoreCreditFactory.get();\n                if(!this.addedData){\n                    this.initData();\n                }\n            },\n            initData: function(){\n                var self = this;\n                self.addedData = true;\n                self.balance = ko.pureComputed(function(){\n                    return self.convertAndFormatPrice(self.model.balanceAfterApply());\n                });\n                self.currentAmount = ko.pureComputed(function(){\n                    return self.convertAndFormatWithoutSymbol(self.model.currentAmount());\n                });\n                self.canApply = ko.pureComputed(function(){\n                    return (self.model.balance() > 0)?true:false;\n                });\n                self.useMaxPoint = self.model.useMaxPoint;\n                self.updatingBalance = self.model.updatingBalance;\n                self.visible = self.model.visible;\n                self.observerEvent('go_to_checkout_page', $.proxy(function(){\n                    if(CartModel.customerId() && Helper.isStoreCreditEnable()){\n                        self.updateStorageBalance();\n                    }\n                }, self));\n            },\n            pointUseChange: function(el, event){\n                var amount = this.getPriceHelper().toNumber(event.target.value);\n                amount = (amount > 0)?amount:0;\n                event.target.value = amount;\n                amount = this.toBasePrice(amount);\n                amount = (amount > 0)?amount:0;\n                if(amount >= this.model.balance()){\n                    amount = this.model.balance();\n                    this.model.useMaxPoint(true);\n                }else{\n                    this.model.useMaxPoint(false);\n                }\n                this.model.currentAmount(amount);\n            },\n            useMaxPointChange: function(el, event){\n                this.useMaxPoint(event.target.checked);\n                this.model.useMaxPoint(event.target.checked);\n            },\n            apply: function(){\n                this.model.apply();\n            },\n            updateBalance: function(){\n                if(this.updatingBalance() == false){\n                    this.model.updateBalance();\n                }\n            },\n            updateStorageBalance: function(){\n                this.model.updateStorageBalance();\n                var autoSyncBalance = Helper.getLocalConfig(AutoSyncBalance().configPath);\n                if(autoSyncBalance == true){\n                    this.model.updateBalance();\n                }\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/checkout/checkout/integration/gift-card.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/checkout/checkout/integration/abstract',\n        'Magestore_Webpos/js/model/checkout/integration/gift-card-factory',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function ($,ko, Abstract, GiftCartFactory, Helper) {\n        \"use strict\";\n        return Abstract.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout/integration/giftcard'\n            },\n            initialize: function () {\n                this._super();\n                this.model = GiftCartFactory.get();\n                this.initData();\n            },\n            initData: function(){\n                var self = this;\n                self.balance = ko.pureComputed(function(){\n                    return self.convertAndFormatPrice(self.model.balanceAfterApply());\n                });\n                self.currentAmount = ko.pureComputed(function(){\n                    return self.convertAndFormatWithoutSymbol(self.model.currentAmount());\n                });\n                self.useMaxPoint = self.model.useMaxPoint;\n                self.updatingBalance = self.model.updatingBalance;\n                self.visible = self.model.visible;\n                self.canApply = ko.pureComputed(function(){\n                    return (self.model.balance() > 0)?true:false;\n                });\n                self.code = self.model.giftcardCode;\n                self.customerCodes = self.model.customerCodes;\n                self.appliedCards = ko.pureComputed(function(){\n                    return self.getAplliedCards();\n                });\n                self.selectedExistCode = ko.observable();\n                self.hasExistedCode = ko.pureComputed(function(){\n                    return (self.customerCodes().length > 0)?true:false;\n                });\n                self.giftcardLabel = ko.pureComputed(function(){\n                    var useOnline = Helper.isUseOnline('checkout');\n                    return (useOnline)?self.__(\"Customer's gift card\"):self.__(\"Gift card's balance\");\n                });\n                self.isOfflineCheckout = ko.pureComputed(function(){\n                    var useOnline = Helper.isUseOnline('checkout');\n                    return (useOnline)?false:true;\n                });\n                self.existedCodeCaption = Helper.__(\"-- Select existed code --\");\n            },\n            pointUseChange: function(el, event){\n                var amount = this.getPriceHelper().toNumber(event.target.value);\n                amount = (amount > 0)?amount:0;\n                amount = this.getPriceHelper().toBasePrice(amount);\n                this.model.currentAmount(amount);\n                if(amount >= this.model.balance()){\n                    amount = this.model.balance();\n                    this.model.useMaxPoint(true);\n                }else{\n                    this.model.useMaxPoint(false);\n                }\n            },\n            useMaxPointChange: function(el, event){\n                this.useMaxPoint(event.target.checked);\n                this.model.useMaxPoint(event.target.checked);\n            },\n            apply: function(){\n                var self = this;\n                if(Helper.isUseOnline('checkout')){\n                    if(self.model.giftcardCode()){\n                        self.updateBalance();\n                    }\n                }else{\n                    this.model.apply();\n                }\n                self.selectedExistCode('');\n            },\n            updateBalance: function(){\n                var self = this;\n                if(self.updatingBalance() == false){\n                    try{\n                        if(Helper.isUseOnline('checkout')){\n                            if(self.model.giftcardCode()){\n                                self.model.applyGiftcardOnline(self.model.giftcardCode());\n                                self.model.giftcardCode('');\n                            }\n                        }else{\n                            self.model.updateBalance();\n                        }\n                    }catch(error){\n                        console.log(error.message);\n                    }\n                }\n                self.selectedExistCode('');\n            },\n            saveCode: function(data, event){\n                this.model.giftcardCode(event.target.value);\n                this.updateBalance();\n            },\n            getAplliedCards: function(){\n                var self = this;\n                var cards = [];\n                var appliedCards = self.model.appliedCards();\n                ko.utils.arrayForEach(appliedCards, function(giftcard) {\n                    cards.push({\n                        code: giftcard.code,\n                        value: giftcard.value,\n                        balance: giftcard.balance,\n                        remain: giftcard.remain,\n                        usemax: giftcard.usemax,\n                        valueFormated: ko.pureComputed(function(){\n                            return self.convertAndFormatPrice(giftcard.value())\n                        }),\n                        balanceFormated: ko.pureComputed(function(){\n                            return self.convertAndFormatPrice(giftcard.balance())\n                        }),\n                        remainFormated: ko.pureComputed(function(){\n                            return self.convertAndFormatPrice(giftcard.remain())\n                        })\n                    });\n                });\n                return cards;\n            },\n            removeCard: function(card){\n                this.model.applyGiftCode(card.code, -1);\n                this.useMaxPoint(false);\n            },\n            editCard: function(card){\n                this.model.editCard(card);\n            },\n            selectExistedCode: function(data, event){\n                var self = this;\n                var code = event.target.value;\n                self.model.giftcardCode(code);\n                self.apply();\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/checkout/checkout/integration/reward-points.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/checkout/checkout/integration/abstract',\n        'Magestore_Webpos/js/view/settings/general/rewardpoints/auto-sync-balance',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/integration/reward-points-factory',\n    ],\n    function ($,ko, Abstract, AutoSyncBalance, Helper, CartModel, RewardPointFactory) {\n        \"use strict\";\n        return Abstract.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout/integration/rewardpoints'\n            },\n            initialize: function () {\n                this._super();\n                this.model = RewardPointFactory.get();\n                if(!this.addedData){\n                    this.initData();\n                }\n            },\n            initData: function(){\n                var self = this;\n                self.addedData = true;\n                self.balance = self.model.balanceAfterApply;\n                self.currentAmount = self.model.currentAmount;\n                self.useMaxPoint = self.model.useMaxPoint;\n                self.updatingBalance = self.model.updatingBalance;\n                self.visible = self.model.visible;\n                self.canApply = ko.pureComputed(function(){\n                    return (self.model.balance() > 0)?true:false;\n                });\n                self.observerEvent('go_to_checkout_page', $.proxy(function(){\n                    if(CartModel.customerId() && Helper.isRewardPointsEnable()){\n                        self.updateStorageBalance();\n                    }\n                }, self));\n            },\n            pointUseChange: function(el, event){\n                var amount = this.getPriceHelper().toNumber(event.target.value);\n                amount = (amount > 0)?amount:0;\n                this.model.currentAmount(amount);\n                if(amount >= this.model.balance()){\n                    amount = this.model.balance();\n                    this.model.useMaxPoint(true);\n                }else{\n                    this.model.useMaxPoint(false);\n                }\n            },\n            apply: function(){\n                if(Helper.isUseOnline('checkout')){\n                    this.model.spendPointOnline();\n                }else{\n                    this.model.apply();\n                }\n            },\n            updateBalance: function(){\n                if(this.updatingBalance() == false){\n                    this.model.updateBalance();\n                }\n            },\n            updateStorageBalance: function(){\n                this.model.updateStorageBalance();\n                var autoSyncBalance = Helper.getLocalConfig(AutoSyncBalance().configPath);\n                if(autoSyncBalance == true){\n                    this.model.updateBalance();\n                }\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/checkout/checkout/integration/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/abstract'\n    ],\n    function ($,ko, Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout/integration/default'\n            },\n            visible: ko.observable(true),\n            initialize: function () {\n                this._super();\n                this.visible(true);\n                //this.setModel('model/abstract');\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/checkout/checkout/renderer/payment-factory.js":"/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/view/checkout/checkout/renderer/payment',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'view/checkout/checkout/renderer/payment';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/view/checkout/checkout/renderer/payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/base/grid/renderer/abstract',\n    ],\n    function ($, ko, renderAbstract) {\n        \"use strict\";\n        return renderAbstract.extend({\n            render: function (item) {\n                var posPayments = [\n                    'cashforpos',\n                    'codforpos',\n                    'ccforpos',\n                    'cp1forpos',\n                    'cp2forpos'\n                ];\n                var code = item.code;\n                if(item.type == '1'){\n                    code = 'ccforpos';\n                }else{\n                    if($.inArray(item.code, posPayments) < 0){\n                        code = 'cp1forpos';\n                    }\n                }\n                return 'icon-iconPOS-payment-' + code;\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/checkout/payment/before-methods.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'underscore',\n        'uiComponent'\n    ],\n    function ($, ko, _, Component) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/checkout/payment/before-methods'\n            },\n            enableChilds: ko.observableArray([]),\n            initialize: function () {\n                this._super();\n                if(window.webposConfig.plugins){\n                    this.enableChilds(window.webposConfig.plugins);\n                }\n            },\n            hasChilds: function(){\n                var self = this;\n                var visibleChilds = [];\n                if(self.elems().length > 0){\n                    _.forEach(self.elems(), function(child){\n                        if(!self.isChildEnable(child.index)){\n                            self.removeChild(child.index);\n                        }\n                        if(child.visible()){\n                            visibleChilds.push(child.index);\n                        }\n                    });\n                }\n                return (self.elems().length > 0 && visibleChilds.length > 0)?true:false;\n            },\n            isChildEnable: function(index){\n                return ($.inArray(index, this.enableChilds()) !== -1);\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/checkout/swipe/jquery.cardswipe.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n\t[\n\t\t'jquery',\n\t\t'uiComponent',\n\t],\n\tfunction (jQuery, Component) {\n\t\t\"use strict\";\n\t\treturn Component.extend({\n\t\t\tswipeParserObj: function (strParse) {\n\t\t\t\tthis.input_trackdata_str = strParse;\n\t\t\t\tthis.account_name = null;\n\t\t\t\tthis.surname = null;\n\t\t\t\tthis.firstname = null;\n\t\t\t\tthis.account = null;\n\t\t\t\tthis.exp_month = null;\n\t\t\t\tthis.exp_year = null;\n\t\t\t\tthis.track1 = null;\n\t\t\t\tthis.track2 = null;\n\t\t\t\tthis.hasTrack1 = false;\n\t\t\t\tthis.hasTrack2 = false;\n\n\t\t\t\tvar sTrackData = this.input_trackdata_str;\n\t\t\t\tif (strParse != '') {\n\t\t\t\t\tvar nHasTrack1 = strParse.indexOf(\"^\");\n\t\t\t\t\tvar nHasTrack2 = strParse.indexOf(\"=\");\n\n\t\t\t\t\tvar bHasTrack1 = this.hasTrack1 = false;\n\t\t\t\t\tvar bHasTrack2 = this.hasTrack2 = false;\n\t\t\t\t\tif (nHasTrack1 > 0) {\n\t\t\t\t\t\tthis.hasTrack1 = bHasTrack1 = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (nHasTrack2 > 0) {\n\t\t\t\t\t\tthis.hasTrack2 = bHasTrack2 = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar bTrack1_2 = false;\n\t\t\t\t\tvar bTrack1 = false;\n\t\t\t\t\tvar bTrack2 = false;\n\n\t\t\t\t\tif (( bHasTrack1) && ( bHasTrack2)) {\n\t\t\t\t\t\tbTrack1_2 = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (( bHasTrack1) && (!bHasTrack2)) {\n\t\t\t\t\t\tbTrack1 = true;\n\t\t\t\t\t}\n\t\t\t\t\tif ((!bHasTrack1) && ( bHasTrack2)) {\n\t\t\t\t\t\tbTrack2 = true;\n\t\t\t\t\t}\n\t\t\t\t\tvar bShowAlert = false;\n\n\t\t\t\t\tif (bTrack1_2) {\n\t\t\t\t\t\tvar strCutUpSwipe = '' + strParse + ' ';\n\t\t\t\t\t\tvar arrayStrSwipe = new Array(4);\n\t\t\t\t\t\tvar arrayStrSwipe = strCutUpSwipe.split(\"^\");\n\t\t\t\t\t\tvar sAccountNumber, sName, sShipToName, sMonth, sYear;\n\t\t\t\t\t\tif (arrayStrSwipe.length > 2) {\n\t\t\t\t\t\t\tthis.account = stripAlpha(arrayStrSwipe[0].substring(1, arrayStrSwipe[0].length));\n\t\t\t\t\t\t\tthis.account_name = arrayStrSwipe[1];\n\t\t\t\t\t\t\tthis.exp_month = arrayStrSwipe[2].substring(2, 4);\n\t\t\t\t\t\t\tthis.exp_year = '20' + arrayStrSwipe[2].substring(0, 2);\n\t\t\t\t\t\t\tif (sTrackData.substring(0, 1) == '%') {\n\t\t\t\t\t\t\t\tsTrackData = sTrackData.substring(1, sTrackData.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar track2sentinel = sTrackData.indexOf(\";\");\n\t\t\t\t\t\t\tif (track2sentinel != -1) {\n\t\t\t\t\t\t\t\tthis.track1 = sTrackData.substring(0, track2sentinel);\n\t\t\t\t\t\t\t\tthis.track2 = sTrackData.substring(track2sentinel);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar nameDelim = this.account_name.indexOf(\"/\");\n\t\t\t\t\t\t\tif (nameDelim != -1) {\n\t\t\t\t\t\t\t\tthis.surname = this.account_name.substring(0, nameDelim);\n\t\t\t\t\t\t\t\tthis.firstname = this.account_name.substring(nameDelim + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbShowAlert = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (bTrack1) {\n\t\t\t\t\t\tstrCutUpSwipe = '' + strParse + ' ';\n\t\t\t\t\t\tarrayStrSwipe = new Array(4);\n\t\t\t\t\t\tarrayStrSwipe = strCutUpSwipe.split(\"^\");\n\n\t\t\t\t\t\tvar sAccountNumber, sName, sShipToName, sMonth, sYear;\n\n\t\t\t\t\t\tif (arrayStrSwipe.length > 2) {\n\t\t\t\t\t\t\tthis.account = sAccountNumber = stripAlpha(arrayStrSwipe[0].substring(1, arrayStrSwipe[0].length));\n\t\t\t\t\t\t\tthis.account_name = sName = arrayStrSwipe[1];\n\t\t\t\t\t\t\tthis.exp_month = sMonth = arrayStrSwipe[2].substring(2, 4);\n\t\t\t\t\t\t\tthis.exp_year = sYear = '20' + arrayStrSwipe[2].substring(0, 2);\n\t\t\t\t\t\t\tif (sTrackData.substring(0, 1) == '%') {\n\t\t\t\t\t\t\t\tthis.track1 = sTrackData = sTrackData.substring(1, sTrackData.length);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.track2 = ';' + sAccountNumber + '=' + sYear.substring(2, 4) + sMonth + '111111111111?';\n\t\t\t\t\t\t\tsTrackData = sTrackData + this.track2;\n\t\t\t\t\t\t\tvar nameDelim = this.account_name.indexOf(\"/\");\n\t\t\t\t\t\t\tif (nameDelim != -1) {\n\t\t\t\t\t\t\t\tthis.surname = this.account_name.substring(0, nameDelim);\n\t\t\t\t\t\t\t\tthis.firstname = this.account_name.substring(nameDelim + 1);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbShowAlert = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (bTrack2) {\n\t\t\t\t\t\tvar nSeperator = strParse.indexOf(\"=\");\n\t\t\t\t\t\tvar sCardNumber = strParse.substring(1, nSeperator);\n\t\t\t\t\t\tsYear = strParse.substr(nSeperator + 1, 2);\n\t\t\t\t\t\tsMonth = strParse.substr(nSeperator + 3, 2);\n\t\t\t\t\t\tthis.account = sAccountNumber = stripAlpha(sCardNumber);\n\t\t\t\t\t\tthis.exp_month = sMonth = sMonth;\n\t\t\t\t\t\tthis.exp_year = sYear = '20' + sYear;\n\t\t\t\t\t\tif (sTrackData.substring(0, 1) == '%') {\n\t\t\t\t\t\t\tsTrackData = sTrackData.substring(1, sTrackData.length);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif (((!bTrack1_2) && (!bTrack1) && (!bTrack2)) || (bShowAlert)) {\n\t\t\t\t\t\t//alert('Difficulty Reading Card Information.\\n\\nPlease Swipe Card Again.');\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tthis.dump = function () {\n\t\t\t\t\tvar s = \"\";\n\t\t\t\t\tvar sep = \"\\r\"; // line separator\n\t\t\t\t\ts += \"Name: \" + this.account_name + sep;\n\t\t\t\t\ts += \"Surname: \" + this.surname + sep;\n\t\t\t\t\ts += \"first name: \" + this.firstname + sep;\n\t\t\t\t\ts += \"account: \" + this.account + sep;\n\t\t\t\t\ts += \"exp_month: \" + this.exp_month + sep;\n\t\t\t\t\ts += \"exp_year: \" + this.exp_year + sep;\n\t\t\t\t\ts += \"has track1: \" + this.hasTrack1 + sep;\n\t\t\t\t\ts += \"has track2: \" + this.hasTrack2 + sep;\n\t\t\t\t\ts += \"TRACK 1: \" + this.track1 + sep;\n\t\t\t\t\ts += \"TRACK 2: \" + this.track2 + sep;\n\t\t\t\t\ts += \"Raw Input Str: \" + this.input_trackdata_str + sep;\n\n\t\t\t\t\treturn s;\n\t\t\t\t}\n\n\t\t\t\tfunction stripAlpha(sInput) {\n\t\t\t\t\tif (sInput == null)    return '';\n\t\t\t\t\treturn sInput.replace(/[^0-9]/g, '');\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t},\n\t\t\ttrimNumber: function (s) {\n\t\t\t\twhile (s.substr(0, 1) == '0' && s.length > 1) {\n\t\t\t\t\ts = s.substr(1, 9999);\n\t\t\t\t}\n\t\t\t\treturn s;\n\t\t\t},\n\t\t\tparseSwiperData: function (value) {\n\t\t\t\tif (value.charAt(0) !== '%') {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tvar p = this.swipeParserObj(value);\n\t\t\t\tvar result = new Array();\n\t\t\t\tif (p.hasTrack1) {\n\t\t\t\t\tif (p.account_name != null)\n\t\t\t\t\t\tresult[0] = p.account_name;\n\t\t\t\t\telse\n\t\t\t\t\t\tresult[0] = p.surname + ' ' + p.firstname;\t\t\t\t\t\t\n\t\t\t\t\tresult[1] = p.account;\n\t\t\t\t\tresult[2] = p.exp_month;\n\t\t\t\t\tresult[3] = p.exp_year;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tswipeNow: function (method) {\n\t\t\t\tif (jQuery('input#' + method + '-swiper-data')) {\n\t\t\t\t\tjQuery('input#' + method + '-swiper-data').focus();\n\t\t\t\t\tjQuery('input#' + method + '-swiper-data').val(' ');\n\t\t\t\t\tjQuery('input#' + method + '-swiper-data').select();\n\t\t\t\t}\n\t\t\t},\n\t\t\tinitSwipe: function (method) {\n\t\t\t\tvar self = this;\n\t\t\t\tjQuery('input#' + method + '-swiper-data').focus(function (event) {\n\t\t\t\t\tjQuery('#' + method + '-swiper-status').html('Ready to swipe');\n\t\t\t\t\tjQuery('#' + method + '-swiper-status').addClass('active');\n\t\t\t\t\tjQuery('#' + method + '-swiper-status').select();\n\t\t\t\t});\n\t\t\t\tjQuery('input#' + method + '-swiper-data').blur(function (event) {\n\t\t\t\t\tjQuery('#' + method + '-swiper-status').html('Click here to swipe');\n\t\t\t\t\tjQuery('#' + method + '-swiper-status').removeClass('active');\n\t\t\t\t});\n\n\t\t\t\tjQuery('div.input-box input').blur(function (event) {\n\t\t\t\t\t//swipeNow(method);\n\t\t\t\t});\n\t\t\t\tjQuery('#' + method + '-swiper-status').click(function (event) {\n\t\t\t\t\tself.swipeNow(method);\n\t\t\t\t});\n\n\t\t\t\tjQuery('input#' + method + '-swiper-data').keyup(function (event) {\n\t\t\t\t\tif (event.keyCode == 13) {\n\t\t\t\t\t\tvar ccinfo = self.parseSwiperData(jQuery(this).val());\n\t\t\t\t\t\tif (ccinfo === -1) return;\n\t\t\t\t\t\tif (jQuery('input#' + method + '-swiper-data').val().length > 0) {\n\t\t\t\t\t\t\tjQuery('#loading-mask').show();\n\t\t\t\t\t\t\tjQuery('input#' + method + '_cc_owner').val('');\n\t\t\t\t\t\t\tjQuery('input#' + method + '_cc_number').val('');\n\t\t\t\t\t\t\tjQuery('select#' + method + '_cc_type').val('');\n\t\t\t\t\t\t\tjQuery('select#' + method + '_cc_exp_month').val('');\n\t\t\t\t\t\t\tjQuery('select#' + method + '_cc_exp_year').val('');\n\t\t\t\t\t\t\tjQuery('input#' + method + '_cc_cid').val('');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (ccinfo != null && ccinfo.length > 0) {\n\t\t\t\t\t\t\tjQuery('input#' + method + '_cc_owner').val(ccinfo[0]);\n\t\t\t\t\t\t\tif (ccinfo[1] == null) {\n\t\t\t\t\t\t\t\talert('Card number not detected!');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery('input#' + method + '_cc_number').val(ccinfo[1]);\n\t\t\t\t\t\t\t\tjQuery('input#' + method + '_cc_number_label').val(ccinfo[1].replace(/.*(\\d{4})$/, \"xxxx xxxx xxxx $1\"));\n\t\t\t\t\t\t\t\tvar startdigit = parseInt(ccinfo[1].charAt(0));\n\t\t\t\t\t\t\t\tif (startdigit == 3)\n\t\t\t\t\t\t\t\t\tjQuery('select#' + method + '_cc_type').val('AE');\n\t\t\t\t\t\t\t\tif (startdigit == 4)\n\t\t\t\t\t\t\t\t\tjQuery('select#' + method + '_cc_type').val('VI');\n\t\t\t\t\t\t\t\tif (startdigit == 5)\n\t\t\t\t\t\t\t\t\tjQuery('select#' + method + '_cc_type').val('MC');\n\t\t\t\t\t\t\t\tif (startdigit == 6)\n\t\t\t\t\t\t\t\t\tjQuery('select#' + method + '_cc_type').val('DI');\n\t\t\t\t\t\t\t\tif (jQuery('select#' + method + '_cc_type').val() == \"\")\n\t\t\t\t\t\t\t\t\talert('Card type not detected!');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (ccinfo[2] == null) {\n\t\t\t\t\t\t\t\talert('Expiration month not detected!');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery('select#' + method + '_cc_exp_month').val(self.trimNumber(ccinfo[2]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (ccinfo[3] == null) {\n\t\t\t\t\t\t\t\talert('Expiration year not detected!');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery('select#' + method + '_cc_exp_year').val(ccinfo[3]);\n\t\t\t\t\t\t\t\tif (jQuery('select#' + method + '_cc_exp_year').val() == \"\")\n\t\t\t\t\t\t\t\t\talert(\"The card might be expired!\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talert(\"Cannot read the data!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjQuery(this).val('');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tself.swipeNow(method);\n\t\t\t}\n\t\t});\n\t}\n);\n","Magestore_Webpos/js/view/checkout/cart/totals.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'uiComponent',\n        'Magestore_Webpos/js/model/checkout/cart/items',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_Webpos/js/action/cart/hold',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/checkout/cart/totals-factory',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function ($, ko, ViewManager, Component, Items, Alert, Hold, Event, TotalsFactory, CartModel, Helper) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/cart/totals'\n            },\n            isZeroTotal: ko.pureComputed(function(){\n                return (TotalsFactory.get().getTotalValue('grand_total'))?false:true;\n            }),\n            isOnCartPage: ko.pureComputed(function(){\n                return (ViewManager.getSingleton('view/checkout/cart').currentPage() == ViewManager.getSingleton('view/checkout/cart').PAGE.CART)?true:false;\n            }),\n            isOnCheckoutPage: ko.pureComputed(function(){\n                return (ViewManager.getSingleton('view/checkout/cart').currentPage() == ViewManager.getSingleton('view/checkout/cart').PAGE.CHECKOUT)?true:false;\n            }),\n            createdOrder: ko.pureComputed(function(){\n                return (ViewManager.getSingleton('view/checkout/cart').createdOrder() == true)?true:false;\n            }),\n            initialize: function () {\n                this._super();\n            },\n            getTotals: function(){\n                return TotalsFactory.get().getDisplayTotals();\n            },\n            getButtons: function(){\n                return TotalsFactory.get().getButtons();\n            },\n            totalItemClick: function(totalItem,event){\n                if(this.createdOrder() == true){\n                    return false;\n                }\n                var classes = event.target.getAttribute(\"class\");\n                if(totalItem.code() == TotalsFactory.get().ADD_DISCOUNT_TOTAL_CODE || totalItem.code() == TotalsFactory.get().DISCOUNT_TOTAL_CODE ){\n                    if(Items.isEmpty()){\n                        Alert({\n                            priority: \"warning\",\n                            title: \"Warning\",\n                            message: \"Please add item(s) to cart!\"\n                        });\n                        Event.dispatch('focus_search_input', '');\n                    }else{\n                        if(!classes || (classes && classes.indexOf(\"icon-iconPOS-remove\") < 0)){\n                            ViewManager.getSingleton('view/checkout/cart').showCartDiscountPopup(event);\n                        }\n                    }\n                }else{\n                    if(this.isOnCartPage()){\n                        Event.dispatch('focus_search_input', '');\n                    }\n                }\n            },\n            buttonClick: function(button){\n                if(button.code == TotalsFactory.get().HOLD_BUTTON_CODE){\n                    Event.dispatch('focus_search_input', '');\n                    if(Items.isEmpty()){\n                        Alert({\n                            priority: \"warning\",\n                            title: \"Warning\",\n                            message: \"Please add item(s) to cart!\"\n                        });\n                        return;\n                    }else{\n                        Hold.execute();\n                        return;\n                    }\n                }\n                if(button.code == TotalsFactory.get().CHECKOUT_BUTTON_CODE){\n                    if(Items.isEmpty()){\n                        Alert({\n                            priority: \"warning\",\n                            title: \"Warning\",\n                            message: \"Please add item(s) to cart!\"\n                        });\n                        return;\n                    }else{\n                        if(Helper.isUseOnline('checkout')){\n                            CartModel.saveCartBeforeCheckoutOnline();\n                        }else {\n                            ViewManager.getSingleton('view/checkout/cart').switchToCheckout();\n                            ViewManager.getSingleton('view/checkout/checkout/shipping').saveDefaultShippingMethod();\n                            ViewManager.getSingleton('view/checkout/checkout/payment').collection.reset();\n                            ViewManager.getSingleton('view/checkout/checkout/payment').saveDefaultPaymentMethod();\n                            Event.dispatch('go_to_checkout_page', '', true);\n                        }\n                        return;\n                    }\n                }\n                if(button.code == TotalsFactory.get().BACK_CART_BUTTON_CODE){\n                    ViewManager.getSingleton('view/checkout/cart').switchToCart();\n                }\n            },\n            removeDiscount: function(){\n                Event.dispatch('remove_cart_discount', '');\n                if(this.isOnCartPage()){\n                    Event.dispatch('focus_search_input', '');\n                }\n            },\n            getAdditionalInfo: function() {\n                return TotalsFactory.get().getAdditionalInfo();\n            },\n            removeTotal: function(el){\n                if(el.actions() && el.actions().remove){\n                    if(typeof el.actions().remove == 'string'){\n                        if(typeof this[el.actions().remove] == 'function'){\n                            this[el.actions().remove]();\n                        }\n                    }\n                    if(typeof el.actions().remove == 'function'){\n                        el.actions().remove();\n                    }\n                }\n            },\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/cart/discountpopup.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\nrequire([\n    'Magestore_Webpos/js/model/checkout/cart/totals',\n    ]);\n    \ndefine(\n    [\n        'jquery',\n        'ko',    \n        'uiComponent',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/checkout/cart/discountpopup',\n        'Magestore_Webpos/js/model/checkout/cart/totals-factory',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function ($, ko, Component, CheckoutModel, DiscountModel, TotalsFactory, Helper, Event) {\n        \"use strict\";\n        DiscountModel.reset();\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/cart/discountpopup'\n            },\n            isOnCheckout: ko.observable(),\n            isOnlineCheckout: ko.pureComputed(function(){\n                return (Helper.isUseOnline('checkout'))?true:false;\n            }),\n            stage: ko.observable(),\n            discountTitle: ko.observable(),\n            cancelPromotionButtonTitle: ko.observable(),\n            applyButtonTitle: ko.observable(),\n            numberpadCache: ko.observableArray([]),\n            stopCache: ko.observable(),\n            discountType: ko.pureComputed(function(){\n                if(!DiscountModel.cartDiscountType()){\n                    DiscountModel.cartDiscountType(DiscountModel.DISCOUNT_TYPES.FIXED);\n                }\n                return DiscountModel.cartDiscountType();\n            }),\n            calculatedDiscountAmount: ko.pureComputed(function(){\n                return TotalsFactory.get().discountAmount();\n            }),\n            discountName: ko.pureComputed(function(){\n                if(!DiscountModel.cartDiscountName()){\n                    DiscountModel.cartDiscountName(\"\");\n                }\n                return DiscountModel.cartDiscountName();\n            }),\n            couponCode: ko.pureComputed(function(){\n                if(!DiscountModel.couponCode()){\n                    DiscountModel.couponCode(\"\");\n                }\n                return DiscountModel.couponCode();\n            }),\n            promotionDiscount: ko.pureComputed(function(){\n                if(!DiscountModel.promotionDiscountAmount()){\n                    DiscountModel.promotionDiscountAmount(\"\");\n                }\n                return Helper.convertAndFormatPrice(DiscountModel.promotionDiscountAmount());\n            }),\n            hasPromotionDiscount: ko.pureComputed(function(){\n                return (DiscountModel.promotionDiscountAmount())?true:false;\n            }),\n            loading: ko.pureComputed(function(){\n                return (DiscountModel.loading())?true:false;\n            }),\n            initialize: function () {\n                this._super();\n                this.initDefaultData();\n\n                var self = this;\n                this.isDiscountStage = ko.pureComputed(function(){\n                    return (self.stage() == DiscountModel.STAGES.DISCOUNT)?true:false;\n                });\n                this.isPromotionStage = ko.pureComputed(function(){\n                    return (self.stage() == DiscountModel.STAGES.PROMOTION)?true:false;\n                });\n                this.discountAmount = ko.pureComputed(function(){\n                    if(!DiscountModel.cartDiscountAmount()){\n                        DiscountModel.cartDiscountAmount(\"\");\n                    }\n                    var amount = (DiscountModel.cartDiscountAmount())?DiscountModel.cartDiscountAmount():0;\n                    if(self.discountType() == DiscountModel.DISCOUNT_TYPES.PERCENT){\n                        amount = DiscountModel.cartDiscountPercent();\n                    }else{\n                        var priceFormat = window.webposConfig.priceFormat;\n                        var precision = (priceFormat && priceFormat.precision)?priceFormat.precision:2;\n                        amount = parseFloat(amount).toFixed(precision);\n                    }\n                    return amount;\n                });\n                this.isDiscountFixed = ko.pureComputed(function(){\n                    return (self.discountType() == DiscountModel.DISCOUNT_TYPES.FIXED)?true:false;\n                });\n                this.isDiscountPercent = ko.pureComputed(function(){\n                    return (self.discountType() == DiscountModel.DISCOUNT_TYPES.PERCENT)?true:false;\n                });\n                this.stopCache(false);\n                this.disableDiscountAmountInput = true;\n                this.disablePromotionAmountInput = true;\n                this.popupEl = '#webpos_cart_discountpopup';\n                this.overlayEl = '.wrap-backover';\n                Event.observer('show_cart_discount_popup', function(){\n                    self.show();\n                });\n                Event.observer('cart_empty_after', function(){\n                    self.resetData();\n                });\n                Event.observer('remove_cart_discount', function(){\n                    if(Helper.isUseOnline('checkout')){\n\n                    }else{\n                        self.resetData();\n                        self.initDefaultData();\n                        TotalsFactory.get().updateDiscountTotal();\n                    }\n                });\n            },\n            initDefaultData: function(){\n                var self = this;\n                var title = \"Discount - Maximum \"+DiscountModel.maximumPercent()+\"%\";\n                self.stage(DiscountModel.STAGES.DISCOUNT);\n                self.discountTitle(Helper.__(title));\n                self.cancelPromotionButtonTitle(Helper.__(\"Remove\"));\n                self.applyButtonTitle(Helper.__(\"Apply\"));\n            },\n            resetData: function(){\n                DiscountModel.reset();\n                this.stopCache(false);\n                this.numberpadCache([]);\n            },\n            showDiscount: function(){\n                this.stage(DiscountModel.STAGES.DISCOUNT);\n            },\n            showPromotion: function(){\n                this.stage(DiscountModel.STAGES.PROMOTION);\n            },\n            discountFixed: function(){\n                this.numberpadCache([]);\n                this.stopCache(false);\n                DiscountModel.cartDiscountType(DiscountModel.DISCOUNT_TYPES.FIXED);\n                this.showDiscountAmount();\n            },\n            discountPercent: function(){\n                this.numberpadCache([]);\n                this.stopCache(false);\n                DiscountModel.cartDiscountType(DiscountModel.DISCOUNT_TYPES.PERCENT);\n                DiscountModel.cartDiscountPercent(0);\n                this.showDiscountAmount();\n            },\n            numberpadClick: function(data,event){\n                var value = event.target.getAttribute(\"value\");\n                if(this.numberpadCache().length <= 0 && (value ==\"00\" || value == \"0\")){\n                    return;\n                }\n                if(value != \"backspace\" && typeof value != \"undefined\" && this.stopCache() == false){\n                    if(value == \"00\"){\n                        this.numberpadCache().push(0);\n                        this.numberpadCache().push(0);\n                    }else{\n                        this.numberpadCache().push(value);\n                    }\n                }else{\n                    if(value == \"backspace\" && this.numberpadCache().length > 0){\n                        this.numberpadCache().pop();\n                    }\n                }\n                this.showDiscountAmount();\n            },\n            showDiscountAmount: function(){\n                if(this.numberpadCache().length > 0){\n                    var discountAmount = \"\";\n                    $.each(this.numberpadCache(), function(){\n                        discountAmount += \"\"+this;\n                    });\n                    discountAmount = parseFloat(discountAmount)/100;\n                    var grandTotal = TotalsFactory.get().getMaxDiscountAbleAmount();\n                    var maximumPercent = DiscountModel.maximumPercent();\n                    if(this.isDiscountFixed() == true){\n                        var percent = Helper.toBasePrice(discountAmount)/grandTotal*100;\n                        if(percent > maximumPercent){\n                            discountAmount = maximumPercent * grandTotal / 100;\n                            this.stopCache(true);\n                            DiscountModel.cartDiscountAmount(Helper.convertPrice(discountAmount));\n                            DiscountModel.cartBaseDiscountAmount(discountAmount);\n                        }else{\n                            this.stopCache(false);\n                            DiscountModel.cartDiscountAmount(discountAmount);\n                            DiscountModel.cartBaseDiscountAmount(Helper.toBasePrice(discountAmount));\n                        }\n                    }else{\n                        if(discountAmount > maximumPercent){\n                            discountAmount = parseFloat(maximumPercent);\n                            this.stopCache(true);\n                        }else{\n                            this.stopCache(false);\n                        }\n                        DiscountModel.cartDiscountPercent(discountAmount.toFixed(2));\n                        DiscountModel.cartDiscountAmount(discountAmount);\n                        DiscountModel.cartBaseDiscountAmount(discountAmount);\n                    }\n                }else{\n                    DiscountModel.cartDiscountAmount(\"0.00\");\n                    DiscountModel.cartBaseDiscountAmount(0);\n                    DiscountModel.cartDiscountPercent(0);\n                }\n                if(DiscountModel.appliedPromotion() || DiscountModel.appliedDiscount()){\n                    DiscountModel.process(TotalsFactory.get().baseDiscountAmount());\n                }\n            },\n            apply: function(){\n                if(this.isPromotionStage() == true){\n                    if(Helper.isUseOnline('checkout')){\n                        CheckoutModel.applyCouponOnline();\n                    }else {\n                        window.webposConfig.discountApply = 'coupon';\n                        DiscountModel.appliedPromotion(true);\n                        DiscountModel.appliedDiscount(false);\n                        DiscountModel.cartDiscountType(DiscountModel.DISCOUNT_TYPES.FIXED);\n                        DiscountModel.cartBaseDiscountAmount(DiscountModel.promotionDiscountAmount());\n                        DiscountModel.cartDiscountAmount(Helper.convertPrice(DiscountModel.promotionDiscountAmount()));\n                    }\n                }else{\n                    if(Helper.isUseOnline('checkout')){\n                        CheckoutModel.applyCartDiscountOnline();\n                    }else {\n                        window.webposConfig.discountApply = 'discount';\n                        DiscountModel.appliedRuleIds('');\n                        DiscountModel.promotionDiscountAmount(0);\n                        DiscountModel.appliedPromotion(false);\n                        DiscountModel.appliedDiscount(true);\n                    }\n                }\n                if(!Helper.isOnlineCheckout()) {\n                    if (DiscountModel.cartBaseDiscountAmount() <= 0) {\n                        DiscountModel.reset();\n                    }\n                    TotalsFactory.get().updateDiscountTotal();\n                    DiscountModel.process(TotalsFactory.get().baseDiscountAmount());\n                }\n                this.hide();\n                Helper.dispatchEvent('reset_payments_data', '');\n            },\n            hide: function(){\n                $(this.popupEl).hide();\n                $(this.overlayEl).hide();\n                $('.notification-bell').show();\n                if($('#checkout_container').hasClass('showMenu')){\n                    $('#c-button--push-left').show();\n                    $('#c-button--push-left').removeClass('hide');\n                }else{\n                    $('#c-button--push-left').hide();\n                    $('#c-button--push-left').addClass('hide');\n                }\n                Helper.dispatchEvent('focus_search_input', '');\n            },\n            show: function(){\n                if(DiscountModel.appliedPromotion() == true){\n                    this.showPromotion();\n                }else{\n                    this.showDiscount();\n                    if(DiscountModel.appliedDiscount() == true){\n                        DiscountModel.appliedDiscount(false);\n                        TotalsFactory.get().updateDiscountTotal();\n                        DiscountModel.process(0);\n                    }\n                }\n\n                if($(this.overlayEl).length > 0){\n                    $(this.overlayEl).show();\n                }\n\n                var totalTop = -100+\"vh\";\n                if($('.'+TotalsFactory.get().ADD_DISCOUNT_TOTAL_CODE).length > 0){\n                    var discountTotal = TotalsFactory.get().getTotal(TotalsFactory.get().ADD_DISCOUNT_TOTAL_CODE);\n                    if(discountTotal !== false && discountTotal.isVisible() == true){\n                        totalTop = $('.'+TotalsFactory.get().ADD_DISCOUNT_TOTAL_CODE).offset().top;\n                    }\n                }\n                if($('.'+TotalsFactory.get().DISCOUNT_TOTAL_CODE).length > 0){\n                    var discountTotal = TotalsFactory.get().getTotal(TotalsFactory.get().DISCOUNT_TOTAL_CODE);\n                    if(discountTotal !== false && discountTotal.isVisible() == true){\n                        totalTop = $('.'+TotalsFactory.get().DISCOUNT_TOTAL_CODE).offset().top;\n                    }\n                }\n                var windowHeight = $(window).height();\n                var bottom = windowHeight - totalTop - 30;\n                bottom += \"px\";\n                if(this.isOnCheckout() == true){\n                    $(this.popupEl).addClass(\"active-on-checkout\");\n                }else{\n                    $(this.popupEl).removeClass(\"active-on-checkout\");\n                }\n                $(this.popupEl+\" .arrow\").css({bottom:bottom});\n                $(this.popupEl).show();\n                $('.notification-bell').hide();\n                $('#c-button--push-left').hide();\n                if(\n                    Helper.isHavePermission(\"Magestore_Webpos::apply_discount_per_cart\") &&\n                    !Helper.isHavePermission(\"Magestore_Webpos::apply_coupon\")\n                ){\n                    this.showDiscount();\n                }\n                if(\n                    !Helper.isHavePermission(\"Magestore_Webpos::apply_discount_per_cart\") &&\n                    Helper.isHavePermission(\"Magestore_Webpos::apply_coupon\")\n                ){\n                    this.showPromotion();\n                }\n            },\n            cancelPromotion: function(){\n                if(Helper.isUseOnline('checkout')){\n                    if(DiscountModel.appliedPromotion() == true || (DiscountModel.promotionDiscountAmount() != 0)){\n                        CheckoutModel.cancelCouponOnline();\n                    }\n                }else {\n                    DiscountModel.reset();\n                    DiscountModel.couponCode(\"\");\n                    if (DiscountModel.appliedPromotion() == true) {\n                        DiscountModel.appliedPromotion(false);\n                        DiscountModel.promotionDiscountAmount(0);\n                        DiscountModel.cartDiscountAmount(0);\n                        DiscountModel.cartBaseDiscountAmount(0);\n                        DiscountModel.appliedDiscount(false);\n                        DiscountModel.appliedPromotion(false);\n                    }\n                    TotalsFactory.get().updateDiscountTotal();\n                }\n            },\n            setCoupon: function(data,event){\n                DiscountModel.couponCode(event.target.value);\n            },\n            setDiscountName: function(data,event){\n                DiscountModel.cartDiscountName(event.target.value)\n            },\n            checkPromotion: function(data,event){\n                if(this.isPromotionStage() == true && this.loading() == false){\n                    CheckoutModel.checkPromotion();\n                }\n            },\n            getCurrencySymbol: function(){\n                return (window.webposConfig.currentCurrencySymbol)?window.webposConfig.currentCurrencySymbol:window.webposConfig.currentCurrencyCode;\n            },\n            canUseDiscount: function(){\n                return (Helper.isHavePermission(\"Magestore_Webpos::all_discount\") || Helper.isHavePermission(\"Magestore_Webpos::apply_discount_per_cart\"));\n            },\n            canUseCoupon: function(){\n                var canUseCoupon = (Helper.isHavePermission(\"Magestore_Webpos::all_discount\") || Helper.isHavePermission(\"Magestore_Webpos::apply_coupon\"));\n                return canUseCoupon;\n            },\n            canUseCouponCode: ko.pureComputed(function(){\n                var canUseCoupon = (Helper.isHavePermission(\"Magestore_Webpos::all_discount\") || Helper.isHavePermission(\"Magestore_Webpos::apply_coupon\"));\n                return canUseCoupon && DiscountModel.modifierCanUseCoupon();\n            }),\n            enterCoupon: function(data,event){\n                if(event.keyCode == 13){\n                    if(Helper.isUseOnline('checkout')){\n                        CheckoutModel.applyCouponOnline();\n                    }else{\n                        this.checkPromotion();\n                    }\n                    event.target.blur();\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/cart/customsale.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n    \ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/model/checkout/cart/customsale-factory',\n    ],\n    function ($, ko, Component, Helper, CustomsaleFactory) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/cart/customsale'\n            },\n            numberpadCache: ko.observableArray(),\n            productPrice:ko.pureComputed(function(){\n                return Helper.formatPrice(CustomsaleFactory.get().productPrice());\n            }),\n            productName: ko.pureComputed(function(){\n                return CustomsaleFactory.get().productName();\n            }),\n            taxClassId: CustomsaleFactory.get().taxClassId,\n            shipAble: ko.pureComputed(function(){\n                return CustomsaleFactory.get().shipAble();\n            }),\n            taxClasses: ko.pureComputed(function(){\n                return CustomsaleFactory.get().taxClasses();\n            }),\n            initialize: function () {\n                this._super();\n                this.stopCache = false;\n                this.popupEl = '#popup-custom-sale';\n                this.overlayEl = '.wrap-backover';\n            },\n            numberpadClick: function(data,event){\n                var value = event.target.value; \n                if(this.numberpadCache().length <= 0 && (value ==\"00\" || value == \"0\")){\n                    return;\n                }\n                if(value != \"backspace\" && typeof value != \"undefined\"){\n                    if(value == \"00\"){\n                        this.numberpadCache().push(0);\n                        this.numberpadCache().push(0);\n                    }else{\n                        this.numberpadCache().push(value);\n                    }\n                }else{\n                    this.numberpadCache().pop();\n                }\n                this.showPriceAmount();\n            },\n            showPriceAmount: function(){\n                if(this.numberpadCache().length > 0){\n                    var price = \"\";\n                    $.each(this.numberpadCache(), function(){\n                        price += \"\"+this;\n                    });\n                    price = parseFloat(price)/100;\n                    CustomsaleFactory.get().productPrice(price);\n                }else{\n                    CustomsaleFactory.get().productPrice(\"0.00\");\n                }\n            },\n            addToCart: function(){\n                CustomsaleFactory.get().addToCart();\n                this.numberpadCache([]);\n                this.hide();\n                $('.notification-bell').show();\n                $('#c-button--push-left').show();\n                $('#c-button--push-left').removeClass('hide');\n            },\n            hide: function(){\n                $(this.popupEl).hide();\n                $(this.overlayEl).hide();\n                $(this.popupEl).addClass(\"fade\");\n                $(this.popupEl).removeClass(\"show\");\n                $(this.popupEl).removeClass(\"fade-in\");\n            },\n            show: function(){\n                if($(this.overlayEl).length > 0){\n                    $(this.overlayEl).show();\n                }\n                $(this.popupEl).show();\n            },\n            setName: function(data,event){\n                CustomsaleFactory.get().productName(event.target.value);\n            },\n            setPrice: function(data,event){\n                var price = Helper.toNumber(event.target.value);\n                CustomsaleFactory.get().productPrice(price);\n            },\n            setTaxClass: function(data,event){\n                //CustomsaleFactory.get().taxClassId(event.target.value);\n            },\n            setShipAble: function(data,event){\n                var shipAble = (event.target.checked)?true:false;\n                CustomsaleFactory.get().shipAble(shipAble);\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/cart/items.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',      \n        'Magestore_Webpos/js/view/layout',\n        'uiComponent',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/cart/items',\n        'Magestore_Webpos/js/model/checkout/cart/editpopup-factory',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function ($, ko, ViewManager, Component, CartModel, Items, EditpopupFactory, Helper) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/cart/items'\n            },\n            initialize: function () {\n                this._super();\n                this.OUT_OF_STOCK_MESSAGE = \"out of stock\";\n                this.isOnCartPage = ko.pureComputed(function(){\n                    return (ViewManager.getSingleton('view/checkout/cart').currentPage() == ViewManager.getSingleton('view/checkout/cart').PAGE.CART)?true:false;\n                });\n                this.isOnCheckoutPage = ko.pureComputed(function(){\n                    return (ViewManager.getSingleton('view/checkout/cart').currentPage() == ViewManager.getSingleton('view/checkout/cart').PAGE.CHECKOUT)?true:false;\n                });\n            },\n            getItems: Items.items,\n            prepareEditData: function(item,event){\n                if(this.isOnCartPage() == true){\n                    EditpopupFactory.get().setItem(item);\n                    EditpopupFactory.get().showPopup(event);\n                }\n            },\n            remove: function(item,event){\n                if(Helper.isUseOnline('checkout') && item.saved_online_item()){\n                    CartModel.removeItemOnline(item.item_id());\n                }else {\n                    CartModel.removeItem(item.item_id());\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/cart/editpopup.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\nrequire([\n    'Magestore_Webpos/js/model/checkout/cart/editpopup',\n    ]);\n\ndefine(\n    [\n        'jquery',\n        'ko',       \n        'uiComponent',\n        'Magestore_Webpos/js/model/checkout/cart/items/item-factory',\n        'Magestore_Webpos/js/model/checkout/cart/editpopup-factory',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/staff',\n\n    ],\n    function ($, ko, Component, ItemFactory, EditPopupFactory, HelperPrice, Staff) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/cart/editpopup'\n            },\n            \n            focusQtyInput: true,\n            initialize: function () {\n                this._super();\n                var self = this;\n                this.hasCustomAmount = ko.pureComputed(function(){\n                    return (EditPopupFactory.get().getData(\"has_custom_price\") == true)?true:false;\n                });\n                this.isCustomPrice = ko.pureComputed(function(){\n                    return (EditPopupFactory.get().getData(\"custom_type\") == ItemFactory.get().CUSTOM_PRICE_CODE && self.hasCustomAmount() == true)?true:false;\n                });\n                this.isCustomDiscount = ko.pureComputed(function(){\n                    return (EditPopupFactory.get().getData(\"custom_type\") == ItemFactory.get().CUSTOM_DISCOUNT_CODE && self.hasCustomAmount() == true)?true:false;\n                });\n                this.isTypeFixed = ko.pureComputed(function(){\n                    return (EditPopupFactory.get().getData(\"custom_price_type\") == ItemFactory.get().FIXED_AMOUNT_CODE)?true:false;\n                });\n                this.isTypePercent = ko.pureComputed(function(){\n                    return (EditPopupFactory.get().getData(\"custom_price_type\") == ItemFactory.get().PERCENTAGE_CODE)?true:false;\n                });\n                this.timeout = \"\";\n            },\n            incQty: function(){\n                var increment = HelperPrice.toNumber((EditPopupFactory.get().getData('qty_increment'))?EditPopupFactory.get().getData('qty_increment'):1);\n                var isQtyDecimal = EditPopupFactory.get().getData('is_qty_decimal');\n                increment = (increment > 0)?increment:1;\n                var qty = HelperPrice.toNumber(this.getQty());\n                qty = qty + increment;\n                if(qty%increment > 0){\n                    qty -= (isQtyDecimal)?parseFloat(qty%increment):parseInt(qty%increment);\n                    qty = (qty > 0)?qty:increment;\n                }\n                EditPopupFactory.get().setData('qty',qty);\n            },\n            descQty: function(){\n                var increment = HelperPrice.toNumber((EditPopupFactory.get().getData('qty_increment'))?EditPopupFactory.get().getData('qty_increment'):1);\n                var isQtyDecimal = EditPopupFactory.get().getData('is_qty_decimal');\n                increment = (increment > 0)?increment:1;\n                var qty = HelperPrice.toNumber(this.getQty());\n                qty = qty - increment;\n                if(qty%increment > 0 || qty == 0){\n                    qty -= (isQtyDecimal)?parseFloat(qty%increment):parseInt(qty%increment);\n                    qty = (qty > 0)?qty:increment;\n                }\n                EditPopupFactory.get().setData('qty',qty);\n            },\n            modifyQty: function(data,event){\n                var increment = HelperPrice.toNumber(EditPopupFactory.get().getData('qty_increment'));\n                var isQtyDecimal = EditPopupFactory.get().getData('is_qty_decimal');\n                var qty = event.target.value;\n                qty = (isQtyDecimal)?parseFloat(qty):parseInt(qty);\n                if((increment > 0) && qty%increment > 0){\n                    qty -= parseFloat(qty%increment);\n                    qty = (qty > 0)?qty:increment;\n                }\n                var maximum_qty = EditPopupFactory.get().getData('maximum_qty');\n                if(maximum_qty && qty > maximum_qty){\n                    qty = maximum_qty;\n                }\n                var minimum_qty = EditPopupFactory.get().getData('minimum_qty');\n                if(minimum_qty && qty < minimum_qty){\n                    qty = minimum_qty;\n                }else if(!minimum_qty && qty <= 0){\n                    qty = 1;\n                }\n                event.target.value = qty;\n                EditPopupFactory.get().setData('qty',HelperPrice.toNumber(qty));\n            },\n            getProductName: function(){\n                return EditPopupFactory.get().getData('product_name');\n            },\n            getProductImageUrl: function(){\n                return EditPopupFactory.get().getData('image_url');\n            },\n            getQty: function(){\n                return EditPopupFactory.get().getData('qty');\n            },\n            getCustomPriceAmount: function(){\n                return HelperPrice.correctPrice(EditPopupFactory.get().getData('custom_price_amount'));\n            },\n            getCurrencySymbol: function(){\n                return (window.webposConfig.currentCurrencySymbol)?window.webposConfig.currentCurrencySymbol:window.webposConfig.currentCurrencyCode;\n            },\n            customPrice: function(){\n                if(EditPopupFactory.get().getData('has_custom_price') == true && EditPopupFactory.get().getData('custom_type') == ItemFactory.get().CUSTOM_PRICE_CODE){\n                    EditPopupFactory.get().setData('has_custom_price',false);\n                }else{\n                    EditPopupFactory.get().setData('has_custom_price',true);\n                    EditPopupFactory.get().setData('custom_type',ItemFactory.get().CUSTOM_PRICE_CODE);\n                    if(!EditPopupFactory.get().getData('custom_price_type')){\n                        EditPopupFactory.get().setData('custom_price_type',ItemFactory.get().FIXED_AMOUNT_CODE);\n                    }\n                }\n            },\n            customDiscount: function(){\n                if(EditPopupFactory.get().getData('has_custom_price') == true && EditPopupFactory.get().getData('custom_type') == ItemFactory.get().CUSTOM_DISCOUNT_CODE){\n                    EditPopupFactory.get().setData('has_custom_price',false);\n                }else{\n                    EditPopupFactory.get().setData('has_custom_price',true);\n                    EditPopupFactory.get().setData('custom_type',ItemFactory.get().CUSTOM_DISCOUNT_CODE);\n                    if(!EditPopupFactory.get().getData('custom_price_type')){\n                        EditPopupFactory.get().setData('custom_price_type',ItemFactory.get().FIXED_AMOUNT_CODE);\n                    }\n                }\n            },\n            setTypeFixed: function(){\n                EditPopupFactory.get().setData('custom_price_type',ItemFactory.get().FIXED_AMOUNT_CODE);\n            },\n            setTypePercent: function(){\n                EditPopupFactory.get().setData('custom_price_type',ItemFactory.get().PERCENTAGE_CODE);\n            },\n            modifyPrice: function(data,event){\n                clearTimeout(this.timeout);\n                this.timeout = setTimeout(function () {\n                    EditPopupFactory.get().setData('custom_price_amount',HelperPrice.toNumber(event.target.value));\n                }, 500);\n            },\n            canAddDiscount: function(){\n                return (Staff.isHavePermission(\"Magestore_Webpos::all_discount\") || Staff.isHavePermission(\"Magestore_Webpos::apply_discount_per_item\"));\n            },\n            canAddCustomPrice: function(){\n                return (Staff.isHavePermission(\"Magestore_Webpos::all_discount\") || Staff.isHavePermission(\"Magestore_Webpos::apply_custom_price\"));\n            }\n            // isDisplayFullScreen: function () {\n            //     if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n            //         return false;\n            //     } else {\n            //         return true;\n            //     }\n            // }\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/cart/commentpopup.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function ($,ko, Component, ViewManager, CheckoutModel, Helper) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/checkout/cart/commentpopup'\n            },\n            comment:ko.observable(CheckoutModel.orderComment()),\n            initialize: function () {\n                this._super();\n                this.popupEl = \"#form-note-order\";\n                this.isOnCheckout = ko.pureComputed(function(){\n                    return ViewManager.getSingleton('view/checkout/cart').isOnCheckoutPage();\n                });\n                var self = this;\n                Helper.observerEvent('cart_empty_after', function(){\n                    self.comment('');\n                });\n                this.hide();\n            },\n            setComment: function(data,event){\n                this.comment(event.target.value);\n            },\n            saveComment: function(){\n                CheckoutModel.orderComment(this.comment());\n                this.hide();\n                if(Helper.isUseOnline('checkout')){\n                    CheckoutModel.saveCustomerNote();\n                }\n                Helper.dispatchEvent('focus_search_input', '');\n            },\n            show: function(){\n                $(this.popupEl).removeClass(\"fade\");\n                $(this.popupEl).addClass(\"show\");\n                $(this.popupEl).show();\n            },\n            hide: function(){\n                $(this.popupEl).addClass(\"fade\");\n                $(this.popupEl).removeClass(\"show\");\n                $(this.popupEl).hide();\n                Helper.dispatchEvent('focus_search_input', '');\n            },\n            isDisplayFullScreen: function () {\n                if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/customer/edit-customer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/model/customer/customer-factory',\n        'Magento_Ui/js/modal/confirm',\n        'Magestore_Webpos/js/model/customer/current-customer',\n        'Magestore_Webpos/js/action/checkout/select-billing-address',\n        'Magestore_Webpos/js/action/checkout/select-shipping-address',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'mage/template',\n        'mage/translate',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/helper/general',\n        \"mage/mage\",\n        \"mage/validation\",\n        'Magestore_Webpos/js/bootstrap/bootstrap',\n        'Magestore_Webpos/js/bootstrap/bootstrap.min',\n        'Magestore_Webpos/js/bootstrap/bootstrap-switch',\n        'Magestore_Webpos/js/lib/jquery.toaster',\n        \n    ],\n    function (\n        $,\n        ko,\n        colGrid,\n        CustomerFactory,\n        confirm,\n        currentCustomer,\n        selectBilling,\n        selectShipping,\n        eventManager,\n        addNotification,\n        mageTemplate,\n        Translate,\n        checkoutModel,\n        CartModel,\n        Helper\n    ) {\n        \"use strict\";\n        return colGrid.extend({\n            /* Add address object*/\n            addAddress: ko.observable(),\n            /* Observable items*/\n            items: ko.observableArray([]),\n            /* Observable customer first name*/\n            firstName: ko.observable(''),\n            /* Observable customer last name*/\n            lastName: ko.observable(''),\n            /* Observable customer email*/\n            email: ko.observable(''),\n            /* Observable customer group id*/\n            group_id: ko.observable(''),\n            /* Observable customer group array*/\n            customerGroupArray: ko.observableArray(window.webposConfig.customerGroup),\n            /* Observable customer address array*/\n            addressArray: ko.observableArray([]),\n            /* Observable customer subscriber or not*/\n            isSubscriberCustomer: ko.observable(true),\n            /* Observable choose billing address and shipping address id */\n            billingAddressId: ko.observable(0),\n            shippingAddressId: ko.observable(0),\n            currentEditAddressId: ko.observable(null),\n\n            /* variable for control UI*/\n            editCustomerForm: $('#form-edit-customer'),\n            overlay:  $('.wrap-backover').hide(),\n\n            addAddressForm: $('#form-customer-add-address-checkout'),\n            regionTemplate: '<option value=\"<%- data.value %>\" data-region-code=\"<%- data.code %>\" title=\"<%- data.title %>\" <% if (data.isSelected) { %>selected=\"selected\"<% } %>>' +\n            '<%- data.title %>' +\n            '</option>',\n\n            /* Preview Billing Data*/\n            previewBillingFirstname: ko.observable(''),\n            previewBillingLastname: ko.observable(''),\n            previewBillingCompany: ko.observable(''),\n            previewBillingPhone: ko.observable(''),\n            previewBillingStreet1: ko.observable(''),\n            previewBillingStreet2: ko.observable(''),\n            previewBillingCountry: ko.observable(''),\n            previewBillingRegion: ko.observable(''),\n            previewBillingRegionId: ko.observable(0),\n            previewBillingCity: ko.observable(''),\n            previewBillingPostCode: ko.observable(''),\n            previewBillingVat: ko.observable(''),\n            isShowPreviewBilling: ko.observable(false),\n            /* End Preview Billing Data*/\n\n            /* Preview Shipping Data*/\n            previewShippingFirstname: ko.observable(''),\n            previewShippingLastname: ko.observable(''),\n            previewShippingCompany: ko.observable(''),\n            previewShippingPhone: ko.observable(''),\n            previewShippingStreet1: ko.observable(''),\n            previewShippingStreet2: ko.observable(''),\n            previewShippingCountry: ko.observable(''),\n            previewShippingRegion: ko.observable(''),\n            previewShippingRegionId: ko.observable(0),\n            previewShippingCity: ko.observable(''),\n            previewShippingPostCode: ko.observable(''),\n            previewShippingVat: ko.observable(''),\n            isShowPreviewShipping: ko.observable(false),\n            /* End Preview Shipping Data*/\n\n            /* Observable to edit address type*/\n            editAddressType: ko.observable(null),\n\n            /* Save online or not*/\n            isChangeCustomerInfo: ko.observable(false),\n\n            currentEditAddressType: ko.observable(null),\n\n            /* Template for knockout js*/\n            defaults: {\n                template: 'Magestore_Webpos/checkout/customer/edit-customer'\n            },\n\n            /* Auto run when call */\n            initialize: function () {\n                this._super();\n                var self = this;\n                self.addressArrayDisplay = ko.pureComputed(function () {\n                    var newAddressArray = [];\n                    ko.utils.arrayMap(self.addressArray(), function(item) {\n                        newAddressArray.push(item);\n                    });\n                    newAddressArray.push({\n                        'id' : 0,\n                        'label' : Translate('Use Store Address')\n                    });\n                    return newAddressArray;\n                });\n                var arrayObservable = ['#first_name_input', '#last_name_input', '#customer_email_input',\n                    '#customer_group'];\n                $.each(arrayObservable, function (index, value) {\n                   $(value).change(function () {\n                       self.isChangeCustomerInfo(true);\n                   })\n                });\n            },\n\n            /* load data*/\n            loadData: function (data) {\n                var self = this;\n                self.group_id(data.group_id);\n                self.firstName(data.firstname);\n                self.lastName(data.lastname);\n                self.email(data.email);\n                if (typeof (data.addresses) != 'undefined') {\n                    self.addressArray(data.addresses);\n                } else {\n                    self.addressArray([]);\n                }\n                self.billingAddressId(0);\n                self.shippingAddressId(0);\n                self.isSubscriberCustomer(false);\n            },\n\n            /* Control UI for hide customer form */\n            hideCustomerForm: function () {\n                var self = this;\n                self.editCustomerForm.addClass('fade');\n                self.editCustomerForm.removeClass('fade-in');\n                self.editCustomerForm.removeClass('show');\n                self.isChangeCustomerInfo(false);\n                self.addAddress.call().resetAddressForm();\n                $('.wrap-backover').hide();\n                $('.notification-bell').show();\n                $('#c-button--push-left').show();\n            },\n\n            /* Save customer form */\n            saveCustomerForm: function () {\n                var self = this;\n                if (this.validateEditCustomerForm()) {\n                    var currentData = currentCustomer.data();\n                    currentData.firstname = this.firstName();\n                    currentData.lastname = this.lastName();\n                    currentData.email = this.email();\n                    currentData.group_id = this.group_id();\n                    currentData.subscriber_status = this.isSubscriberCustomer();\n                    currentData.full_name = this.firstName() + ' ' + this.lastName();\n                    CartModel.addCustomer(currentData);\n                    var customerDeferred = CustomerFactory.get().load(currentData.id);\n                    customerDeferred.done(function (data) {\n                        var addressData = data.addresses;\n                        if(addressData && addressData.length > 0) {\n                            $.each(addressData, function (index, value) {\n                                var address = addressData[index];\n                                address.default_billing = false;\n                                address.default_shipping = false;\n                                if (value.id == self.billingAddressId() && value.id != 0) {\n\n                                    if (typeof address.default_billing == 'undefined' || !address.default_billing) {\n                                        address.default_billing = true;\n                                        self.isChangeCustomerInfo(true);\n                                    }\n                                }\n                                if (value.id == self.shippingAddressId() && value.id != 0) {\n                                    if (typeof address.default_shipping == 'undefined' || !address.default_shipping) {\n                                        address.default_shipping = true;\n                                        self.isChangeCustomerInfo(true);\n                                    }\n                                }\n                                addressData[index] = address;\n                            });\n                        }\n                        currentData.addresses = addressData;\n                        currentCustomer.fullName(self.firstName() + ' ' + self.lastName());\n\n                        if (typeof currentData['columns'] != 'undefined') {\n                            delete currentData['columns'];\n                        }\n\n                        var billingAddressId = self.billingAddressId();\n                        var shippingAddressId = self.shippingAddressId();\n\n                        // selectBilling(self.billingAddressId());\n                        // selectShipping(self.shippingAddressId());\n                        var currentCustomerId = currentData.id;\n                        //if (self.isChangeCustomerInfo()) {\n                        var customerCollection =  CustomerFactory.get().getCollection();\n                        var mode = (Helper.isUseOnline('customers'))?'online':'offline';\n                        var idFieldName = (Helper.isUseOnline('customers'))?'entity_id':'id';\n                        var deferred = customerCollection.setMode(mode).addFieldToFilter('email', self.email(), 'eq')\n                                .addFieldToFilter(idFieldName, currentCustomerId, 'neq')\n                                .load();\n                            deferred.done(function (data) {\n                                var items = data.items;\n                                if (items.length > 0) {\n                                    addNotification(Translate('The customer email is existed.'), true, 'danger', 'Error');\n                                } else {\n\n                                    delete currentData['default_billing'];\n                                    delete currentData['default_shipping'];\n\n\n                                    var deferred = CustomerFactory.get().setData(currentData).setPush(true).save();\n\n                                    deferred.done(function (customerDataAfterSave) {\n                                        var allAddress = customerDataAfterSave.addresses;\n                                        currentCustomer.setData(customerDataAfterSave);\n                                        if (billingAddressId!=0) {\n                                            var billingAddress = {};\n                                            $.each(allAddress, function (index, value) {\n                                                if (typeof (value.id) != 'undefined' && value.id == billingAddressId) {\n                                                    billingAddress = allAddress[index];\n                                                }\n                                            });\n                                            checkoutModel.saveBillingAddress(billingAddress);\n                                        } else {\n                                            if (customerDataAfterSave.id) {\n                                                checkoutModel.saveBillingAddress({\n                                                    'id' : 0,\n                                                    'firstname': customerDataAfterSave.firstname,\n                                                    'lastname': customerDataAfterSave.lastname\n                                                });\n                                            } else {\n                                                checkoutModel.saveBillingAddress({\n                                                    'id' : 0,\n                                                    'firstname': '',\n                                                    'lastname': ''\n                                                });\n                                            }\n                                        }\n                                        if (shippingAddressId!=0) {\n                                            var shippingAddress = {};\n                                            $.each(allAddress, function (index, value) {\n                                                if (typeof (value.id) != 'undefined' && value.id == shippingAddressId) {\n                                                    shippingAddress = allAddress[index];\n                                                }\n                                            });\n                                            checkoutModel.saveShippingAddress(shippingAddress);\n                                        } else {\n                                            if (customerDataAfterSave.id) {\n                                                checkoutModel.saveShippingAddress({\n                                                    'id' : 0,\n                                                    'firstname': customerDataAfterSave.firstname,\n                                                    'lastname': customerDataAfterSave.lastname\n                                                });\n                                            } else {\n                                                checkoutModel.saveShippingAddress({\n                                                    'id' : 0,\n                                                    'firstname': '',\n                                                    'lastname': ''\n                                                });\n                                            }\n                                        }\n                                        eventManager.dispatch('customer_pull_after',[]);\n                                        $.toaster(\n                                            {\n                                                priority: 'success',\n                                                title: Translate('Success'),\n                                                message: Translate('The customer is saved successfully.')\n                                            }\n                                        );\n                                        if(CartModel.isOnCheckoutPage() && Helper.isUseOnline('checkout')){\n                                            CartModel.saveCartOnline();\n                                        }\n                                    });\n                                }\n                            });\n                        //}\n\n                    });\n\n\n                    self.hideCustomerForm();\n                }\n\n            },\n\n            /* Control UI show add address form*/\n            showAddress: function () {\n                var self = this;\n                this.addAddressForm.find('#country_id').regionUpdater({\n                    regionList: self.addAddressForm.find('#region_id'),\n                    regionInput: self.addAddressForm.find('#region'),\n                    regionJson: JSON.parse(window.webposConfig.regionJson)\n                });\n                this.editCustomerForm.addClass('fade');\n                this.editCustomerForm.removeClass('fade-in');\n                this.editCustomerForm.removeClass('show');\n                this.addAddressForm.addClass('fade-in');\n                this.addAddressForm.addClass('show');\n                this.addAddressForm.removeClass('fade');\n                self.addAddress.call().addressTitle(Translate('Add Address'));\n                self.addAddress.call().resetAddressForm();\n                self.addAddress.call().firstName(currentCustomer.data().firstname);\n                self.addAddress.call().lastName(currentCustomer.data().lastname);\n\n            },\n            /* Validate edit customer form*/\n            validateEditCustomerForm: function () {\n                var form = '#form-edit-customer';\n                return $(form).validation({}) && $(form).validation('isValid');\n            },\n            /* Control UI show customer form*/\n            showCustomerEditForm: function () {\n                this.editCustomerForm.addClass('fade');\n                this.editCustomerForm.removeClass('fade-in');\n                this.editCustomerForm.removeClass('show');\n                this.overlay.hide();\n                $('.notification-bell').show();\n                $('#c-button--push-left').show();\n            },\n\n            /* Show Shipping Preview */\n            showShippingPreview: function () {\n                var self = this;\n                this.addAddressForm.find('#country_id').regionUpdater({\n                    regionList: self.addAddressForm.find('#region_id'),\n                    regionInput: self.addAddressForm.find('#region'),\n                    regionJson: JSON.parse(window.webposConfig.regionJson)\n                });\n\n                if (self.shippingAddressId() != 0) {\n                    $.each(self.addressArray(), function (index, value) {\n                        if (value.id == self.shippingAddressId()) {\n                            self.setShippingPreviewData(value);\n                            self.addAddress.call().firstName(value.firstname);\n                            self.addAddress.call().lastName(value.lastname);\n                            self.addAddress.call().company(value.company);\n                            self.addAddress.call().phone(value.telephone);\n                            self.addAddress.call().street1(value.street[0]);\n                            self.addAddress.call().street2(value.street[1]);\n                            self.addAddress.call().country(value.country_id);\n                            self.addAddress.call().region(value.region.region);\n                            self.addAddress.call().region_id(value.region_id);\n                            self.addAddress.call().city(value.city);\n                            self.addAddress.call().zipcode(value.postcode);\n                            self.addAddress.call().vatId(value.vat_id);\n\n                            self.updateRegionForForm(value);\n                            self.isShowPreviewShipping(true);\n                        }\n                    });\n                } else {\n                    self.isShowPreviewShipping(false);\n                }\n            },\n\n            /* Show Billing Preview */\n            showBillingPreview: function () {\n                var self = this;\n                this.addAddressForm.find('#country_id').regionUpdater({\n                    regionList: self.addAddressForm.find('#region_id'),\n                    regionInput: self.addAddressForm.find('#region'),\n                    regionJson: JSON.parse(window.webposConfig.regionJson)\n                });\n\n                if (self.billingAddressId() != 0) {\n                    $.each(self.addressArray(), function (index, value) {\n                        if (value.id == self.billingAddressId()) {\n                            self.setBillingPreviewData(value);\n                            self.addAddress.call().firstName(value.firstname);\n                            self.addAddress.call().lastName(value.lastname);\n                            self.addAddress.call().company(value.company);\n                            self.addAddress.call().phone(value.telephone);\n                            self.addAddress.call().street1(value.street[0]);\n                            self.addAddress.call().street2(value.street[1]);\n                            self.addAddress.call().country(value.country_id);\n                            self.addAddress.call().region(value.region.region);\n                            self.addAddress.call().region_id(value.region_id);\n                            self.addAddress.call().city(value.city);\n                            self.addAddress.call().zipcode(value.postcode);\n                            self.addAddress.call().vatId(value.vat_id);\n\n                            self.updateRegionForForm(value);\n                            self.isShowPreviewBilling(true);\n                        }\n                    });\n                } else {\n                    self.isShowPreviewBilling(false);\n                }\n            },\n\n            /* Edit Shipping Preview */\n            editShippingPreview: function () {\n                var self = this;\n                self.currentEditAddressId(self.shippingAddressId());\n                var data = {\n                    'firstname' : self.previewShippingFirstname(),\n                    'lastname' : self.previewShippingLastname(),\n                    'company' : self.previewShippingCompany(),\n                    'telephone' : self.previewShippingPhone(),\n                    'street' : [\n                        self.previewShippingStreet1(),\n                        self.previewShippingStreet2()\n                    ],\n                    'country_id' : self.previewShippingCountry(),\n                    'region' : {\n                        'region':  self.previewShippingRegion()\n                    },\n                    'region_id' : self.previewShippingRegionId(),\n                    'city' : self.previewShippingCity(),\n                    'postcode' : self.previewShippingPostCode(),\n                    'vat_id': self.previewShippingVat()\n                };\n                self.addAddress.call().firstName(data.firstname);\n                self.addAddress.call().lastName(data.lastname);\n                self.addAddress.call().company(data.company);\n                self.addAddress.call().phone(data.telephone);\n                self.addAddress.call().street1(data.street[0]);\n                self.addAddress.call().street2(data.street[1]);\n                self.addAddress.call().country(data.country_id);\n                // self.addAddress.call().region(data.region.region);\n                // self.addAddress.call().region_id(data.region_id);\n                self.addAddress.call().city(data.city);\n                self.addAddress.call().zipcode(data.postcode);\n                self.addAddress.call().vatId(data.vat_id);\n                self.currentEditAddressType('shipping');\n\n                /* Region updater for show edit address popup*/\n                self.updateRegionForForm(data);\n                self.addAddress.call().addressTitle(Translate('Edit Address'));\n                this.editCustomerForm.addClass('fade');\n                this.editCustomerForm.removeClass('fade-in');\n                this.editCustomerForm.removeClass('show');\n                this.addAddressForm.addClass('fade-in');\n                this.addAddressForm.addClass('show');\n                this.addAddressForm.removeClass('fade');\n                /* End region updater */\n\n            },\n\n            /* Edit Billing Preview */\n            editBillingPreview: function () {\n                var self = this;\n                self.currentEditAddressId(self.shippingAddressId());\n                var data = {\n                    'firstname' : self.previewBillingFirstname(),\n                    'lastname' : self.previewBillingLastname(),\n                    'company' : self.previewBillingCompany(),\n                    'telephone' : self.previewBillingPhone(),\n                    'street' : [\n                        self.previewBillingStreet1(),\n                        self.previewBillingStreet2()\n                    ],\n                    'country_id' : self.previewBillingCountry(),\n                    'region' : {\n                        'region':  self.previewBillingRegion()\n                    },\n                    'region_id' : self.previewBillingRegionId(),\n                    'city' : self.previewBillingCity(),\n                    'postcode' : self.previewBillingPostCode(),\n                    'vat_id': self.previewBillingVat()\n                };\n                self.addAddress.call().firstName(data.firstname);\n                self.addAddress.call().lastName(data.lastname);\n                self.addAddress.call().company(data.company);\n                self.addAddress.call().phone(data.telephone);\n                self.addAddress.call().street1(data.street[0]);\n                self.addAddress.call().street2(data.street[1]);\n                self.addAddress.call().country(data.country_id);\n                self.addAddress.call().city(data.city);\n                self.addAddress.call().zipcode(data.postcode);\n                self.addAddress.call().vatId(data.vat_id);\n                self.currentEditAddressType('billing');\n                /* Region updater for show edit address popup*/\n                self.updateRegionForForm(data);\n                /* End region updater */\n                self.addAddress.call().addressTitle(Translate('Edit Address'));\n                this.editCustomerForm.addClass('fade');\n                this.editCustomerForm.removeClass('fade-in');\n                this.editCustomerForm.removeClass('show');\n                this.addAddressForm.addClass('fade-in');\n                this.addAddressForm.addClass('show');\n                this.addAddressForm.removeClass('fade');\n            },\n\n            /* Delete Shipping Preview*/\n            deleteShippingPreview: function () {\n                var self = this;\n                confirm({\n                    content: Translate('Do you want to delete address?'),\n                    actions: {\n                        confirm: function () {\n                            var currentData = currentCustomer.data();\n                            var currentEmail = currentData.email;\n                            var customerCollection = CustomerFactory.get().getCollection().addFieldToFilter('email', currentEmail, 'eq')\n                                .load();\n                            customerCollection.done(function (data) {\n                                var collectionData = data.items;\n                                if (collectionData.length > 0) {\n                                    var addressIndex = -1;\n                                    var customerModelData = collectionData[0];\n                                    var address = customerModelData.addresses;\n                                    $.each(address, function (index, value) {\n                                        if (value.id == self.shippingAddressId()) {\n                                            addressIndex = index;\n                                        }\n                                    });\n                                    address.splice(addressIndex, 1);\n                                    customerModelData.addresses = address;\n                                    var customerDeferred = CustomerFactory.get().setMode('offline').setData(customerModelData).setPush(true).save();\n                                    customerDeferred.done(function (data) {\n                                        currentCustomer.setData(data);\n                                        self.addressArray(address);\n                                        if (self.billingAddressId() == self.shippingAddressId()) {\n                                            self.billingAddressId(0);\n                                            self.showBillingPreview();\n                                        }\n                                        self.shippingAddressId(0);\n                                        self.showShippingPreview();\n                                        if(Helper.isUseOnline('customers')){\n                                            CustomerFactory.get().setMode('online');\n                                        }\n                                    });\n                                }\n                            });\n                        },\n                        always: function (event) {\n                            event.stopImmediatePropagation();\n                        }\n                    }\n                });\n            },\n\n            /* Delete Billing Preview*/\n            deleteBillingPreview: function () {\n                var self = this;\n                confirm({\n                    content: Translate('Do you want to delete address?'),\n                    actions: {\n                        confirm: function () {\n                            var currentData = currentCustomer.data();\n                            var currentEmail = currentData.email;\n                            var customerCollection = CustomerFactory.get().getCollection().addFieldToFilter('email', currentEmail, 'eq')\n                                .load();\n                            customerCollection.done(function (data) {\n                                var collectionData = data.items;\n                                if (collectionData.length > 0) {\n                                    var addressIndex = -1;\n                                    var customerModelData = collectionData[0];\n                                    var address = customerModelData.addresses;\n                                    $.each(address, function (index, value) {\n                                        if (value.id == self.billingAddressId()) {\n                                            addressIndex = index;\n                                        }\n                                    });\n                                    address.splice(addressIndex, 1);\n                                    customerModelData.addresses = address;\n                                    var customerDeferred = CustomerFactory.get().setMode('offline').setData(customerModelData).setPush(true).save();\n                                    customerDeferred.done(function (data) {\n                                        currentCustomer.setData(data);\n                                        self.addressArray(address);\n                                        if (self.shippingAddressId() == self.billingAddressId()) {\n                                            self.shippingAddressId(0);\n                                            self.showShippingPreview();\n                                        }\n                                        self.billingAddressId(0);\n                                        self.showBillingPreview();\n                                        if(Helper.isUseOnline('customers')){\n                                            CustomerFactory.get().setMode('online');\n                                        }\n                                    });\n                                }\n                            });\n                        },\n                        always: function (event) {\n                            event.stopImmediatePropagation();\n                        }\n                    }\n                });\n\n            },\n\n            /* Region updater for show edit address popup*/\n            updateRegionForForm: function (data) {\n                var regionJson = JSON.parse(window.webposConfig.regionJson);\n                var regionList = this.addAddressForm.find('#region_id');\n                var regionInput = this.addAddressForm.find('#region');\n                var requiredLabel = regionList.parents('div.field');\n                this._checkRegionRequired(data.country_id);\n                if (typeof regionJson[data.country_id] != 'undefined') {\n                    this.regionTmpl = mageTemplate(this.regionTemplate);\n                    this._removeSelectOptions(regionList);\n                    $.each(regionJson[data.country_id], $.proxy(function (key, value) {\n                        this._renderSelectOption(regionList, key, value);\n                    }, this));\n\n                    if (this.isRegionRequired) {\n                        regionList.addClass('required-entry').removeAttr('disabled');\n                        requiredLabel.addClass('required');\n                    } else {\n                        regionList.removeClass('required-entry validate-select').removeAttr('data-validate');\n                        requiredLabel.removeClass('required');\n                    }\n\n\n                    regionList.prop('disabled', false).show();\n                    regionList.val(data.region_id);\n                    regionInput.prop('disabled', true).hide();\n                } else {\n                    if (this.isRegionRequired) {\n                        regionInput.addClass('required-entry').removeAttr('disabled');\n                        requiredLabel.addClass('required');\n                    }\n\n                    regionInput.val(data.region.region);\n                    regionList.prop('disabled', true).hide();\n                    regionInput.prop('disabled', false).show();\n                }\n                regionInput.removeAttr('disabled');\n            },\n\n            /* Render select options for region*/\n            _renderSelectOption: function (selectElement, key, value) {\n                selectElement.append($.proxy(function () {\n                    var name = value.name.replace(/[!\"#$%&'()*+,.\\/:;<=>?@[\\\\\\]^`{|}~]/g, '\\\\$&'),\n                        tmplData,\n                        tmpl;\n\n                    if (value.code && $(name).is('span')) {\n                        key = value.code;\n                        value.name = $(name).text();\n                    }\n\n                    tmplData = {\n                        value: key,\n                        title: value.name,\n                        isSelected: false,\n                        code: value.code\n                    };\n\n                    tmpl = this.regionTmpl({\n                        data: tmplData\n                    });\n\n                    return $(tmpl);\n                }, this));\n            },\n\n            /* Remove select options */\n            _removeSelectOptions: function (selectElement) {\n                selectElement.find('option').each(function (index) {\n                    if ($(this).val()) {\n                        $(this).remove();\n                    }\n                });\n            },\n            /**\n             * Check if the selected country has a mandatory region selection\n             *\n             * @param {String} country - Code of the country - 2 uppercase letter for country code\n             * @private\n             */\n            _checkRegionRequired: function (country) {\n                var self = this;\n                this.isRegionRequired = false;\n                var regionJson = JSON.parse(window.webposConfig.regionJson);\n\n                $.each(regionJson.config.regions_required, function (index, elem) {\n                    if (elem == country) {\n                        self.isRegionRequired = true;\n                    }\n                });\n            },\n\n            /* Set Data for billing preview */\n            setBillingPreviewData: function (data) {\n                var self = this;\n                self.previewBillingFirstname(data.firstname);\n                self.previewBillingLastname(data.lastname);\n                self.previewBillingCompany(data.company);\n                self.previewBillingPhone(data.telephone);\n                self.previewBillingStreet1(data.street[0]);\n                self.previewBillingStreet2(data.street[1]);\n                self.previewBillingCountry(data.country_id);\n                self.previewBillingRegion(data.region.region);\n                self.previewBillingRegionId(data.region_id);\n                self.previewBillingCity(data.city);\n                self.previewBillingPostCode(data.postcode);\n                self.previewBillingVat(data.vat_id);\n            },\n\n            /* Set Data for shipping preview */\n            setShippingPreviewData: function (data) {\n                var self = this;\n                self.previewShippingFirstname(data.firstname);\n                self.previewShippingLastname(data.lastname);\n                self.previewShippingCompany(data.company);\n                self.previewShippingPhone(data.telephone);\n                self.previewShippingStreet1(data.street[0]);\n                self.previewShippingStreet2(data.street[1]);\n                self.previewShippingCountry(data.country_id);\n                self.previewShippingRegion(data.region.region);\n                self.previewShippingRegionId(data.region_id);\n                self.previewShippingCity(data.city);\n                self.previewShippingPostCode(data.postcode);\n                self.previewShippingVat(data.vat_id);\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/checkout/customer/change-customer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n    \ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/customer/customer-factory',\n        'Magestore_Webpos/js/view/base/list/collection-list',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/action/checkout/select-customer-checkout',\n        'Magestore_Webpos/js/action/checkout/select-billing-address',\n        'Magestore_Webpos/js/action/checkout/select-shipping-address',\n        'Magestore_Webpos/js/helper/staff',\n        'Magestore_Webpos/js/helper/general',\n        'mage/translate',\n        \n    ],\n    function ($,\n              ko,\n              ViewManager,\n              CustomerFactory,\n              colGrid,\n              CheckoutModel,\n              selectCustomerToCheckout,\n              selectBilling,\n              selectShipping,\n              staffHelper,\n              Helper,\n              Translate) {\n        \"use strict\";\n\n        return colGrid.extend({\n            items: ko.observableArray([]),\n            columns: ko.observableArray([]),\n\n            /* Template for koJS*/\n            defaults: {\n                template: 'Magestore_Webpos/checkout/customer/change-customer'\n            },\n\n            /* Assign customer model*/\n            initialize: function () {\n                this._super();\n                this.linstenEventToRender();\n                this.mode = (Helper.isUseOnline('customers'))?'online':'offline';\n            },\n\n            /* Prepare customer collection*/\n            _prepareCollection: function () {\n                var customerGroupOfStaff = staffHelper.getCustomerGroupOfStaff();\n                var getCustomerGroupOfStaffNumber = staffHelper.getCustomerGroupOfStaffNumber();\n                if (this.collection == null) {\n                    if ($.inArray('all', customerGroupOfStaff) > -1) {\n                        this.collection = CustomerFactory.get().getCollection().setOrder('full_name', 'ASC');\n                    } else {\n                        this.collection = CustomerFactory.get().getCollection()\n                            .setOrder('full_name', 'ASC')\n                            .addFieldToFilter('group_id', getCustomerGroupOfStaffNumber, 'in');\n                    }\n                }\n                this.collection.setMode(this.mode);\n                this.pageSize = 20;\n                if ($.inArray('all', customerGroupOfStaff) == -1) {\n                    this.collection = CustomerFactory.get().getCollection()\n                        .setOrder('full_name', 'ASC')\n                        .addFieldToFilter('group_id', getCustomerGroupOfStaffNumber, 'in');\n                }\n                this.collection.setPageSize(this.pageSize);\n                this.collection.setCurPage(this.curPage);\n                this.collection.setOrder('full_name', 'ASC');\n                if (this.searchKey) {\n                    this.collection.addFieldToFilter(\n                        [\n                            ['email', \"%\" + this.searchKey + \"%\", 'like'],\n                            ['telephone', \"%\" + this.searchKey + \"%\", 'like'],\n                            ['full_name', \"%\" + this.searchKey + \"%\", 'like']\n                        ]\n                    );\n                }\n            },\n\n            /* Select customer to checkout */\n            selectCustomer: function (object) {\n                var formEditCustomer = $('#form-edit-customer');\n                var customerModel = CustomerFactory.get().setMode(this.mode).load(object.id);\n                customerModel.done(function (data) {\n                    selectCustomerToCheckout(data);\n                    var addressData = data.addresses;\n                    var isSetBilling = false;\n                    var isSetShipping = false;\n                    if(addressData && addressData.length > 0) {\n                        $.each(addressData, function (index, value) {\n                            if (value.default_billing) {\n                                ViewManager.getSingleton('view/checkout/customer/edit-customer').billingAddressId(value.id);\n                                ViewManager.getSingleton('view/checkout/customer/edit-customer').setBillingPreviewData(value);\n                                ViewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewBilling(true);\n                                isSetBilling = true;\n                            }\n                            if (value.default_shipping) {\n                                ViewManager.getSingleton('view/checkout/customer/edit-customer').shippingAddressId(value.id);\n                                ViewManager.getSingleton('view/checkout/customer/edit-customer').setShippingPreviewData(value);\n                                ViewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewShipping(true);\n                                isSetShipping = true;\n                            }\n                        });\n                    }\n                    if (!isSetBilling) {\n                        ViewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewBilling(false);\n                    }\n\n                    if (!isSetShipping) {\n                        ViewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewShipping(false);\n                    }\n\n                    $('#popup-change-customer').removeClass('fade-in');\n                    $('.wrap-backover').hide();\n                    $('.notification-bell').show();\n                    $('#c-button--push-left').show();\n                    // formEditCustomer.removeClass('fade');\n                    // formEditCustomer.addClass('fade-in');\n                    // formEditCustomer.addClass('show');\n                    ViewManager.getSingleton('view/checkout/checkout/payment').collection.reset();\n                    ViewManager.getSingleton('view/checkout/checkout/payment').saveDefaultPaymentMethod();\n\n                });\n            },\n\n            /* Show create customer form */\n            showCreateCustomerForm: function () {\n                var addCustomerCheckout = $('#form-customer-add-customer-checkout');\n                ViewManager.getSingleton('view/checkout/customer/add-shipping-address').isSameBillingShipping(true);\n                $('#popup-change-customer').removeClass('fade-in');\n                addCustomerCheckout.addClass('fade-in');\n                addCustomerCheckout.addClass('show');\n                addCustomerCheckout.removeClass('fade');\n                $('.wrap-backover').show();\n                $('.notification-bell').hide();\n                $('#c-button--push-left').hide();\n            },\n\n            /* Use guest customer to checkout*/\n            useGuestCustomer: function () {\n                var data= {\n                    id: 0,\n                    full_name: Translate('Guest')\n                };\n                selectCustomerToCheckout(data);\n                selectBilling(0);\n                selectShipping(0);\n                $('#popup-change-customer').removeClass('fade-in');\n                $('.wrap-backover').hide();\n                $('.notification-bell').show();\n                $('#c-button--push-left').show();\n            },\n            /**\n             * Only render list when show popup\n             */\n            linstenEventToRender: function(){\n                var self = this;\n                Helper.observerEvent('checkout_customer_list_show_after', function(){\n                    self._render();\n                })\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/checkout/customer/add-address.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'uiComponent',\n        'Magestore_Webpos/js/model/customer/customer-factory',\n        'Magestore_Webpos/js/model/directory/country',\n        'Magestore_Webpos/js/model/customer/current-customer',\n        'mage/translate',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/region-updater',\n        \"mage/validation\",\n        \n    ],\n    function ($, ko, ViewManager, Component, CustomerFactory, countryModel, currentCustomer, Translate) {\n        \"use strict\";\n        return Component.extend({\n            /* Ko observable for address input*/\n            firstName: ko.observable(''),\n            lastName: ko.observable(''),\n            company: ko.observable(''),\n            phone: ko.observable(''),\n            street1: ko.observable(''),\n            street2: ko.observable(''),\n            country: ko.observable(''),\n            region: ko.observable(''),\n            region_id: ko.observable(0),\n            city: ko.observable(''),\n            zipcode: ko.observable(''),\n            vatId: ko.observable(''),\n            countryArray: ko.observableArray(window.webposConfig.country),\n            addressTitle: ko.observable(Translate('New Address')),\n            currentEditAddressType: ko.observable(null),\n            /* End Observable*/\n            \n            /* Selector for control UI*/\n            editCustomerForm: $('#form-edit-customer'),\n            addAddressForm: $('#form-customer-add-address-checkout'),\n            /* End selector for control UI*/\n\n            /* Add address template*/\n            defaults: {\n                template: 'Magestore_Webpos/checkout/customer/add-address'\n            },\n\n            /* Cancel Address*/\n            cancelAddress: function () {\n                this.hideAddressForm();\n            },\n\n            /* Auto run when initialize*/\n            initialize: function () {\n                this.editCustomer = ViewManager.getSingleton('view/checkout/customer/edit-customer');\n                this.editCustomer.addAddress(this);\n                this._super();\n            },\n\n            /* Save Address */\n            saveAddress: function () {\n                var self = this;\n                var customerDeferred;\n                var newAddressData =  self.getAddressData();\n                var currentCustomerData = currentCustomer.data();\n                if (this.validateAddressForm()) {\n                    if (ViewManager.getSingleton('view/checkout/customer/edit-customer').currentEditAddressId()) {\n                        var addressIndex = -1;\n                        var currentEditAddressId = ViewManager.getSingleton('view/checkout/customer/edit-customer').currentEditAddressId();\n                        var allAddress = ViewManager.getSingleton('view/checkout/customer/edit-customer').addressArray();\n                        $.each(allAddress, function (index, value) {\n                            if (value.id == currentEditAddressId) {\n                                addressIndex = index;\n                                var addressData = self.getAddressData();\n                                addressData.id = value.id;\n                                allAddress[index] = addressData;\n                            }\n                        });\n                        currentCustomerData.addresses = allAddress;\n                    } else {\n                        var currentAddress = currentCustomerData.addresses;\n                        if (currentAddress instanceof Array) {\n                            currentAddress.push(newAddressData);\n                        } else {\n                            currentAddress = [];\n                            currentAddress.push(newAddressData);\n                        }\n                        ViewManager.getSingleton('view/checkout/customer/edit-customer').addressArray(currentAddress);\n                        currentCustomerData.addresses = currentAddress;\n                    }\n                    customerDeferred = CustomerFactory.get().setData(currentCustomerData).setPush(false).save();\n                    customerDeferred.done(function (data) {\n                        currentCustomer.setData(data);\n                        ViewManager.getSingleton('view/checkout/customer/edit-customer').addressArray(currentCustomerData.addresses);\n                        ViewManager.getSingleton('view/checkout/customer/edit-customer').showBillingPreview();\n                        ViewManager.getSingleton('view/checkout/customer/edit-customer').showShippingPreview();\n                    });\n\n                    this.hideAddressForm();\n                }\n            },\n\n            /* Hide Address */\n            hideAddressForm: function () {\n                this.editCustomerForm.removeClass('fade');\n                this.editCustomerForm.addClass('fade-in');\n                this.editCustomerForm.addClass('show');\n                this.addAddressForm.removeClass('fade-in');\n                this.addAddressForm.removeClass('show');\n                this.addAddressForm.addClass('fade');\n                this.addressTitle(Translate('New Address'));\n                ViewManager.getSingleton('view/checkout/customer/edit-customer').currentEditAddressId(false);\n                this.resetAddressForm();\n            },\n\n            /* reset address form */\n            resetAddressForm: function () {\n                this.firstName('');\n                this.lastName('');\n                this.company('');\n                this.phone('');\n                this.street1('');\n                this.street2('');\n                this.country('');\n                this.region('');\n                this.region_id('');\n                this.city('');\n                this.zipcode('');\n                this.vatId('');\n                this.currentEditAddressType(null);\n                $('#form-customer-add-address-checkout').find('#region').val('');\n            },\n\n            /* Validate Add Address Form */\n            validateAddressForm: function () {\n                var form = '#form-customer-add-address-checkout';\n                return $(form).validation() && $(form).validation('isValid');\n            },\n\n            /* Get Address Data Form*/\n            getAddressData: function () {\n                var data = {};\n                var self = this;\n                data.id = 'nsync' + Date.now();\n                data.firstname = this.firstName();\n                data.lastname = this.lastName();\n                data.company = this.company();\n                data.telephone = this.phone();\n                data.street = [this.street1(), this.street2()];\n                data.country_id = this.country();\n\n                var regionIdAddAddress = $('#form-customer-add-address-checkout').find('#region_id');\n                if (regionIdAddAddress.is(':visible')) {\n                    var selected = regionIdAddAddress.find(\":selected\");\n                    var regionCode = selected.data('region-code');\n                    var region = selected.html();\n                    data.region = {\n                        region_id: self.region_id(),\n                        region_code : regionCode,\n                        region : region\n                    };\n                    data.region_id = self.region_id();\n                } else {\n                    data.region = {\n                        region_id: 0,\n                        region_code : self.region(),\n                        region : self.region()\n                    };\n                    data.region_id = 0;\n                }\n                \n                data.city = self.city();\n                data.postcode = self.zipcode();\n                data.vatId = self.vatId();\n                return data;\n            },\n\n            /* Render select for region */\n            _renderSelectOption: function (selectElement, key, value) {\n                selectElement.append($.proxy(function () {\n                    var name = value.name.replace(/[!\"#$%&'()*+,.\\/:;<=>?@[\\\\\\]^`{|}~]/g, '\\\\$&'),\n                        tmplData,\n                        tmpl;\n\n                    if (value.code && $(name).is('span')) {\n                        key = value.code;\n                        value.name = $(name).text();\n                    }\n\n                    tmplData = {\n                        value: key,\n                        title: value.name,\n                        isSelected: false,\n                        code: value.code\n                    };\n\n                    tmpl = this.regionTmpl({\n                        data: tmplData\n                    });\n\n                    return $(tmpl);\n                }, this));\n            },\n\n            /* Remove select options for region */\n            _removeSelectOptions: function (selectElement) {\n                selectElement.find('option').each(function (index) {\n                    if ($(this).val()) {\n                        $(this).remove();\n                    }\n                });\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/checkout/customer/add-shipping-address.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/view/checkout/customer/add-billing-address',\n        'mage/translate',\n        \"mage/validation\"\n    ],\n    function ($, ko, Component, addBilling, Translate) {\n        \"use strict\";\n        return Component.extend({\n\n            countryArray: ko.observableArray(window.webposConfig.country),\n            /* Binding shipping address information in create customer form*/\n            isShowShippingSummaryForm: ko.observable(false),\n            firstNameShipping: ko.observable(''),\n            lastNameShipping: ko.observable(''),\n            companyShipping: ko.observable(''),\n            phoneShipping: ko.observable(''),\n            street1Shipping: ko.observable(''),\n            street2Shipping: ko.observable(''),\n            countryShipping: ko.observable(''),\n            regionShipping: ko.observable(''),\n            regionIdShipping: ko.observable(0),\n            cityShipping: ko.observable(''),\n            zipcodeShipping: ko.observable(''),\n            vatShipping: ko.observable(''),\n            isSameBillingShipping: ko.observable(true),\n            regionObjectShipping: ko.observable(''),\n            regionIdComputedShipping: '',\n            shippingAddressTitle: ko.observable(Translate('Add Shipping Address')),\n            leftButton: ko.observable(Translate('Cancel')),\n            /* End binding*/\n\n            /* Selector for control UI*/\n            addShippingAddressCheckoutForm:  $('#form-customer-add-shipping-address-checkout'),\n            addCustomerCheckoutForm: $('#form-customer-add-customer-checkout'),\n            overlay: $('.wrap-backover'),\n            /* End Selector*/\n\n            /* Template for koJS*/\n            defaults: {\n                template: 'Magestore_Webpos/checkout/customer/add-shipping-address'\n            },\n\n            /* Auto run when call */\n            initialize: function () {\n                this.addBilling = addBilling();\n                this.addBilling.addShipping(this);\n                this._super();\n            },\n            \n            /* Hide Shipping Address*/\n            hideShippingAddress: function () {\n                if (this.shippingAddressTitle == Translate('Add Shipping Address')) {\n                    this.isShowShippingSummaryForm(false);\n                } else {\n                    this.isShowShippingSummaryForm(false);\n                    this.resetFormInfo();\n                }\n                this.addShippingAddressCheckoutForm.removeClass('fade-in');\n                this.addShippingAddressCheckoutForm.removeClass('show');\n                this.addShippingAddressCheckoutForm.addClass('fade');\n                this.addCustomerCheckoutForm.addClass('fade-in');\n                this.addCustomerCheckoutForm.addClass('show');\n                this.addCustomerCheckoutForm.removeClass('fade');\n                this.overlay.show();\n                $('.notification-bell').hide();\n                $('#c-button--push-left').hide();\n            },\n\n            /* Save Shipping Address*/\n            saveShippingAddress: function () {\n                var self = this;\n                var regionShippingAddress = $('#form-customer-add-shipping-address-checkout #region_id');\n                if (this.validateShippingAddressForm()) {\n                    if (regionShippingAddress.is(':visible')) {\n                        var selected = regionShippingAddress.find(\":selected\");\n                        var regionCode = selected.data('region-code');\n                        var region = selected.html();\n                        this.regionObjectShipping({\n                            region_id: self.regionIdShipping(),\n                            region_code : regionCode,\n                            region : region\n                        });\n                    } else {\n                        this.regionObjectShipping({\n                            region_id: 0,\n                            region_code : self.regionShipping(),\n                            region : self.regionShipping()\n                        });\n                        self.regionIdShipping(0);\n                    }\n                    this.addShippingAddressCheckoutForm.removeClass('fade-in');\n                    this.addShippingAddressCheckoutForm.removeClass('show');\n                    this.addShippingAddressCheckoutForm.addClass('fade');\n                    this.addCustomerCheckoutForm.addClass('fade-in');\n                    this.addCustomerCheckoutForm.addClass('show');\n                    this.addCustomerCheckoutForm.removeClass('fade');\n                    this.overlay.show();\n                    $('.notification-bell').hide();\n                    $('#c-button--push-left').hide();\n                    if (this.isSameBillingShipping()) {\n                        this.copyInformationToBilling();\n                    }\n                    this.isShowShippingSummaryForm(true);\n                }\n\n            },\n\n            /* Validate Shipping Address Form*/\n            validateShippingAddressForm: function () {\n                var form = '#form-customer-add-shipping-address-checkout';\n                return $(form).validation({}) && $(form).validation('isValid');\n            },\n\n            /* Copy Information To Billing*/\n            copyInformationToBilling: function () {\n                addBilling().firstNameBilling(this.firstNameShipping());\n                addBilling().lastNameBilling(this.lastNameShipping());\n                addBilling().companyBilling(this.companyShipping());\n                addBilling().phoneBilling(this.phoneShipping());\n                addBilling().street1Billing(this.street1Shipping());\n                addBilling().street2Billing(this.street2Shipping());\n                addBilling().countryBilling(this.countryShipping());\n                addBilling().regionBilling(this.regionShipping());\n                addBilling().regionIdBilling(this.regionIdShipping());\n                addBilling().cityBilling(this.cityShipping());\n                addBilling().zipcodeBilling(this.zipcodeShipping());\n                addBilling().vatBilling(this.vatShipping());\n                addBilling().isShowBillingSummaryForm(true);\n            },\n            \n            /* Reset Form*/\n            resetFormInfo: function () {\n                this.firstNameShipping('');\n                this.lastNameShipping('');\n                this.companyShipping('');\n                this.phoneShipping('');\n                this.street1Shipping('');\n                this.street2Shipping('');\n                this.countryShipping('');\n                this.regionShipping('');\n                this.regionIdShipping('');\n                this.cityShipping('');\n                this.zipcodeShipping('');\n                this.vatShipping('');\n                this.isSameBillingShipping(true);\n                this.regionIdComputedShipping = '';\n                this.shippingAddressTitle(Translate('Add Shipping Address'));\n                this.leftButton(Translate('Cancel'));\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/checkout/customer/add-billing-address.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        \"mage/translate\",\n        \"mage/validation\"\n    ],\n    function ($, ko, Component, Translate) {\n        \"use strict\";\n        return Component.extend({\n            countryArray: ko.observableArray(window.webposConfig.country),\n            addShipping: ko.observable(),\n\n            /* Binding billing address information in create customer form*/\n            isShowBillingSummaryForm: ko.observable(false),\n            firstNameBilling: ko.observable(''),\n            lastNameBilling: ko.observable(''),\n            companyBilling: ko.observable(''),\n            phoneBilling: ko.observable(''),\n            street1Billing: ko.observable(''),\n            street2Billing: ko.observable(''),\n            countryBilling: ko.observable(''),\n            regionBilling: ko.observable(''),\n            regionIdBilling: ko.observable(0),\n            cityBilling: ko.observable(''),\n            zipcodeBilling: ko.observable(''),\n            vatBilling: ko.observable(''),\n            billingAddressTitle: ko.observable(Translate('Add Billing Address')),\n            leftButton: ko.observable(Translate('Cancel')),\n            /* End binding*/\n\n            regionObjectBilling: ko.observable(''),\n            regionIdComputedBilling: '',\n\n            /* Template for knockout js*/\n            defaults: {\n                template: 'Magestore_Webpos/checkout/customer/add-billing-address'\n            },\n\n            /* Hide billing address*/\n            hideBillingAddress: function () {\n                var formAddBillingAddress = $('#form-customer-add-billing-address-checkout');\n                var formAddCustomerCheckout = $('#form-customer-add-customer-checkout');\n                if (this.billingAddressTitle == Translate('Add Billing Address')) {\n                    this.isShowBillingSummaryForm(false);\n                } else {\n                    this.isShowBillingSummaryForm(false);\n                    this.resetFormInfo();\n                }\n                formAddBillingAddress.removeClass('fade-in');\n                formAddBillingAddress.removeClass('show');\n                formAddBillingAddress.addClass('fade');\n                formAddCustomerCheckout.addClass('fade-in');\n                formAddCustomerCheckout.addClass('show');\n                formAddCustomerCheckout.removeClass('fade');\n                $('.wrap-backover').show();\n                $('.notification-bell').hide();\n                $('#c-button--push-left').hide();\n                \n            },\n\n            /* Save billing address*/\n            saveBillingAddress: function () {\n                var self = this;\n                if (this.validateBillingAddressForm()) {\n                    var addBillingForm =  $('#form-customer-add-billing-address-checkout');\n                    var addCustomerForm = $('#form-customer-add-customer-checkout');\n                    var regionIdBillingAddress = addBillingForm.find('#region_id');\n                    if (regionIdBillingAddress.is(':visible')) {\n                        var selected = regionIdBillingAddress.find(\":selected\");\n                        var regionCode = selected.data('region-code');\n                        var region = selected.html();\n                        this.regionObjectBilling({\n                            region_id: self.regionIdBilling(),\n                            region_code : regionCode,\n                            region : region\n                        });\n                        this.regionIdComputedBilling = self.regionIdBilling();\n                    } else {\n                        this.regionObjectBilling({\n                            region_id: 0,\n                            region_code : self.regionBilling(),\n                            region : self.regionBilling()\n                        });\n                        self.regionIdBilling(0);\n                    }\n                    addBillingForm.removeClass('fade-in');\n                    addBillingForm.removeClass('show');\n                    addBillingForm.addClass('fade');\n                    addCustomerForm.addClass('fade-in');\n                    addCustomerForm.addClass('show');\n                    addCustomerForm.removeClass('fade');\n                    $('.wrap-backover').show();\n                    $('.notification-bell').hide();\n                    $('#c-button--push-left').hide();\n                    this.isShowBillingSummaryForm(true);\n                    self.addShipping.call().isSameBillingShipping(false);\n                }\n            },\n\n            /* validate billing address form */\n            validateBillingAddressForm: function () {\n                var form = '#form-customer-add-billing-address-checkout';\n                return $(form).validation({}) && $(form).validation('isValid');\n            },\n\n            /* Reset Form*/\n            resetFormInfo: function () {\n                this.firstNameBilling('');\n                this.lastNameBilling('');\n                this.companyBilling('');\n                this.phoneBilling('');\n                this.street1Billing('');\n                this.street2Billing('');\n                this.countryBilling('');\n                this.regionBilling('');\n                this.regionIdBilling('');\n                this.cityBilling('');\n                this.zipcodeBilling('');\n                this.vatBilling('');\n                this.regionIdComputedBilling = '';\n                this.billingAddressTitle(Translate('Add Billing Address'));\n                this.leftButton(Translate('Cancel'));\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/checkout/customer/add-customer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'require',\n        'jquery',\n        'ko',   \n        'Magestore_Webpos/js/view/layout',\n        'uiComponent',\n        'Magestore_Webpos/js/model/customer/customer-factory',\n        'Magestore_Webpos/js/action/checkout/select-customer-checkout',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        \"mage/translate\",\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/lib/jquery.toaster',\n        \"mage/mage\",\n        \"mage/validation\",\n        'Magestore_Webpos/js/bootstrap/bootstrap',\n        'Magestore_Webpos/js/bootstrap/bootstrap-switch',\n        \n    ],\n\n    function (\n        require,\n        $, \n        ko, \n        ViewManager,\n        Component, \n        CustomerFactory,\n        selectCustomer, \n        Event, \n        addNotification, \n        Translate, \n        checkoutModel\n    ) {\n        \"use strict\";\n        ko.bindingHandlers.bootstrapSwitchOnCustomerCheckout = {\n            init: function (element, valueAccessor, allBindingsAccessor, viewModel) {\n                //$(element).iosCheckbox();\n                $(element).on(\"switchchange\", function (e) {\n                    valueAccessor()(e.target.checked);\n                });\n            }\n        };\n        return Component.extend({\n            /* Binding billing address information in create customer form*/\n            customerGroupArray: ko.observableArray(window.webposConfig.customerGroup),\n\n            isAddCustomer: ko.observable(false),\n\n            isShowBillingSummaryForm: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').isShowBillingSummaryForm();\n            }),\n            firstNameBilling: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').firstNameBilling();\n            }),\n            lastNameBilling: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').lastNameBilling();\n            }),\n            companyBilling: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').companyBilling();\n            }),\n            phoneBilling: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').phoneBilling();\n            }),\n            street1Billing: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').street1Billing();\n            }),\n            street2Billing: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').street2Billing();\n            }),\n            countryBilling: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').countryBilling();\n            }),\n            regionBilling: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').regionBilling();\n            }),\n            regionIdBilling: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').regionIdBilling();\n            }),\n            cityBilling: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').cityBilling();\n            }),\n            zipcodeBilling: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').zipcodeBilling();\n            }),\n            vatBilling: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').vatBilling();\n            }),\n            regionObjectBilling: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-billing-address').regionObjectBilling();\n            }),\n            /* End binding*/\n\n            /* Create Customer Form*/\n            firstNameCustomer: ko.observable(''),\n            lastNameCustomer: ko.observable(''),\n            emailCustomer: ko.observable(''),\n            groupCustomer: ko.observable(''),\n            vatCustomer: ko.observable(''),\n            isSubscriberCustomer: ko.observable(false),\n            /* End Form*/\n\n            /* Binding shipping address information in create customer form*/\n            isShowShippingSummaryForm: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').isShowShippingSummaryForm();\n            }),\n            firstNameShipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').firstNameShipping();\n            }),\n            lastNameShipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').lastNameShipping();\n            }),\n            companyShipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').companyShipping();\n            }),\n            phoneShipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').phoneShipping();\n            }),\n            street1Shipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').street1Shipping();\n            }),\n            street2Shipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').street2Shipping();\n            }),\n            countryShipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').countryShipping();\n            }),\n            regionShipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').regionShipping();\n            }),\n            regionIdShipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').regionIdShipping();\n            }),\n            cityShipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').cityShipping();\n            }),\n            zipcodeShipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').zipcodeShipping();\n            }),\n            vatShipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').vatShipping();\n            }),\n            regionObjectShipping: ko.pureComputed(function () {\n                return require('Magestore_Webpos/js/view/layout').getSingleton('view/checkout/customer/add-shipping-address').regionObjectShipping();\n            }),\n                \n            /* End binding*/\n\n            /* Selector for control UI*/\n            formAddCustomerCheckout: $('#form-customer-add-customer-checkout'),\n            formAddShippingAddressCheckout: $('#form-customer-add-shipping-address-checkout'),\n            /* End selector*/\n\n            /* Template for koJS*/\n            defaults: {\n                template: 'Magestore_Webpos/checkout/customer/add-customer'\n            },\n\n            /* Cancel customer form */\n            cancelCustomerForm: function () {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                var customerForm = $('#form-customer-add-customer-checkout');\n                customerForm.removeClass('fade-in');\n                customerForm.removeClass('show');\n                customerForm.addClass('fade');\n                customerForm.validation();\n                customerForm.validation('clearError');\n                this.resetFormInfo('form-customer-add-customer-checkout');\n                this.deleteShippingAddress();\n                this.deleteBillingAddress();\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').isShowBillingSummaryForm(false);\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').isShowShippingSummaryForm(false);\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').isSameBillingShipping(true);\n                $('.wrap-backover').hide();\n                $('.notification-bell').show();\n                $('#c-button--push-left').show();\n            },\n\n            /* Save customer form*/\n            saveCustomerForm: function () {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                var data = {};\n                var self = this;\n                data.id = 'notsync_' + this.emailCustomer();\n                data.firstname = this.firstNameCustomer();\n                data.lastname = this.lastNameCustomer();\n                data.full_name = this.firstNameCustomer() + ' ' + this.lastNameCustomer();\n                data.email = this.emailCustomer();\n                data.group_id = this.groupCustomer();\n                data.subscriber_status = this.isSubscriberCustomer();\n                data.addresses = [];\n                if (!this.isShowBillingSummaryForm() && !this.isShowShippingSummaryForm()) {\n                    data.addresses = [];\n                    checkoutModel.saveShippingAddress({\n                        'id' : 0,\n                        'firstname': data.firstname,\n                        'lastname': data.lastname\n                    });\n                    checkoutModel.saveBillingAddress({\n                        'id' : 0,\n                        'firstname': data.firstname,\n                        'lastname': data.lastname\n                    });\n                } else {\n                    var shippingAddressData = this.getShippingAddressData();\n                    var billingAddressData = this.getBillingAddressData();\n                    if (viewManager.getSingleton('view/checkout/customer/add-shipping-address').isSameBillingShipping()) {\n                        shippingAddressData.default_billing = true;\n                        shippingAddressData.default_shipping = true;\n                        data.addresses.push(shippingAddressData);\n                        checkoutModel.saveBillingAddress(shippingAddressData);\n                        checkoutModel.saveShippingAddress(shippingAddressData);\n                    } else {\n                        if (this.isShowShippingSummaryForm()) {\n                            shippingAddressData.default_shipping = true;\n                            data.addresses.push(shippingAddressData);\n                            checkoutModel.saveShippingAddress(shippingAddressData);\n                            if (this.isShowBillingSummaryForm()) {\n                                checkoutModel.saveBillingAddress(this.getBillingAddressData());\n                            } else {\n                                checkoutModel.saveBillingAddress({\n                                    'id' : 0,\n                                    'firstname': data.firstname,\n                                    'lastname': data.lastname\n                                });\n                            }\n                        }\n                        if (this.isShowBillingSummaryForm()) {\n                            billingAddressData.default_billing = true;\n                            data.addresses.push(billingAddressData);\n                            checkoutModel.saveBillingAddress(billingAddressData);\n                            if (this.isShowShippingSummaryForm()) {\n                                checkoutModel.saveShippingAddress(shippingAddressData);\n                            } else {\n                                checkoutModel.saveShippingAddress({\n                                    'id' : 0,\n                                    'firstname': data.firstname,\n                                    'lastname': data.lastname\n                                });\n                            }\n                        }\n                        if (!this.isShowBillingSummaryForm() && !this.isShowShippingSummaryForm()) {\n                            checkoutModel.saveShippingAddress({\n                                'id' : 0,\n                                'firstname': data.firstname,\n                                'lastname': data.lastname\n                            });\n                            checkoutModel.saveBillingAddress({\n                                'id' : 0,\n                                'firstname': data.firstname,\n                                'lastname': data.lastname\n                            });\n                        }\n                    }\n                }\n\n                var telephone;\n                if (data.addresses.length > 0) {\n                    var addresses = data.addresses;\n                    telephone = addresses[0].telephone;\n                } else {\n                    telephone = 'N/A';\n                }\n                data.telephone = telephone;\n                if (this.validateCustomerForm()) {\n                    var deferred = CustomerFactory.get()\n                        .getCollection().addFieldToFilter('email', this.emailCustomer(), 'eq')\n                        .load();\n                    deferred.done(function (filterData) {\n                        var items = filterData.items;\n                        if (items.length > 0) {\n                            addNotification('The customer email is existed.', true, 'danger', 'Error');\n                        } else {\n                            if (typeof data['columns'] != 'undefined') {\n                                delete data['columns'];\n                            }\n                            var saveDeferred = CustomerFactory.get().setData(data).setPush(true).save();\n                            saveDeferred.done(function (dataOffline) {\n                                selectCustomer(dataOffline);\n                                var addressData = dataOffline.addresses;\n                                var isSetBilling = false;\n                                var isSetShipping = false;\n                                $.each(addressData, function (index, value) {\n                                    if (value.default_billing) {\n                                        viewManager.getSingleton('view/checkout/customer/edit-customer').billingAddressId(value.id);\n                                        viewManager.getSingleton('view/checkout/customer/edit-customer').setBillingPreviewData(value);\n                                        viewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewBilling(true);\n                                        isSetBilling = true;\n                                    }\n                                    if (value.default_shipping) {\n                                        viewManager.getSingleton('view/checkout/customer/edit-customer').shippingAddressId(value.id);\n                                        viewManager.getSingleton('view/checkout/customer/edit-customer').setShippingPreviewData(value);\n                                        viewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewShipping(true);\n                                        isSetShipping = true;\n                                    }\n                                });\n                                if (!isSetBilling) {\n                                    viewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewBilling(false);\n                                }\n\n                                if (!isSetShipping) {\n                                    viewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewShipping(false);\n                                }\n                                self.isAddCustomer(true);\n                                Event.dispatch('customer_pull_after');\n                                $.toaster(\n                                    {\n                                        priority: 'success',\n                                        title: Translate('Success'),\n                                        message: Translate('The customer is saved successfully.')\n                                    }\n                                );\n                            });\n                            self.cancelCustomerForm();\n                        }\n                    });\n                }\n            },\n\n            /* Validate Customer Form*/\n            validateCustomerForm: function () {\n                var form = '#form-customer-add-customer-checkout';\n                return $(form).validation({}) && $(form).validation('isValid');\n            },\n\n            /* Show shipping address*/\n            showShippingAddress: function () {\n                var self = this;\n                self.showShippingAddressControl();\n            },\n\n            /* Edit shipping address*/\n            editShippingAddress: function () {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                var self = this;\n                self.showShippingAddressControl();\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').shippingAddressTitle(Translate('Edit Shipping Address'));\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').leftButton(Translate('Delete'));\n            },\n\n            /* Show billing address*/\n            showBillingAddress: function () {\n                var self = this;\n                self.showBillingAddressControl();\n            },\n\n            /* Edit billing address*/\n            editBillingAddress: function () {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                var self = this;\n                self.showBillingAddressControl();\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').billingAddressTitle(Translate('Edit Billing Address'));\n            },\n\n            /* Delete billing address*/\n            deleteBillingAddress: function () {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').isShowBillingSummaryForm(false);\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').firstNameBilling('');\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').lastNameBilling('');\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').companyBilling('');\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').phoneBilling('');\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').street1Billing('');\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').street2Billing('');\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').countryBilling('');\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').regionBilling('');\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').regionIdBilling(0);\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').cityBilling('');\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').zipcodeBilling('');\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').vatBilling('');\n            },\n\n            /* Delete shipping address*/\n            deleteShippingAddress: function () {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').isShowShippingSummaryForm(false);\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').firstNameShipping('');\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').lastNameShipping('');\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').companyShipping('');\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').phoneShipping('');\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').street1Shipping('');\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').street2Shipping('');\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').countryShipping('');\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').regionShipping('');\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').regionIdShipping(0);\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').cityShipping('');\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').zipcodeShipping('');\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').vatShipping('');\n            },\n\n            /* Get billing address data*/\n            getBillingAddressData: function () {\n                var data = {};\n                data.id = 'nsync' + Date.now();\n                data.firstname = this.firstNameBilling();\n                data.lastname = this.lastNameBilling();\n                data.street = [\n                    this.street1Billing(), this.street2Billing()\n                ];\n                data.telephone = this.phoneBilling();\n                data.company = this.companyBilling();\n                data.country_id = this.countryBilling();\n                data.city = this.cityBilling();\n                data.postcode = this.zipcodeBilling();\n                data.region_id = this.regionIdBilling();\n                data.region = this.regionObjectBilling();\n                return data;\n            },\n\n            /* Get shipping address data*/\n            getShippingAddressData: function () {\n                var data = {};\n                data.id = 'nsync' + Date.now();\n                data.firstname = this.firstNameShipping();\n                data.lastname = this.lastNameShipping();\n                data.street = [\n                    this.street1Shipping(), this.street2Shipping()\n                ];\n                data.telephone = this.phoneShipping();\n                data.company = this.companyShipping();\n                data.country_id = this.countryShipping();\n                data.city = this.cityShipping();\n                data.postcode = this.zipcodeShipping();\n                data.region_id = this.regionIdShipping();\n                data.region = this.regionObjectShipping();\n                return data;\n            },\n\n            /* Reset Form*/\n            resetFormInfo: function (form) {\n                document.getElementById(form).reset();\n            },\n\n            /* Show Shipping Address */\n            showShippingAddressControl: function () {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                var self = this;\n                var shippingAddressForm = $('#form-customer-add-shipping-address-checkout');\n                var countryId = shippingAddressForm.find('#country_id');\n                var regionList = shippingAddressForm.find('#region_id');\n                var region = shippingAddressForm.find('#region');\n                countryId.regionUpdater({\n                    regionList: regionList,\n                    regionInput: region,\n                    regionJson: JSON.parse(window.webposConfig.regionJson)\n                });\n\n                if (viewManager.getSingleton('view/checkout/customer/add-shipping-address').firstNameShipping() == '') {\n                    viewManager.getSingleton('view/checkout/customer/add-shipping-address').firstNameShipping(self.firstNameCustomer());\n                }\n                if (viewManager.getSingleton('view/checkout/customer/add-shipping-address').lastNameShipping() == '') {\n                    viewManager.getSingleton('view/checkout/customer/add-shipping-address').lastNameShipping(self.lastNameCustomer());\n                }\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').shippingAddressTitle(Translate('Add Shipping Address'));\n                viewManager.getSingleton('view/checkout/customer/add-shipping-address').leftButton(Translate('Cancel'));\n                this.formAddCustomerCheckout.removeClass('fade-in');\n                this.formAddCustomerCheckout.removeClass('show');\n                this.formAddCustomerCheckout.addClass('fade');\n\n                this.formAddShippingAddressCheckout.addClass('fade-in');\n                this.formAddShippingAddressCheckout.addClass('show');\n                this.formAddShippingAddressCheckout.removeClass('fade');\n            },\n\n            /* Show Billing Address*/\n            showBillingAddressControl: function () {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                var self = this;\n                var billingAddressForm = $('#form-customer-add-billing-address-checkout');\n                var countryId = billingAddressForm.find('#country_id');\n                var regionList = billingAddressForm.find('#region_id');\n                var region = billingAddressForm.find('#region');\n                countryId.regionUpdater({\n                    regionList: regionList,\n                    regionInput: region,\n                    regionJson: JSON.parse(window.webposConfig.regionJson)\n                });\n                if (viewManager.getSingleton('view/checkout/customer/add-billing-address').firstNameBilling() == '') {\n                    viewManager.getSingleton('view/checkout/customer/add-billing-address').firstNameBilling(self.firstNameCustomer());\n                }\n                if (viewManager.getSingleton('view/checkout/customer/add-billing-address').lastNameBilling() == '') {\n                    viewManager.getSingleton('view/checkout/customer/add-billing-address').lastNameBilling(self.lastNameCustomer());\n                }\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').billingAddressTitle(Translate('Add Billing Address'));\n                viewManager.getSingleton('view/checkout/customer/add-billing-address').leftButton(Translate('Cancel'));\n                this.formAddCustomerCheckout.removeClass('fade-in');\n                this.formAddCustomerCheckout.removeClass('show');\n                this.formAddCustomerCheckout.addClass('fade');\n                billingAddressForm.addClass('fade-in');\n                billingAddressForm.addClass('show');\n                billingAddressForm.removeClass('fade');\n                $('.wrap-backover').show();\n                $('.notification-bell').hide();\n                $('#c-button--push-left').hide();\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/settings/synchronization/sync-data.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/model/config/config',\n        'Magestore_Webpos/js/view/settings/synchronization/sync-map',\n        'Magestore_Webpos/js/model/synchronization',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/lib/cookie',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'mage/translate',\n        'Magestore_Webpos/js/model/event-manager',\n    ],\n    function ($, ko, Component, config, syncmap, synchronization, eventManager, Cookies, addNotification, Translate) {\n        \"use strict\";\n\n        return Component.extend({\n\n            isInstall: ko.observable(true),\n\n            message: ko.observable(''),\n\n            number: syncmap().length,\n\n            model: syncmap(),\n\n            running: ko.observable(false),\n\n            modelList: ko.observableArray([]),\n\n            percent: ko.observable('0'),\n\n            initialize: function () {\n                this._super();\n                var self = this;\n                self.model.sort(function (a, b) {\n                    var x = a.sort_order;\n                    var y = b.sort_order;\n                    return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n                });\n                if (Cookies.get('check_login')) {\n                    self.isInstall(true);\n                } else {\n                    self.isInstall(false);\n                    self.updateData();\n                }\n                eventManager.observer('checkout_mode_configuration_change_after', function(){\n                    self.model = syncmap();\n                    self.number = syncmap().length;\n                    self.modelList([]);\n                    self.updateData();\n                });\n            },\n\n            updateData: function () {\n                var self = this;\n                var model = this.model.shift();\n                if (typeof model == 'undefined') {\n                    eventManager.dispatch('finish_install');\n                    return this;\n                }\n                var update = new synchronization(model);\n                var endDeferred = $.Deferred();\n                update.initialize(endDeferred);\n                update.update();\n                self.modelList.push(update);\n                endDeferred.done(function () {\n                    self.percent(parseInt(self.modelList().length * 100 / self.number));\n                    self.updateData();\n                });\n                endDeferred.fail(function () {\n                    self.updateData();\n                });\n            },\n            updateAll: function () {\n                var self = this;\n                var checkNumber = self.modelList().length;\n                var updateArray = [];\n                $.each(self.modelList(), function (index, model) {\n                    self.running(true);\n                    model.setMode('finish');\n                    updateArray[model.id] = $.Deferred();\n                    model.actionText('Updating...');\n                    model.doneDeferred = updateArray[model.id];\n                    model.processUpdate(updateArray[model.id]);\n                    updateArray[model.id].done(function () {\n                        checkNumber = checkNumber - 1;\n                        if (checkNumber <= 0 && checkNetWork) {\n                            location.reload();\n                        } else if (checkNumber <= 0) {\n                            self.running(false);\n                        }\n                    });\n                    updateArray[model.id].fail(function (error) {\n                        checkNumber = checkNumber - 1;\n                        if (checkNumber <= 0 && (!checkNetWork || error.statusText == 'error' && error.status == 0)) {\n                            checkNetWork = false;\n                            addNotification(Translate('Cannot connect to your server!'), true, 'danger', 'Error');\n                            self.running(false);\n                            return self;\n                        } else if (checkNumber <= 0 && checkNetWork) {\n                            location.reload();\n                        } else if (checkNumber <= 0) {\n                            self.running(false);\n                        }\n                    });\n                });\n            },\n            reloadAll: function () {\n                var self = this;\n                var checkNumber = self.modelList().length;\n                var reloadArray = [];\n                $.each(self.modelList(), function (index, model) {\n                    self.running(true);\n                    model.setMode('install');\n                    reloadArray[model.id] = $.Deferred();\n                    model.clearData(reloadArray[model.id]);\n                    model.doneDeferred = reloadArray[model.id];\n                    reloadArray[model.id].done(function () {\n                        checkNumber = checkNumber - 1;\n                        if (checkNumber <= 0 && checkNetWork) {\n                            location.reload();\n                        } else if (checkNumber <= 0) {\n                            self.running(false);\n                        }\n                    });\n                    reloadArray[model.id].fail(function (error) {\n                        checkNumber = checkNumber - 1;\n                        if (checkNumber <= 0 && (!checkNetWork || error.statusText == 'error' && error.status == 0)) {\n                            checkNetWork = false;\n                            addNotification(Translate('Cannot connect to your server!'), true, 'danger', 'Error');\n                            self.running(false);\n                            return self;\n                        } else if (checkNumber <= 0 && checkNetWork) {\n                            location.reload();\n                        } else if (checkNumber <= 0) {\n                            self.running(false);\n                        }\n                    });\n                });\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/synchronization/error-logs.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/model/log/action-log',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract',\n        'Magestore_Webpos/js/helper/full-screen-loader',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'Magestore_Webpos/js/model/event-manager',\n        'mage/translate',\n        'Magento_Ui/js/modal/confirm',\n    ],\n    function ($, ko, Component, actionLog, datetime, onlineAbstract, loader, addNotification, eventManager, Translate, confirm) {\n        \"use strict\";\n\n        return Component.extend({\n            errorList: ko.observableArray([]),\n            types: ko.observableArray([]),\n            typeData: ['All'],\n            type: ko.observable('All'),\n            data: '',\n            initialize: function () {\n                this._super();\n                var self = this;\n                eventManager.observer('reload_action_error', function () {\n                    self.filterActionLog();\n                });\n                self.filterActionLog();\n            },\n            filterActionLog: function (self, type) {\n                if (!self)\n                    self = this;\n                if (type) {\n                    self.type(type);\n                }\n                self.errorList([]);\n                self.types([]);\n                var collection = actionLog().getCollection().reset();\n                collection.addFieldToFilter('number', '5', 'gteq');\n                if (self.type() && self.type() != 'All') {\n                    collection.addFieldToFilter('type', self.type(), 'eq');\n                }\n                var actionLogDefered = collection.load();\n                actionLogDefered.done(function (data) {\n                    self.data = data.items;\n                    $.each(data.items, function (index, value) {\n                        if (value.type && self.typeData.indexOf(value.type) < 0) {\n                            self.typeData.push(value.type);\n                        }\n                        var data = {};\n                        data.index = index;\n                        data.visibleView = (value.type =='customer' || value.type =='order');\n                        data.actionId = value.action_id;\n                        if (value.error) {\n                            data.error = '' + value.error;\n                        } else {\n                            data.error = 'N/A';\n                        }\n                        if (value.key_path && value.interfaceName && value.payload[value.interfaceName] && value.payload[value.interfaceName][value.key_path]) {\n                            data.actionId = value.payload[value.interfaceName][value.key_path];\n                        }\n                        data.createdAt = datetime.getFullDate(value.order);\n                        self.errorList.push(data);\n                    });\n                    $.each(self.typeData, function (index, value) {\n                        self.types.push(value);\n                    });\n\n                });\n            },\n            viewDetail: function (data) {\n                var self = this;\n                var item = self.data[data.index];\n                if (item.type == 'customer') {\n                    $('#synchronization_container').removeClass('active');\n                    $('#customer_list_container').addClass('active');\n                    $('#customer_list_container #search-header-customer').val(item.payload[item.interfaceName].email);\n                    eventManager.dispatch('customer_search_after', [item.payload[item.interfaceName].email]);\n                }\n                if (item.type == 'order') {\n                    $('#synchronization_container').removeClass('active');\n                    $('#orders_history_container').addClass('active');\n                    $('#orders_history_container #search-header-order').val(item.action_id);\n                    eventManager.dispatch('order_search_after', [item.action_id]);\n                }\n            },\n            delete: function (data) {\n                var self = this;\n                var item = self.data[data.index];\n                confirm({\n                    content: Translate(\"Are you sure you want to delete?\"),\n                    actions: {\n                        confirm: function () {\n                            if (item.action_id) {\n                                var deleteDefered = actionLog().delete(item.action_id);\n                                deleteDefered.done(function () {\n                                    self.filterActionLog();\n                                });\n                            }\n                        }\n                    }\n                });\n            },\n            tryAgain: function (data) {\n                var self = this;\n                var item = self.data[data.index];\n                var deferred = $.Deferred();\n                if (item.api_url && item.method) {\n                    loader.startLoader();\n                    onlineAbstract().setPush(true).setLog(false).callRestApi(\n                        item.api_url, item.method, item.params, item.payload, deferred, item.callBack\n                    );\n                    deferred.done(function (response) {\n                        var changeRequireAction = actionLog().getCollection().reset().addFieldToFilter('require_action_id', item.action_id, 'eq').setOrder('order', 'DESC').load();\n                        changeRequireAction.done(function (dataLog) {\n                            if (dataLog.total_count) {\n                                $.each(dataLog.items, function (index, value) {\n                                    value.require_action_id = response[item.key_path];\n                                    if (value.requireActionIdPath) {\n                                        if (value.interfaceName) {\n                                            value.payload.interfaceName[value.requireActionIdPath] = response[item.key_path];\n                                        } else {\n                                            value.payload[value.requireActionIdPath] = response[item.key_path];\n                                        }\n                                    }\n                                    var changeLog = actionLog().setData(value).save();\n                                    changeLog.done(function () {\n                                        var deleteLog = actionLog().delete(item.action_id);\n                                    });\n                                });\n                            } else {\n                                var deleteLog = actionLog().delete(item.action_id);\n                            }\n                        });\n                    });\n                    deferred.fail(function (response) {\n                        var error = {};\n                        if (response.responseText) {\n                            try {\n                                error = JSON.parse(response.responseText);\n                            } catch (err) {\n                                error = response.responseText\n                            }\n                        }\n                        if (typeof error != 'undefined' && error.message) {\n                            var message = String(error.message).substr(0, 255);\n                        } else {\n                            var message = String(error).substr(0, 255);\n                        }\n                        addNotification(message, true, 'danger', 'Error');\n                    });\n                    deferred.always(function () {\n                        loader.stopLoader();\n                    });\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/synchronization/sync-map.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function ($, eventManager, Helper) {\n        \"use strict\";\n        var getSyncMap = function() {\n            var maps = [\n                {\n                    sort_order: 160,\n                    label: 'Tax rule',\n                    model: 'model/checkout/taxrule',\n                    limitPage: 0\n                },\n                {\n                    sort_order: 150,\n                    label: 'Tax Classes',\n                    model: 'model/checkout/taxclass',\n                    limitPage: 0\n                },\n                {\n                    sort_order: 140,\n                    label: 'Tax Rate',\n                    model: 'model/checkout/taxrate',\n                    limitPage: 0\n                },\n                {\n                    sort_order: 130,\n                    label: 'Shipping',\n                    model: 'model/checkout/shipping',\n                    limitPage: 0\n                },\n                {\n                    sort_order: 120,\n                    label: 'Payment',\n                    model: 'model/checkout/payment',\n                    limitPage: 0\n                },\n                {\n                    sort_order: 100,\n                    label: 'Country',\n                    model: 'model/directory/country',\n                    limitPage: 0\n                },\n                {\n                    sort_order: 90,\n                    label: 'Currency',\n                    model: 'model/directory/currency',\n                    limitPage: 0\n                },\n                {\n                    sort_order: 70,\n                    label: 'Customer Complaints',\n                    model: 'model/customer/complain',\n                    limitPage: 0\n                },\n                {\n                    sort_order: 60,\n                    label: 'Group',\n                    model: 'model/customer/group',\n                    limitPage: 0\n                },\n                {\n                    sort_order: 50,\n                    label: 'Shift',\n                    model: 'model/shift/shift',\n                    limitPage: 0\n                },\n                {\n                    sort_order: 10,\n                    label: 'Configuration',\n                    model: 'model/config/config',\n                    limitPage: 0\n                },\n                {\n                    sort_order: 8,\n                    label: 'Swatch Option',\n                    model: 'model/catalog/product/swatch',\n                    limitPage: 0\n                }\n            ];\n            if (!Helper.isUseOnline('products')) {\n                maps.push({\n                    sort_order: 30,\n                    label: 'Product',\n                    model: 'model/catalog/product',\n                    limitPage: 2,\n                    filter: {\n                        field: 'updated_at',\n                        config: 'webpos/updated/product',\n                        datetime: true,\n                        mode: 'finish',\n                        condition: 'gteq'\n                    },\n                    pageSize: 300\n                });\n            }\n            if (!Helper.isUseOnline('customers')) {\n                maps.push({\n                    sort_order: 80,\n                    label: 'Customer',\n                    model: 'model/customer/customer',\n                    limitPage: 2,\n                    filter: {\n                        field: 'updated_at',\n                        config: 'webpos/updated/customer',\n                        datetime: true,\n                        mode: 'finish',\n                        condition: 'gteq'\n                    }\n                });\n            }\n            if (!Helper.isUseOnline('stocks')) {\n                maps.push({\n                    sort_order: 40,\n                    label: 'Stock Item',\n                    model: 'model/inventory/stock-item',\n                    limitPage: 5,\n                    filter: {\n                        field: 'updated_time',\n                        config: 'webpos/updated/stock_item',\n                        datetime: true,\n                        mode: 'finish',\n                        condition: 'gteq'\n                    },\n                    pageSize: 500\n                });\n            }\n            if (!Helper.isUseOnline('orders')) {\n                maps.push({\n                    sort_order: 110,\n                    label: 'Order',\n                    model: 'model/sales/order',\n                    limitPage: 2,\n                    filter: {\n                        field: 'created_at',\n                        config: 'webpos/offline/order_limit',\n                        is_config: true,\n                        datetime: 'day',\n                        condition: 'gt'\n                    }\n                });\n            }\n            if (!Helper.isUseOnline('categories')) {\n                maps.push({\n                    sort_order: 20,\n                    label: 'Category',\n                    model: 'model/catalog/category',\n                    limitPage: 0\n                });\n            }\n            eventManager.dispatch('sync_prepare_maps', {'maps': maps});\n\n            return maps;\n        };\n        return getSyncMap;\n    }\n);","Magestore_Webpos/js/view/settings/synchronization/content.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/lib/cookie'\n    ],\n    function ($, ko, Component, Cookies) {\n        \"use strict\";\n\n        return Component.extend({\n            headerName: ko.observable('Sync Data'),\n            initialize: function () {\n                this._super();\n            },\n            changeMenu: function (self, data) {\n                self.headerName(data.label);\n            },\n            resetLocalDatabase: function(){\n                var indexedDB = this.getIndexedDB();\n                if(indexedDB){\n                    indexedDB.deleteDatabase('magestore_webpos');\n                }\n                Cookies.set('check_login', 1, { expires: parseInt(window.webposConfig.timeoutSession) });\n                window.location.reload();\n            },\n            getIndexedDB: function() {\n                if ( !indexedDB ) {\n                    indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.oIndexedDB || window.msIndexedDB || ((window.indexedDB === null && window.shimIndexedDB) ? window.shimIndexedDB : undefined);\n\n                    if ( !indexedDB ) {\n                        return false;\n                    }\n                }\n                return indexedDB;\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/catalog.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent'\n    ],\n    function ($,ko, Component) {\n        \"use strict\";\n\n        return Component.extend({\n            defaults:{\n                template:'Magestore_Webpos/settings/general/catalog'\n            },\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/timeout.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/settings/general/abstract'\n    ],\n    function ($, ko, select) {\n        \"use strict\";\n\n        return select.extend({\n            defaults: {\n                template: 'Magestore_Webpos/settings/general/timeout'\n            },\n            elementName: 'timeout',\n            value: ko.observable(''),\n            optionsArray: ko.observableArray(\n                [\n                    {\n                        value: 1,\n                        text: '1 Minute'\n                    },\n                    {\n                        value: 2,\n                        text: '2 Minutes'\n                    }\n                ]\n            )\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/group.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent'\n    ],\n    function ($,ko, Component, _) {\n        \"use strict\";\n\n        return Component.extend({\n            defaults:{\n                template:'Magestore_Webpos/settings/general/group'\n            },\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'uiComponent',\n        'Magestore_Webpos/js/model/config/config'\n    ],\n    function ($, Component, Config) {\n        \"use strict\";\n\n        return Component.extend({\n\n            initialize: function () {\n                this._super();\n                this.loadConfig();\n            },\n\n            saveConfig: function (data) {\n                var value = $('select[name=\"' + data.elementName + '\"]').val();\n                if (value) {\n                    var deferred = $.Deferred();\n                    Config().setData({\n                        scope: 'default',\n                        scope_id: null,\n                        path: 'webpos/config/' + data.elementName,\n                        value: value\n                    }).save(deferred);\n                    deferred.done(function (data) {\n                        console.log(data);\n                    });\n                }\n            },\n\n            loadConfig: function () {\n                var self = this;\n                var deferred = $.Deferred();\n                var id = 'webpos/config/' + self.elementName;\n                Config().load(id, deferred);\n                deferred.done(function (data) {\n                    if (data.value) {\n                        self.value(data.value);\n                    }\n                });\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/content.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'underscore'\n    ],\n    function ($,ko, Component, _) {\n        \"use strict\";\n\n        return Component.extend({\n            defaults:{\n                template:'Magestore_Webpos/settings/general/content'\n            },\n            enableExtensions: ko.observableArray([]),\n            initialize: function () {\n                this._super();\n                if(window.webposConfig.plugins){\n                    this.enableExtensions(window.webposConfig.plugins);\n                }\n            },\n            hasExtensions: function(){\n                var self = this;\n                if(self.elems().length > 0){\n                    _.forEach(self.elems(), function(child){\n                        if(!self.isExtensionEnable(child.index) && child.index.indexOf('os_') >= 0){\n                            self.removeChild(child.index);\n                        }\n                    });\n                }\n                return (self.elems().length > 0)?true:false;\n            },\n            isExtensionEnable: function(index){\n                return ($.inArray(index, this.enableExtensions()) !== -1);\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/checkout/sync-order-onhold.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/view/settings/general/element/select',\n    ],\n    function (Select) {\n        \"use strict\";\n\n        return Select.extend({\n            defaults: {\n                elementName: 'os_checkout.sync_order_onhold',\n                configPath: 'os_checkout/sync_order_onhold'\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/checkout/auto-check-promotion-rules.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/view/settings/general/element/select',\n    ],\n    function (Select) {\n        \"use strict\";\n\n        return Select.extend({\n            defaults: {\n                elementName: 'os_checkout.auto_check_promotion_rules',\n                configPath: 'os_checkout/auto_check_promotion_rules'\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/checkout/enable-online.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/view/settings/general/element/select',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function (Select, Event) {\n        \"use strict\";\n\n        return Select.extend({\n            defaults: {\n                elementName: 'os_checkout.enable_online_mode',\n                configPath: 'os_checkout/enable_online_mode',\n                defaultValue: 0\n            },\n            initialize: function () {\n                this._super();\n                Event.dispatch('checkout_mode_configuration_change', '');\n            },\n            saveConfig: function (data, event) {\n                this._super();\n                Event.dispatch('checkout_mode_configuration_change', '');\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/storecredit/auto-sync-balance.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/view/settings/general/element/select'\n    ],\n    function (Select) {\n        \"use strict\";\n\n        return Select.extend({\n            defaults: {\n                elementName: 'os_store_credit.auto_sync_balance_when_checkout',\n                configPath: 'os_store_credit/auto_sync_balance_when_checkout'\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/storecredit/show-storecredit-balance.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/view/settings/general/element/select',\n    ],\n    function (Select) {\n        \"use strict\";\n\n        return Select.extend({\n            defaults: {\n                elementName: 'os_store_credit.show_customer_credit_balance_on_receipt',\n                configPath: 'os_store_credit/show_customer_credit_balance_on_receipt'\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/currency/change-currency.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/settings/general/abstract',\n        'Magestore_Webpos/js/model/directory/currency',\n        'mage/url',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'Magestore_Webpos/js/model/event-manager',\n        'mage/translate'\n    ],\n    function ($, ko, Component, currency, mageUrl, addNotification, eventManager, Translate) {\n        \"use strict\";\n\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/settings/general/currency/change-currency'\n            },\n            elementName: 'currency',\n            value: ko.observable(''),\n            optionsArray: ko.observableArray([]),\n            initialize: function () {\n                this._super();\n                var self = this;\n                var currencyData = currency().getCollection().load();\n                currencyData.done(function (data) {\n                    self.optionsArray([]);\n                    $.each(data.items, function (index, value) {\n                        self.optionsArray.push({\n                            value: value.code,\n                            text: value.currency_name\n                        });\n                    });\n                    self.value(window.webposConfig.currentCurrencyCode);\n                });\n                eventManager.observer('currency_pull_after', function () {\n                    currencyData = currency().getCollection().load();\n                    currencyData.done(function (data) {\n                        self.optionsArray([]);\n                        $.each(data.items, function (index, value) {\n                            self.optionsArray.push({\n                                value: value.code,\n                                text: value.currency_name\n                            });\n                        });\n                        self.value(window.webposConfig.currentCurrencyCode);\n                    });\n                });\n            },\n            saveConfig: function (data) {\n                var self = this;\n                if (!checkNetWork) {\n                    addNotification(Translate('Cannot connect to your server!'), true, 'danger', 'Error');\n                    self.value(window.webposConfig.currentCurrencyCode);\n                    return false;\n                }\n                var value = $('select[name=\"' + data.elementName + '\"]').val();\n                if (value) {\n                    var url = mageUrl.build('directory/currency/switch/currency/' + value);\n                    location.href = url;\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/store/store-view.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/settings/general/abstract',\n        'mage/storage',\n        'Magestore_Webpos/js/model/directory/currency',\n        'mage/url',\n        'Magestore_Webpos/js/lib/cookie',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'Magestore_Webpos/js/model/event-manager',\n        'mage/translate'\n    ],\n    function ($, ko, Component, storage, currency, mageUrl, Cookies, addNotification, eventManager, Translate) {\n        \"use strict\";\n\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/settings/general/store/store-view'\n            },\n\n            elementName: 'store',\n            value: ko.observable(window.webposConfig.storeCode),\n            optionsArray: ko.observableArray(window.webposConfig.storeView),\n\n            changeStore: function (data) {\n                var value = $('select[name=\"' + data.elementName + '\"]').val();\n                if (value) {\n                    $('#checkout-loader').show();\n                    Cookies.set('check_login', 1, { expires: parseInt(window.webposConfig.timeoutSession) });\n                    var deleteRequest = window.indexedDB.deleteDatabase('magestore_webpos');\n                    var url = mageUrl.build(\"webpos/index/changeStore?store_code=\" + value)  ;\n                    $('#checkout-loader').hide();\n                    console.log(\"Deleted OK.\");\n                    window.location.href = url ;\n                }\n\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/catalog/outstock-display.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/view/settings/general/abstract',\n            'Magestore_Webpos/js/action/notification/add-notification',\n            'Magestore_Webpos/js/model/event-manager',\n            'Magestore_Webpos/js/model/config/local-config',\n            'mage/translate',\n            \n        ],\n        function ($, ko, Component, addNotification, eventManager, localConfig, $t) {\n            \"use strict\";\n\n            return Component.extend({\n                defaults: {\n                    template: 'Magestore_Webpos/settings/general/catalog/outstock-display'\n                },\n                elementName: 'outstock-display',\n                value: ko.observable(0),\n                optionsArray: ko.observableArray([]),\n                configPath: 'catalog/outstock-display',\n                initialize: function () {\n                    this._super();\n                    /* load config data */\n                    var self = this;\n                    var configValue = localConfig.get(this.configPath);\n                    if (configValue === null) {\n                        configValue = 1;\n                        localConfig.save(this.configPath, configValue);\n                        var eventData = {'config': self};\n                        eventManager.dispatch('webpos_config_change_after', eventData);\n                    }\n                    this.value(configValue);\n\n                    this.optionsArray([{value: 0, text: $t('No')},\n                        {value: 1, text: $t('Yes')}\n                    ]);\n                },\n                saveConfig: function (data, event) {\n                    var value = $('select[name=\"' + data.elementName + '\"]').val();\n                    localConfig.save(this.configPath, value);\n                    /* show notification */\n                    addNotification($t('Save configuration successfully!'), true, 'success', $t('Completed'));\n\n                    var self = this;\n                    /* dispatch event */\n                    var eventData = {'config': self};\n                    eventManager.dispatch('webpos_config_change_after', eventData);\n                }\n            });\n        }\n);","Magestore_Webpos/js/view/settings/general/element/select.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/settings/general/abstract',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function ($, ko, Component, Helper) {\n        \"use strict\";\n\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/settings/general/element/select',\n                elementName: '',\n                configPath: '',\n                defaultValue: 0,\n                optionsArray: ko.observableArray([])\n            },\n            initialize: function () {\n                this._super();\n                var self = this;\n                if(self.optionsArray().length == 0){\n                    self.optionsArray([{value: 0, text: Helper.__('No')},\n                        {value: 1, text: Helper.__('Yes')}\n                    ]);\n                }\n                var savedConfig = Helper.getLocalConfig(self.configPath);\n                if(typeof savedConfig == 'undefined' || savedConfig == null){\n                    Helper.saveLocalConfig(self.configPath, self.defaultValue);\n                }\n                self.value = ko.pureComputed(function(){\n                    return Helper.getLocalConfig(self.configPath);\n                });\n            },\n            saveConfig: function (data, event) {\n                var value = $('select[name=\"' + data.elementName + '\"]').val();\n                Helper.saveLocalConfig(this.configPath, value);\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/rewardpoints/auto-sync-balance.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/view/settings/general/element/select',\n    ],\n    function (Select) {\n        \"use strict\";\n\n        return Select.extend({\n            defaults: {\n                elementName: 'os_reward_points.auto_sync_balance_when_checkout',\n                configPath: 'os_reward_points/auto_sync_balance_when_checkout'\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/general/rewardpoints/show-rewardpoints-balance.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/view/settings/general/element/select',\n    ],\n    function (Select) {\n        \"use strict\";\n\n        return Select.extend({\n            defaults: {\n                elementName: 'os_reward_points.show_customer_points_balance_on_receipt',\n                configPath: 'os_reward_points/show_customer_points_balance_on_receipt'\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/account/information.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'uiComponent'\n    ],\n    function (Component) {\n        \"use strict\";\n\n        return Component.extend({\n            staff: {\n                name: window.webposConfig.staffName\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/account/content.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'uiComponent',\n        'Magestore_Webpos/js/model/staff/staff',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'Magestore_Webpos/js/helper/full-screen-loader',\n        'mage/translate',\n        \"mage/validation\",\n    ],\n    function ($, Component, staff, addNotification, loader, Translate) {\n        \"use strict\";\n\n        return Component.extend({\n            saveStaffInformation: function () {\n                if (this.validateStaffInfoForm()) {\n                    loader.startLoader();\n                    var data = {\n                        staff: {\n                            username: $('#name').val(),\n                            old_password: $('#current-password').val(),\n                            password: $('#password').val(),\n                        }\n                    };\n                    var deferred = staff().setPush(true).setLog(false).changePassWord(data);\n                    deferred.done(function (response) {\n                        var data = JSON.parse(response);\n                        if (data.error == '1') {\n                            addNotification(data.message, true, 'danger', 'Error');\n                        } else {\n                            $('#c-menu--push-left .admin-name').html($('#name').val());\n                            addNotification(data.message, true, 'success', 'success');\n                        }\n                        loader.stopLoader();\n                    });\n                    deferred.fail(function (err) {\n                        if (err.statusText == 'error' && err.status == 0) {\n                            checkNetWork = false;\n                            addNotification(Translate('Cannot connect to your server!'), true, 'danger', 'Error');\n                        } else {\n                            addNotification(err.message, true, 'danger', 'Error');\n                        }\n                        loader.stopLoader();\n                    });\n                    return true;\n                }\n                return false;\n            },\n            validateStaffInfoForm: function () {\n                var form = '#staff-settings-form';\n                if ($('#password').val()) {\n                    $('#current-password').addClass('required-entry');\n                } else {\n                    $('#current-password').removeClass('required-entry');\n                }\n                return $(form).validation() && $(form).validation('isValid');\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/settings/account/role.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent'\n    ],\n    function ($, ko, Component) {\n        \"use strict\";\n\n        return Component.extend({\n            role: window.webposConfig.role\n        });\n    }\n);","Magestore_Webpos/js/view/menu/group.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/helper/staff'\n    ],\n    function ($,ko, Component, staffHelper) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/menu/group'\n            },\n            initialize: function () {\n                this._super();\n            },\n            hasChilds: function(){\n                if (this.id == 'inventory' && !staffHelper.isHavePermission('Magestore_Webpos::manage_inventory')) {\n                    return false;\n                }\n                return (this.elems().length > 0)?true:false;\n            },\n            initData: function (object) {\n                if(object.id){\n                    this.id = object.id;\n                }\n                if(object.title){\n                    this.title = object.title;\n                }\n                if(object.sortOrder){\n                    this.sortOrder = object.sortOrder;\n                }\n            },\n\n\n        });\n    }\n);","Magestore_Webpos/js/view/menu/item.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'uiComponent',\n        'Magestore_Webpos/js/helper/staff',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function ($, ko, ViewManager, Component, staffHelper, Event) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/menu/item'\n            },\n            initialize: function () {\n                this._super();\n                if (!this.data) {\n                    this.data = {};\n                }\n                if (!this.data.container) {\n                    this.data.container = this.data.id + '_container';\n                }\n\n                if (this.data.id == 'inventory' && !staffHelper.isHavePermission('Magestore_Webpos::manage_inventory')) {\n                    this.data.is_display = 0;\n                } else {\n                    this.data.is_display = 1;\n                }\n                if (this.data.id == 'orders_history' && !staffHelper.canShowOrderMenu()) {\n                    this.data.is_display = 0;\n                } else {\n                    this.data.is_display = 1;\n                }\n            },\n            initData: function (object) {\n                object.container = (object.container) ? object.container : object.id + '_container';\n                this.data = object;\n            },\n            itemClick: function (item) {\n                var container = ViewManager.getSingleton('view/container');\n                container.init(item.data.container);\n                container.toggleArea();\n                Event.dispatch('show_container_after', item.data.id);\n                Event.dispatch(item.data.id + '_show_container_after', item.data.id);\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/sample/list.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/view/base/grid/abstract',\n            'Magestore_Webpos/js/view/base/grid/renderer/price'\n        ],\n        function ($, ko, listAbstract, priceRender) {\n            \"use strict\";\n\n            return listAbstract.extend({\n                initialize: function () {\n                    this._super();\n                },\n                _prepareItems: function () {\n                    var items = [\n                        {name: \"Well-Travelled Kitten\", sales: 352, price: 75.95},\n                        {name: \"Speedy Coyote\", sales: 89, price: 190.00},\n                        {name: \"Furious Lizard\", sales: 152, price: 25.00},\n                        {name: \"Indifferent Monkey\", sales: 1, price: 99.95},\n                        {name: \"Brooding Dragon\", sales: 0, price: 6350},\n                        {name: \"Ingenious Tadpole\", sales: 39450, price: 0.35},\n                        {name: \"Optimistic Snail\", sales: 420, price: 1.50}\n                    ];\n                    this.addItems(items);\n                },\n                _prepareColumns: function () {\n                    this.addColumn({headerText: \"Item Name\", rowText: \"name\", renderer: ''});\n                    this.addColumn({headerText: \"Sales Count\", rowText: \"sales\", renderer: ''});\n                    this.addColumn({headerText: \"Price\", rowText: \"price\", renderer: priceRender()});\n                },\n            });\n        }\n);\n","Magestore_Webpos/js/view/sample/form.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n    \ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/view/base/form/abstract'\n    ],\n    function ($, ko, OrderFactory, formAbstract) {\n        \"use strict\";\n\n        return formAbstract.extend({\n            fieldsets: ko.observableArray([]),\n            dataModel: ko.observable(''),\n\n            initialize: function () {\n                this._super();\n            },\n                \n            _prepareForm: function(){\n                var self = this;\n                var deferred = $.Deferred();\n                OrderFactory.get().load(1, deferred);\n                deferred.done(function(response){\n                    console.log(response);\n                    self.setFormData(response)\n                    var fieldset = self.createFieldset('test_fieldset_id', {legend: 'DEMO LEGEND'});\n                    fieldset.addField(\n                        'test_field_name',\n                        'text',\n                        {\n                            class: 'test_class_field',\n                            name: 'base_currency_code',\n                            label: 'Test Text Field 1',\n                            title: 'Test Title 1',\n                            isShowLabel: false\n                        }\n                    );\n                    fieldset.addField(\n                        'test_field_name_2',\n                        'text',\n                        {\n                            class: 'test_class_field_2',\n                            name: 'test_name_2',\n                            label: 'Test Text Field 2',\n                            title: 'Test Title 2',\n                            value: 'Test Value 2'\n                        }\n                    );\n                    self.addFieldset(fieldset);\n\n                    var fieldset = self.createFieldset('test_fieldset_id_2', {legend: 'DEMO LEGEND 2'});\n                    fieldset.addField(\n                        'test_field_name_3',\n                        'select',\n                        {\n                            class: 'test_class_field_3',\n                            name: '',\n                            label: 'Test Select Field 3',\n                            title: 'Test Title 3',\n                            options: {\n                                value1: 'Test value 1',\n                                value2: 'Test value 2',\n                            },\n                            value: 'value1'\n                        }\n                    );\n                    fieldset.addField(\n                        'test_field_name_4',\n                        'select',\n                        {\n                            class: 'test_class_field_4',\n                            name: 'test_name_4',\n                            label: 'Test Label 4',\n                            title: 'Test Title 4',\n                            options: {\n                                value1: 'Test value 3',\n                                value2: 'Test value 4',\n                            },\n                            value: 'value2'\n                        }\n                    );\n                    self.addFieldset(fieldset);\n\n                    var fieldset = self.createFieldset('test_fieldset_id_2', {legend: 'DEMO LEGEND 3', columns: 2});\n                    fieldset.addField(\n                        'test_field_name_5',\n                        'radio',\n                        {\n                            class: 'test_class_field_5',\n                            name: 'test_name_5',\n                            label: 'Test Radio Field 1',\n                            title: 'Test Title 1',\n                            options: {\n                                value1: 'Test value 1',\n                                value2: 'Test value 2',\n                            },\n                            value: 'value1'\n                        }\n                    );\n                    fieldset.addField(\n                        'test_field_name_6',\n                        'radio',\n                        {\n                            class: 'test_class_field_6',\n                            name: 'test_name_6',\n                            label: 'Test Radio 2',\n                            title: 'Test Title 2 ',\n                            options: {\n                                value1: 'Test value 3',\n                                value2: 'Test value 4',\n                            },\n                            value: 'value2'\n                        }\n                    );\n                    fieldset.addField(\n                        'test_field_name_10',\n                        'radio',\n                        {\n                            class: 'test_class_field_10',\n                            name: 'test_name_6',\n                            label: 'Test Radio 3',\n                            title: 'Test Title 3',\n                            options: {\n                                value1: 'Test value 3',\n                                value2: 'Test value 4',\n                            },\n                            value: 'value2'\n                        }\n                    );\n                    self.addFieldset(fieldset);\n\n                    var fieldset = self.createFieldset('test_fieldset_id_2', {legend: 'DEMO LEGEND 4', columns: 3});\n                    fieldset.addField(\n                        'test_field_name_7',\n                        'checkbox',\n                        {\n                            class: 'test_class_field_7',\n                            name: 'test_name_7',\n                            label: 'Test Radio Field 7',\n                            title: 'Test Title 7',\n                            options: {\n                                value1: 'Test value 1',\n                                value2: 'Test value 2',\n                            },\n                            value: ['value1']\n                        }\n                    );\n                    fieldset.addField(\n                        'test_field_name_8',\n                        'checkbox',\n                        {\n                            class: 'test_class_field_8',\n                            name: 'test_name_8',\n                            label: 'Test Radio 8',\n                            title: 'Test Title 8',\n                            options: {\n                                value1: 'Test value 3',\n                                value2: 'Test value 4',\n                            },\n                            value: ['value1', 'value2']\n                        }\n                    );\n                    fieldset.addField(\n                        'test_field_name_9',\n                        'checkbox',\n                        {\n                            class: 'test_class_field_9',\n                            name: 'test_name_9',\n                            label: 'Test Radio 9',\n                            title: 'Test Title 9',\n                            options: {\n                                value1: 'Test value 5',\n                                value2: 'Test value 6',\n                            },\n                            value: ['value1', 'value2']\n                        }\n                    );\n                    self.addFieldset(fieldset);\n                });\n            },\n        });\n    }\n);\n","Magestore_Webpos/js/view/sample/grid.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/view/base/grid/abstract',\n            'Magestore_Webpos/js/view/base/grid/renderer/price'\n        ],\n        function ($, ko, listAbstract, priceRender) {\n            \"use strict\";\n\n            return listAbstract.extend({\n                initialize: function () {\n                    this._super();\n                },\n                _prepareItems: function () {\n                    var items = [\n                        {name: \"Well-Travelled Kitten\", sales: 352, price: 75.95},\n                        {name: \"Speedy Coyote\", sales: 89, price: 190.00},\n                        {name: \"Furious Lizard\", sales: 152, price: 25.00},\n                        {name: \"Indifferent Monkey\", sales: 1, price: 99.95},\n                        {name: \"Brooding Dragon\", sales: 0, price: 6350},\n                        {name: \"Ingenious Tadpole\", sales: 39450, price: 0.35},\n                        {name: \"Optimistic Snail\", sales: 420, price: 1.50}\n                    ];\n                    this.addItems(items);\n                },\n                _prepareColumns: function () {\n                    this.addColumn({headerText: \"Item Name\", rowText: \"name\", renderer: ''});\n                    this.addColumn({headerText: \"Sales Count\", rowText: \"sales\", renderer: ''});\n                    this.addColumn({headerText: \"Price\", rowText: \"price\", renderer: priceRender()});\n                },\n            });\n        }\n);\n","Magestore_Webpos/js/view/notification/list.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent'\n    ],\n    function ($, ko, uiComponent) {\n        \"use strict\";\n        return uiComponent.extend({\n            /* Show notification popup or not*/\n            isShowNotification: ko.observable(false),\n            /* Observable array notification*/\n            notificationList: ko.observableArray([]),\n            /* Initialize*/\n            initialize: function () {\n                this._super();\n                var self = this;\n                $(\"body\").click(function(){\n                    self.isShowNotification(false);\n                });\n                $(\".notification-info\").click(function(e){\n                    e.stopPropagation();\n                    self.isShowNotification(true);\n                });\n                self.notificationNumber = ko.pureComputed(function(){\n                    var count = 0;\n                    $.each(self.notificationList(), function (index, value) {\n                        if (value.notRead == true) {\n                            count++;\n                        }\n                    });\n                    return count;\n                });\n                self.notificationReverse = ko.pureComputed(function () {\n                    return self.notificationList().reverse();\n                });\n\n            },\n            /* Template for koJS*/\n            defaults: {\n                template: 'Magestore_Webpos/notification/list'\n            },\n            /* Toggle notification */\n            toggleInfo: function (data,event) {\n                event.stopPropagation();\n                if (this.isShowNotification() == false && this.notificationList().length > 0) {\n                    this.isShowNotification(true);\n                } else {\n                    this.isShowNotification(false);\n                }\n            },\n            /* Mark the notification read or not */\n            markRead: function (data, event) {\n                var self = this;\n                event.stopPropagation();\n                var allNotification = self.notificationList();\n                $.each(allNotification, function (index, value) {\n                   if (value.id == data.id) {\n                       value.notRead = false;\n                       allNotification[index] = value;\n                   }\n                });\n                self.notificationList([]);\n                self.notificationList(allNotification);\n            },\n            /* Add notification log*/\n            addLog: function (label) {\n                var data = {\n                    id: Date.now(),\n                    notRead: true,\n                    label: label,\n                    date: this.formatDate(new Date())\n                };\n                this.notificationList.push(data);\n            },\n            /* Clear all the notification*/\n            clearLog: function () {\n                this.notificationList([]);\n            },\n            /* Delete one notification*/\n            delete: function (data) {\n                this.notificationList.remove(data);\n            },\n            /* Format Data*/\n            formatDate : function(dateTime){\n                return dateTime.getFullYear() + \"-\" + this.twoDigits(1 + dateTime.getMonth()) + \"-\" + this.twoDigits(dateTime.getDate()) + \" \" + this.twoDigits(dateTime.getHours()) + \":\" + this.twoDigits(dateTime.getMinutes()) + \":\" + this.twoDigits(dateTime.getSeconds());\n            },\n            /* Format Two Digits*/\n            twoDigits : function(n){\n                return n > 9 ? \"\" + n: \"0\" + n;\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/catalog/product-list.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\nrequire([\n    'Magestore_Webpos/js/model/catalog/product',\n    'Magestore_Webpos/js/model/checkout/cart/customsale',\n    ]);\n    \ndefine(\n    [   'require',\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/catalog/product-factory',\n        'Magestore_Webpos/js/model/checkout/cart/customsale-factory',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/view/base/grid/cell-grid',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/config/local-config',\n        'Magestore_Webpos/js/helper/alert',\n        'mage/translate',\n        'Magestore_Webpos/js/helper/full-screen-loader',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/lib/jquery.mobile-1.4.5',\n        \n    ],\n    function (require, $, ko, ProductFactory, CustomsaleFactory, ViewManager, cellGrid, eventManager, localConfig, Alert, $t, loader, CartModel, generalHelper) {\n        \"use strict\";\n        return cellGrid.extend({\n            items: ko.observableArray([]),\n            total: ko.observable(0),\n            searchCat: '',\n            breadcrumb: ko.observable(''),\n            columns: ko.observableArray([]),\n            isShowHeader: ko.observable(false),\n            isSearchable: ko.observable(true),\n            searchingKey: '',\n            currentPage: ko.observable(1),\n            syncPercent: ko.observable(100),\n            displaySyncPercent: ko.observable(false),\n            showNext: ko.observable(true),\n            pageSize: 10,\n            curPage: 1,\n            reload: false,\n            displayOutStock: true,\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product-list',\n            },\n            initialize: function () {\n                if (!this.model) {\n                    this.model = ProductFactory.get();\n                }\n                if(this.items().length > 0) {\n                    return this;\n                }\n                this.loadLocalConfig();\n                this._super();\n                /* listen events */\n                this.listenEvents();\n                this.focusSearch();\n            },\n            _prepareCollection: function () {\n                var self = this;\n                this.curPage = this.currentPage();\n   \n\n                this.filterAttribute = 'search_string';\n                this.barcodeData = 'barcode_string';\n                if(this.collection == null) {\n                    this.collection = this.model.getCollection();\n                }\n                var mode = (generalHelper.isUseOnline('products'))?'online':'offline';\n                this.collection.setMode(mode);\n                this.pageSize = 16;\n                this.collection.setPageSize(this.pageSize);\n                this.collection.setCurPage(this.curPage);\n\n                if (this.searchKey) {\n                    window.searchCat = '';\n                    if(mode == 'online'){\n                        var filterAttributeString = generalHelper.getBrowserConfig('webpos/product_search/product_attribute');\n                        var filterAttributes = filterAttributeString.split(\",\");\n                        var queryParams = [];\n                        $.each(filterAttributes, function (index, value) {\n                            value = (value == 'category_ids')?'category_id':value;\n                            var param = [value, \"%\" + self.searchKey + \"%\", 'like'];\n                            queryParams.push(param);\n                        });\n                        this.collection.addFieldToFilter(queryParams);\n                    }else{\n                        this.collection.addFieldToFilter(\n                            [\n                                [this.barcodeData,\"%,\"+this.searchKey+\",%\", 'like'],\n                                [this.filterAttribute, \"%\" + this.searchKey + \"%\", 'like']\n                            ]\n                        );\n                    }\n                    if (!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n                        $(\"#search-header-product\")[0].select();\n                    }\n                }\n                if (window.searchCat) {\n                    if(mode == 'online') {\n                        this.collection.addFieldToFilter('category_id', window.searchCat, '');\n                    }else{\n                        this.collection.addFieldToFilter('category_ids', \"%'\" + window.searchCat + \"'%\", 'like');\n                    }\n                }\n            },\n            _prepareItems: function () {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                var deferred = $.Deferred();\n                var self = this;\n                if(this.refresh) {\n                    this.currentPage(1);\n                    this.curPage = 1;\n                }\n                this.getCollection().load(deferred);\n                $('#product-list-overlay').show();\n                var barcodeResult = [];\n                deferred.done(function (data) {\n                    if (data.items.length < self.pageSize) {\n                        self.showNext(false);\n                    } else {\n                        self.showNext(true);\n                    }\n                    if (data.items == []) {\n                        self.setItems([]);\n                        self.total(0);\n                    } else {\n                        var numberOutOfStock = 0;\n                        for(var i in data.items) {\n                            /* remove out-stock products from list items */\n                            if(generalHelper.isStockOnline() && !data.items[i].is_salable){\n                                data.items[i].isShowOutStock = true;\n                            }\n                            if(!self.displayOutStock && (data.items[i].isShowOutStock)) {\n                                data.items.splice(i, 1);\n                                numberOutOfStock++;\n                            }\n                        }\n                        data.total_count = parseFloat(data.total_count) - numberOutOfStock;\n\n                        /* update total count */\n                        if(self.curPage == 1 && data.total_count<= 20) {\n                            data.total_count = data.items.length;\n                        }\n                        $('#product-list-overlay').hide();\n                        if ($.trim(self.searchingKey)) {\n                            if (data.total_count == 1) {\n                                ko.utils.arrayForEach(data.items, function (product) {\n                                    var searchingKey = self.searchingKey.toLowerCase();\n                                    var barcode_string = product.barcode_string.toLowerCase();\n                                    var search_string = product.search_string.toLowerCase();\n                                    if (barcode_string && barcode_string.indexOf(\",\" + searchingKey + \",\") >= 0) {\n                                        if (product.type_id == \"configurable\" && product.barcode_options && product.barcode_options.length > 0) {\n                                            ko.utils.arrayForEach(product.barcode_options, function (options, index) {\n                                                var barcodes = $.map(Object.keys( options ), function(n,i){return n.toLowerCase();});\n                                                if (options[searchingKey] || options[self.searchingKey] || $.inArray(searchingKey, barcodes) > -1 ) {\n                                                    var originalBarcode = Object.keys( options )[$.inArray(searchingKey, barcodes)];\n                                                    var optionData = ($.inArray(searchingKey, barcodes) > -1)?(options[originalBarcode]):(options[self.searchingKey]) ? options[self.searchingKey] : options[searchingKey];\n                                                    product.super_attribute = optionData.options;\n                                                    product.unit_price = optionData.product.price;\n                                                    product.child_id = optionData.product.product_id;\n                                                    product.options_label = optionData.label;\n                                                }\n                                            });\n                                        }\n                                        barcodeResult.push(product);\n                                    }\n                                });\n                            }\n                            if (barcodeResult.length == 1) {\n                                self.setItems(barcodeResult);\n                                self.total(barcodeResult.length);\n                            } else {\n                                self.setItems(data.items);\n                                self.total(data.total_count);\n                            }\n                            if (self.total() == 1 && self.searchingKey.toLowerCase() != \"\") {\n                                var product = self.items()[0];\n                                if (product.child_id && (!product.custom_options || (product.custom_options && product.custom_options.length <= 0))) {\n                                    viewManager.getSingleton('view/catalog/product/detail-popup').addProduct(product);\n                                    self.searchingKey = \"\";\n                                    self.searchKey = \"\";\n                                } else {\n                                    $(\"#block-product-list .product-item .product-img\").click();\n                                }\n                            }\n                        } else {\n                            self.setItems(data.items);\n                            self.total(data.total_count);\n                        }\n                    }\n                    if (this.breadcrumb) {\n                        self.breadcrumb(this.breadcrumb);\n                    }\n                });\n            },\n            setSyncPercent: function (percent) {\n                var self = this;\n                self.syncPercent(percent);\n                if(percent < 100) {\n                    self.displaySyncPercent(true);\n                }else {\n                    setTimeout(function () {\n                        self.displaySyncPercent(false);\n                    }, 5000);\n                }\n            },\n            filter: function (element, event) {\n                this.searchKey = event.target.value;\n                this.searchingKey = event.target.value;\n\n                window.searchCat = '';\n                if($('.category-name')){\n                    $('.category-name').hide();\n                }\n                this.refresh = true;\n                this.collection = null;\n                this._prepareItems();\n            },\n            getAllCategories: function () {\n                window.searchCat = '';\n                this.searchKey = '';\n                eventManager.dispatch('load_product_by_category', {\"catagory\":{}});\n            },\n            afterRender: function() {\n                var self = this;\n                var productListWrapper = $('#product-list-wrapper');\n                productListWrapper.on('swiperight', function (event) {\n                    if ($('.icon-iconPOS-previous').is(':visible')) {\n                        self.previousPage();\n                    }\n                });\n                productListWrapper.on('swipeleft', function (event) {\n                    if ($('.icon-iconPOS-next').is(':visible')) {\n                        self.nextPage();\n                    }\n                });\n            },\n            prepareAddToCart: function (product,event) {\n                var self = this;\n                if (product.options == 1) {\n                    var productModel = ProductFactory.get();\n                    productModel.setData(product);\n                    var isOutStock = !productModel.isSalable();\n                    if (isOutStock) {\n                        Alert({\n                            priority:'warning',\n                            title: $t('Warning'),\n                            message: $t('This product is currently out of stock')\n                        });\n                        return false;\n                    }\n                    $(\"#search-header-product\").val(\"\");\n                    this.showPopupAddToCart(product);\n                }else if(product.storecredit_type == 3 || product.storecredit_type == 2 || product.storecredit_type == 1){\n                    var Product = ProductFactory.get();\n                    Product.setData(product);\n                    this.showPopupAddToCart(product);\n                }else {\n                    if (product.super_group && product.super_group.length > 0) {\n                        ko.utils.arrayForEach(product.super_group, function(product) {\n                            if(product.id){\n                                productModel.setData(product);\n                                product.unit_price = productModel.getFinalPrice();\n                                self.prepareAddToCart(product);\n                            }\n                        });\n                    } else {\n                        var Product = ProductFactory.get();\n                        Product.setData(product);\n                        Product.resetTempAddData();\n                        var infoBuyRequest = Product.getInfoBuyRequest(CartModel.customerGroup());\n                        CartModel.addProduct(infoBuyRequest);\n                        self.searchingKey = \"\";\n                        self.searchKey = \"\";\n                        $(\"#search-header-product\").val(\"\");\n                    }\n                }\n                if (!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n                    if ($(\"#search-header-product\") && $(\"#search-header-product\").length > 0)\n                        $(\"#search-header-product\")[0].select();\n                }\n\n            },\n            showPopupDetails: function (item,event) {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                var self = this;\n                viewManager.create('view/catalog/product/detail-popup');\n                viewManager.getSingleton('view/catalog/product/detail-popup').styleOfPopup('view_detail');\n                viewManager.getSingleton('view/catalog/product/detail-popup').itemData(item);\n                viewManager.getSingleton('view/catalog/product/detail-popup').setAllData();\n                viewManager.getSingleton('view/catalog/product/detail-popup').showPopup();\n                /* only use our popup */\n                $('.notification-bell').hide();\n                $('#c-button--push-left').hide();\n            },\n            showPopupAddToCart: function (item,event) {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                var self = this;\n                viewManager.create('view/catalog/product/detail-popup');\n                viewManager.getSingleton('view/catalog/product/detail-popup').styleOfPopup('add_to_cart');\n                viewManager.getSingleton('view/catalog/product/detail-popup').itemData(item);\n                viewManager.getSingleton('view/catalog/product/detail-popup').setAllData();\n                viewManager.getSingleton('view/catalog/product/detail-popup').showPopup();\n                /* only use our popup */\n                $('.notification-bell').hide();\n                $('#c-button--push-left').hide();\n            },\n            initCustomSalePopup: function(){\n                var self = this;\n                if($('.pos_modal_link').length > 0){\n                    $('.pos_modal_link').click(function(){\n                        if($(this).data(\"target\")){\n                            var target = $(this).data(\"target\");\n                            if($(target).length > 0){\n                                $(target).removeClass(\"fade\");\n                                $(target).addClass(\"show\");\n                                $(target).addClass(\"fade-in\");\n                                $(target).show();\n                                var CustomSale = CustomsaleFactory.get();\n                                CustomSale.initTaxClasses();\n                                $('.wrap-backover').show();\n                                $('.notification-bell').hide();\n                                $('#c-button--push-left').hide();\n                                if($(target+' .pos_overlay').length > 0){\n                                    $(target+' .pos_overlay').click(function(){\n                                        $(target).addClass(\"fade\");\n                                        $(target).removeClass(\"show\");\n                                        $(target).removeClass(\"fade-in\");\n                                        $(target).hide();\n                                        $('.wrap-backover').hide();\n                                        $('.notification-bell').show();\n                                    });\n                                }\n                                if($(target+' button').length > 0){\n                                    $(target+' button').each(function(){\n                                        if($(this).data(\"dismiss\") && $(this).data(\"dismiss\") == \"modal\"){\n                                            $(this).click(function(){\n                                                $(target).addClass(\"fade\");\n                                                $(target).removeClass(\"show\");\n                                                $(target).removeClass(\"fade-in\");\n                                                $(target).hide();\n                                                $('.wrap-backover').hide();\n                                                $('.notification-bell').show();\n                                            });\n                                        }\n                                    });\n                                }\n                            }\n                        }\n                    });\n                }\n            },\n\n            addItems: function (items) {\n                for (var i in items) {\n                    items[i].columns = this.columns;\n                    items[i].columns = this.columns;\n                    if(typeof items[i].isShowOutStock == 'undefined') {\n                        items[i].isShowOutStock = false;\n                    }\n                    if(!this.displayOutStock && items[i].isShowOutStock) {\n                        /* do not display out-stock product */\n                        return;\n                    }\n                }\n                ko.utils.arrayPushAll(this.items, items);\n            },\n            loadLocalConfig: function() {\n                if(localConfig.get('catalog/outstock-display') === null) {\n                    this.displayOutStock = true;\n                } else {\n                    this.displayOutStock = localConfig.get('catalog/outstock-display') == 1 ? true : false;\n                }\n            },\n            listenEvents: function() {\n                var self = this;\n                eventManager.observer('webpos_config_change_after', function (event, eventData) {\n                    var config = eventData.config;\n                    if (config.configPath === 'catalog/outstock-display') {\n                        self.displayOutStock = config.value();\n                        self.refresh = true;\n                        self._prepareItems();\n                    }\n                });\n\n                /* after updated/ reloaded stock items */\n                eventManager.observer('stock_item_finish_pull_after', function (event, eventData) {\n                    /* reload product list */\n                    self.refresh = true;\n                    self.getCollection().reset();\n                    self._prepareCollection();\n                    self._prepareItems();\n                });\n            },\n            getClassSearch: function () {\n                var className = 'remove-text';\n                if (this.searchingKey) {\n                    return className + ' show';\n                }\n                return className;\n            },\n            removeSearch: function () {\n                $(\"#search-header-product\").val(\"\");\n                this.searchKey = '';\n                this.searchingKey = '';\n                this.refresh = true;\n                this.collection = null;\n                this._prepareItems();\n            },\n            focusSearch: function () {\n                var self = this;\n                eventManager.observer('checkout_show_container_after', function (event, eventData) {\n                    if (!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n                        if ($(\"#search-header-product\") && $(\"#search-header-product\").length > 0)\n                            $(\"#search-header-product\")[0].focus();\n                    }\n                });\n                eventManager.observer('catalog_product_collection_load_after', function (event, eventData) {\n                    if (!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\n                        if ($(\"#search-header-product\") && $(\"#search-header-product\").length > 0)\n                            $(\"#search-header-product\")[0].focus();\n                    }\n                });\n            },\n            getQtyInCart: function (product_id) {\n                return CartModel.getQtyInCart(product_id);\n            },\n\n            nextPage: function () {\n                this.canLoad(true);\n                this.startLoading();\n                this.curPage++;\n                this.currentPage(this.currentPage() + 1);\n                this.refresh = false;\n                this.resetData();\n                this._prepareItems();\n            },\n\n            previousPage: function () {\n                if (this.curPage>=1) {\n                    this.canLoad(true);\n                    this.startLoading();\n                    this.curPage--;\n                    this.currentPage(this.currentPage() - 1);\n                    this.refresh = false;\n                    this.resetData();\n                    this._prepareItems();\n                }\n\n            },\n            startLoading: function() {\n                $('#product-list-overlay').show();\n                this.isLoading = true;\n            },\n            finishLoading: function() {\n                setTimeout(function(){\n                    $('#product-list-overlay').hide();\n                }, 800);\n                this.isLoading = false;\n            },\n            showPrice: function(type, data){\n                if(type === 'final_price')\n                    return generalHelper.convertAndFormatPrice(data.final_price);\n                if(type === 'price' && data.price !== 'undefined' && data.price !== null && data.final_price < data.price)\n                    return generalHelper.convertAndFormatPrice(data.price);\n                return '';\n            },\n            getAvailableQty: function(stocks, productData){\n                var qty = 0;\n                ko.utils.arrayForEach(stocks, function(stock){    \n                    qty = qty + stock.qty;\n                });\n                if(generalHelper.isStockOnline()){\n                    qty = (productData.qty)?productData.qty:0;\n                }\n                if(productData.type_id == 'configurable'\n                    || productData.type_id == 'bundle'\n                    || productData.type_id == 'grouped') {\n                \n                    return qty + ' ' + $t('child item(s)');  \n                } else {\n                    return qty + ' ' + $t('item(s)');                    \n                }                \n            },\n            isShowAvailableQty: function(productData){\n                var mode = (generalHelper.isUseOnline('products')) ? 'online':'offline';\n                if(productData.type_id == 'configurable'\n                    || productData.type_id == 'bundle'\n                    || productData.type_id == 'grouped') {\n                    if(mode == 'online') {\n                        return false;\n                    }\n                }\n                return true;\n            }\n\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/catalog-list.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'Magestore_Webpos/js/model/catalog/product-factory',            \n            'Magestore_Webpos/js/view/base/grid/cell-grid'\n        ],\n        function ($, ko, ProductFactory, cellGrid) {\n            \"use strict\";\n\n            return cellGrid.extend({\n                defaults: {\n                    template: 'Magestore_Webpos/catalog/catalog-list',\n                },\n                initialize: function () {\n                    this.model = ProductFactory.get();\n                    this._super();\n                },\n                _prepareCollection: function () {\n                    this.filterAttribute = 'sku';\n                    if(this.collection == null) {\n                        this.collection = this.model.getCollection();\n                    }\n                    this.pageSize = 31;\n                    this.collection.setPageSize(this.pageSize);\n                    this.collection.setCurPage(this.curPage);\n                    if (this.searchKey) {\n                        this.collection.addFieldToFilter(this.filterAttribute, \"%\" + this.searchKey + \"%\", 'like');\n                    }\n                }\n            });\n        }\n);","Magestore_Webpos/js/view/catalog/category/breadcrumbs.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function ($, ko, Component, eventManager) {\n        \"use strict\";\n        ko.bindingHandlers.afterRenderGrid = {\n            update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n                //alert($('.grid-row').length);\n            }\n        };\n        return Component.extend({\n            breadcrumbs: ko.observableArray([]),\n            numberBreadcrumbs: ko.observable(0),\n            defaults: {\n                template: 'Magestore_Webpos/catalog/category/breadcrumbs',\n            },\n            initialize: function () {\n                this._super();\n            },\n            getBreadCrumb: function (path) {\n                var self = this;\n                self.breadcrumbs([]);\n                self.numberBreadcrumbs(0);\n                if (path) {\n                    this.setBreadCrumb(path).done(function (data) {\n                        self.breadcrumbs(data);\n                        self.numberBreadcrumbs(data.length);\n                    });\n                }\n            },\n            setBreadCrumb: function (path, deferred) {\n                var allPaths = path.split('/');\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                //var collectionTest\n                var breadcrums = [];\n                server.category.query()\n                    .all()\n                    .execute()\n                    .then(function (results) {\n                        var check = 0;\n                        for (var i = 0; i <= allPaths.length - 1; i++) {\n                            $.each(results, function (index, value) {\n                                if (value.id == allPaths[i]) {\n                                    if (check != 0 || value.first_category == 1) {\n                                        breadcrums.push(value);\n                                        check++;\n                                    }\n                                }\n                                if (check) {\n                                    return;\n                                }\n                            });\n                        }\n                        deferred.resolve(breadcrums);\n                    });\n                return deferred;\n            },\n            getAllCategory: function () {\n                eventManager.dispatch('load_product_by_category', {\"catagory\":{},'open_category':true});\n            },\n            clickCat: function (data) {\n                eventManager.dispatch('load_product_by_category', {\"catagory\": data,'open_category':true});\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/category/cell-grid.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'require',\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/view/base/grid/cell-grid',\n        'Magestore_Webpos/js/model/catalog/category',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function (require, $, ko, ViewManager, cellGrid, category, Helper) {\n        \"use strict\";\n\n        ko.bindingHandlers.sliderCategories = {\n            init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n                // This will be called when the binding is first applied to an element\n                // Set up any initial state, event handlers, etc. here\n                $('.catalog-header').click(function () {\n                    if ($('#all-categories').hasClass('in')) {\n                        $('#checkout_container .main-content').css('height', 'auto');\n                        $('#checkout_container .main-content .wrap-list-product').css('height', 'calc(100vh - 135px)');\n                    }\n                    else {\n                        var height_sum = $('#checkout_container .o-header-nav').height() + 200;\n                        $('#checkout_container .main-content').css('height', 'auto');\n                        $('.ms-webpos .main-content .wrap-list-product').css('height', 'calc(100vh - ' + height_sum + 'px)');\n                    }\n                });\n                $('#all-categories').click(function () {\n                    var height_nav = $('#checkout_container .o-header-nav').height();\n                    var height_cat = $('#checkout_container #all-categories').height();\n                    var height_sum = height_nav + height_cat - 4;\n                    if ($('#all-categories').hasClass('no-cat')) {\n                        height_sum = height_sum + 24;\n                        $('#checkout_container .main-content').css('height', 'auto');\n                        $('.ms-webpos .main-content .wrap-list-product').css('height', 'calc(100vh - 178px)');\n                    }\n                    else {\n                        height_sum = height_sum + 120;\n                        $('#checkout_container .main-content').css('height', 'auto');\n                        $('.ms-webpos .main-content .wrap-list-product').css('height', 'calc(100vh - ' + height_sum + 'px)');\n                    }\n                });\n\n                $('.category-name .root-cat').click(function () {\n                    var height_nav = $('#checkout_container .o-header-nav').height();\n                    var height_cat = $('#checkout_container #all-categories').height();\n                    var height_sum = height_nav + height_cat;\n                    height_sum = height_sum + 24;\n                    $('#checkout_container .main-content').css('height', 'auto');\n                    $('.ms-webpos .main-content .wrap-list-product').css('height', 'calc(100vh - 178px)');\n                });\n            },\n            update: function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n                // This will be called once when the binding is first applied to an element,\n                // and again whenever any observables/computeds that are accessed change\n                // Update the DOM element based on the supplied values here.\n\n                viewModel.loadingCat(true);\n                ko.unwrap(valueAccessor());\n                var html = '';\n                ko.utils.arrayForEach(valueAccessor().call(), function (item, key) {\n                    html = html + '<div class=\"item\" id=\"' + key + '\">'\n                        + '<div class=\"category-item-view-product img-cat\">'\n                        + '<a href=\"#\">'\n                        + '<img src=\"' + item.image + '\" alt=\"' + item.name + '\"/>'\n                        + '</a>'\n                        + '</div>';\n                    if (item.children.length) {\n                        html = html + '<div class=\"category-item-view-children collapsed\"><h4 class=\"cat-name\">' + item.name + '</h4>'\n                            + '<span class=\"icon-iconPOS-dropdown\"></span></div>';\n                    }else {\n                        html = html + '<h4 class=\"cat-name none-child\">' + item.name + '</h4>';\n                    }\n                    html = html + '</div>';\n                });\n                element.innerHTML = html;\n                if (element.innerHTML) {\n                    $(\"#list-cat-header\").owlCarousels({\n                        items: 7,\n                        itemsDesktop: [1000, 7],\n                        itemsDesktopSmall: [900, 7],\n                        itemsTablet: [600, 5],\n                        itemsMobile: false,\n                        navigation: true,\n                        navigationText: [\"\", \"\"]\n                    });\n                }\n                var value = valueAccessor();\n                $('.category-item-view-product').each(function (index) {\n                    $(this).on(\"click\", function () {\n                        viewModel.clickCatViewProduct(value()[$(this)[0].parentNode.id]);\n                    });\n                });\n                $('.category-item-view-children').each(function (index) {\n                    $(this).on(\"click\", function () {\n                        viewModel.clickCatViewChildren(value()[$(this)[0].parentNode.id]);\n                    });\n                });\n                viewModel.loadingCat(false);\n            }\n        };\n        return cellGrid.extend({\n            model: category(),\n            productList: null,\n            items: ko.observableArray([]),\n            className: ko.observable(''),\n            loadingCat: ko.observable(false),\n            parentId: '',\n            columns: ko.observableArray([]),\n            isShowHeader: false,\n            isSearchable: true,\n            pageSize: 10,\n            curPage: 1,\n            defaults: {\n                template: 'Magestore_Webpos/catalog/category/cell-grid',\n            },\n            initialize: function () {\n                this._super();\n            },\n            _prepareCollection: function () {\n                this.filterAttribute = 'sku';\n                if (this.collection == null) {\n                    this.collection = this.model.getCollection();\n                }\n                var mode = (Helper.isUseOnline('categories'))?'online':'offline';\n                this.collection.setMode(mode);\n                this.collection.setOrder('position', 'ASC');\n                this.pageSize = 100;\n                this.collection.setPageSize(this.pageSize);\n                this.collection.setCurPage(this.curPage);\n                if (!this.parentId) {\n                    this.collection.addFieldToFilter('first_category', '1', 'eq');\n                } else {\n                    this.collection.addFieldToFilter('parent_id', this.parentId, 'eq');\n                }\n            },\n            _prepareItems: function () {\n                var deferred = $.Deferred();\n                var self = this;\n                self.getCollection().load(deferred);\n                self.startLoading();\n                self.loadingCat(true);\n                deferred.done(function (data) {\n                    self.loadingCat(false);\n                    self.finishLoading();\n                    self.items(data.items);\n                    if (data.total_count == 0) {\n                        //self.className(' no-cat');\n                        if ($('#all-categories') && $('#all-categories').length > 0) {\n                            $('#all-categories').addClass('no-cat');\n                            $('#all-categories').removeClass('in');\n                        }\n                        if ($('.catalog-header') && $('.catalog-header').length > 0) {\n                            $('.catalog-header').addClass('no-cat');\n                        }\n                    } else {\n                        //self.className('');\n                        if ($('#all-categories') && $('#all-categories').length > 0) {\n                            $('#all-categories').removeClass('no-cat');\n                        }\n                        if ($('.catalog-header') && $('.catalog-header').length > 0) {\n                            $('.catalog-header').removeClass('no-cat');\n                        }\n                    }\n                });\n            },\n            clickCat: function (data) {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                var self = this;\n                self.refresh = true;\n                self.parentId = parseInt(data.id);\n                self.collection = null;\n                self._prepareItems();\n                if (data.path) {\n                    viewManager.getSingleton('view/catalog/category/breadcrumbs').getBreadCrumb(data.path);\n                } else {\n                    if ($('.category-name')) {\n                        $('.category-name').hide();\n                    }\n                }\n                /* reload product - start */\n                if (!self.productList) {\n                    self.productList = viewManager.getSingleton('view/catalog/product-list');\n                }\n                self.productList.loadLocalConfig();\n                self.productList.searchCat = parseInt(data.id);\n                self.productList.refresh = true;\n                self.productList.collection = null;\n                self.productList._prepareItems();\n                $(\"#search-header-product\").val(\"\");\n                /* reload product - end*/\n            },\n            clickCatViewChildren: function (data) {\n                var self = this;\n                self.refresh = true;\n                self.parentId = parseInt(data.id);\n                self.collection = null;\n                self._prepareItems();\n            },\n            clickCatViewProduct: function (data) {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                var self = this;\n                if (data.path) {\n                    viewManager.getSingleton('view/catalog/category/breadcrumbs').getBreadCrumb(data.path);\n                } else {\n                    if ($('.category-name')) {\n                        $('.category-name').hide();\n                    }\n                }\n                /* reload product - start */\n                if (!self.productList) {\n                    self.productList = viewManager.getSingleton('view/catalog/product-list');\n                }\n                self.productList.searchCat = parseInt(data.id);\n                if (typeof data.id != 'undefined') {\n                    window.searchCat = data.id;\n                } else {\n                    window.searchCat = '';\n                }\n       \n                self.productList.currentPage(1);\n                self.productList.refresh = true;\n                self.productList.collection = null;\n                self.productList._prepareItems();\n                $(\"#search-header-product\").val(\"\");\n                /* reload product - end*/\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail-popup.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\ndefine(\n    [\n        'jquery',\n        'ko',     \n        'uiComponent',\n        'Magestore_Webpos/js/view/catalog/product/type/configurable',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_Webpos/js/model/catalog/product-factory',\n        'Magestore_Webpos/js/model/inventory/stock-item-factory',\n        'mage/translate',\n        'Magestore_Webpos/js/helper/general',\n        'mage/validation',\n        'mage/validation/validation',\n        \n    ],\n    function ($, ko, Component, configurable, CartModel, priceHelper, alertHelper, ProductFactory, StockItemFactory, $t, Helper) {\n        \"use strict\";\n        window.timeout = 0;\n        return Component.extend({\n            itemData: ko.observable({}),\n            styleOfPopup: ko.observable('view_detail'),\n            focusQtyInput: true,\n            qtyAddToCart: ko.observable(1),\n            defaultPriceAmount: ko.observable(),\n            basePriceAmount: ko.observable(),\n            configurableProductIdResult: ko.observable(),\n            configurableOptionsResult: ko.observable(),\n            configurableLabelResult: ko.observable(),\n            groupedProductResult: ko.observableArray([]),\n            bundleOptionsValueResult: ko.observableArray([]),\n            bundleOptionsQtyResult: ko.observableArray([]),\n            bundleChildsQtyResult: ko.observableArray([]),\n            bundleOptionsLableResult: ko.observableArray([]),\n            customOptionsValueResult: ko.observableArray([]),\n            customOptionsLableResult: ko.observableArray([]),\n            creditProductResult: ko.observableArray([]),\n            creditValue: ko.observable(),\n            bundleItem: ko.observable(),\n            groupItem: ko.observable(),\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail-popup'\n            },\n            initialize: function () {\n                this.resetSuperAttributeData();\n                configurable.detailPopup(this);\n                this._super();\n            },\n            getTypeId: function () {\n                return this.itemData().type_id;\n            },\n            getQtyIncrement: function(){\n                var self = this;\n                var product = self.getProductData();\n                return parseFloat(product.qty_increment);\n            },\n            isQtyDecimal: function(){\n                var self = this;\n                var product = self.getProductData();\n                return (parseInt(product.is_qty_decimal) == 1)?true:false;\n            },\n            incQty: function(){\n                var self = this;\n                var qty = this.getQtyAddToCart();\n                var increment = self.getQtyIncrement();\n                increment = (increment > 0)?increment:1;\n                qty += increment;\n                this.qtyAddToCart(qty);\n            },\n            descQty: function(){\n                var self = this;\n                var qty = this.getQtyAddToCart();\n                var increment = self.getQtyIncrement();\n                increment = (increment > 0)?increment:1;\n                qty -= increment;\n                this.qtyAddToCart(qty);\n            },\n            getQtyAddToCart: function(){\n                var self = this;\n                var increment = self.getQtyIncrement();\n                if (this.qtyAddToCart() <= increment || isNaN(this.qtyAddToCart())) {\n                    return increment;\n                }\n                return this.qtyAddToCart();\n            },\n            modifyQty: function(data,event){\n                var self = this;\n                var increment = self.getQtyIncrement();\n                var isQtyDecimal = self.isQtyDecimal();\n                var qty = (isQtyDecimal)?parseFloat(event.target.value):parseInt(event.target.value);\n                if((increment > 0) && qty%increment > 0){\n                    qty -= (isQtyDecimal)?parseFloat(qty%increment):parseInt(qty%increment);\n                    qty = (qty > 0)?qty:increment;\n                }\n                event.target.value = qty;\n                this.qtyAddToCart(qty);\n            },\n            setAllData: function () {\n                var self = this;\n                this.qtyAddToCart(1);\n                if (this.itemData().images) {\n                    this.reloadJs();\n                }\n                /* set config */\n                this.defaultPriceAmount('');\n                //configurable.priceConfig($.parseJSON(self.getItemData().price_config));\n                if (this.getTypeId() == 'configurable') {\n                    if (window.timeout != 0) {\n                        var timeout = 0;\n                    } else {\n                        window.timeout = 1;\n                        var timeout = 1000;\n                    }\n                    var spConfigData = $.parseJSON(self.itemData().json_config);\n                    this.defaultPriceAmount(priceHelper.convertAndFormat(spConfigData.prices.finalPrice.amount));\n                    setTimeout(function() {\n                        configurable.priceConfig($.parseJSON(self.itemData().price_config));\n                        configurable.options.spConfig = spConfigData;\n                        configurable.options.optionTemplate = '<%- data.label %>' +\n                            '<% if (data.finalPrice.value) { %>' +\n                            ' <%- data.finalPrice.formatted %>' +\n                            '<% } %>';\n                        configurable.createPriceBox();\n                        configurable._create();\n                    }, timeout);\n                } else {\n                    this.defaultPriceAmount(priceHelper.convertAndFormat(this.itemData().final_price));\n                    //configurable.priceConfig($.parseJSON(self.itemData().price_config));\n                }\n            },\n            prepareAddToCart: function() {\n                var self = this;\n                self.updatePrice();\n                var ProductModel = ProductFactory.get();\n                \n                if (this.validateAddToCartForm()) {\n                    var product = self.getProductData();\n                    var stocks = product.stocks;\n                    if (product.super_group && product.super_group.length > 0) {\n                        ko.utils.arrayForEach(product.super_group, function (product) {\n                            if (product.id) {\n                                for(var i in stocks) {\n                                    if(stocks[i].sku === product.sku) {\n                                        product.stocks = [stocks[i]];\n                                        break;\n                                    }\n                                }\n                                ProductModel.data = product;\n                                product.unit_price = ProductModel.getFinalPrice();\n                                self.addProduct(product);\n                            }\n                        });\n                    }else if(product.storecredit_type == 2){\n                        var rate = parseFloat(product.storecredit_rate);\n                        if(parseFloat($('#storecredit_'+product.id).val()) < parseFloat(product.storecredit_min) || parseFloat($('#storecredit_'+product.id).val()) > parseFloat(product.storecredit_max)){\n                            alertHelper({\n                                priority: \"danger\",\n                                title: \"Error\",\n                                message: \"Invalid credit value!\"\n                            });\n                        }else{\n                            var basePrice = parseFloat($('#storecredit_'+product.id).val()) * rate;\n                            self.basePriceAmount(basePrice);\n                            self.creditValue(parseFloat($('#storecredit_'+product.id).val()));\n                            product = self.getProductData();\n                            self.addProduct(product);\n                            product.credit_price_amount = undefined;\n                        }\n                    }else if(product.storecredit_type == 3){\n                        product = self.getProductData();\n                        self.addProduct(product);\n                        product.credit_price_amount = undefined;\n                    }else {\n                        self.addProduct(product);\n                        product.credit_price_amount = undefined;\n                    }\n                    self.closeDetailPopup();\n                } else {\n                    if ($('.swatch-option').length > 0) {\n                        alertHelper({title:'Error', content: $t('Please choose all options')});\n                    }\n                }\n            },\n            /* Validate Add Address Form */\n            validateAddToCartForm: function () {\n                var form = '#product_addtocart_form';\n                return $(form).validation() && $(form).validation('isValid');\n            },\n            getProductData: function(){\n                var self =  this;\n                var product = self.itemData();\n                if (product.type_id == \"configurable\") {\n                    product.super_attribute = self.configurableOptionsResult();\n                    product.unit_price = self.basePriceAmount();\n                    product.child_id = self.configurableProductIdResult();\n                    product.options_label = self.configurableLabelResult();\n                }\n                if (product.type_id == \"grouped\") {\n                    product.super_group = self.groupedProductResult();\n                    product.unit_price = \"\";\n                    product.options_label = \"\";\n                }\n                if (product.type_id == \"customercredit\") {\n                    var rate = product.storecredit_rate;\n                    if(typeof product.credit_price_amount !== 'undefined'){\n                        product.amount = self.creditValue();\n                        product.credit_price_amount = parseFloat(product.amount) * parseFloat(rate);\n                    }else{\n                        if(product.storecredit_type == 3){\n                            var values = product.customercredit_value.split(',');\n                            product.credit_price_amount = parseFloat(values[0]) * parseFloat(rate);\n                            product.amount = parseFloat(values[0]);\n                        }else if(product.storecredit_type == 2){\n                            product.credit_price_amount = parseFloat(product.storecredit_min) * parseFloat(rate);\n                            product.amount = parseFloat(product.storecredit_min);\n                        }else{\n                            product.credit_price_amount = parseFloat(product.customercredit_value) * parseFloat(rate);\n                            product.amount = parseFloat(product.customercredit_value);\n                        }\n                    }\n                    self.creditValue(product.amount);\n                    self.basePriceAmount(product.credit_price_amount);\n                    product.unit_price = self.basePriceAmount();\n                    product.options_label = priceHelper.convertAndFormat(self.creditValue());\n                    product.hasOption = true;\n                }\n                if (product.type_id == \"bundle\") {\n                    product.bundle_option = self.bundleOptionsValueResult();\n                    product.bundle_option_qty = self.bundleOptionsQtyResult();\n                    product.bundle_childs_qty = self.bundleChildsQtyResult();\n                    product.unit_price = self.basePriceAmount();\n                    product.options_label = self.bundleOptionsLableResult();\n                }\n                if (self.customOptionsValueResult().length > 0) {\n                    product.selected_options = self.customOptionsValueResult();\n                    product.unit_price = self.basePriceAmount();\n                    product.custom_options_label = self.customOptionsLableResult();\n                }\n                product.qty = self.qtyAddToCart();\n                return product;\n            },\n            addProduct: function(product){\n                var self = this;\n                var Product = ProductFactory.get();\n                if(!product.stocks && !Helper.isUseOnline('stocks')){\n                    var stockItem = StockItemFactory.get();\n                    var deferred = stockItem.loadByProductId(product.id);\n                    deferred.done(function(stock){\n                        if(stock.data){\n                            product.stocks = [stock.data];\n                            Product.setData(product);\n                            CartModel.addProduct(Product.getInfoBuyRequest(CartModel.customerGroup()));\n                            self.customOptionsValueResult([]);\n                            self.customOptionsLableResult([]);\n                            $(\"#search-header-product\").val(\"\");\n                        }\n                    });\n                }else{\n                    Product.setData(product);\n                    CartModel.addProduct(Product.getInfoBuyRequest(CartModel.customerGroup()));\n                    Product.resetTempAddData();\n                    self.customOptionsValueResult([]);\n                    self.customOptionsLableResult([]);\n                    $(\"#search-header-product\").val(\"\");\n                }\n            },\n            closeDetailPopup: function() {\n                $(\"#popup-product-detail\").hide();\n                $(\".wrap-backover\").hide();\n                $('.notification-bell').show();\n                $('#c-button--push-left').show();\n            },\n            reloadJs: function () {\n                var $j = jQuery.noConflict();\n                if ($j(\"#product-img-slise\").find('div.owl-controls').length > 0) {\n                    var removeControl = $j(\"#product-img-slise\").find('div.owl-controls');\n                    removeControl[0].remove();\n                }\n                setTimeout(function(){\n                    $j(\"#product-img-slise\").owlCarousels({\n                        items: 1,\n                        itemsDesktop: [1000, 1],\n                        itemsDesktopSmall: [900, 1],\n                        itemsTablet: [600, 1],\n                        itemsMobile: false,\n                        navigation: true,\n                        pagination:true,\n                        navigationText: [\"\", \"\"]\n                    });\n                }, 50);\n            },\n            updatePrice: function () {\n                var self = this;\n                var product = self.itemData();\n                if (product.type_id == \"grouped\" && self.groupItem()) {\n                    self.groupItem().updatePrice();\n                }\n                if (product.type_id == \"bundle\" && self.bundleItem()) {\n                    self.bundleItem().updatePrice();\n                }\n                \n            },\n            showPopup: function(){\n                var self = this;\n                var product = self.itemData();\n                product.super_attribute = [];\n                product.super_group = [];\n                product.bundle_option = [];\n                product.bundle_option_qty = [];\n                product.bundle_childs_qty = [];\n                product.options_label = '';\n                product.selected_options = [];\n                product.custom_options_label = '';\n                self.configurableOptionsResult([]);\n                self.configurableLabelResult('');\n                self.customOptionsValueResult([]);\n                self.customOptionsLableResult([]);\n                self.creditProductResult([]);\n                self.bundleOptionsLableResult([]);\n                self.bundleChildsQtyResult([]);\n                self.bundleOptionsQtyResult([]);\n                self.bundleOptionsValueResult([]);\n                self.groupedProductResult([]);\n                configurable.options.state = {};\n\n                $(\"#popup-product-detail\").show();\n                $(\"#popup-product-detail\").removeClass(\"fade\");\n                $(\".wrap-backover\").show();\n\n                $(document).click(function(e) {\n                    if( e.target.id == 'popup-product-detail') {\n                        $(\"#popup-product-detail\").hide();\n                        $(\".wrap-backover\").hide();\n                        $('.notification-bell').show();\n                        $('#c-button--push-left').show();\n                    }\n                });\n                this.updatePrice();\n            },\n            \n            isShowAvailableQty: function(){\n                if(this.itemData().is_virtual) {\n                    return false;\n                }\n                return true;\n            },\n            \n            getAvailableQty: function(productData){\n                var stocks = productData.stocks;\n                var qty = 0;\n\n                for(var i in stocks) {  \n                    qty = qty + stocks[i].qty;\n                }\n                if(Helper.isStockOnline()){\n                    qty = (productData.qty)?productData.qty:0;\n                }\n                if(productData.type_id == 'configurable'\n                    || productData.type_id == 'bundle'\n                    || productData.type_id == 'grouped') {\n                    return qty + ' ' + $t('child item(s)');  \n                } else {\n                    return qty + ' ' + $t('item(s)');                    \n                }                 \n            },\n            \n            resetSuperAttributeData: function() {\n                configurable.options.state = {};\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/type/configurable.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\ndefine(\n    [\n        'jquery',\n        'ko',     \n        'uiComponent',\n        'underscore',\n        'mage/template',\n        'Magestore_Webpos/js/model/catalog/product-factory',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/model/catalog/product/swatch',\n        'Magestore_Webpos/js/helper/alert',\n        'mage/translate',\n        'Magestore_Webpos/js/model/catalog/product',\n        'priceUtils',\n        'priceBox',\n        'jquery/ui',\n        'jquery/jquery.parsequery',\n        'Magento_Catalog/js/price-box',\n        \n    ],\n    function ($, ko, Component, _, mageTemplate, ProductFactory, priceHelper, swatchModel, alertHelper, $t, productModel) {\n        return {\n            element: $('#product_addtocart_form'),\n            detailPopup: ko.observable(),\n            priceConfig: ko.observable({}),\n            options: {\n                superSelector: '.super-attribute-select',\n                selectSimpleProduct: '[name=\"selected_configurable_option\"]',\n                priceHolderSelector: '.price-box',\n                spConfig: {},\n                state: {},\n                priceFormat: {},\n                optionTemplate: '',\n                mediaGallerySelector: '[data-gallery-role=gallery-placeholder]',\n                mediaGalleryInitial: null,\n                lableConfig: {}\n            },\n            swatchOption: $('#swatch-option'),\n            defaults: {\n            },\n            initialize: function () {\n                //this.setAllData();\n                this._super();\n            },\n\n            createPriceBox: function () {\n                var priceBoxes = $('[data-role=priceBox]');\n\n                priceBoxes = priceBoxes.filter(function(index, elem){\n                    return !$(elem).find('.price-from').length;\n                });\n                priceBoxes.priceBox({'priceConfig': this.priceConfig});\n            },\n\n            _create: function () {\n                var self = this;\n\n                this. _resetSwatch();\n                // Initial setting of various option values\n                this._initializeOptions();\n\n                // Override defaults with URL query parameters and/or inputs values\n                this._overrideDefaults();\n\n                // Change events to check select reloads\n                this._setupChangeEvents();\n\n\n                $('body').on('observerSwatch', function () {\n\n                    $('.swatch-option').click(function () {\n\n\n                        var optionLength = $('#attribute' + $(this).data('attribute')).find('option').length;\n\n                        if (optionLength > 1) {\n                            var attributeId = $(this).attr('id');\n\n                            $('.attribute'+ $(this).data('attribute')).removeClass('swatch-select');\n\n                            $('#attribute' + $(this).data('attribute')).val(attributeId);\n\n                            $('#attribute' + $(this).data('attribute')).trigger('change', attributeId);\n                            $(this).addClass('swatch-select');\n                        } else {\n                            //alertHelper({title:'Error', content: $t('Please choose previous options')});\n                        }\n\n                    });\n                });\n\n                // Fill state\n                this._fillState();\n\n                // Setup child and prev/next settings\n                this._setChildSettings();\n\n                // Setup/configure values to inputs\n                this._configureForValues();\n            },\n\n            /**\n             * Initialize tax configuration, initial settings, and options values.\n             * @private\n             */\n            _initializeOptions: function () {\n                var self = this;\n                var options = this.options,\n                    gallery = $(options.mediaGallerySelector),\n                    priceBoxOptions = $(this.options.priceHolderSelector).priceBox('option').priceConfig || null;\n                if (priceBoxOptions && priceBoxOptions.optionTemplate) {\n                    options.optionTemplate = priceBoxOptions.optionTemplate;\n                }\n\n                if (priceBoxOptions && priceBoxOptions.priceFormat) {\n                    options.priceFormat = priceBoxOptions.priceFormat;\n                }\n                options.optionTemplate = mageTemplate(options.optionTemplate);\n\n                options.settings = options.spConfig.containerId ?\n                    $(options.spConfig.containerId).find(options.superSelector) :\n                    $(options.superSelector);\n\n                options.values = options.spConfig.defaultValues || {};\n                options.parentImage = $('[data-role=base-image-container] img').attr('src');\n                var allOption = options.spConfig.attributes;\n                var swatchAllOption = [];\n\n                $.each(allOption, function(index, attributeValue) {\n\n                    self._generateSwatchDiv(attributeValue);\n\n\n                });\n                options.swatchOption = swatchAllOption;\n\n\n\n                this.inputSimpleProduct = this.element.find(options.selectSimpleProduct);\n                gallery.on('gallery:loaded', function () {\n                    var galleryObject = gallery.data('gallery');\n                    options.mediaGalleryInitial = galleryObject.returnCurrentImages();\n                });\n            },\n\n            _generateSwatchDiv: function (attributeValue) {\n                var self = this;\n                var deferred = swatchModel().load(attributeValue.id);\n                var optionValue = attributeValue.options;\n                deferred.done(function (data) {\n                    if (data && typeof data.swatches !='undefined') {\n                        self._breakDiv();\n                        self._insertAttributeTitle(attributeValue.label);\n                        $('#attribute' + attributeValue.id).parent().parent()\n                            .css('visibility', 'hidden')\n                            .css('height','0');\n                        swatchOption = data.swatches;\n                        $.each(optionValue, function (index, value) {\n\n                            var swatchData = swatchOption[value.id];\n                            if (swatchData.type == '1') {\n                                self._pushColor(swatchData.value, value.id, attributeValue.id);\n                            }\n\n                            if (swatchData.type == '0') {\n                                self._pushText(swatchData.value, value.id, attributeValue.id);\n                            }\n\n                        });\n\n                        self._breakDiv();\n                        $('body').trigger('observerSwatch');\n                    }\n                    var countOptionNumber = self.countOptionNumber(attributeValue.id);\n                    if (countOptionNumber == 1) {\n                        $('.attribute'+ attributeValue.id).addClass('swatch-hidden');\n                    }\n\n\n\n\n                });\n            },\n\n            /**\n             * Override default options values settings with either URL query parameters or\n             * initialized inputs values.\n             * @private\n             */\n            _overrideDefaults: function () {\n                var hashIndex = window.location.href.indexOf('#');\n\n                if (hashIndex !== -1) {\n                    this._parseQueryParams(window.location.href.substr(hashIndex + 1));\n                }\n\n                if (this.options.spConfig.inputsInitialized) {\n                    this._setValuesByAttribute();\n                }\n            },\n\n            /**\n             * Parse query parameters from a query string and set options values based on the\n             * key value pairs of the parameters.\n             * @param {*} queryString - URL query string containing query parameters.\n             * @private\n             */\n            _parseQueryParams: function (queryString) {\n                var queryParams = $.parseQuery({\n                    query: queryString\n                });\n\n                $.each(queryParams, $.proxy(function (key, value) {\n                    this.options.values[key] = value;\n                }, this));\n            },\n\n            /**\n             * Override default options values with values based on each element's attribute\n             * identifier.\n             * @private\n             */\n            _setValuesByAttribute: function () {\n                this.options.values = {};\n                $.each(this.options.settings, $.proxy(function (index, element) {\n                    var attributeId;\n\n                    if (element.value) {\n                        attributeId = element.id.replace(/[a-z]*/, '');\n                        this.options.values[attributeId] = element.value;\n                    }\n                }, this));\n            },\n\n            /**\n             * Set up .on('change') events for each option element to configure the option.\n             * @private\n             */\n            _setupChangeEvents: function () {\n                $.each(this.options.settings, $.proxy(function (index, element) {\n                    $(element).on('change', this, this._configure);\n                }, this));\n            },\n\n            /**\n             * Iterate through the option settings and set each option's element configuration,\n             * attribute identifier. Set the state based on the attribute identifier.\n             * @private\n             */\n            _fillState: function () {\n                $.each(this.options.settings, $.proxy(function (index, element) {\n                    var attributeId = element.id.replace(/[a-z]*/, '');\n\n                    if (attributeId && this.options.spConfig.attributes[attributeId]) {\n                        element.config = this.options.spConfig.attributes[attributeId];\n                        element.attributeId = attributeId;\n                        this.options.state[attributeId] = false;\n                    }\n                }, this));\n            },\n\n            /**\n             * Set each option's child settings, and next/prev option setting. Fill (initialize)\n             * an option's list of selections as needed or disable an option's setting.\n             * @private\n             */\n            _setChildSettings: function () {\n                var childSettings = [],\n                    settings = this.options.settings,\n                    index = settings.length,\n                    option;\n\n                while (index--) {\n                    option = settings[index];\n\n                    if (index) {\n                        option.disabled = true;\n                    } else {\n                        this._fillSelect(option);\n                    }\n                    _.extend(option, {\n                        childSettings: childSettings.slice(),\n                        prevSetting: settings[index - 1],\n                        nextSetting: settings[index + 1]\n                    });\n\n                    childSettings.push(option);\n                }\n            },\n\n            /**\n             * Setup for all configurable option settings. Set the value of the option and configure\n             * the option, which sets its state, and initializes the option's choices, etc.\n             * @private\n             */\n            _configureForValues: function () {\n                var swatchOption = this.options.swatchOption;\n                var self = this;\n                if (this.options.values) {\n                    this.options.settings.each($.proxy(function (index, element) {\n                        var attributeId = element.attributeId;\n                        element.value = this.options.values[attributeId] || '';\n                        this._configureElement(element);\n                    }, this));\n                }\n            },\n\n            _pushOpenDiv: function () {\n                var swatchOption = $('#swatch-option');\n                var oldHtml = swatchOption.html();\n                swatchOption.html(oldHtml + \"<div>\");\n            },\n\n            _pushCloseDiv: function () {\n                var swatchOption = $('#swatch-option');\n                var oldHtml = swatchOption.html();\n                swatchOption.html(oldHtml + \"</div>\");\n            },\n\n            _pushColor: function (color, optionValue, attributeValue) {\n                var swatchOption = $('#swatch-option');\n                var oldHtml = swatchOption.html();\n                swatchOption.html(oldHtml + \"<div id='\"+optionValue+ \"' class='swatch-option attribute\"+ attributeValue+ \"' data-attribute= '\"+attributeValue + \"' style='background-color:\"+color+\"'></div>\");\n            },\n\n\n            _pushText: function (text, optionValue, attributeValue) {\n                var swatchOption = $('#swatch-option');\n                var oldHtml = swatchOption.html();\n                swatchOption.html(oldHtml + \"<div id='\"+optionValue+ \"' class='swatch-option attribute\"+ attributeValue+ \"' data-attribute= '\"+attributeValue + \"'><span>\"+text+\"</span></div>\");\n            },\n\n            _breakDiv: function () {\n                var swatchOption = $('#swatch-option');\n                var oldHtml = swatchOption.html();\n                swatchOption.html(oldHtml + \"<div style='clear:both'></div>\");\n            },\n\n            _insertAttributeTitle: function (title) {\n                var swatchOption = $('#swatch-option');\n                var oldHtml = swatchOption.html();\n                swatchOption.html(oldHtml + \"<div style='clear:both'>\"+title+ \"</div>\");\n            },\n\n            _resetSwatch: function () {\n                $('#swatch-option').html('');\n            },\n\n            /**\n             * Event handler for configuring an option.\n             * @private\n             * @param {Object} event - Event triggered to configure an option.\n             */\n            _configure: function (event) {\n                event.data._configureElement(this);\n            },\n\n            /**\n             * Configure an option, initializing it's state and enabling related options, which\n             * populates the related option's selection and resets child option selections.\n             * @private\n             * @param {*} element - The element associated with a configurable option.\n             */\n            _configureElement: function (element) {\n                var self = this;\n                this.simpleProduct = this._getSimpleProductId(element);\n\n                if (element.value) {\n                    this.options.state[element.config.id] = element.value;\n                    if (element.nextSetting) {\n                        element.nextSetting.disabled = false;\n                        this._fillSelect(element.nextSetting);\n                        this._resetChildren(element.nextSetting);\n\n                    } else {\n                        if (!!document.documentMode) {\n                            document.getElementsByName('selected_configurable_option')[0].value = element.options[element.selectedIndex].config.allowedProducts[0];\n                        } else {\n                            document.getElementsByName('selected_configurable_option')[0].value = element.selectedOptions[0].config.allowedProducts[0];\n                        }\n\n                        var spConfigData = $.parseJSON(self.detailPopup().itemData().json_config);\n                        var defaultPrice = spConfigData.prices.finalPrice.amount;\n\n                        var priceOption = this._getPrices();\n                        var finalPrice = defaultPrice;\n                        var cachePrice = defaultPrice;\n                        $.map(priceOption, function (el) {\n                            if (el) {\n                                if (el.finalPrice) {\n                                    if (el.finalPrice.amount) {\n                                        finalPrice = parseFloat(cachePrice) + parseFloat(el.finalPrice.amount);\n                                    }\n                                }\n                            }\n                        });\n                    }\n                    itemData = self.detailPopup().itemData();\n\n                    if ($('.screen-shoot-detail').is(\":visible\")) {\n                        var productDeferred = ProductFactory.get().load(parseInt(this.simpleProduct));\n                        productDeferred.done(function (data) {\n                            if (data && typeof data.image != 'undefined') {\n                                itemData.image = data.image;\n                                self.detailPopup().itemData(itemData);\n                            }\n\n                        });\n                    }\n\n                    self.detailPopup().configurableProductIdResult(this.simpleProduct);\n                    var optionObjectResult = this.options.state;\n                    var optionObjectResultArr = [];\n                    $.map(optionObjectResult, function (val, index) {\n                        optionObjectResultArr.push({id: index, value: val});\n                    });\n                    self.detailPopup().configurableOptionsResult(optionObjectResultArr);\n                    self.detailPopup().basePriceAmount(this.options.spConfig.optionPrices[this.simpleProduct].finalPrice.amount);\n                    self.detailPopup().defaultPriceAmount(priceHelper.convertAndFormat(this.options.spConfig.optionPrices[this.simpleProduct].finalPrice.amount));\n                    this.options.lableConfig[element.config.id] = element.selectedOptions[0].config.label;\n                    var labelObject = this.options.lableConfig;\n                    var lableObjectArr = [];\n                    $.map(labelObject, function (val, index) {\n                        lableObjectArr.push({id: index, value: val});\n                    });\n                    self.detailPopup().configurableLabelResult(lableObjectArr);\n                } else {\n                    this._resetChildren(element);\n                }\n                this._reloadPrice();\n            },\n\n            /**\n             * For a given option element, reset all of its selectable options. Clear any selected\n             * index, disable the option choice, and reset the option's state if necessary.\n             * @private\n             * @param {*} element - The element associated with a configurable option.\n             */\n            _resetChildren: function (element) {\n                var elementOptionId = element.id;\n\n                 $('.'+ elementOptionId).removeClass('swatch-select');\n                if (element.childSettings) {\n                    _.each(element.childSettings, function (set) {\n                        set.selectedIndex = 0;\n                        set.disabled = true;\n                    });\n\n                    if (element.config) {\n                        this.options.state[element.config.id] = false;\n                    }\n                }\n            },\n\n            /**\n             * Populates an option's selectable choices.\n             * @private\n             * @param {*} element - Element associated with a configurable option.\n             */\n            _fillSelect: function (element) {\n                var attributeId = element.id.replace(/[a-z]*/, ''),\n                    options = this._getAttributeOptions(attributeId),\n                    prevConfig,\n                    index = 1,\n                    allowedProducts,\n                    i,\n                    j;\n\n                this._clearSelect(element);\n                element.options[0] = new Option('', '');\n                element.options[0].innerHTML = this.options.spConfig.chooseText;\n                prevConfig = false;\n\n                if (element.prevSetting) {\n                    prevConfig = element.prevSetting.options[element.prevSetting.selectedIndex];\n                }\n\n                if (options) {\n                    for (i = 0; i < options.length; i++) {\n                        allowedProducts = [];\n\n                        if (prevConfig) {\n                            for (j = 0; j < options[i].products.length; j++) {\n                                // prevConfig.config can be undefined\n                                if (prevConfig.config &&\n                                    prevConfig.config.allowedProducts &&\n                                    prevConfig.config.allowedProducts.indexOf(options[i].products[j]) > -1) {\n                                    allowedProducts.push(options[i].products[j]);\n                                }\n                            }\n                        } else {\n                            allowedProducts = options[i].products.slice(0);\n                        }\n\n                        if (allowedProducts.length > 0) {\n                            options[i].allowedProducts = allowedProducts;\n                            element.options[index] = new Option(this._getOptionLabel(options[i]), options[i].id);\n\n                            if (typeof options[i].price !== 'undefined') {\n                                element.options[index].setAttribute('price', options[i].prices);\n                            }\n\n                            element.options[index].config = options[i];\n                            index++;\n                        }\n                    }\n                }\n\n\n                var allOption = element.options;\n                var allOptionValue = [];\n                $('#attribute'+ attributeId).find('option').each(function (index, value) {\n                    if ($(this).val()) {\n                        allOptionValue.push($(this).val());\n                    }\n                });\n                $('.attribute'+ attributeId).each(function (index, value) {\n                    var id = ($(this).attr('id'));\n                    if ($.inArray( id, allOptionValue ) == -1) {\n                        $(this).addClass('.swatch-hidden');\n                    }\n                });\n                var optionCount = this.countOptionNumber(attributeId);\n                if (optionCount >1) {\n                    $('.attribute'+ attributeId).removeClass('swatch-hidden');\n                }\n\n            },\n\n            countOptionNumber: function (attributeId) {\n                return $('#attribute'+ attributeId).find('option').length;\n            },\n\n            /**\n             * Generate the label associated with a configurable option. This includes the option's\n             * label or value and the option's price.\n             * @private\n             * @param {*} option - A single choice among a group of choices for a configurable option.\n             * @return {String} The option label with option value and price (e.g. Black +1.99)\n             */\n            _getOptionLabel: function (option) {\n                return option.label;\n            },\n\n            /**\n             * Removes an option's selections.\n             * @private\n             * @param {*} element - The element associated with a configurable option.\n             */\n            _clearSelect: function (element) {\n                var i;\n\n                for (i = element.options.length - 1; i >= 0; i--) {\n                    element.remove(i);\n                }\n            },\n\n            /**\n             * Retrieve the attribute options associated with a specific attribute Id.\n             * @private\n             * @param {Number} attributeId - The id of the attribute whose configurable options are sought.\n             * @return {Object} Object containing the attribute options.\n             */\n            _getAttributeOptions: function (attributeId) {\n                if (this.options.spConfig.attributes[attributeId]) {\n                    return this.options.spConfig.attributes[attributeId].options;\n                }\n            },\n\n            /**\n             * Reload the price of the configurable product incorporating the prices of all of the\n             * configurable product's option selections.\n             */\n            _reloadPrice: function () {\n                $(this.options.priceHolderSelector).trigger('updatePrice', this._getPrices());\n            },\n\n            /**\n             * Get product various prices\n             * @returns {{}}\n             * @private\n             */\n            _getPrices: function () {\n                var prices = {},\n                    elements = _.toArray(this.options.settings),\n                    hasProductPrice = false;\n\n                _.each(elements, function (element) {\n                    var selected = element.options[element.selectedIndex],\n                        config = selected && selected.config,\n                        priceValue = {};\n                    if (config && config.allowedProducts.length === 1 && !hasProductPrice) {\n                        priceValue = this._calculatePrice(config);\n                        hasProductPrice = true;\n                    }\n                    prices[element.attributeId] = priceValue;\n                }, this);\n                return prices;\n            },\n\n            /**\n             * Returns pracies for configured products\n             *\n             * @param {*} config - Products configuration\n             * @returns {*}\n             * @private\n             */\n            _calculatePrice: function (config) {\n                var displayPrices = $(this.options.priceHolderSelector).priceBox('option').prices,\n                    newPrices = this.options.spConfig.optionPrices[_.first(config.allowedProducts)];\n                _.each(displayPrices, function (price, code) {\n                    if (newPrices[code]) {\n                        displayPrices[code].amount = newPrices[code].amount - displayPrices[code].amount;\n                    }\n                });\n\n                return displayPrices;\n            },\n\n            /**\n             * Returns Simple product Id\n             *  depending on current selected option.\n             *\n             * @private\n             * @param {HTMLElement} element\n             * @returns {String|undefined}\n             */\n            _getSimpleProductId: function (element) {\n                // TODO: Rewrite algorithm. It should return ID of\n                //        simple product based on selected options.\n                if(!element.config)\n                    element.config = {};\n                var allOptions = element.config.options,\n                    value = element.value,\n                    config;\n\n                config = _.filter(allOptions, function (option) {\n                    return option.id === value;\n                });\n                config = _.first(config);\n\n                return _.isEmpty(config) ?\n                    undefined :\n                    _.first(config.allowedProducts);\n\n            }\n\n        };\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/configurable.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail-popup'\n    ],\n    function ($,ko, detailPopup, configurable) {\n        \"use strict\";\n        ko.bindingHandlers.getConfigData = {\n            update: function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n                // This will be called once when the binding is first applied to an element,\n                // and again whenever any observables/computeds that are accessed change\n                // Update the DOM element based on the supplied values here.\n                //detailPopup().setAllData();\n            }\n        }\n        return detailPopup.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/configurable'\n            },\n            initialize: function () {\n                this._super();\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/storecredit.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail-popup',\n        'Magestore_Webpos/js/helper/price'\n    ],\n    function ($,ko, detailPopup, priceHelper) {\n        \"use strict\";\n        return detailPopup.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/storecredit'\n            },\n            initialize: function () {\n                this._super();\n            },\n            isFixed: function () {\n                return this.itemData().storecredit_type == 1 ? true:false;\n            },\n            isDropdown: function () {\n                return this.itemData().storecredit_type == 3 ? true:false;\n            },\n            isRange: function () {\n                return this.itemData().storecredit_type == 2 ? true:false;\n            },\n            getCreditMin: function(){\n                return priceHelper.convertAndFormat(this.itemData().storecredit_min);\n            },\n            getCreditMax: function(){\n                return priceHelper.convertAndFormat(this.itemData().storecredit_max);\n            },\n            getDropdownValues: function () {\n                var self = this;\n                var options = [];\n                if(self.isDropdown()){\n                    var values = this.itemData().customercredit_value;\n                    //var rate = this.getProductData().storecredit_rate;\n                    var childIds = values.split(',');\n                    $.each(childIds, function(index, value){\n                        options.push({\n                            'key': parseFloat(value),\n                            'value': priceHelper.convertAndFormat(parseFloat(value))\n                        });\n                    });\n                }\n                return options;\n            },\n            updatePrice: function (dataObject) {\n                var self = this;\n                if(self.isDropdown()){\n                    var rate = this.itemData().storecredit_rate;\n                    if($('#storecredit_' + dataObject.id).length > 0){\n                        var value = parseFloat($('#storecredit_' + dataObject.id).attr('value'));\n                        var priceUpdate = parseFloat(rate) * value;\n                        var product = detailPopup().getProductData();\n                        detailPopup().basePriceAmount(priceUpdate);\n                        detailPopup().creditValue(value);\n                        detailPopup().defaultPriceAmount(priceHelper.convertAndFormat(priceUpdate));\n                    }\n                }\n                \n            },\n            creditValueFormated: function(value){\n                return priceHelper.convertAndFormat(value);\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/grouped.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail-popup',\n        'Magestore_Webpos/js/helper/price'\n    ],\n    function ($,ko, detailPopup, priceHelper) {\n        \"use strict\";\n        return detailPopup.extend({\n            defaultValue: ko.observable(0),\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/grouped'\n            },\n            initialize: function () {\n                this.defaultValue(0);\n                this._super();\n                detailPopup().groupItem(this);\n            },\n            getFormatPrice: function (price) {\n                return priceHelper.convertAndFormat(price);\n            },\n            descQty: function (id, groupedOptions) {\n                var self = this;\n                if ($('#super_group_' + id).length > 0) {\n                    var qty = parseInt($('#super_group_' + id)[0].value) - 1;\n                    if (qty < 0)\n                        qty = 0;\n                    $('#super_group_' + id)[0].value = parseInt(qty);\n                    self.updatePrice(groupedOptions);\n                }\n            },\n            incQty: function (id, groupedOptions) {\n                var self = this;\n                if ($('#super_group_' + id).length > 0) {\n                    var qty = parseInt($('#super_group_' + id)[0].value) + 1;\n                    if (qty < 0)\n                        qty = 0;\n                    $('#super_group_' + id)[0].value = parseInt(qty);\n                    self.updatePrice(groupedOptions);\n                }\n            },\n            increaseQty: function ($obj) {\n                var self = this;\n                if ($('#super_group_' + $obj.id).length > 0) {\n                    var qty = parseInt($('#super_group_' + $obj.id)[0].value) + 1;\n                    if (qty < 0)\n                        qty = 0;\n                    $('#super_group_' + $obj.id)[0].value = parseInt(qty);\n                    self.updatePrice(self.groupedOptions);\n                }\n            },\n            decreaseQty: function ($obj) {\n                var self = this;\n                if ($('#super_group_' + $obj.id).length > 0) {\n                    var qty = parseInt($('#super_group_' + $obj.id)[0].value) - 1;\n                    if (qty < 0)\n                        qty = 0;\n                    $('#super_group_' + $obj.id)[0].value = parseInt(qty);\n                    self.updatePrice(self.groupedOptions);\n                }\n            },\n            getDefaultQty: function($parent, $obj){\n                var self = $parent;\n                self.updatePrice(self.groupedOptions);\n                return parseInt($obj.default_qty);\n            },\n            prepareAddToCart: function(){\n                var self = this;\n                //self.updatePrice(self.groupedOptions);\n                self.prepareAddToCart();\n            },\n            updatePrice: function (groupedOptions) {\n                var self = this;\n                if(!groupedOptions){\n                    groupedOptions = self.itemData().grouped_options;\n                 }\n                 if(typeof groupedOptions !== 'undefined'){\n                     var groupData = [];\n                     this.groupedProductResult([]);\n\n                     $.each(groupedOptions, function (index, value) {\n                         if ($(\"[name='super_group[\" + value.id + \"]']\").length > 0) {\n                             if ($(\"[name='super_group[\" + value.id + \"]']\")[0].value\n                                 && $(\"[name='super_group[\" + value.id + \"]']\")[0].value > 0) {\n                                 value.qty = $(\"[name='super_group[\" + value.id + \"]']\")[0].value;\n                                 groupData.push(value);\n                             } else {\n                                 $(\"[name='super_group[\" + value.id + \"]']\")[0].value = 0;\n                             }\n                         }\n                     });\n                     self.groupedProductResult(groupData);\n                 }\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/bundle.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail-popup',\n        'Magestore_Webpos/js/helper/price'\n    ],\n    function ($,ko, detailPopup, priceHelper) {\n        \"use strict\";\n        return detailPopup.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/bundle'\n            },\n            initialize: function () {\n                this._super();\n                detailPopup().bundleItem(this);\n            },\n            convertToArray: function (items) {\n                var bundleItems = [];\n                for (var i in items) {\n                    bundleItems.push(items[i]);\n                }\n                return bundleItems;\n            },\n            getClassOption: function (data) {\n                var className = 'field option';\n                if (data.required) {\n                    return className + ' required';\n                }\n                return className;\n            },\n            getSelectionTitlePrice: function (price) {\n                return priceHelper.convertAndFormat(price);\n            },\n            updatePrice: function (bundleOptions) {\n                var self = this;\n                if(!bundleOptions){\n                   bundleOptions = self.itemData().bundle_options;\n                }\n                var price = self.itemData().final_price;\n                var bundleOptionsValueResult = [];\n                var bundleOptionsQtyResult = [];\n                var bundleChildsQtyResult = [];\n                var bundleOptionsLableResult = [];\n                $.each(bundleOptions, function (index, value) {\n                    var itemsData = [];\n                    itemsData = self.convertToArray(value.items);\n\n                    /* type of item is radio */\n                    if (value.type == 'radio') {\n                        var i = 0;\n                        var selectionArr = [];\n                        $.each(itemsData, function (indexItem, valueItem) {\n                            if (($(\"#bundle-option-\" + valueItem.option_id + \"-\" + valueItem.selection_id).length > 0)\n                                && $(\"#bundle-option-\" + valueItem.option_id + \"-\" + valueItem.selection_id)[0].checked) {\n                                var qty = 1;\n                                if ($(\"#bundle-option-\" + valueItem.option_id + \"-qty-input\").length > 0) {\n                                    qty = $(\"#bundle-option-\" + valueItem.option_id + \"-qty-input\")[0].value;\n                                }\n                                selectionArr[i] = valueItem.selection_id;\n                                i++;\n                                //bundleOptionsQtyResult[valueItem.selection_id] = qty;\n                                bundleOptionsQtyResult.push({id: valueItem.selection_id, value: qty});\n                                bundleChildsQtyResult.push({id: valueItem.entity_id, value: qty});\n                                //bundleOptionsLableResult[valueItem.selection_id] = parseInt(qty) + ' x ' + valueItem.name;\n                                bundleOptionsLableResult.push({id: valueItem.selection_id, value: parseInt(qty) + ' x ' + valueItem.name});\n                                price = parseFloat(price) + parseFloat(qty) * parseFloat(valueItem.price);\n                            }\n                        });\n                        if (selectionArr.length > 0)\n                            //bundleOptionsValueResult[value.id] = selectionArr;\n                            bundleOptionsValueResult.push({id: value.id, value: selectionArr});\n                    }\n\n                    /* type of item is select */\n                    if (value.type == 'select') {\n                        var i = 0;\n                        var selectionArr = [];\n                        $.each(itemsData, function (indexItem, valueItem) {\n                            if (($(\"#bundle-option-\" + valueItem.option_id).length > 0)\n                                && $(\"#bundle-option-\" + valueItem.option_id)[0].value) {\n                                var selectId = $(\"#bundle-option-\" + valueItem.option_id)[0].value;\n                                if (valueItem.selection_id == selectId) {\n                                    var qty = 1;\n                                    if ($(\"#bundle-option-\" + valueItem.option_id + \"-qty-input\").length > 0) {\n                                        qty = $(\"#bundle-option-\" + valueItem.option_id + \"-qty-input\")[0].value;\n                                    }\n                                    selectionArr[i] = valueItem.selection_id;\n                                    i++;\n                                    //bundleOptionsQtyResult[valueItem.selection_id] = qty;\n                                    //bundleOptionsLableResult[valueItem.selection_id] = parseInt(qty) + ' x ' + valueItem.name;\n                                    bundleOptionsQtyResult.push({id: valueItem.selection_id, value: qty});\n                                    bundleChildsQtyResult.push({id: valueItem.entity_id, value: qty});\n                                    bundleOptionsLableResult.push({id: valueItem.selection_id, value: parseInt(qty) + ' x ' + valueItem.name});\n\n                                    price = parseFloat(price) + parseFloat(qty) * parseFloat(valueItem.price);\n                                }\n                            }\n                        });\n                        if (selectionArr.length > 0)\n                            //bundleOptionsValueResult[value.id] = selectionArr;\n                            bundleOptionsValueResult.push({id: value.id, value: selectionArr});\n                    }\n\n                    /* type of item is checkbox */\n                    if (value.type == 'checkbox') {\n                        var i = 0;\n                        var selectionArr = [];\n                        $.each(itemsData, function (indexItem, valueItem) {\n                            if (($(\"#bundle-option-\" + valueItem.option_id + \"-\" + valueItem.selection_id).length > 0)\n                                && $(\"#bundle-option-\" + valueItem.option_id + \"-\" + valueItem.selection_id)[0].checked) {\n                                var qty = valueItem.selection_qty;\n                                selectionArr[i] = valueItem.selection_id;\n                                i++;\n                                //bundleOptionsQtyResult[valueItem.selection_id] = qty;\n                                //bundleOptionsLableResult[valueItem.selection_id] = parseInt(qty) + ' x ' + valueItem.name;\n                                //bundleOptionsQtyResult.push({id: valueItem.selection_id, value: qty});\n                                bundleOptionsLableResult.push({id: valueItem.selection_id, value: parseInt(qty) + ' x ' + valueItem.name});\n                                price = parseFloat(price) + parseFloat(qty) * parseFloat(valueItem.price);\n                            }\n                        });\n                        if (selectionArr.length > 0)\n                            //bundleOptionsValueResult[value.id] = selectionArr;\n                            bundleOptionsValueResult.push({id: value.id, value: selectionArr});\n                    }\n\n                    /* type of item is multi */\n                    if (value.type == 'multi') {\n                        var i = 0;\n                        var selectionArr = [];\n                        if ($(\"#bundle-option-\" + value.id).length > 0) {\n                            var optionsSelect = $(\"#bundle-option-\" + value.id).val();\n                            if (optionsSelect) {\n                                $.each(itemsData, function (indexItem, valueItem) {\n                                    if (optionsSelect.indexOf(valueItem.selection_id) > -1) {\n                                        var qty = valueItem.selection_qty;\n                                        selectionArr[i] = valueItem.selection_id;\n                                        i++;\n                                        //bundleOptionsQtyResult[valueItem.selection_id] = qty;\n                                        //bundleOptionsLableResult[valueItem.selection_id] = parseInt(qty) + ' x ' + valueItem.name;\n                                        //bundleOptionsQtyResult.push({id: valueItem.selection_id, value: qty});\n                                        bundleOptionsLableResult.push({id: valueItem.selection_id, value: parseInt(qty) + ' x ' + valueItem.name});\n                                        price = parseFloat(price) + parseFloat(qty) * parseFloat(valueItem.price);\n                                    }\n                                });\n                            }\n                        }\n                        if (selectionArr.length > 0)\n                            //bundleOptionsValueResult[value.id] = selectionArr;\n                            bundleOptionsValueResult.push({id: value.id, value: selectionArr});\n                    }\n                });\n                self.basePriceAmount(price);\n                self.defaultPriceAmount(priceHelper.convertAndFormat(price));\n                self.bundleOptionsValueResult(bundleOptionsValueResult);\n                self.bundleOptionsQtyResult(bundleOptionsQtyResult);\n                self.bundleChildsQtyResult(bundleChildsQtyResult);\n                self.bundleOptionsLableResult(bundleOptionsLableResult);\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/customoption.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail-popup',\n        'Magestore_Webpos/js/helper/price'\n    ],\n    function ($,ko, detailPopup, priceHelper) {\n        \"use strict\";\n        return detailPopup.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/customoption'\n            },\n            initialize: function () {\n                this._super();\n            },\n            productPrice: function() {\n                return this.itemData().price;\n            },\n            getFormatPrice: function (price, price_type) {\n                var self = this;\n                if (price_type == 'fixed') {\n                    return priceHelper.convertAndFormat(price);\n                }\n                if (price_type == 'percent') {\n                    return priceHelper.convertAndFormat(parseFloat(self.productPrice()) * parseFloat(price) / 100);\n                }\n            },\n            updatePrice: function (customOptions) {\n                var self = this;\n                var price = self.itemData().final_price;\n                var customOptionsValueResult = [];\n                var customOptionsLableResult = [];\n                $.each(customOptions, function (index, value) {\n\n                    // item is field or textarea\n                    if (value.type == 'field' || value.type == 'area') {\n                        var i = 0;\n                        var selectionArr = [];\n                        var lableString = '';\n                        if ($(\"#options_\" + value.option_id + \"_text\").length > 0) {\n                            if ($(\"#options_\" + value.option_id + \"_text\")[0].value) {\n                                if (value.price_type == 'fixed') {\n                                    price = parseFloat(price) + parseFloat(value.price);\n                                }\n                                if (value.price_type == 'percent') {\n                                    price = parseFloat(price) + parseFloat(self.productPrice()) * parseFloat(value.price) / 100;\n                                }\n                                selectionArr[i] = $(\"#options_\" + value.option_id + \"_text\")[0].value;\n                                if (i == 0) {\n                                    lableString = $(\"#options_\" + value.option_id + \"_text\")[0].value;\n                                    //customOptionsLableResult[value.option_id] = $(\"#options_\" + value.option_id + \"_text\")[0].value;\n                                }\n                                if (i != 0) {\n                                    lableString += ', '+ $(\"#options_\" + value.option_id + \"_text\")[0].value;\n                                    //customOptionsLableResult[value.option_id] += ', '+ $(\"#options_\" + value.option_id + \"_text\")[0].value;\n                                }\n                                i++;\n                            }\n                        }\n                        if (selectionArr.length > 0)\n                            customOptionsValueResult.push({id: value.option_id, value: selectionArr});\n                            //customOptionsValueResult[value.option_id] = selectionArr;\n                        if (lableString.length >0 )\n                            customOptionsLableResult.push({id: value.option_id, value: lableString});\n                    }\n\n                    // item is selection\n                    if (value.type == 'drop_down') {\n                        if (($(\"#select_\" + value.option_id).length > 0)\n                                && $(\"#select_\" + value.option_id)[0].value) {\n                            var selectId = $(\"#select_\" + value.option_id)[0].value;\n                            var i = 0;\n                            var selectionArr = [];\n                            var lableString = '';\n                            $.each(value.values, function (index, valueData) {\n                                if (valueData.option_type_id == selectId) {\n                                    if (valueData.price_type == 'fixed') {\n                                        price = parseFloat(price) + parseFloat(valueData.price);\n                                    }\n                                    if (valueData.price_type == 'percent') {\n                                        price = parseFloat(price) + parseFloat(self.productPrice()) * parseFloat(valueData.price) / 100;\n                                    }\n                                    selectionArr[i] = valueData.option_type_id;\n                                    if (i == 0) {\n                                        lableString = valueData.title;\n                                        //customOptionsLableResult[value.option_id] = valueData.title;\n                                    }\n                                    if (i != 0) {\n                                        lableString += ', '+ valueData.title;\n                                        //customOptionsLableResult[value.option_id] += ', '+ valueData.title;\n                                    }\n                                    i++;\n                                }\n                            });\n                            if (selectionArr.length > 0)\n                                customOptionsValueResult.push({id: value.option_id, value: selectionArr});\n                                //customOptionsValueResult[value.option_id] = selectionArr;\n                            if (lableString.length >0 )\n                                customOptionsLableResult.push({id: value.option_id, value: lableString});\n                        }\n                    }\n\n                    // item is radio\n                    if (value.type == 'radio') {\n                        var i = 0;\n                        var selectionArr = [];\n                        var lableString = '';\n                        $.each(value.values, function (index, valueData) {\n                            if ($(\"#options_\" + value.option_id + \"_\" + valueData.sort_order).length > 0\n                                && $(\"#options_\" + value.option_id + \"_\" + valueData.sort_order)[0].checked) {\n                                if (valueData.option_type_id == $(\"#options_\" + value.option_id + \"_\" + valueData.sort_order)[0].value) {\n                                    if (valueData.price_type == 'fixed') {\n                                        price = parseFloat(price) + parseFloat(valueData.price);\n                                    }\n                                    if (valueData.price_type == 'percent') {\n                                        price = parseFloat(price) + parseFloat(self.productPrice()) * parseFloat(valueData.price) / 100;\n                                    }\n                                    selectionArr[i] = valueData.option_type_id;\n                                    if (i == 0) {\n                                        lableString = valueData.title;\n                                        //customOptionsLableResult[value.option_id] = valueData.title;\n                                    }\n                                    if (i != 0) {\n                                        lableString += ', '+ valueData.title;\n                                        //customOptionsLableResult[value.option_id] += ', '+ valueData.title;\n                                    }\n                                    i++;\n                                }\n                            }\n                        });\n                        if (selectionArr.length > 0)\n                            customOptionsValueResult.push({id: value.option_id, value: selectionArr});\n                            //customOptionsValueResult[value.option_id] = selectionArr;\n                        if (lableString.length >0 )\n                            customOptionsLableResult.push({id: value.option_id, value: lableString});\n                    }\n\n                    // item is checkbox\n                    if (value.type == 'checkbox') {\n                        var i = 0;\n                        var selectionArr = [];\n                        var lableString = '';\n                        $.each(value.values, function (index, valueData) {\n                            if ($(\"#options_\" + value.option_id + \"_\" + valueData.sort_order).length > 0\n                                && $(\"#options_\" + value.option_id + \"_\" + valueData.sort_order)[0].checked) {\n                                if (valueData.option_type_id == $(\"#options_\" + value.option_id + \"_\" + valueData.sort_order)[0].value) {\n                                    if (valueData.price_type == 'fixed') {\n                                        price = parseFloat(price) + parseFloat(valueData.price);\n                                    }\n                                    if (valueData.price_type == 'percent') {\n                                        price = parseFloat(price) + parseFloat(self.productPrice()) * parseFloat(valueData.price) / 100;\n                                    }\n                                    selectionArr[i] = valueData.option_type_id;\n                                    if (i == 0) {\n                                        lableString = valueData.title;\n                                        //customOptionsLableResult[value.option_id] = valueData.title;\n                                    }\n                                    if (i != 0) {\n                                        lableString += ', '+ valueData.title;\n                                        //customOptionsLableResult[value.option_id] += ', '+ valueData.title;\n                                    }\n                                    i++;\n                                }\n                            }\n                        });\n                        if (selectionArr.length > 0)\n                            customOptionsValueResult.push({id: value.option_id, value: selectionArr});\n                            //customOptionsValueResult[value.option_id] = selectionArr;\n                        if (lableString.length >0 )\n                            customOptionsLableResult.push({id: value.option_id, value: lableString});\n                    }\n\n                    // item is checkbox\n                    if (value.type == 'multiple') {\n                        var i = 0;\n                        var selectionArr = [];\n                        var lableString = '';\n                        if ($(\"#select_\" + value.option_id).length > 0) {\n                            var optionsSelect = $(\"#select_\" + value.option_id).val();\n                            if (optionsSelect) {\n                                $.each(value.values, function (index, valueData) {\n                                    if (optionsSelect.indexOf(String(valueData.option_type_id)) > -1) {\n                                        if (valueData.price_type == 'fixed') {\n                                            price = parseFloat(price) + parseFloat(valueData.price);\n                                        }\n                                        if (valueData.price_type == 'percent') {\n                                            price = parseFloat(price) + parseFloat(self.productPrice()) * parseFloat(valueData.price) / 100;\n                                        }\n                                        selectionArr[i] = valueData.option_type_id;\n                                        if (i == 0) {\n                                            lableString = valueData.title;\n                                            //customOptionsLableResult[value.option_id] = valueData.title;\n                                        }\n                                        if (i != 0) {\n                                            lableString += ', '+ valueData.title;\n                                            //customOptionsLableResult[value.option_id] += ', '+ valueData.title;\n                                        }\n                                        i++;\n                                    }\n                                });\n                            }\n                        }\n                        if (selectionArr.length > 0)\n                            customOptionsValueResult.push({id: value.option_id, value: selectionArr});\n                            //customOptionsValueResult[value.option_id] = selectionArr;\n                        if (lableString.length >0 )\n                            customOptionsLableResult.push({id: value.option_id, value: lableString});\n                    }\n                });\n                self.customOptionsValueResult(customOptionsValueResult);\n                self.customOptionsLableResult(customOptionsLableResult);\n                self.basePriceAmount(price);\n                self.defaultPriceAmount(priceHelper.convertAndFormat(price));\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/customoption/area.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail/customoption'\n    ],\n    function ($,ko, customOptionDetail) {\n        \"use strict\";\n        return customOptionDetail.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/customoption/area'\n            },\n            initialize: function () {\n                this._super();\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/customoption/checkbox.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail/customoption'\n    ],\n    function ($,ko, customOptionDetail) {\n        \"use strict\";\n        return customOptionDetail.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/customoption/checkbox'\n            },\n            initialize: function () {\n                this._super();\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/customoption/radio.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail/customoption'\n    ],\n    function ($,ko, customOptionDetail) {\n        \"use strict\";\n        return customOptionDetail.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/customoption/radio'\n            },\n            initialize: function () {\n                this._super();\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/customoption/field.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail/customoption'\n    ],\n    function ($,ko, customOptionDetail) {\n        \"use strict\";\n        return customOptionDetail.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/customoption/field'\n            },\n            initialize: function () {\n                this._super();\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/customoption/date.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail/customoption'\n    ],\n    function ($,ko, customOptionDetail) {\n        \"use strict\";\n        return customOptionDetail.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/customoption/date'\n            },\n            initialize: function () {\n                this._super();\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/customoption/dropdown.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail/customoption'\n    ],\n    function ($,ko, customOptionDetail) {\n        \"use strict\";\n        return customOptionDetail.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/customoption/dropdown'\n            },\n            initialize: function () {\n                this._super();\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/customoption/multiple.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail/customoption'\n    ],\n    function ($,ko, customOptionDetail) {\n        \"use strict\";\n        return customOptionDetail.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/customoption/multiple'\n            },\n            initialize: function () {\n                this._super();\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/bundle/multi.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail/bundle'\n    ],\n    function ($,ko, bundleDetail) {\n        \"use strict\";\n        return bundleDetail.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/bundle/multi'\n            },\n            initialize: function () {\n                this._super();\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/bundle/checkbox.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail/bundle'\n    ],\n    function ($,ko, bundleDetail) {\n        \"use strict\";\n        return bundleDetail.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/bundle/checkbox'\n            },\n            initialize: function () {\n                this._super();\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/bundle/radio.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail/bundle'\n    ],\n    function ($,ko, bundleDetail) {\n        \"use strict\";\n        return bundleDetail.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/bundle/radio'\n            },\n            initialize: function () {\n                this._super();\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/catalog/product/detail/bundle/select.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/catalog/product/detail/bundle'\n    ],\n    function ($,ko, bundleDetail) {\n        \"use strict\";\n        return bundleDetail.extend({\n            defaults: {\n                template: 'Magestore_Webpos/catalog/product/detail/bundle/select'\n            },\n            initialize: function () {\n                this._super();\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/inventory/stock-item/grid.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'mageUtils',\n            'Magestore_Webpos/js/model/inventory/stock-item-factory',\n            'mage/translate',\n            'Magestore_Webpos/js/view/base/grid/collection-grid',\n            'Magestore_Webpos/js/model/event-manager',\n            'Magestore_Webpos/js/action/notification/add-notification',\n            'Magestore_Webpos/js/helper/alert',\n            'Magestore_Webpos/js/helper/general'\n\n        ],\n        function ($, ko, utils, StockItemFactory, $t, collectionGrid, eventManager, addNotification, Alert, Helper) {\n            \"use strict\";\n\n            ko.bindingHandlers.bootstrapSwitchOn = {\n                init: function (element, valueAccessor, allBindingsAccessor, viewModel) {\n                    $(element).iosCheckbox();\n                    $(element).on(\"switchchange\", function (e) {\n                        valueAccessor()(e.target.checked);\n                    });            \n                }\n            };\n\n            return collectionGrid.extend({\n                items: ko.observableArray([]),\n                columns: ko.observableArray([]),\n                locationName: ko.observable(''),\n                locationAddress: ko.observable(''),\n                editing: false,\n                defaults: {\n                    template: 'Magestore_Webpos/inventory/stock-item/grid', },\n                initialize: function () {\n                    this.changedData = ko.observable(false);\n                    /* prepare model */\n                    var mode = (Helper.isUseOnline('stocks'))?'online':'offline';\n                    this.mode = mode;\n                    this.model = StockItemFactory.get();\n                    this.model.setMode(this.mode);\n                    this.model.setPush(true);\n                    /* get config data */\n                    this.config = {'manage_stock': WEBPOS.getConfig('cataloginventory/item_options/manage_stock'),\n                        'backorders': WEBPOS.getConfig('cataloginventory/item_options/backorders')};\n                    this.locationName($t('Location') + ': ' + WEBPOS.getConfig('location_name'));\n                    this.locationAddress(WEBPOS.getConfig('location_address'));\n\n                    this._super();\n                    /* listen events */\n                    //this.listenLoadedLocationEvent();\n                    this.listenStockItemPullAfterEvent();\n                    this.listenStockItemSaveAfterEvent();\n                    this.listenStockItemMassUpdateAfterEvent();\n                    this.listenManageStockShowContainerAfterEvent();\n                    /* translate labels */\n                    this.searchPlaceHolder = $t('Name/ SKU');\n                },\n                /**\n                 * Prepare stock item collection\n                 * \n                 */\n                _prepareCollection: function () {\n                    this.searchAttribute = 'sku';\n                    if (this.collection == null) {\n                        this.collection = this.model.getCollection();\n                    }\n                    var mode = (Helper.isUseOnline('stocks'))?'online':'offline';\n                    this.collection.setMode(mode);\n                    this._removeCustomSalesFromCollection();\n                    this.collection.setPageSize(this.pageSize);\n                    this.collection.setCurPage(this.curPage);\n                    if (this.searchKey) {\n                        if(mode == 'online'){\n                            this.collection.addFieldToFilter([\n                                ['e.sku', \"%\" + this.searchKey + \"%\", 'like'],\n                                ['cpev.value', \"%\" + this.searchKey + \"%\", 'like'],\n                            ]);\n                        }else{\n                            this.collection.addFieldToFilter([\n                                ['sku', \"%\" + this.searchKey + \"%\", 'like'],\n                                ['name', \"%\" + this.searchKey + \"%\", 'like'],\n                            ]);\n                        }\n                    }\n                },\n                _removeCustomSalesFromCollection: function() {\n                    if(this.collection) {\n                        this.collection.addFieldToFilter('sku', 'webpos-customsale', 'neq');\n                    }\n                    return this;\n                },\n                _render: function () {\n                    this._super();\n                    $(\"#search-header-stock\").focus();\n                },\n\n                addItems: function (items) {\n                    for (var i in items) {\n\n                        var manageStock = items[i].use_config_manage_stock ? this.config.manage_stock : items[i].manage_stock;\n                        var backOrder = items[i].use_config_backorders ? this.config.backorders : items[i].backorders;\n                        backOrder = (backOrder > 0) ? true : false;\n                        items[i].manage_stock = manageStock;\n                        items[i].backorders = backOrder;\n                        items[i].columns = this.columns;\n                        items[i].qtyVal = ko.observable(items[i].qty);\n                        items[i].isInStock = ko.observable(items[i].is_in_stock);\n                        items[i].manageStock = ko.observable(items[i].manage_stock);\n                        items[i].backOrder = ko.observable(items[i].backorders);\n                        items[i].changedData = ko.observable(false);\n                        items[i].finishedUpdate = ko.observable(false);\n                        // items[i].className = '';\n                        // if(!webposConfig.can_adjust_stock){\n                        //     items[i].className = 'disabled';\n                        // }\n                        items[i].canAdjustStock = ko.computed( function () {\n                            if(webposConfig.can_adjust_stock){\n                                return false;\n                            }\n                            return true;\n                        });\n                    }\n                    ko.utils.arrayPushAll(this.items, items);\n                },\n                changeStockData: function (data, event) {\n                    if (event.target.type === 'text') {\n                        if (!this.checkInputNumber(data)) {\n                            /* show notification */\n                            //addNotification($t('Wrong qty value') + ': \"' + data.qtyVal() + '\"', true, 'danger', $t('Warning:'));\n                            Alert({title: 'Error', content: 'Wrong qty value' + ': \"' + data.qtyVal() + '\"'});\n                            data.qtyVal(0);\n                            return;\n                        }\n                        data.qty = data.qtyVal();\n                        this.model.setData(data);\n                        data.isInStock(this.model.isInStock());\n                    }\n                    data.changedData(true);\n                    data.finishedUpdate(false);\n                    this.changedData(true);\n                    this.editing = true;\n                },\n                checkInputNumber: function (item) {\n                    if (isNaN(item.qtyVal())) {\n                        return false;\n                    }\n                    return true;\n                },\n                /**\n                 * Update Stock data\n                 * @param object data\n                 * @param object event\n                 */\n                updateStock: function (data, event) {\n                    data.changedData(false);\n                    data.qtyVal(parseFloat(data.qtyVal()));\n                    var model = StockItemFactory.get();\n                    model.setMode(this.mode).setPush(true);\n                    model.setData(data);\n                    /* check if change stock config */\n                    if (model.data['manage_stock'] !== data.manageStock()) {\n                        model.data['use_config_manage_stock'] = false;\n                    }\n                    if (model.data['backorders'] != data.backOrder()) {\n                        model.data['use_config_backorders'] = false;\n                    }\n                    model.data['is_in_stock'] = data.isInStock();\n                    model.data['manage_stock'] = data.manageStock();\n                    model.data['backorders'] = data.backOrder() ? '1' : '0';\n                    model.data['qty'] = data.qtyVal();\n\n                    var deferred = model.save();\n                    deferred.done(function (response) {\n                        data.finishedUpdate(true);\n                    });\n\n                    /* check editing status */\n                    this.editing = false;\n                    for (var i in this.items()) {\n                        var item = this.items()[i];\n                        if (typeof item.changedData != 'undefined' && item.changedData() === true) {\n                            this.editing = true;\n                            break;\n                        }\n                    }\n                    if (this.editing === false) {\n                        /* delay this action 10 seconds */\n                        this.editing = true;\n                        var self = this;\n                        setTimeout(function () {\n                            self.editing = false;\n                        }, 10000);\n                    }\n                },\n                /**\n                 * Mass Update Stock data\n                 * @param object data\n                 * @param object event\n                 */\n                massUpdateStock: function (data, event) {\n                    data.changedData(false);\n                    var changedItems = [];\n                    var items = data.items();\n                    for (var i in items) {\n                        if (items[i].changedData() === true) {\n                            items[i].qtyVal(parseFloat(items[i].qtyVal()));\n                            /* check if change stock config */\n                            if (items[i]['manage_stock'] !== items[i].manageStock()) {\n                                items[i]['use_config_manage_stock'] = false;\n                            }\n                            if (items[i]['backorders'] != items[i].backOrder()) {\n                                items[i]['use_config_backorders'] = false;\n                            }\n\n                            items[i]['is_in_stock'] = items[i].isInStock();\n                            items[i]['manage_stock'] = items[i].manageStock();\n                            items[i]['backorders'] = items[i].backOrder() ? '1' : '0';\n                            items[i]['qty'] = items[i].qtyVal();\n\n                            items[i].changedData(false);\n                            items[i].finishedUpdate(true);\n                            changedItems.push(items[i]);\n                        }\n                    }\n                    /* remove function attributes in stock data before mass-updating */\n                    data.model.removeFuncBeforeMassUpdate = true;\n                    data.model.massUpdate({\"items\": changedItems}).done(function (response) {\n                        eventManager.dispatch('stock_item_page_massupdate_after', {'items': changedItems});\n                    });\n                    /* update editing status */\n                    var self = this;\n                    /* delay this action 10 seconds */\n                    setTimeout(function () {\n                        self.editing = false;\n                    }, 10000);\n                },\n                /**\n                 * Reload stock item data\n                 */\n                reloadData: function () {\n                    if (this.editing === false) {\n                        this.refresh = true;\n                        this._prepareItems();\n                    }\n                },\n                /**\n                 * Listen webpos_load_location_after event\n                 */\n                listenLoadedLocationEvent: function () {\n                    var self = this;\n                    eventManager.observer('webpos_load_location_after', function (event, eventData) {\n                        self.locationName($t('Location') + ': ' + WEBPOS.getConfig('location').display_name);\n                        self.locationAddress(WEBPOS.getConfig('location').address);\n                    });\n                },\n                /**\n                 * Listen stock_item_pull_after event\n                 */\n                listenStockItemPullAfterEvent: function () {\n                    var self = this;\n                    eventManager.observer('stock_item_pull_after', function (event, eventData) {\n                        self.reloadData();\n                    });\n                },\n                /**\n                 * Listen stock_item_save_after event\n                 * Reload stock item list\n                 */\n                listenStockItemSaveAfterEvent: function () {\n                    var self = this;\n                    eventManager.observer('stock_item_save_after', function (event, eventData) {\n                        self.reloadData();\n                    });\n                },\n                /**\n                 * Listen stock_item_massupdate_after event\n                 * Reload stock item list\n                 */\n                listenStockItemMassUpdateAfterEvent: function () {\n                    var self = this;\n                    eventManager.observer('stock_item_massupdate_after', function (event, eventData) {\n                        self.reloadData();\n                    });\n                },\n                /**\n                 * Listen manage_stock_show_container_after event\n                 * Reload stock item list after open Manage Stock menu\n                 */\n                listenManageStockShowContainerAfterEvent: function () {\n                    var self = this;\n                    eventManager.observer('manage_stock_show_container_after', function (event, eventData) {\n                        self.editing = false;\n                        //self.reloadData();\n                        self._render();\n                    });\n                },\n                \n                testUpdateStock: function(data, event) {\n                    //var start = Date.now();\n                    var stockItem = StockItemFactory.get();\n                    var deferred = stockItem.updateQty(1, 10);\n                    /*\n                    deferred.done(function(data){\n                        console.log('updateStock');\n                        console.log(Date.now() - start);\n                    });\n                    */\n                },\n                filterOffline: function (element, event) {\n                    if(this.mode == 'offline'){\n                        this.filter();\n                    }\n                },\n            });\n        }\n);","Magestore_Webpos/js/view/customer/integration.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'underscore',\n        'uiComponent'\n    ],\n    function ($, ko, _, Component) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magestore_Webpos/customer/integration'\n            },\n            enableChilds: ko.observableArray([]),\n            initialize: function () {\n                this._super();\n                if(window.webposConfig.plugins){\n                    this.enableChilds(window.webposConfig.plugins);\n                }\n            },\n            hasChilds: function(){\n                var self = this;\n                var visibleChilds = [];\n                if(self.elems().length > 0){\n                    _.forEach(self.elems(), function(child){\n                        if(!self.isChildEnable(child.index)){\n                            self.removeChild(child.index);\n                        }\n                        if(child.visible()){\n                            visibleChilds.push(child.index);\n                        }\n                    });\n                }\n                return (self.elems().length > 0 && visibleChilds.length > 0)?true:false;\n            },\n            isChildEnable: function(index){\n                return ($.inArray(index, this.enableChilds()) !== -1);\n            }\n        });\n    }\n);","Magestore_Webpos/js/view/customer/customer-list.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\nrequire([\n    'Magestore_Webpos/js/model/customer/customer',\n    ]);\n    \ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/customer/customer-factory',\n        'Magestore_Webpos/js/view/base/list/collection-list',\n        'Magestore_Webpos/js/model/customer/complain',\n        'Magestore_Webpos/js/action/customer/select-customer',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/directory/country',\n        'Magestore_Webpos/js/helper/staff',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_Webpos/js/helper/general',\n        'mage/translate',\n        'Magestore_Webpos/js/region-updater'\n    ],\n    function (\n        $,\n        ko,\n        ViewManager,\n        CustomerFactory,\n        listAbstract,\n        complainModel,\n        selectCustomer,\n        eventManager,\n        countryModel,\n        staffHelper,\n        alertHelper,\n        Helper,\n        $t\n    ) {\n        \"use strict\";\n\n        return listAbstract.extend({\n            /* Ko JS for customer*/\n            items: ko.observableArray([]),\n            columns: ko.observableArray([]),\n            isShowHeader: false,\n            isSearchable: true,\n            isShowCreateForm: ko.observable(false),\n            /* End ko JS for customer list*/\n\n            /* Set Template For Customer List*/\n            defaults: {\n                template: 'Magestore_Webpos/customer/customer-list'\n            },\n\n            /* Automatically run when init JS*/\n            initialize: function () {\n                this._super();\n                this.listenMenuShowContainerAfterEvent();\n            },\n\n            /* Prepare Collection for Customer*/\n            _prepareCollection: function () {\n                var customerGroupOfStaff = staffHelper.getCustomerGroupOfStaff();\n                var getCustomerGroupOfStaffNumber = staffHelper.getCustomerGroupOfStaffNumber();\n\n                if(this.collection == null) {\n                    if ($.inArray('all', customerGroupOfStaff) > -1) {\n                        this.collection = CustomerFactory.get().getCollection().setOrder('full_name', 'ASC');\n                    } else {\n                        this.collection = CustomerFactory.get().getCollection()\n                            .setOrder('full_name', 'ASC')\n                            .addFieldToFilter('group_id',getCustomerGroupOfStaffNumber,'in');\n                    }\n                }\n                var mode = (Helper.isUseOnline('customers'))?'online':'offline';\n                this.collection.setMode(mode);\n                this.pageSize = 20;\n                if ($.inArray('all', customerGroupOfStaff) == -1) {\n                    this.collection = CustomerFactory.get().getCollection()\n                        .setOrder('full_name', 'ASC')\n                        .addFieldToFilter('group_id',getCustomerGroupOfStaffNumber,'in');\n                }\n                this.collection.setPageSize(this.pageSize);\n                this.collection.setCurPage(this.curPage);\n                this.collection.setOrder('full_name', 'ASC');\n                if (this.searchKey) {\n                    this.collection.addFieldToFilter(\n                        [\n                            ['email', \"%\" + this.searchKey + \"%\", 'like'],\n                            ['telephone', \"%\" + this.searchKey + \"%\", 'like'],\n                            ['full_name', \"%\" + this.searchKey + \"%\", 'like']\n                        ]\n                    );\n                }\n            },\n\n            /* Prepare Items for list*/\n            _prepareItems: function () {\n                var self = this;\n                if (this.refresh) {\n                    this.curPage = 1;\n                }\n                var deferred = self.getCollection().load();\n                self.startLoading();\n\n                deferred.done(function (data) {\n                    self.finishLoading();\n                    self.setItems(data.items);\n                    var count = data.items.length;\n                    if(count==0 && self.searchKey){\n                        alertHelper({title:'Error', content: $t('Can not find any item with key %1').replace('%1', '\\<b>'+self.searchKey+'\\</b>')});\n                    } else {\n                        if (data.items.length && !$('.list-customer .selected').length) {\n                            selectCustomer(data.items[0]);\n                        }\n                    }\n                });\n                deferred.fail(function (error) {\n\n                });\n            },\n\n            /* Load One Customer*/\n            loadItem: function(data){\n                selectCustomer(data);\n            },\n\n            /* Get Selected Customer Id*/\n            getSelectId: ko.pureComputed(function () {\n                return CustomerFactory.get().customerSelected() ? CustomerFactory.get().customerSelected() : null;\n            }),\n            \n\n            /* Show Address Popup Or Not*/\n            isShowAddress: ko.pureComputed(function () {\n                return ViewManager.getSingleton('view/customer/customer-view').isShowAddress();\n            }),\n\n            /* Hide Address*/\n            hideAddress: function () {\n                ViewManager.getSingleton('view/customer/customer-view').isShowAddress(false);\n            },\n\n            /* Hide Overlay*/\n            hideOverlay: function () {\n                $('.notification-bell').show();\n                $('#c-button--push-left').show();\n            },\n\n            /* Show Overlay*/\n            showOverlay: function () {\n                $('.wrap-backover').show();\n                $('.notification-bell').hide();\n                $('#c-button--push-left').hide();\n            },\n            \n            /* Show Create Form Or Not*/\n            showCreateForm: function () {\n                ViewManager.getSingleton('view/customer/customer-view').isShowCreateForm(true);\n                this.showOverlay();\n            },\n\n            /* Get Status Sync Or Not*/\n            getStatus: function (data) {\n                var customerId = data.id.toString();\n                if (customerId.indexOf('notsync') > -1) {\n                    return 'notsync';\n                } else {\n                    return 'sync';\n                }\n            },\n            \n            listenMenuShowContainerAfterEvent: function () {\n                var self = this;\n                eventManager.observer('customer_list_show_container_after', function (event, eventData) {\n                    self._render();\n                });\n            }            \n        });\n    }\n);\n","Magestore_Webpos/js/view/customer/customer-view.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'require',\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/layout',\n        'uiComponent',\n        'Magestore_Webpos/js/model/customer/customer-factory',\n        'Magestore_Webpos/js/model/customer/group-factory',        \n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/model/directory/country',\n        'Magestore_Webpos/js/model/customer/complain',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/action/checkout/select-customer-checkout',\n        'Magestore_Webpos/js/helper/staff',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'Magestore_Webpos/js/model/event-manager',\n        'mage/template',\n        'mage/translate',\n        'Magestore_Webpos/js/action/checkout/select-billing-address',\n        'Magestore_Webpos/js/action/checkout/select-shipping-address',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magento_Ui/js/modal/confirm',\n        'Magestore_Webpos/js/model/customer/current-customer',\n        'Magestore_Webpos/js/region-updater',\n        'mage/mage',\n        \"mage/validation\",\n        'Magestore_Webpos/js/bootstrap/bootstrap',\n        'Magestore_Webpos/js/bootstrap/bootstrap-switch',\n        'jquery/ui',\n        'jquery/validate',\n        'Magestore_Webpos/js/lib/jquery.toaster',\n        \n    ],\n    function (\n        require,\n        $,\n        ko,\n        ViewManager,\n        uiComponent,\n        CustomerFactory,\n        CustomerGroupFactory,\n        priceHelper,\n        countryModel,\n        complainModel,\n        eventManager,\n        selectCustomer,\n        staffHelper,\n        addNotification,\n        Event,\n        mageTemplate,\n        Translate,\n        selectBilling,\n        selectShipping,\n        datetimeHelper,\n\n        checkoutModel,\n        confirm\n    ) {\n        \"use strict\";\n        ko.bindingHandlers.bootstrapSwitchOnCustomer = {\n            init: function (element, valueAccessor, allBindingsAccessor, viewModel) {\n                $(element).iosCheckbox();\n                $(element).on(\"switchchange\", function (e) {\n                    valueAccessor()(e.target.checked);\n                });\n            }\n        };\n        return uiComponent.extend({\n            /* Binding Country and Group data*/\n            countryArray: window.webposConfig.country,\n            customerGroupArray: window.webposConfig.customerGroup,\n            /* End Binding*/\n\n            /* Binding Customer Data*/\n            customerData: ko.observableArray([]),\n            totalSale: ko.observable(0),\n            orderHistory: ko.observableArray([]),\n            refundHistory: ko.observableArray([]),\n            complainHistory: ko.observableArray([]),\n            addressArrayData: ko.observableArray([]),\n            orderArrayData: ko.observableArray([]),\n            refundArrayData: ko.observableArray([]),\n            customerComplainData: ko.observableArray([]),\n            /* End Binding*/\n\n            /* Binding show or hide*/\n            isShowAddress: ko.observable(false),\n            isEditInformation: ko.observable(false),\n            isShowCreateForm: ko.observable(false),\n            isShowShippingAddress: ko.observable(false),\n            isShowBillingAddress: ko.observable(false),\n            isShowComplainForm: ko.observable(false),\n            /* End Binding show or hide*/\n\n            /* Binding Label*/\n            addressLabel: ko.observable(Translate('New Address')),\n            /* End Binding Label*/\n\n            /* Binding Customer Information*/\n            currentFirstName: ko.observable(''),\n            currentLastName: ko.observable(''),\n            currentEmail: ko.observable(''),\n            currentGroupId: ko.observable(''),\n            notSync: ko.observable(false),\n            /* End binding*/\n\n            /* Binding billing address information in create customer form*/\n            isShowBillingSummaryForm: ko.observable(false),\n            firstNameBilling: ko.observable(''),\n            lastNameBilling: ko.observable(''),\n            companyBilling: ko.observable(''),\n            phoneBilling: ko.observable(''),\n            street1Billing: ko.observable(''),\n            street2Billing: ko.observable(''),\n            countryBilling: ko.observable(''),\n            regionBilling: ko.observable(''),\n            regionIdBilling: ko.observable(0),\n            cityBilling: ko.observable(''),\n            zipcodeBilling: ko.observable(''),\n            vatBilling: ko.observable(''),\n            regionObjectBilling: {},\n            regionIdComputedBilling: '',\n            billingAddressTitle: ko.observable(Translate('Add Billing Address')),\n            leftBillingButton: ko.observable(Translate('Cancel')),\n            /* End binding*/\n\n            /* Create Customer Form*/\n            firstNameCustomer: ko.observable(''),\n            lastNameCustomer: ko.observable(''),\n            emailCustomer: ko.observable(''),\n            groupCustomer: ko.observable(''),\n            vatCustomer: ko.observable(''),\n            isSubscriberCustomer: ko.observable(false),\n            /* End Form*/\n            /* Binding shipping address information in create customer form*/\n            isShowShippingSummaryForm: ko.observable(false),\n            firstNameShipping: ko.observable(''),\n            lastNameShipping: ko.observable(''),\n            companyShipping: ko.observable(''),\n            phoneShipping: ko.observable(''),\n            street1Shipping: ko.observable(''),\n            street2Shipping: ko.observable(''),\n            countryShipping: ko.observable(''),\n            regionShipping: ko.observable(''),\n            regionIdShipping: ko.observable(0),\n            cityShipping: ko.observable(''),\n            zipcodeShipping: ko.observable(''),\n            vatShipping: ko.observable(''),\n            isSameBillingShipping: ko.observable(true),\n            shippingAddressTitle: ko.observable(Translate('Add Shipping Address')),\n            leftShippingButton: ko.observable(Translate('Cancel')),\n            /* End binding*/\n\n            /* Binding address information in add new address form*/\n            firstName: ko.observable(''),\n            lastName: ko.observable(''),\n            company: ko.observable(''),\n            phone: ko.observable(''),\n            street1: ko.observable(''),\n            street2: ko.observable(''),\n            country: ko.observable(''),\n            region: ko.observable(''),\n            region_id: ko.observable(0),\n            city: ko.observable(''),\n            zipcode: ko.observable(''),\n            vatId: ko.observable(''),\n            /* End binding */\n\n            /* Region Updater*/\n            regionObjectShipping: {},\n            regionIdComputedShipping: '',\n            regionTemplate: '<option value=\"<%- data.value %>\" data-region-code=\"<%- data.code %>\" title=\"<%- data.title %>\" <% if (data.isSelected) { %>selected=\"selected\"<% } %>>' +\n            '<%- data.title %>' +\n            '</option>',\n            /* End region updater */\n\n            /* Binding Current Edit Address Id*/\n            currentEditAddressId: ko.observable(''),\n            /* End binding*/\n\n            /* Binding Customer Complain Content*/\n            customerComplainContent: ko.observable(''),\n            /* End binding*/\n\n            /* Declare the template*/\n            defaults: {\n                template: 'Magestore_Webpos/customer/customer-view',\n                addressTemplate: 'Magestore_Webpos/customer/add-address',\n                customerFormTemplate: 'Magestore_Webpos/customer/add-customer',\n                shippingAddressTemplate: 'Magestore_Webpos/customer/add-shipping-address',\n                billingAddressTemplate: 'Magestore_Webpos/customer/add-billing-address',\n                addComplainForm: 'Magestore_Webpos/customer/add-complain-form'\n            },\n            \n            /* set data for one customer*/\n            setData: function(data){\n                this.customerData(data);\n                this.currentFirstName(data.firstname);\n                this.currentLastName(data.lastname);\n                this.currentEmail(data.email);\n                this.currentGroupId(data.group_id);\n                var customerId = data.id.toString();\n                if (customerId.indexOf('notsync') > -1) {\n                    this.notSync(true);\n                } else {\n                    this.notSync(false);\n                }\n            },\n            /* set address data*/\n            setAddressData: function (data) {\n                this.addressArrayData(data);\n            },\n            /* set order data*/\n            setOrderData: function (data) {\n                this.orderHistory(data);\n            },\n            /* set refund data*/\n            setRefundData: function (data) {\n                this.refundHistory(data)\n            },\n            /* set total sale data*/\n            setTotalSale: function (data) {\n                this.totalSale(priceHelper.convertAndFormat(data));\n            },\n\n            /* set customer complain data*/\n            setCustomerComplain: function (data) {\n                this.customerComplainData(data);\n            },\n            /* format price*/\n            formatPrice: function (price) {\n                return priceHelper.convertAndFormat(price);\n            },\n            /* Delete Shipping Address in Customer Form*/\n            deleteShippingAddress: function () {\n                this.isShowShippingSummaryForm(false);\n                this.resetShippingAddressInfo();\n            },\n\n            /* Delete Billing Address in Customer Form*/\n            deleteBillingAddress: function () {\n                this.isShowBillingSummaryForm(false);\n                this.resetBillingAddressInfo();\n            },\n\n            /* Reset Form*/\n            resetShippingAddressInfo: function () {\n                this.isShowShippingSummaryForm(false);\n                this.isSameBillingShipping(true);\n                this.firstNameShipping('');\n                this.lastNameShipping('');\n                this.companyShipping('');\n                this.phoneShipping('');\n                this.street1Shipping('');\n                this.street2Shipping('');\n                this.countryShipping('');\n                this.regionShipping('');\n                this.regionIdShipping(0);\n                this.cityShipping('');\n                this.zipcodeShipping('');\n                this.vatShipping('');\n                this.shippingAddressTitle(Translate('Add Shipping Address'));\n                this.leftShippingButton(Translate('Cancel'));\n\n            },\n\n            /* Reset Form*/\n            resetBillingAddressInfo: function () {\n                this.isShowBillingSummaryForm(false);\n                this.firstNameBilling('');\n                this.lastNameBilling('');\n                this.companyBilling('');\n                this.phoneBilling('');\n                this.street1Billing('');\n                this.street2Billing('');\n                this.countryBilling('');\n                this.regionBilling('');\n                this.regionIdBilling(0);\n                this.cityBilling('');\n                this.zipcodeBilling('');\n                this.vatBilling('');\n                this.billingAddressTitle(Translate('Add Billing Address'));\n                this.leftBillingButton(Translate('Cancel'));\n            },\n\n            /* Show overlay*/\n            showOverlay: function () {\n                $('.wrap-backover').show();\n                $('.notification-bell').hide();\n                $('#c-button--push-left').hide();\n            },\n\n            /* Hide overlay*/\n            hideOverlay: function () {\n                $('.wrap-backover').hide();\n                $('.notification-bell').show();\n                $('#c-button--push-left').show();\n            },\n\n            /* Show add address form */\n            showForm: function (data) {\n                this.resetForm();\n                this.currentEditAddressId('');\n                this.showOverlay();\n                if (this.firstName() == '') {\n                    this.firstName(this.currentFirstName());\n                }\n                if (this.lastName() == '') {\n                    this.lastName(this.currentLastName());\n                }\n                this.isShowAddress(true);\n                this.addressLabel(Translate('New Address'));\n            },\n\n            /* Render select option for region id*/\n            _renderSelectOption: function (selectElement, key, value) {\n                selectElement.append($.proxy(function () {\n                    var name = value.name.replace(/[!\"#$%&'()*+,.\\/:;<=>?@[\\\\\\]^`{|}~]/g, '\\\\$&'),\n                        tmplData,\n                        tmpl;\n\n                    if (value.code && $(name).is('span')) {\n                        key = value.code;\n                        value.name = $(name).text();\n                    }\n\n                    tmplData = {\n                        value: key,\n                        title: value.name,\n                        isSelected: false,\n                        code: value.code\n                    };\n\n                    tmpl = this.regionTmpl({\n                        data: tmplData\n                    });\n\n                    return $(tmpl);\n                }, this));\n            },\n\n            /* Remove select option for region id*/\n            _removeSelectOptions: function (selectElement) {\n                selectElement.find('option').each(function (index) {\n                    if ($(this).val()) {\n                        $(this).remove();\n                    }\n                });\n            },\n\n            /**\n             * Check if the selected country has a mandatory region selection\n             *\n             * @param {String} country - Code of the country - 2 uppercase letter for country code\n             * @private\n             */\n            _checkRegionRequired: function (country) {\n                var self = this;\n                this.isRegionRequired = false;\n                var regionJson = JSON.parse(window.webposConfig.regionJson);\n\n                $.each(regionJson.config.regions_required, function (index, elem) {\n                    if (elem == country) {\n                        self.isRegionRequired = true;\n                    }\n                });\n            },\n            /* Show edit address form */\n            showEditForm: function (data) {\n                this.firstName(data.firstname);\n                this.lastName(data.lastname);\n                this.company(data.company);\n                this.phone(data.telephone);\n                this.street1(data.street[0]);\n                this.street2(data.street[1]);\n                this.country(data.country_id);\n                this.region(data.region.region);\n                this.region_id(data.region_id);\n                this.vatId(data.vat_id);\n                this.city(data.city);\n                this.zipcode(data.postcode);\n                this.currentEditAddressId(data.id);\n                this.addressLabel(Translate('Edit Address'));\n                this.showOverlay();\n                this.isShowAddress(true);\n\n                /* Region updater for show edit address popup*/\n                var addAddressForm = $('#form-customer-add-address');\n                var regionList = addAddressForm.find('#region_id');\n                var regionInput = addAddressForm.find('#region');\n                var requiredLabel = regionList.parents('.input-box');\n                var regionJson = JSON.parse(window.webposConfig.regionJson);\n\n                this._checkRegionRequired(data.country_id);\n                if (typeof regionJson[data.country_id] != 'undefined') {\n                    this.regionTmpl = mageTemplate(this.regionTemplate);\n                    this._removeSelectOptions(regionList);\n                    $.each(regionJson[data.country_id], $.proxy(function (key, value) {\n                        this._renderSelectOption(regionList, key, value);\n                    }, this));\n\n\n                    if (this.isRegionRequired) {\n                        regionList.addClass('required-entry').removeAttr('disabled');\n                        requiredLabel.addClass('required');\n                    } else {\n                        regionList.removeClass('required-entry validate-select').removeAttr('data-validate');\n\n                        requiredLabel.removeClass('required');\n                    }\n\n\n                    regionList.prop('disabled', false).show();\n                    regionList.val(data.region_id);\n                    regionInput.prop('disabled', true).hide();\n                } else {\n                    regionInput.val(data.region.region);\n                    regionList.prop('disabled', true).hide();\n                    regionInput.prop('disabled', false).show();\n                }\n                regionInput.removeAttr('disabled');\n                /* End region updater */\n            },\n\n            /* Show Edit Customer Information Form*/\n            showEdit: function () {\n                this.isEditInformation(true);\n            },\n            /* Hide Edit Customer Information Form*/\n            hideEdit: function () {\n                this.isEditInformation(false);\n                this.resetFormInfo('customer-edit-form');\n            },\n            /* Show Create Customer Form */\n            showCreateForm: function () {\n                this.isShowCreateForm(true);\n                this.showOverlay();\n            },\n\n            /* Save Customer Information When Edit*/\n            saveInformation: function () {\n                var self = this;\n                if (this.validateForm('#customer-edit-form')) {\n                    var customerData = this.customerData.call();\n                    customerData.firstname = this.currentFirstName();\n                    customerData.lastname = this.currentLastName();\n                    customerData.full_name = this.currentFirstName() + ' ' + this.currentLastName();\n                    customerData.email = this.currentEmail();\n                    customerData.group_id = this.currentGroupId();\n\n                    var deferred = CustomerFactory.get()\n                        .getCollection().addFieldToFilter('email', this.currentEmail(), 'eq')\n                        .addFieldToFilter('id', customerData.id, 'neq')\n                        .load();\n                    deferred.done(function (data) {\n                        var items = data.items;\n                        if (items.length > 0) {\n                            addNotification(Translate('The customer email is existed.'), true, 'danger', 'Error');\n                        } else {\n                            $.toaster(\n                                {\n                                    priority: 'success',\n                                    title: Translate('Success'),\n                                    message: Translate('The customer is saved successfully.')\n                                }\n                            );\n                            self.saveAndPushCustomerData(customerData);\n                            self.isEditInformation(false);\n                        }\n                    });\n                }\n            },\n\n            /* Hide Add Address Form*/\n            hideAddress: function () {\n                var form = '#form-customer-add-address';\n                $(form).validation();\n                $(form).validation('clearError');\n                this.isShowAddress(false);\n                this.hideOverlay();\n            },\n\n            /* Save Address*/\n            saveAddress: function () {\n                var self = this;\n                if (this.validateForm('#form-customer-add-address')) {\n                    var customerData = this.customerData();\n                    var newAddress = {};\n                    var currentAddress = this.customerData().addresses;\n                    newAddress.id = 'nsync' + Date.now();\n                    newAddress.customer_id = CustomerFactory.get().customerSelected();\n                    newAddress.firstname = self.firstName();\n                    newAddress.lastname = self.lastName();\n                    newAddress.street = [self.street1(), self.street2()];\n                    newAddress.company = self.company();\n                    newAddress.telephone = self.phone();\n                    newAddress.country_id = self.country();\n                    newAddress.city = self.city();\n                    newAddress.vat_id = self.vatId();\n\n                    if (newAddress instanceof Array && !newAddress.length) {\n                        newAddress.default_billing = 1;\n                        newAddress.default_shipping = 1;\n                        customerData.telephone = newAddress.telephone();\n                    }\n\n                    var regionListAddress = $('#form-customer-add-address').find('#region_id');\n\n                    if (regionListAddress.is(':visible')) {\n                        var selected = regionListAddress.find(\":selected\");\n                        var regionCode = selected.data('region-code');\n                        var region = selected.html();\n                        newAddress.region = {\n                            region_id: self.region_id(),\n                            region_code : regionCode,\n                            region : region\n                        };\n                        newAddress.region_id = self.region_id();\n                    } else {\n                        newAddress.region = {\n                            region_id: 0,\n                            region_code : self.region(),\n                            region : self.region()\n                        };\n                        newAddress.region_id = 0;\n                    }\n\n                    newAddress.postcode = self.zipcode();\n                    if (!self.currentEditAddressId()) {\n                        currentAddress.push(newAddress);\n                        customerData.addresses = currentAddress;\n\n                    } else {\n                        $.each(currentAddress, function (index, value) {\n                            if (value['id'] == self.currentEditAddressId()) {\n                                currentAddress[index] = newAddress;\n                            }\n                        })\n                    }\n                    self.isShowAddress(false);\n                    this.hideOverlay();\n                    $.toaster(\n                        {\n                            priority: 'success',\n                            title: Translate('Success'),\n                            message: Translate('The customer address is saved successfully.')\n                        }\n                    );\n                    self.saveAndPushCustomerData(customerData);\n                }\n            },\n            /* Reset Form*/\n            resetFormInfo: function (form) {\n                document.getElementById(form).reset();\n            },\n            /* Validation Form*/\n            validateForm: function (form) {\n                return $(form).validation() && $(form).validation('isValid');\n            },\n            /* Hide Create Customer Form*/\n            hideCreateCustomer: function () {\n                this.isShowCreateForm(false);\n                this.hideOverlay();\n                this.isShowShippingAddress(false);\n                this.isShowBillingAddress(false);\n                this.resetFormInfo('form-add-customer-customer');\n                this.resetBillingAddressInfo();\n                this.resetShippingAddressInfo();\n                this.isSubscriberCustomer(false);\n            },\n            /* Save Customer Form*/\n            saveCustomerForm: function () {\n                var self = this;\n                if (this.validateForm('#form-add-customer-customer')) {\n                    var customerData = {};\n                    customerData.id = 'notsync_'+ this.emailCustomer();\n                    customerData.addresses = this.getAddressData();\n                    customerData.firstname = this.firstNameCustomer();\n                    customerData.lastname = this.lastNameCustomer();\n                    customerData.full_name = this.firstNameCustomer() + this.lastNameCustomer();\n                    customerData.email = this.emailCustomer();\n                    customerData.subscriber_status = this.isSubscriberCustomer();\n                    customerData.group_id = this.groupCustomer();\n                    if (this.phoneBilling()) {\n                        customerData.telephone = this.phoneBilling();\n                    } else {\n                        customerData.telephone = 'N/A';\n                    }\n                    if (typeof customerData['columns'] != 'undefined') {\n                        delete customerData['columns'];\n                    }\n\n                    var deferred = CustomerFactory.get().getCollection().addFieldToFilter('email', this.emailCustomer(), 'eq')\n                        .load();\n                    deferred.done(function (data) {\n                        var items = data.items;\n                        if (items.length > 0) {\n                            addNotification(Translate('The customer email is existed.'), true, 'danger', 'Error');\n                        } else {\n                            $.toaster(\n                                {\n                                    priority: 'success',\n                                    title: Translate('Success'),\n                                    message: Translate('The customer is saved successfully.')\n                                }\n                            );\n                            self.saveAndPushCustomerData(customerData);\n                            self.isShowCreateForm(false);\n                            self.hideOverlay();\n                            self.resetFormInfo('form-add-customer-customer');\n                            self.isSubscriberCustomer(false);\n                        }\n                    });\n                }\n            },\n            /* Show Shipping Address Form*/\n            showShippingAddress: function () {\n                var self = this;\n                self.showShippingAddressControl();\n            },\n\n            /* Edit shipping address*/\n            editShippingAddress: function () {\n                var self = this;\n                self.showShippingAddressControl();\n                this.shippingAddressTitle(Translate('Edit Shipping Address'));\n                this.leftShippingButton(Translate('Delete'));\n            },\n\n            showShippingAddressControl: function () {\n                var shippingAddressForm = $('#form-customer-shipping-address');\n                var countryList = shippingAddressForm.find('#country_id');\n                var regionList = shippingAddressForm.find('#region_id');\n                var regionInput = shippingAddressForm.find('#region');\n                countryList.regionUpdater({\n                    regionList: regionList,\n                    regionInput: regionInput,\n                    regionJson: JSON.parse(window.webposConfig.regionJson)\n                });\n                if (this.firstNameShipping() == '') {\n                    this.firstNameShipping(this.firstNameCustomer());\n                }\n                if (this.lastNameShipping() == '') {\n                    this.lastNameShipping(this.lastNameCustomer());\n                }\n                this.shippingAddressTitle(Translate('Add Shipping Address'));\n                this.leftShippingButton(Translate('Cancel'));\n                this.isShowCreateForm(false);\n                this.isShowShippingAddress(true);\n            },\n            /* Show Billing Address Form*/\n            showBillingAddress: function () {\n                var self = this;\n                self.showBillingAddressControl();\n            },\n\n            /* Edit billing address*/\n            editBillingAddress: function () {\n                var self = this;\n                self.showBillingAddressControl();\n                this.billingAddressTitle(Translate('Edit Billing Address'));\n                this.leftBillingButton(Translate('Delete'));\n            },\n\n            showBillingAddressControl: function () {\n                var billingAddressForm = $('#form-customer-billing-address');\n                var countryList = billingAddressForm.find('#country_id');\n                var regionList = billingAddressForm.find('#region_id');\n                var regionInput = billingAddressForm.find('#region');\n                countryList.regionUpdater({\n                    regionList: regionList,\n                    regionInput: regionInput,\n                    regionJson: JSON.parse(window.webposConfig.regionJson)\n                });\n                this.isShowCreateForm(false);\n                if (this.firstNameBilling() == '') {\n                    this.firstNameBilling(this.firstNameCustomer());\n                }\n                if (this.lastNameBilling() == '') {\n                    this.lastNameBilling(this.lastNameCustomer());\n                }\n                this.billingAddressTitle(Translate('Add Billing Address'));\n                this.leftBillingButton(Translate('Cancel'));\n                this.isShowBillingAddress(true);\n            },\n\n            /* Hide Billing Address Form*/\n            hideBillingAddress: function () {\n                if (this.billingAddressTitle != Translate('Add Billing Address')) {\n                    this.resetBillingAddressInfo();\n                }\n                this.isShowCreateForm(true);\n                this.isShowBillingSummaryForm(false);\n                this.isShowBillingAddress(false);\n            },\n            /* Hide Shipping Address Form*/\n            hideShippingAddress: function () {\n                if (this.shippingAddressTitle != Translate('Add Shipping Address')) {\n                    this.resetShippingAddressInfo();\n                }\n                this.isShowCreateForm(true);\n                this.isShowShippingAddress(false);\n                this.isShowShippingSummaryForm(false);\n            },\n            /* Reset Form*/\n            resetForm: function() {\n                this.firstName('');\n                this.lastName('');\n                this.company('');\n                this.phone('');\n                this.street1('');\n                this.street2('');\n                this.country('');\n                this.region('');\n                this.region_id(0);\n                this.city('');\n                this.zipcode('');\n                this.vatId('');\n            },\n            /* Save Billing Address*/\n            saveBillingAddress: function () {\n                var self = this;\n                if (this.validateForm('#form-customer-billing-address')) {\n                    this.isSameBillingShipping(false);\n                    var regionIdBilling = $('#form-customer-billing-address').find('#region_id');\n                    if (regionIdBilling.is(':visible')) {\n                        var selected = regionIdBilling.find(\":selected\");\n                        var regionCode = selected.data('region-code');\n                        var region = selected.html();\n                        self.regionObjectBilling = {\n                            region_id: self.regionIdBilling(),\n                            region_code : regionCode,\n                            region : region\n                        };\n                        self.regionIdComputedBilling = self.regionIdBilling();\n                    } else {\n                        self.regionObjectBilling = {\n                            region_id: 0,\n                            region_code : self.regionBilling(),\n                            region : self.regionBilling()\n                        };\n                        self.regionIdComputedBilling = 0;\n                    }\n                    this.isShowBillingSummaryForm(true);\n                    this.isShowCreateForm(true);\n                    this.isShowBillingAddress(false);\n                    this.isSameBillingShipping(false);\n                    this.showOverlay();\n                }\n            },\n            /* Save Shipping Address*/\n            saveShippingAddress: function () {\n                var self = this;\n                if (this.validateForm('#form-customer-shipping-address')) {\n                    var regionIdShipping = $('#form-customer-shipping-address').find('#region_id');\n                    if (regionIdShipping.is(':visible')) {\n                        var selected = regionIdShipping.find(\":selected\");\n                        var regionCode = selected.data('region-code');\n                        var region = selected.html();\n                        self.regionObjectShipping = {\n                            region_id: self.regionIdShipping(),\n                            region_code : regionCode,\n                            region : region\n                        };\n                        self.regionIdComputedShipping = self.regionIdShipping();\n                    } else {\n                        self.regionObjectShipping = {\n                            region_id: 0,\n                            region_code : self.regionShipping(),\n                            region : self.regionShipping()\n                        };\n                        self.regionIdComputedShipping = 0;\n                    }\n                    this.isShowShippingSummaryForm(true);\n                    this.isShowCreateForm(true);\n                    this.isShowShippingAddress(false);\n\n                    if (this.isSameBillingShipping()) {\n                        this.firstNameBilling(this.firstNameShipping());\n                        this.lastNameBilling(this.lastNameShipping());\n                        this.companyBilling(this.companyShipping());\n                        this.phoneBilling(this.phoneShipping());\n                        this.street1Billing(this.street1Shipping());\n                        this.street2Billing(this.street2Shipping());\n                        this.countryBilling(this.countryShipping());\n                        this.regionBilling(this.regionShipping());\n                        this.regionIdBilling(this.regionIdShipping());\n                        this.cityBilling(this.cityShipping());\n                        this.zipcodeBilling(this.zipcodeShipping());\n                        this.vatBilling(this.vatShipping());\n                        this.isShowBillingSummaryForm(true);\n                    }\n                    this.showOverlay();\n                }\n            },\n\n            /* Get address data from form*/\n            getAddressData: function () {\n                var addressData = [];\n                var address;\n                if (this.isSameBillingShipping() && this.isShowShippingSummaryForm()) {\n                    address =  this.getShippingAddressData();\n                    address.default_billing = 1;\n                    address.default_shipping = 1;\n                    addressData.push(address);\n                } else {\n                    if (this.isShowBillingSummaryForm()) {\n                        address =  this.getBillingAddressData();\n                        address.default_billing = 1;\n                        addressData.push(address);\n                    }\n                    if (this.isShowShippingSummaryForm()) {\n                        address =  this.getShippingAddressData();\n                        address.default_shipping = 1;\n                        addressData.push(address);\n                    }\n                }\n                return addressData;\n            },\n            /* Get billing address data from form*/\n            getBillingAddressData: function () {\n                var data = {};\n                data.firstname = this.firstNameBilling();\n                data.lastname = this.lastNameBilling();\n                data.company = this.companyBilling();\n                data.telephone = this.phoneBilling();\n                data.street = [this.street1Billing(), this.street2Billing()];\n                data.country_id = this.countryBilling();\n                data.region_id = this.regionIdComputedBilling;\n                data.region = this.regionObjectBilling;\n                data.city = this.cityBilling();\n                data.postcode = this.zipcodeBilling();\n                data.vat_id = this.vatBilling();\n                data.default_shipping = false;\n                data.default_billing = true;\n                data.id = 'nsync' + Date.now();\n                return data;\n            },\n            /* Get shipping address data from form*/\n            getShippingAddressData: function () {\n                var data = {};\n                data.firstname = this.firstNameShipping();\n                data.lastname = this.lastNameShipping();\n                data.company = this.companyShipping();\n                data.telephone = this.phoneShipping();\n                data.street = [this.street1Shipping(), this.street2Shipping()];\n                data.country_id = this.countryShipping();\n                data.region_id = this.regionIdComputedShipping;\n                data.region = this.regionObjectShipping;\n                data.city = this.cityShipping();\n                data.postcode = this.zipcodeShipping();\n                data.vat_id = this.vatShipping();\n                data.default_shipping = true;\n                data.default_billing = false;\n                data.id = 'nsync' + Date.now();\n                return data;\n            },\n            /* show customer complain form*/\n            showComplainForm: function () {\n                this.isShowComplainForm(true);\n                this.showOverlay();\n            },\n            /* hide complain form*/\n            hideComplainForm: function () {\n                this.isShowComplainForm(false);\n                this.hideOverlay();\n                this.resetFormInfo('form-add-customer-complain');\n            },\n            /* save customer complain from form*/\n            saveComplainForm: function () {\n                var data = {};\n                var self = this;\n                if (this.validateForm('#form-add-customer-complain')) {\n                    data.customer_email = this.customerData().email;\n                    data.content = this.customerComplainContent();\n                    data.created_at = this.formatDate(new Date());\n                    if (typeof data['columns'] != 'undefined') {\n                        delete data['columns'];\n                    }\n                    var deferredOffline = complainModel().setMode('offline').setData(data).setPush(true).save();\n                    deferredOffline.done(function (data) {\n                        var deferred = complainModel().setMode('offline').getCollection()\n                            .addFieldToFilter('customer_email',  self.customerData().email, 'eq').load();\n                        deferred.done(function (collectionData) {\n                            self.customerComplainData(collectionData.items);\n                        });\n                        $.toaster(\n                            {\n                                priority: 'success',\n                                title: Translate('Success'),\n                                message: Translate('The customer\\'s complaint is saved successfully.')\n                            }\n                        );\n                    });\n                    this.hideComplainForm();\n                }\n            },\n            /* Use to checkout*/\n            useToCheckout: function () {\n                var viewManager = require('Magestore_Webpos/js/view/layout');\n                var currentCustomerId = CustomerFactory.get().customerSelected();\n                var deferred = CustomerFactory.get().load(String(currentCustomerId));\n                deferred.done(function (currentCustomerData) {\n                    selectCustomer(currentCustomerData);\n                    var addressData = currentCustomerData.addresses;\n                    var isSetBilling = false;\n                    var isSetShipping = false;\n                    $.each(addressData, function (index, value) {\n                        if (value.default_billing) {\n                            checkoutModel.saveBillingAddress(value);\n                            viewManager.getSingleton('view/checkout/customer/edit-customer').billingAddressId(value.id);\n                            viewManager.getSingleton('view/checkout/customer/edit-customer').setBillingPreviewData(value);\n                            viewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewBilling(true);\n                            isSetBilling = true;\n                        }\n                        if (value.default_shipping) {\n                            checkoutModel.saveShippingAddress(value);\n                            viewManager.getSingleton('view/checkout/customer/edit-customer').shippingAddressId(value.id);\n                            viewManager.getSingleton('view/checkout/customer/edit-customer').setShippingPreviewData(value);\n                            viewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewShipping(true);\n                            isSetShipping = true;\n                        }\n                    });\n                    if (!isSetBilling) {\n                        selectBilling(0);\n                        viewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewBilling(false);\n                    }\n\n                    if (!isSetShipping) {\n                        selectShipping(0);\n                        viewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewShipping(false);\n                    }\n\n                    $('#customer_list').click();\n                });\n            },\n            /* Delete Customer Address*/\n            deleteAddress: function (data) {\n                var self = this;\n                confirm({\n                    content: Translate('Do you want to delete address?'),\n                    actions: {\n                        confirm: function () {\n                            var currentAddress = this.customerData().addresses;\n                            var addressIndex = -1;\n                            $.each(currentAddress, function (index, value) {\n                                if (value.id == data.id) {\n                                    addressIndex = index;\n\n                                }\n                            });\n                            currentAddress.splice(addressIndex, 1);\n                            var customerData = this.customerData();\n                            customerData.addresses = currentAddress;\n                            self.saveAndPushCustomerData(customerData);\n                        },\n                        always: function (event) {\n                            event.stopImmediatePropagation();\n                        }\n                    }\n                });\n            },\n            /* Save and push customer data to server*/\n            saveAndPushCustomerData: function (customerData) {\n                var self = this;\n                if (typeof customerData['columns'] != 'undefined') {\n                    delete customerData['columns'];\n                }\n                var saveDeferred = CustomerFactory.get().setData(customerData).setPush(true).save();\n                saveDeferred.done(function (data) {\n                    var groupDeferred = CustomerGroupFactory.get().load(data.group_id);\n                    groupDeferred.done(function(response){\n                        if (response) {\n                            data.group_label = response.code;\n                        }\n                        self.customerData(data);\n                    });\n\n                    self.setAddressData(customerData.addresses);\n                    Event.dispatch('customer_pull_after',[]);\n                });\n            },\n            /* push customer complain to server*/\n            pushComplainToServer: function (data) {\n                var deferred = complainModel().setMode('online').setData(data).save();\n                deferred.done(function () {\n\n                });\n            },\n\n            /* Get life time title*/\n            getLifeTimeTitle: function () {\n                return Translate('Sales ') + '(' + window.webposConfig.order_sync_time + ') :';\n            },\n\n            /* Get order history title*/\n            getOrderHistoryTitle: function () {\n                return Translate('Order History In ') + window.webposConfig.order_sync_time;\n            },\n\n            /* Get refund history title*/\n            getRefundHistoryTitle: function () {\n                return Translate('Order Refund In ') + window.webposConfig.order_sync_time;\n            },\n\n            /* Get full date*/\n            getFullDate: function (dateString) {\n                return datetimeHelper.getFullDate(dateString);\n            },\n            /* Format Data*/\n            formatDate : function(dateTime){\n                return dateTime.getFullYear() + \"-\" + this.twoDigits(1 + dateTime.getMonth()) + \"-\" + this.twoDigits(dateTime.getDate()) + \" \" + this.twoDigits(dateTime.getHours()) + \":\" + this.twoDigits(dateTime.getMinutes()) + \":\" + this.twoDigits(dateTime.getSeconds());\n            },\n            /* Format Two Digits*/\n            twoDigits : function(n){\n                return n > 9 ? \"\" + n: \"0\" + n;\n            },\n\n            /* Resize address after render*/\n            resizeAddress: function () {\n                var allAddressDiv = $('#customer-edit-form').find('.info-address-edit');\n                var maxHeight = 0;\n                $.each(allAddressDiv, function (index, value) {\n                    if ($(value).height() >= maxHeight) {\n                        maxHeight = $(value).height();\n                    }\n                });\n                allAddressDiv.height(maxHeight);\n            },\n\n            viewOrderDetail: function (object) {\n                var orderIncrement = object.increment_id;\n                eventManager.dispatch('order_search_after', [orderIncrement]);\n                $('#orders_history').click();\n                $('#orders_history_container #search-header-order').val(orderIncrement);\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/customer/integration/store-credit.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n    \ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/customer/integration/abstract',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/integration/store-credit-factory',\n    ],\n    function ($,ko, Abstract, Helper, StoreCreditFactory) {\n        \"use strict\";\n        return Abstract.extend({\n            defaults: {\n                template: 'Magestore_Webpos/customer/integration/storecredit'\n            },\n            initialize: function () {\n                this._super();\n                this.model = StoreCreditFactory.get();\n                if(!this.addedData && Helper.isStoreCreditEnable()){\n                    this.initData();\n                }\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/customer/integration/reward-points.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\nrequire([\n    'Magestore_Webpos/js/model/checkout/integration/reward-points',\n    ]);\n    \ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/view/customer/integration/abstract',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/integration/reward-points-factory',\n    ],\n    function ($,ko, Abstract, Helper, RewardPointFactory) {\n        \"use strict\";\n        return Abstract.extend({\n            defaults: {\n                template: 'Magestore_Webpos/customer/integration/rewardpoints'\n            },\n            initialize: function () {\n                this._super();\n                this.model = RewardPointFactory.get();\n                if(!this.addedData && Helper.isRewardPointsEnable()){\n                    this.initData();\n                }\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/view/customer/integration/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/customer/customer-factory',\n        'Magestore_Webpos/js/view/abstract',\n        'Magestore_Webpos/js/helper/general',\n        \n    ],\n    function ($, ko, CustomerFactory, Abstract, Helper) {\n        \"use strict\";\n        return Abstract.extend({\n            defaults: {\n                template: ''\n            },\n            visible: ko.observable(false),\n            initialize: function () {\n                this._super();\n            },\n            initData: function(){\n                var self = this;\n                self.addedData = true;\n                self.balance = ko.pureComputed(function(){\n                    return self.convertAndFormatPrice(self.model.balance());\n                });\n                self.updatingBalance = self.model.updatingBalance;\n                self.visible = ko.pureComputed(function(){\n                    return (CustomerFactory.get().customerSelected())?true:false;\n                });\n                CustomerFactory.get().customerSelected.subscribe(function(customerId){\n                    self.updateStorageBalance(customerId);\n                });\n                Helper.observerEvent('customer_list_show_container_after', function(){\n                    if(self.visible()){\n                        self.updateStorageBalance(CustomerFactory.get().customerSelected());\n                    }\n                })\n            },\n            updateBalance: function(){\n                var customerId = CustomerFactory.get().customerSelected();\n                if(this.updatingBalance() == false && customerId){\n                    this.model.updateBalance(customerId);\n                }\n            },\n            updateStorageBalance: function(customerId){\n                this.model.loadStorageBalanceByCustomerId(customerId);\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/action/sales/order/shipment/create.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'ko',\n        'mage/translate',\n        'Magestore_Webpos/js/model/sales/order/shipment',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_Webpos/js/action/notification/add-notification'\n    ],\n    function($, ko, $t, shipment, eventmanager, alertHelper, notification) {\n        'use strict';\n        return {\n            isValid: false,\n            orderData: {},\n            submitArray: [],\n            submitData: {\n                \"entity\":{\n                    \"orderId\": 0,\n                    \"emailSent\": 0,\n                    \"items\": [],\n                    \"tracks\": [],\n                    \"comments\": []\n                }\n            },\n            items: {},\n            comment: {},\n            track: {},\n\n            execute: function(data, orderData, deferred, parent){\n                var self = this;\n                this.isValid = false;\n                this.orderData = orderData;\n                this.submitData = {\n                    \"entity\":{\n                        \"orderId\": this.orderData.entity_id,\n                        \"emailSent\": 0,\n                        \"items\": [],\n                        \"tracks\": [],\n                        \"comments\": []\n                    }\n                };\n                $.each(data, function(index, value){\n                    self.submitData = self.bindEmail(self.submitData,value);\n                    self.submitData = self.bindItem(self.submitData,value);\n                    self.submitData = self.bindTrack(self.submitData,value);\n                    self.submitData = self.bindComment(self.submitData,value);\n                });\n                if(!this.isValid){\n                    alertHelper({title:'Error', content: $t('Please choose an item to ship')});\n                    return;\n                }\n                notification($t('The shipment has been created successfully.'), true, 'success', $t('Success'));\n                parent.orderData(null);\n                parent.display(false);\n                if(this.submitData.entity.items.length>0){\n                    shipment().setPostData(this.submitData).setMode('online').save();\n                    this.saveOrderOffline(this.submitData);\n                }                \n            },\n\n            saveOrderOffline: function(submitData){\n                var self = this;\n                if(submitData.entity.items.length>0){\n                    $.each(self.orderData.items, function(orderItemIndex, orderItemValue){\n                        $.each(submitData.entity.items, function(index, value){\n                            if(value.orderItemId == orderItemValue.item_id){\n                                orderItemValue.qty_shipped += value.qty;\n                            }\n                            if(value.orderItemId == orderItemValue.parent_item_id){\n                                orderItemValue.qty_shipped += value.qty;\n                            }\n                        });\n                    });\n                }\n                eventmanager.dispatch('sales_order_shipment_afterSave', {'response': this.orderData});\n            },\n\n            bindEmail: function(data, item){\n                if(item.name.search('send_email')===0 && parseFloat(item.value)>0){\n                    data.entity.emailSent = 1;\n                }\n                return data;\n            },\n\n            bindItem: function(data, item){\n                if(item.name.search('items')===0 && parseFloat(item.value)>0){\n                    this.isValid = true;\n                    this.item = {};\n                    item.name = item.name.replace(\"items[\", \"\");\n                    item.name = item.name.replace(\"]\", \"\");\n                    this.item.orderItemId = parseInt(item.name);\n                    this.item.qty = parseFloat(item.value);\n                    data.entity.items.push(this.item);\n                }\n                return data;\n            },\n\n            bindTrack: function(data, item){\n                if(item.name.search('tracking')===0 && item.value!=''){\n                    this.track = {};\n                    this.track.trackNumber = item.value;\n                    data.entity.tracks.push(this.track);\n                }\n                return data;\n            },\n\n            bindComment: function(data, item){\n                if(item.name.search('comment_text')===0 && item.value){\n                    this.comment.comment = item.value;\n                    data.entity.comments.push(this.comment);\n                }\n                return data;\n            },\n        }\n    }\n);\n","Magestore_Webpos/js/action/sales/order/invoice/create.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'ko',\n        'mage/translate',\n        'Magestore_Webpos/js/model/sales/order/invoice',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_Webpos/js/action/notification/add-notification'\n    ],\n    function($, ko, $t, invoice,  eventmanager, alertHelper, notification) {\n        'use strict';\n        return {\n            isValid: false, \n            submitArray: [],\n            submitData: {},\n            orderData: {},\n            items: {},\n            comment: {},\n            paymentList: ko.observableArray([]),\n            payment: {'method_data': []},\n            payment_data: {},\n            \n            execute: function(data, orderData, deferred, parent){\n                var self = this;\n                this.isValid = false;\n                this.orderData = orderData;\n                this.payment = {'method_data': []};\n                this.submitData = {\n                    'entity': {\n                        'baseCurrencyCode': window.webposConfig.baseCurrencyCode,\n                        'totalQty': 0,\n                        'subtotal': 0,\n                        'baseSubtotal': 0,\n                        'taxAmount': 0,\n                        'baseTaxAmount': 0,\n                        'subtotalInclTax': 0,\n                        'baseSubtotalInclTax': 0,\n                        'discountAmount': 0,\n                        'baseDiscountAmount': 0,\n                        'shippingAmount': 0,\n                        'baseShippingAmount': 0,\n                        'shippingInclTax': 0,\n                        'baseShippingInclTax': 0,\n                        'shippingTaxAmount': 0,\n                        'baseShippingTaxAmount': 0,\n                        'grandTotal': 0,\n                        'baseGrandTotal': 0,\n                        'baseToGlobalRate': this.orderData.base_to_global_rate,\n                        'baseToOrderRate': this.orderData.base_to_order_rate,\n                        'billingAddressId': this.orderData.billing_address_id,\n                        'createdAt': new Date().toISOString(),\n                        'globalCurrencyCode': this.orderData.global_currency_code,\n                        'orderCurrencyCode': this.orderData.order_currency_code,\n                        'orderId': this.orderData.entity_id,\n                        'shippingAddressId': this.orderData.billing_address_id,\n                        'state': 2,\n                        'storeCurrencyCode': window.webposConfig.currentCurrencyCode,\n                        'storeId': this.orderData.store_id,\n                        'storeToBaseRate': this.orderData.store_to_base_rate,\n                        'storeToOrderRate': this.orderData.store_to_order_rate,\n                        'updatedAt': new Date().toISOString(),\n                        'items': [],\n                        'comments': [],\n                        'extensionAttributes': {}\n                    }\n                };\n                if(!this.orderData.base_shipping_invoiced || this.orderData.base_shipping_amount - this.orderData.base_shipping_invoiced){\n                    this.submitData.entity.shippingAmount = this.orderData.shipping_amount;\n                    this.submitData.entity.baseShippingAmount = this.orderData.base_shipping_amount;\n                    this.submitData.entity.shippingInclTax = this.orderData.shipping_incl_tax;\n                    this.submitData.entity.baseShippingInclTax = this.orderData.base_shipping_incl_tax;\n                    this.submitData.entity.shippingTaxAmount = this.orderData.shipping_tax_amount;\n                    this.submitData.entity.baseShippingTaxAmount = this.orderData.base_shipping_tax_amount;\n                }\n                this.processParams(data);\n                this.submitData.entity.grandTotal = parseFloat(\n                    this.submitData.entity.grandTotal+\n                    this.submitData.entity.subtotal+\n                    this.submitData.entity.taxAmount+\n                    this.submitData.entity.shippingAmount+\n                    this.submitData.entity.discountAmount\n                );\n                this.submitData.entity.baseGrandTotal = parseFloat(\n                    this.submitData.entity.baseGrandTotal+\n                    this.submitData.entity.baseSubtotal+\n                    this.submitData.entity.baseTaxAmount+\n                    this.submitData.entity.baseShippingAmount+\n                    this.submitData.entity.baseDiscountAmount\n                );\n                if(this.payment.method_data.length>0){\n                    this.submitData.payment = {\n                        'method': this.orderData.payment.method,\n                        'method_data': this.payment.method_data\n                    }\n                }\n                if(!this.isValid){\n                    alertHelper({title:'Error', content: $t('Please choose an item to invoice!')});\n                    return;\n                }\n                notification($t('The invoice has been created successfully.'), true, 'success', 'Success');\n                parent.orderData(null);\n                parent.display(false);\n                invoice().setPostData(this.submitData).setMode('online').save();\n                this.saveOrderOffline(this.submitData);\n            },\n\n            saveOrderOffline: function(submitData){\n                var self = this;\n                if(submitData.entity.items.length>0){\n                    $.each(self.orderData.items, function(orderItemIndex, orderItemValue){\n                        $.each(submitData.entity.items, function(index, value){\n                            if(value.orderItemId == orderItemValue.item_id){\n                                orderItemValue.qty_invoiced += value.qty;\n                            }\n                            if(value.orderItemId == orderItemValue.parent_item_id){\n                                orderItemValue.qty_invoiced += value.qty;\n                            }\n                        });\n                    });\n                }\n                eventmanager.dispatch('sales_order_invoice_afterSave', {'response': this.orderData});\n            },\n\n            processParams: function(data){\n                var self = this;\n                $.each(data, function(index, value){\n                    self.submitData = self.bindItem(self.submitData,value);\n                    self.submitData = self.bindComment(self.submitData,value);\n                    self.submitData = self.bindPayment(self.submitData,value);\n                    self.submitData = self.bindAmount(self.submitData,value);\n                    self.submitData = self.bindSendmail(self.submitData,value);\n                });\n            },\n\n            bindItem: function(data, item){\n                var self = this;\n                if(item.name.search('items')===0){\n                    if(parseFloat(item.value) > 0)\n                        this.isValid = true;\n                    item.name = item.name.replace(\"items[\", \"\");\n                    item.name = item.name.replace(\"]\", \"\");\n                    $.each(this.orderData.items, function(index,value){\n                        if(parseInt(item.name) == parseInt(value.item_id)){\n                            self.item = {};\n                            self.item.orderItemId = parseInt(item.name);\n                            self.item.qty = parseFloat(item.value);\n                            data.entity.totalQty += self.item.qty;\n                            self.item.productId = parseFloat(value.product_id);\n                            self.item.name = value.name;\n                            self.item.sku = value.sku;\n                            self.item.price = parseFloat(value.price);\n                            self.item.basePrice = parseFloat(value.base_price);\n                            self.item.rowTotal = parseFloat(self.item.price*self.item.qty);\n                            data.entity.subtotal += parseFloat(self.item.rowTotal);\n                            self.item.baseRowTotal = parseFloat(self.item.basePrice*self.item.qty);\n                            data.entity.baseSubtotal += parseFloat(self.item.baseRowTotal);\n                            self.item.taxAmount = parseFloat(value.tax_amount);\n                            data.entity.taxAmount += parseFloat(self.item.taxAmount);\n                            data.entity.subtotalInclTax += parseFloat(self.item.rowTotal+self.item.taxAmount);\n                            self.item.baseTaxAmount = parseFloat(value.base_tax_amount);\n                            data.entity.baseTaxAmount += parseFloat(self.item.baseTaxAmount);\n                            data.entity.baseSubtotalInclTax += parseFloat(self.item.baseRowTotal+self.item.baseTaxAmount);\n                            self.item.discountAmount = parseFloat(value.discount_amount/value.qty_ordered*self.item.qty);\n                            data.entity.discountAmount -= parseFloat(self.item.discountAmount);\n                            self.item.baseDiscountAmount = parseFloat(value.base_discount_amount/value.qty_ordered*self.item.qty);\n                            data.entity.baseDiscountAmount -= parseFloat(self.item.baseDiscountAmount);\n                            self.item.priceInclTax = parseFloat(self.item.price+self.item.taxAmount);\n                            self.item.basePriceInclTax = parseFloat(self.item.basePrice+self.item.baseTaxAmount);\n                            self.item.rowTotalInclTax = parseFloat(self.item.priceInclTax*self.item.qty);\n                            self.item.baseRowTotalInclTax = parseFloat(self.item.basePriceInclTax*self.item.qty);\n                            data.entity.items.push(self.item);\n                        }\n                        // if(parseInt(value.parent_item_id) && parseInt(item.name) == parseInt(value.parent_item_id)){\n                        //     self.item = {};\n                        //     self.item.orderItemId = parseFloat(value.item_id);\n                        //     self.item.qty = parseFloat(item.value);\n                        //     data.entity.totalQty += self.item.qty;\n                        //     self.item.productId = parseFloat(value.product_id);\n                        //     data.entity.items.push(self.item);\n                        // }\n                    })\n                }\n                return data;\n            },\n\n            bindComment: function(data, item){\n                if(item.name.search('comment_text')===0 && item.value!=''){\n                    this.comment.comment = item.value;\n                    this.comment.createdAt =  new Date().toISOString();\n                    this.comment.isVisibleOnFront =  1;\n                    data.entity.comments.push(this.comment);\n                }\n                return data;\n            },\n\n            bindPayment: function(data, item){\n                if(item.name.search('payment_method')===0 && item.value!='0'){\n                    this.payment_data.code = item.value;\n                    var method = _.select(this.paymentList(), function (obj) {\n                        return obj.value === item.value;\n                    });\n                    this.payment_data.title = method[0].label;\n                    this.payment.method_data.push(this.payment_data);\n                }\n                return data;\n            },\n\n            bindAmount: function(data, item){\n                if(item.name.search('invoice_amount')===0 && parseFloat(item.value)>0){\n                    this.isValid = true;\n                    data.invoiceAmount = item.value;\n                }\n                return data;\n            },\n\n            bindSendmail: function(data, item){\n                if(item.name.search('send_email')===0 && parseFloat(item.value)>0){\n                    data.entity.emailSent = item.value;\n                }\n                return data;\n            },\n        }\n    }\n);\n","Magestore_Webpos/js/action/sales/order/payment/create.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'ko',\n        'mage/translate',\n        'Magestore_Webpos/js/model/sales/order/payment',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/action/notification/add-notification'\n    ],\n    function($, ko, $t, Payment, eventmanager, alertHelper, PriceHelper, notification) {\n        'use strict';\n        return {\n            isValid: false,\n            orderData: {},\n            submitData: {\n                \"payment\":{\n                    \"method_data\":[]\n                }\n            },\n\n            execute: function(datas, orderData, deferred, parent){\n                var self = this;\n                this.orderData = orderData;\n                this.isValid = false;\n                if(datas.length>0)\n                    this.isValid = true;\n                if(!this.isValid){\n                    alertHelper({title:'Error', content: $t('Please select a payment method!')});\n                    return;\n                }\n                var paymentsData = [];\n                $.each(datas,function(){\n                    var data = {};\n                    data.code = this.code;\n                    data.title = this.title;\n                    data.base_amount = PriceHelper.correctPrice(this.base_cart_total);\n                    data.amount = this.cart_total;\n                    if(orderData.base_grand_total > this.base_paid_amount) {\n                        data.base_real_amount = PriceHelper.correctPrice(this.base_paid_amount);\n                        data.real_amount = this.paid_amount;\n                    }else{\n                        data.real_amount = orderData.grand_total;\n                        data.base_real_amount = orderData.base_grand_total;\n                    }\n                    data.reference_number = this.reference_number;\n                    data.is_pay_later = this.is_pay_later;\n                    data.shift_id = window.webposConfig.shiftId?window.webposConfig.shiftId:'';\n                    paymentsData.push(data);\n                });\n                this.submitData = {\n                    \"payment\":{\n                        \"method_data\": paymentsData\n                    },\n                    \"order_increment_id\": orderData.increment_id\n                };\n                if(this.submitData.payment.method_data.length>0){\n                    parent.display(false);\n                    notification($t('Create payment successfully!'), true, 'success', $t('Success'));\n                    this.saveOrderOffline(this.submitData);\n                    Payment().setData(this.orderData).setPostData(this.submitData).setMode('online').save();\n                }                \n            },\n\n            saveOrderOffline: function(submitData){\n                var self = this;\n                if(this.submitData.payment.method_data.length>0){\n                    if(!this.orderData.webpos_order_payments)\n                        this.orderData.webpos_order_payments = [];\n                    $.each(this.submitData.payment.method_data, function(index, value){\n                        self.orderData.webpos_order_payments.push({\n                            base_payment_amount: value.base_amount,\n                            method: value.code,\n                            method_title: value.title,\n                            payment_amount: value.amount,\n                            base_display_amount: value.base_real_amount,\n                            display_amount: value.real_amount,\n                        });\n                        self.orderData.base_total_paid+=value.base_amount;\n                        var amount = PriceHelper.currencyConvert(\n                            value.base_amount,\n                            self.orderData.base_currency_code,\n                            self.orderData.order_currency_code\n                        );\n                        self.orderData.total_paid+=amount;\n                        \n                        self.orderData.base_total_due-=value.base_amount;\n                        self.orderData.total_due-=amount;\n                    });\n                    if(self.orderData.base_total_paid-self.orderData.base_grand_total>0.01){\n                        self.orderData.webpos_base_change=self.orderData.base_total_paid-self.orderData.base_grand_total;\n                        self.orderData.webpos_change=self.orderData.total_paid-self.orderData.grand_total;\n                    }\n                }\n                eventmanager.dispatch('sales_order_take_payment_beforeSave', {'response': this.submitData});\n                eventmanager.dispatch('sales_order_afterSave', {'response': this.orderData});\n            },\n        }\n    }\n);\n","Magestore_Webpos/js/action/sales/order/creditmemo/create.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/sales/order/creditmemo',\n        'Magestore_Webpos/js/model/catalog/product',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function($, ko, creditmemo, ProductModel, alertHelper, notification, Helper) {\n        'use strict';\n        return {\n            submitArray: [],\n            submitData: {\n                \"entity\": {\n                    \"orderId\": 0,\n                    \"adjustmentNegative\": 0,\n                    \"adjustmentPositive\": 0,\n                    \"emailSent\": 0,\n                    \"shippingAmount\": 0,\n                    \"items\": [],\n                    \"comments\": []\n                }\n            },\n            orderData: {},\n            item: {},\n            comment: {},\n            isExist: false,\n            \n            execute: function(data, orderData, deferred, parent){\n                var self = this;\n                this.orderData = orderData;\n                var canRefund = false;\n                var allQty = false;\n                this.submitData = {\n                    \"entity\": {\n                        \"orderId\": this.orderData.entity_id,\n                        \"adjustmentPositive\": 0,\n                        \"adjustmentNegative\": 0,\n                        \"emailSent\": 0,\n                        \"shippingAmount\": 0,\n                        'baseCurrencyCode': window.webposConfig.baseCurrencyCode,\n                        'storeCurrencyCode': window.webposConfig.currentCurrencyCode,\n                        \"items\": [],\n                        \"comments\": []\n                    }\n                };\n                $.each(data, function(index, value){\n                    self.submitData = self.bindItem(self.submitData,value);\n                    self.submitData = self.bindComment(self.submitData,value);\n                    self.submitData = self.bindAdditionalData(self.submitData,value);\n\n                    if(value.name == 'refund_cash' && value.value == '1'){\n                        self.submitData.entity.refund_by_cash = 1;\n                    }\n                });\n                $.each(this.submitData.entity.items, function (index, value) {\n                    if (value.qty > 0){\n                        allQty = true;\n                    }\n                });\n\n                if (this.submitData.entity.adjustmentNegative > 0 || this.submitData.entity.adjustmentPositive > 0\n                    || allQty == true || this.submitData.entity.shippingAmount > 0) {\n                    canRefund = true;\n                }\n\n                if (this.submitData.entity.adjustmentNegative > 0 && this.submitData.entity.adjustmentPositive <= 0 && allQty == false) {\n                    alertHelper({\n                        priority: \"danger\", title:Helper.__('Error'),\n                        message: Helper.__('The credit memo\\'s total must be positive.')});\n                    return;\n                }\n\n                if ( this.submitData.entity.shippingAmount > this.orderData.shipping_amount ) {\n                    var shippingRefund = parseFloat(this.orderData.base_shipping_refunded)?parseFloat(this.orderData.base_shipping_refunded):0;\n                    alertHelper({\n                        priority: \"danger\",\n                        title:'Error',\n                        message: Helper.__('The refundable shipping amount is limited at %1').replace('%1',\n                            parseFloat(this.orderData.shipping_amount - shippingRefund))});\n                    return;\n                }\n\n                if (canRefund == false) {\n                    alertHelper({\n                        priority: \"danger\",\n                        title: \"Error\",\n                        message: (\"Data Refund Invalid!\")\n                    });\n                    return;\n                }\n\n                $.each(data, function(index, value) {\n                    if (value.name == 'adjustment_positive' || value.name == 'adjustment_negative'\n                        ||  value.name == 'shipping_amount' || value.name == 'tax_amount') {\n                        value.value = Helper.toBasePrice(value.value);\n                    }\n                    self.submitData = self.bindItem(self.submitData,value);\n                    self.submitData = self.bindComment(self.submitData,value);\n                    self.submitData = self.bindAdditionalData(self.submitData,value);\n                });\n               // if(this.submitData.entity.items.length > 0){\n                var resultSaveOffline = this.saveOrderOffline(this.submitData);\n                    if(resultSaveOffline!=2){\n                        var html = '';\n                        if(resultSaveOffline==0)\n                            html = Helper.__('The credit memo\\'s total must be positive.');\n                        else\n                            html = Helper.__('The refundable amount is limited at %1')\n                            .replace('%1', Helper.convertAndFormatPrice(\n                                    ((this.orderData.base_total_paid?this.orderData.base_total_paid:0)-\n                                    (this.orderData.webpos_base_change?this.orderData.webpos_base_change:0))-\n                                    (this.orderData.base_total_refunded?this.orderData.base_total_refunded:0)\n                                ),\n                                window.webposConfig.currentCurrencyCode,\n                                this.orderData.base_currency_code);\n                        alertHelper({title:'Error', content: html});\n                        return false;\n                    }\n                    notification(Helper.__('A creditmemo has been created!'), true, 'success', Helper.__('Success'));\n                    parent.orderData(null);\n                    parent.display(false);\n                    //Helper.dispatchEvent('sales_order_creditmemo_afterSave', {'response': this.orderData});\n                    Helper.dispatchEvent('order_refund_after', {'response': this.orderData});\n                    creditmemo().setPostData(this.submitData).setMode('online').save(deferred);\n                    this.returnStock(this.submitData);\n               // }\n            },\n\n            saveOrderOffline: function(submitData){\n                var self = this;\n                var subtotal = 0;\n                var totalDiscount = 0;\n                if(submitData.entity.items.length>0){\n                    $.each(self.orderData.items, function(orderItemIndex, orderItemValue){\n                        $.each(submitData.entity.items, function(index, value){\n                            if(value.orderItemId == orderItemValue.item_id){\n                                var baseRowTotal = orderItemValue.base_row_invoiced - orderItemValue.base_amount_refunded;\n                                subtotal += (baseRowTotal / (orderItemValue.qty_invoiced - orderItemValue.qty_refunded) * value.qty)\n                                    + orderItemValue.base_tax_amount/orderItemValue.qty_invoiced*value.qty;\n                                var baseDiscount = orderItemValue.base_discount_invoiced -\n                                    (orderItemValue.base_discount_refunded?orderItemValue.base_discount_refunded:0);\n                                totalDiscount += (baseDiscount/\n                                (orderItemValue.qty_invoiced-orderItemValue.qty_refunded)*value.qty);\n                                orderItemValue.qty_refunded += value.qty;\n                            }\n                            if(value.orderItemId == orderItemValue.parent_item_id){\n                                orderItemValue.qty_refunded += value.qty;\n                            }\n                        });\n                        if(Helper.isRewardPointsEnable() && orderItemValue.rewardpoints_base_discount > 0){\n                            totalDiscount += parseFloat(orderItemValue.rewardpoints_base_discount);\n                        }\n                        if(Helper.isGiftCardEnable() && orderItemValue.base_gift_voucher_discount > 0){\n                            totalDiscount += parseFloat(orderItemValue.base_gift_voucher_discount);\n                        }\n                    });\n                }\n                var grandTotal = subtotal - totalDiscount + this.submitData.entity.adjustmentPositive +\n                    this.submitData.entity.shippingAmount - this.submitData.entity.adjustmentNegative;\n                var refundedAmount = grandTotal+(this.orderData.base_total_refunded?this.orderData.base_total_refunded:0);\n                var maxRefundAmount = (this.orderData.base_total_paid?this.orderData.base_total_paid:0)-\n                    (this.orderData.webpos_base_change?this.orderData.webpos_base_change:0);\n\n                refundedAmount = parseFloat(refundedAmount.toFixed(2));\n                maxRefundAmount = parseFloat(maxRefundAmount.toFixed(2));\n                if( (refundedAmount - maxRefundAmount > 0.01)){\n                    if(submitData.entity.items.length>0){\n                        $.each(self.orderData.items, function(orderItemIndex, orderItemValue){\n                            $.each(submitData.entity.items, function(index, value){\n                                if(value.orderItemId == orderItemValue.item_id){\n                                    orderItemValue.qty_refunded -= value.qty;\n                                }\n                                if(value.orderItemId == orderItemValue.parent_item_id){\n                                    orderItemValue.qty_refunded -= value.qty;\n                                }\n                            });\n                        });\n                    }\n                    return 1;\n                }\n                this.orderData.base_total_refunded=this.orderData.base_total_refunded?\n                    this.orderData.base_total_refunded+grandTotal:grandTotal;\n                return 2;\n            },\n            \n            returnStock: function(submitData){\n                var self = this;\n                $.each(submitData.entity.items, function(index, value){\n                    if(value.additionalData && value.additionalData.search('back_to_stock')!=-1){\n                        $.each(self.orderData.items, function(orderItemIndex, orderItemValue){\n                            if(value.orderItemId == orderItemValue.item_id)\n                                ProductModel().updateStock(value.qty, orderItemValue.product_id);\n                            if(value.orderItemId == orderItemValue.parent_item_id)\n                                ProductModel().updateStock(value.qty, orderItemValue.product_id);\n                        })\n                    }\n                });\n                \n            },\n\n            bindItem: function(data, item){\n                var self = this;\n                this.item = {};\n                item.name = item.name.replace(\"items[\", \"\");\n                if(item.name.search('\\\\[qty\\\\]')!==-1){\n                    item.name = item.name.replace(\"][qty]\", \"\");\n                    $.each(data.entity.items, function(index, value){\n                        if(value.orderItemId == item.name){\n                            value.qty = parseFloat(item.value);\n                            self.isExist = true;\n                        }\n                    });\n                    if(!this.isExist){\n                        this.item.orderItemId = parseInt(item.name);\n                        this.item.qty = parseFloat(item.value);\n                        data.entity.items.push(this.item);\n                    }\n                }\n\n                if(item.name.search('\\\\[back_to_stock\\\\]')!==-1){\n                    item.name = item.name.replace(\"][back_to_stock]\", \"\");\n                    $.each(data.entity.items, function(index, value){\n                        if(value.orderItemId == item.name){\n                            value.additionalData = 'back_to_stock';\n                            self.isExist = true;\n                        }\n                    });\n                    if(!this.isExist) {\n                        this.item.orderItemId = parseInt(item.name);\n                        this.item.additionalData = 'back_to_stock';\n                        data.entity.items.push(this.item);\n                    }\n                }\n                this.isExist = false;\n                return data;\n            },\n\n            bindComment: function(data, item){\n                if(item.name.search('comment_text')===0 && item.value){\n                    this.comment.comment = item.value;\n                    data.entity.comments.push(this.comment);\n                }\n                return data;\n            },\n\n            bindAdditionalData: function(data, item){\n                var value = parseFloat(item.value)>0?parseFloat(item.value):0\n                switch (item.name){\n                    case 'adjustment_positive':\n                        data.entity.adjustmentPositive = value;\n                        break;\n                    case 'shipping_amount':\n                        data.entity.shippingAmount = value;\n                        break;\n                    case 'adjustment_negative':\n                        data.entity.adjustmentNegative = value;\n                        break;\n                    case 'send_email':\n                        data.entity.emailSent = value;\n                        break;\n                }\n                return data;\n            }\n        }\n    }\n);\n","Magestore_Webpos/js/action/checkout/select-shipping-address.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/customer/current-customer'\n    ],\n    function(\n        $,\n        checkoutModel,\n        currentCustomer\n    ) {\n        'use strict';\n        return function (addressId) {\n            var customerData = currentCustomer.getData();\n            var allAddress = customerData().addresses;\n            if (addressId!=0) {\n                var shippingAddress = {};\n                $.each(allAddress, function (index, value) {\n                    if (typeof (value.id) != 'undefined' && value.id == addressId) {\n                        shippingAddress = allAddress[index];\n                    }\n                });\n                checkoutModel.saveShippingAddress(shippingAddress);\n            } else {\n                if (customerData().id) {\n                    checkoutModel.saveShippingAddress({\n                        'id' : 0,\n                        'firstname': customerData().firstname,\n                        'lastname': customerData().lastname\n                    });\n                } else {\n                    checkoutModel.saveShippingAddress({\n                        'id' : 0,\n                        'firstname': window.webposConfig['webpos/guest_checkout/first_name'],\n                        'lastname': window.webposConfig['webpos/guest_checkout/last_name']\n                    });\n                }\n            }\n        }\n    }\n);\n","Magestore_Webpos/js/action/checkout/select-customer-checkout.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'require',\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/customer/current-customer',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/customer/customer-factory',\n        'Magestore_Webpos/js/action/checkout/select-billing-address',\n        'Magestore_Webpos/js/action/checkout/select-shipping-address'\n    ],\n    function(\n        require,\n        $,\n        ko,\n        currentCustomer,\n        CartModel,\n        CheckoutModel,\n        eventManager,\n        ViewManager,\n        CustomerFactory,\n        selectBilling,\n        selectShipping\n    ) {\n        'use strict';\n        var SelectCustomer = function (data) {\n            var viewManager = require('Magestore_Webpos/js/view/layout');\n            var editCustomer = viewManager.getSingleton('view/checkout/customer/edit-customer');\n            currentCustomer.setCustomerId(data.id);\n            currentCustomer.setCustomerEmail(data.email);\n            currentCustomer.setFullName(data.full_name);\n            editCustomer.loadData(data);\n            currentCustomer.setData(data);\n            editCustomer.showBillingPreview();\n            editCustomer.showShippingPreview();\n            CartModel.addCustomer(getCustomerData(data));\n\n            var addressData = data.addresses;\n            var isSetBilling = false;\n            var isSetShipping = false;\n            if(addressData && addressData.length > 0) {\n                $.each(addressData, function (index, value) {\n                    if (value.default_billing) {\n                        CheckoutModel.saveBillingAddress(value);\n                        isSetBilling = true;\n                    }\n                    if (value.default_shipping) {\n                        CheckoutModel.saveShippingAddress(value);\n                        isSetShipping = true;\n                    }\n                });\n            }\n            if (!isSetBilling) {\n                selectBilling(0);\n            }\n\n            if (!isSetShipping) {\n                selectShipping(0);\n            }\n\n            /* fire select_customer_after event*/\n            var eventData = {'customer' : data};\n            eventManager.dispatch('checkout_select_customer_after', eventData);\n        }\n        \n        function getCustomerData(object){\n            var keys = [\"id\",\"email\",\"firstname\",\"lastname\",\"full_name\",\"group_id\", \"telephone\"];\n            var data = {};\n            ko.utils.arrayForEach(keys, function(key) {\n                data[key] = (typeof object[key] != \"undefined\")?object[key]:\"\";\n            });\n            return data;\n        }\n\n        var selectedCustomer = false;\n        var customerData = CartModel.getCustomerInitParams();\n        if (customerData) {\n            if (customerData.customer_id) {\n                CustomerFactory.get().load(customerData.customer_id).done(function(data){\n                    if(data && data.id){\n                        SelectCustomer(data);\n                        selectedCustomer = true;\n                    }\n                });\n            }\n        }\n        return SelectCustomer;\n    }\n);\n","Magestore_Webpos/js/action/checkout/select-billing-address.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/customer/current-customer'\n    ],\n    function(\n        $,\n        checkoutModel,\n        currentCustomer\n    ) {\n        'use strict';\n        return function (addressId) {\n            var customerData = currentCustomer.getData();\n            var allAddress = customerData().addresses;\n            if (addressId!=0) {\n                var billingAddress = {};\n                $.each(allAddress, function (index, value) {\n                    if (typeof (value.id) != 'undefined' && value.id == addressId) {\n                        billingAddress = allAddress[index];\n                    }\n                });\n                checkoutModel.saveBillingAddress(billingAddress);\n            } else {\n                if (customerData().id) {\n                    checkoutModel.saveBillingAddress({\n                        'id' : 0,\n                        'firstname': customerData().firstname,\n                        'lastname': customerData().lastname\n                    });\n                } else {\n                    checkoutModel.saveBillingAddress({\n                        'id' : 0,\n                        'firstname': window.webposConfig['webpos/guest_checkout/first_name'],\n                        'lastname': window.webposConfig['webpos/guest_checkout/last_name']\n                    });\n                }\n\n            }\n        }\n    }\n);\n","Magestore_Webpos/js/action/notification/add-notification.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/view/notification/list',\n        'Magestore_Webpos/js/lib/jquery.toaster',\n        'mage/translate'\n\n    ],\n    function($, notificationList, Toaster, Translate) {\n        'use strict';\n        /*\n            priority: danger, success\n                \n         */\n        return function (message, isShowToaster, priority, title) {\n            if (isShowToaster == true) {\n                $.toaster(\n                    {\n                        priority: priority,\n                        title: Translate(title),\n                        message: Translate(message)\n                    }\n                );\n            }\n            notificationList().addLog(Translate(message));\n        }\n    }\n);\n","Magestore_Webpos/js/action/inventory/stock-item/update-stock-item-list.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n        [\n            'Magestore_Webpos/js/view/inventory/stock-item/grid',\n            \n        ],\n        /* update product list after changed stock items */\n        function (stockItemListView) {\n            'use strict';\n            return function (stockItems) {\n                stockItemListView();\n            }\n        }\n);\n","Magestore_Webpos/js/action/inventory/stock-item/update-product-list.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n        [\n            'Magestore_Webpos/js/view/layout',\n            'Magestore_Webpos/js/model/catalog/product-factory',\n            'Magestore_Webpos/js/helper/general'\n        ],\n        /* update product list after changed stock items */\n        function (ViewManager, ProductFactory, Helper) {\n            'use strict';\n            return function (stockItems) {\n                var viewManager = require('Magestore_Webpos/js/view/layout');              \n                var indexedItems = {};\n                for (var i in stockItems) {\n                    indexedItems[stockItems[i].sku] = stockItems[i];\n                }\n  \n                var productListViewModel = viewManager.getSingleton('view/catalog/product-list');\n                var products = productListViewModel.items();\n                for (var i in products) {\n                    var updatedStock = false;\n                    var product = products[i];\n                    for (var j in product.stocks) {\n                        var sku = product.stocks[j].sku;\n                        /* find match product by sku */\n                        if (indexedItems[sku]) {\n                            /* update stock data in product */\n                            product.stocks[j] = indexedItems[sku];\n                            updatedStock = true;\n                        }\n                    }\n                    if (updatedStock || Helper.isStockOnline()) {\n                        /* update isalable status of product */\n                        var productModel = ProductFactory.get();\n                        productModel.setData(product);\n                        product.isShowOutStock = !productModel.isSalable();\n                    }\n                }\n                /* bind products to view model */\n                productListViewModel.loadLocalConfig();\n                productListViewModel.refresh = true;\n                /* do not reload product collection --> error if do not display out-stock products */\n                //productListViewModel.collection = null;\n                //productListViewModel._prepareItems();                \n                productListViewModel.setItems(products);\n            }\n        }\n             \n);\n","Magestore_Webpos/js/action/inventory/stock-item/refresh-product-list.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n        [\n            'Magestore_Webpos/js/view/catalog/product-list',\n            \n        ],\n        /* update product list after changed stock items */\n        function (productListView) {\n            'use strict';\n            return function () {\n                var productListViewModel = productListView();\n                /* refresh product list */\n                productListViewModel.loadLocalConfig();\n                productListViewModel.refresh = true;\n                productListViewModel._prepareItems();\n            }\n        }\n             \n);\n","Magestore_Webpos/js/action/cart/checkout.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'require',\n        'jquery',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/cart/discountpopup',\n        'Magestore_Webpos/js/action/checkout/select-customer-checkout',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/model/checkout/cart/totals-factory',\n        'Magestore_Webpos/js/model/customer/customer-factory',\n        'Magestore_Webpos/js/action/cart/cancel-onhold',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function (require, $, CheckoutModel, CartModel, DiscountModel, SelectCustomer, ViewManager, OrderFactory, TotalsFactory, CustomerFactory, CancelOnhold, Helper) {\n        'use strict';\n        return function (orderData) {\n            if(orderData){\n                if(orderData.status != \"notsync\"){\n                    var syncOnholdOrder =  Helper.getLocalConfig('os_checkout/sync_order_onhold');\n                    if(((orderData.status == 'onhold') || (orderData.status == 'holded')) && syncOnholdOrder == true){\n                        CancelOnhold(orderData);\n                    }else{\n                        OrderFactory.get().delete(orderData.entity_id);\n                    }\n                }\n                var params = (orderData.initData)?orderData.initData:(orderData.webpos_init_data)?JSON.parse(orderData.webpos_init_data):'';\n                if(params) {\n                    if (params.customer_id) {\n                        var customerData = params.customerData;\n                        var customerId = customerData.id;\n                        var customerDeferred = CustomerFactory.get().load(customerId);\n                        customerDeferred.done(function (data) {\n                            customerData.addresses = data.addresses;\n                            SelectCustomer(customerData);\n                            $('#shipping-checkout').val('');\n                            $('#billing-checkout').val('');\n                        });\n                    }\n                    CheckoutModel.saveBillingAddress(params.billing_address);\n                    CheckoutModel.saveShippingAddress(params.shipping_address);\n\n                    if (params.items && params.items.length > 0) {\n                        $.each(params.items, function () {\n                            CartModel.addProduct(this);\n                        });\n                    }\n\n                    DiscountModel.couponCode(params.coupon_code);\n                    DiscountModel.cartBaseDiscountAmount(params.config.cart_base_discount_amount);\n                    DiscountModel.cartDiscountAmount(params.config.cart_discount_amount);\n                    DiscountModel.cartDiscountName(params.config.cart_discount_name);\n                    DiscountModel.appliedDiscount(params.config.cart_applied_discount);\n                    DiscountModel.appliedPromotion(params.config.cart_applied_promotion);\n                    DiscountModel.cartDiscountType(params.config.cart_discount_type);\n                    DiscountModel.cartDiscountPercent(params.config.cart_discount_percent);\n                    TotalsFactory.get().updateDiscountTotal();\n\n                    if ($('#checkout').length > 0) {\n                        $('#checkout').click();\n                    }\n                    var viewManager = require('Magestore_Webpos/js/view/layout');\n                    viewManager.getSingleton('view/checkout/cart').switchToCheckout();\n                }\n            }\n        }\n    }\n);\n","Magestore_Webpos/js/action/cart/cancel-onhold.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/catalog/product-factory'\n    ],\n    function ($, CheckoutModel, OrderFactory, Helper, ProductFactory) {\n        'use strict';\n        return function (orderData) {\n            if(orderData){\n                if((orderData.status == \"onhold\") || (orderData.status == \"holded\")){\n                    var syncOnholdOrder =  Helper.getLocalConfig('os_checkout/sync_order_onhold');\n                    if(syncOnholdOrder == true || orderData.status == 'holded'){\n                        var params = (orderData.initData)?orderData.initData:(orderData.webpos_init_data)?JSON.parse(orderData.webpos_init_data):'';\n                        if (params && params.items && params.items.length > 0) {\n                            $.each(params.items, function () {\n                                var child_id = (this.child_id)?this.child_id:this.id;\n                                var Product = ProductFactory.get();\n                                Product.updateStock(this.qty, parseInt(child_id));\n                            });\n                        }\n                    }\n                    var syncOnholdOrder =  Helper.getLocalConfig('os_checkout/sync_order_onhold');\n                    if(syncOnholdOrder == true){\n                        CheckoutModel.unholdOrder(orderData.increment_id);\n                    }\n                    OrderFactory.get().delete(orderData.entity_id);\n                }\n            }\n        }\n    }\n);\n","Magestore_Webpos/js/action/cart/hold.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/model/checkout/cart/totals-factory',        \n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/catalog/product-factory'\n    ],\n    function($, ko, CheckoutModel, CartModel, ViewManager, OrderFactory, TotalsFactory, Helper, ProductFactory) {\n        'use strict';\n        return {\n            execute: function(){\n                var data = CheckoutModel.getHoldOrderData();\n                OrderFactory.get().setMode('offline').setData(data).save().done(function (response) {\n                    if(response){\n                        var syncOnholdOrder =  Helper.getLocalConfig('os_checkout/sync_order_onhold');\n                        if(syncOnholdOrder == true){\n                            var Product = ProductFactory.get();\n                            var childs = CartModel.getItemChildsQty();\n                            if(childs && childs.length > 0){\n                                ko.utils.arrayForEach(childs, function(child) {\n                                    Product.updateStock(-child.qty, parseInt(child.id));\n                                });\n                            }\n                            CheckoutModel.syncOrder(response,\"checkout\");\n                        }\n                        CartModel.emptyCart();\n                    }\n                });\n            }\n        }\n    }\n);\n","Magestore_Webpos/js/action/cart/reorder.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/action/checkout/select-customer-checkout',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'Magestore_Webpos/js/action/cart/checkout',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/model/checkout/cart/items/item',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/model/catalog/product-factory',\n        'Magestore_Webpos/js/model/customer/customer-factory',        \n    ],\n    function($, ko, SelectCustomer, AddNoti,  CheckoutOrder, PriceHelper, Item, CheckoutModel, CartModel, ProductFactory, CustomerFactory) {\n        'use strict';\n        return function (orderData) {\n            if(orderData && orderData.status == \"notsync\"){\n                CheckoutOrder(orderData);\n            }else{\n                if(orderData && orderData.items_info_buy){\n                    var Product = ProductFactory.get();\n                    var items = orderData.items_info_buy.items\n                    if(items && items.length > 0){\n                        var itemsId = [];\n                        var hasCustomSale = false;\n                        var numberItem = 0;\n                        ko.utils.arrayForEach(items, function(item, index) {\n                            if(item.id == 'custom_item'){\n                                //hasCustomSale = true;\n                                numberItem++;\n                                var customData = item.custom_sales_info[0];\n                                CartModel.addProduct(customData);\n                            }else{\n                                itemsId.push(PriceHelper.toNumber(item.id));\n                            }\n                        });\n                        /*if(hasCustomSale == true){\n                            var message = \"Your order has Custom Sale item, you need to add it to cart manually\"\n                            AddNoti(message, true, 'warning', 'Message');\n                        }*/\n                        Product.getCollection().addFieldToFilter('id',itemsId,'in').load().done(function(response){\n                            if(response.total_count > 0 && response.items){\n                                ko.utils.arrayForEach(response.items, function(product, index) {\n                                    ko.utils.arrayForEach(items, function(item, index) {\n                                        if(item.id == product.id){\n                                            $.each(item, function(key, value){\n                                                product[key] = value;\n                                            });\n                                            Product.setData(product);\n                                            var infoBuy = Product.getInfoBuyRequest(CartModel.customerGroup());\n                                            if(item.base_original_price != item.base_unit_price){\n                                                infoBuy.unit_price = item.base_original_price;\n                                                infoBuy.has_custom_price = true;\n                                                infoBuy.custom_type = Item().CUSTOM_PRICE_CODE;\n                                                infoBuy.custom_price_type = Item().FIXED_AMOUNT_CODE;\n                                                infoBuy.custom_price_amount = item.unit_price;\n                                            }else{\n                                                infoBuy.unit_price = item.base_unit_price;\n                                            }\n                                            CartModel.addProduct(infoBuy);\n                                            Product.resetTempAddData();\n                                        }\n                                    });\n                                });\n                            }else{\n                                if(orderData.increment_id && numberItem == 0){\n                                    var message = \"Cannot load product from order #\"+orderData.increment_id+\", you can try to reload the product data from synchronization page\"\n                                    AddNoti(message, true, 'danger', 'Error');\n                                }\n                            }\n                        });\n                        if(orderData.customer_id){\n                            var customerData = {\n                                id:orderData.customer_id,\n                                email:orderData.customer_email,\n                                firstname:orderData.customer_firstname,\n                                full_name:orderData.customer_firstname +\" \"+ orderData.customer_lastname,\n                                lastname:orderData.customer_lastname,\n                                group_id:orderData.customer_group_id\n                            };\n\n                            var customerDeferred = CustomerFactory.get().load(orderData.customer_id);\n\n                            if(orderData.customer_telephone){\n                                customerData.telephone = orderData.customer_telephone;\n                            }\n\n                            customerDeferred.done(function (data) {\n                                customerData.addresses = data.addresses;\n                                SelectCustomer(customerData);\n                                $('#shipping-checkout').val('');\n                                $('#billing-checkout').val('');\n                            });\n                        }\n                        if(orderData.billing_address){\n                            delete orderData.billing_address.entity_id;\n                            delete orderData.billing_address.parent_id;\n                            delete orderData.billing_address.customer_address_id;\n                            if(orderData.billing_address.region && !orderData.billing_address.region.region){\n                                var region = {\n                                    region:orderData.billing_address.region,\n                                    region_id:orderData.billing_address.region_id,\n                                    region_code:orderData.billing_address.region_code\n                                };\n                                orderData.billing_address.region = region;\n                            }\n                            delete orderData.billing_address.region_code;\n                            CheckoutModel.saveBillingAddress(orderData.billing_address);\n                        }\n\n                        if(orderData.extension_attributes){\n                            if(orderData.extension_attributes.shipping_assignments && orderData.extension_attributes.shipping_assignments.length > 0){\n                                var shipping_assignments = orderData.extension_attributes.shipping_assignments[0];\n                                if(shipping_assignments && shipping_assignments.shipping){\n                                    var address = shipping_assignments.shipping.address;\n                                    if(address){\n                                        delete address.entity_id;\n                                        delete address.parent_id;\n                                        delete address.customer_address_id;\n                                        if(address.region && !address.region.region){\n                                            var region = {\n                                                region:address.region,\n                                                region_id:address.region_id,\n                                                region_code:address.region_code\n                                            };\n                                            address.region = region;\n                                        }\n                                        delete address.region_code;\n                                        CheckoutModel.saveShippingAddress(address);\n                                    }\n                                }\n                            }\n                        }\n                        if($('#checkout').length > 0){\n                            $('#checkout').click();\n                        }\n                    }\n                }else{\n                    if(orderData.increment_id){\n                        var message = \"Cannot load order #\"+orderData.increment_id+\", please reload the order data from synchronization page\"\n                        AddNoti(message, true, 'danger', 'Error');\n                    }\n                }\n            }\n        }\n    }\n);\n","Magestore_Webpos/js/action/customer/same-billing-shipping.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'Magestore_Webpos/js/view/checkout/customer/add-shipping-address'\n    ],\n    function(addShipping) {\n        'use strict';\n        return function (data) {\n            addShipping().firstNameShipping(data.firstNameBilling);\n            addShipping().lastNameShipping(data.lastNameBilling);\n            addShipping().companyShipping(data.companyBilling);\n            addShipping().phoneShipping(data.phoneBilling);\n            addShipping().street1Shipping(data.street1Billing);\n            addShipping().street2Shipping(data.street2Billing);\n            addShipping().countryShipping(data.countryBilling);\n            addShipping().regionShipping(data.regionBilling);\n            addShipping().regionIdShipping(data.regionIdBilling);\n            addShipping().cityShipping(data.cityBilling);\n            addShipping().zipcodeShipping(data.zipcodeBilling);\n            addShipping().vatShipping(data.vatBilling);\n            addShipping().isShowShippingSummaryForm(true);\n        }\n    }\n);\n","Magestore_Webpos/js/action/customer/select-customer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/customer/complain',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/model/customer/customer-factory',\n        'Magestore_Webpos/js/model/customer/group-factory',        \n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/region-updater',\n        \n    ],\n    function($, ViewManager, complainModel, OrderFactory, CustomerFactory, CustomerGroupFactory, dateHelper) {\n        'use strict';\n        return function (data) {\n            CustomerFactory.get().setSelectedCustomer(data.id);\n            \n            /* Region Updater For Add Address*/\n            var addressForm = $('#form-customer-add-address');\n            var countryList = addressForm.find('#country_id');\n            var regionList = addressForm.find('#region_id');\n            var regionInput = addressForm.find('#region');\n            countryList.regionUpdater({\n                regionList: regionList,\n                regionInput: regionInput,\n                regionJson: JSON.parse(window.webposConfig.regionJson)\n            });\n\n            /* Set Data For Group*/\n            var groupDeferred = CustomerGroupFactory.get().load(data.group_id);\n            groupDeferred.done(function(response){\n                if (response) {\n                    data.group_label = response.code;\n                }\n                ViewManager.getSingleton('view/customer/customer-view').setData(data);\n            });\n            ViewManager.getSingleton('view/customer/customer-view').setData(data);\n\n            /* Set Data For Address*/\n            ViewManager.getSingleton('view/customer/customer-view').setAddressData(data.addresses);\n\n            var daysPeriod = window.webposConfig.order_sync_time_period;\n  \n            var result = new Date();\n            result.setDate(result.getDate() - daysPeriod);\n            var dateString = dateHelper.formatDate(result);\n            \n            /* Load Customer Order*/\n            var deferred = $.Deferred();\n            OrderFactory.get().getCollection().reset()\n                .addFieldToFilter('customer_id', String(data.id), 'eq')\n                .addFieldToFilter('created_at', dateString, 'gt')\n                .setOrder('increment_id','DESC')\n                .load(deferred);\n            deferred.done(function(response){\n                var allOrder = response.items;\n                ViewManager.getSingleton('view/customer/customer-view').setOrderData(response.items);\n                var totalSale = 0;\n                $.each(allOrder, function (index, value) {\n                    totalSale = totalSale + value.base_grand_total;\n                    if (value.base_total_refunded > 0) {\n                        var orderHistory = value.status_histories;\n                        $.each(orderHistory, function (index, history) {\n                            if (history.entity_name == 'creditmemo') {\n                                value.created_at = history.created_at;\n                            }\n                        });\n                    }\n                });\n\n                ViewManager.getSingleton('view/customer/customer-view').setTotalSale(totalSale);\n            });\n\n            var refund = OrderFactory.get().getCollection().reset()\n                .addFieldToFilter('customer_id', String(data.id), 'eq')\n                .setOrder('increment_id','DESC')\n                .load();\n            refund.done(function (response) {\n                var allOrder = response.items;\n                var orderRefund = [];\n                $.each(allOrder, function (index, value) {\n                    if (value.base_total_refunded > 0) {\n                        var orderHistory = value.status_histories;\n                        $.each(orderHistory, function (index, history) {\n                            if (history.entity_name == 'creditmemo' && history.created_at > dateString) {\n                                value.created_at = history.created_at;\n                            }\n                        });\n                        orderRefund.push(value);\n                    }\n                });\n                ViewManager.getSingleton('view/customer/customer-view').setRefundData(orderRefund);\n            });\n\n\n            /* Load Customer Complain*/\n            var deferredComplain = $.Deferred();\n            complainModel().getCollection()\n                .addFieldToFilter('customer_email', String(data.email), 'eq')\n                .load(deferredComplain);\n            deferredComplain.done(function(response){\n                ViewManager.getSingleton('view/customer/customer-view').setCustomerComplain(response.items);\n            });\n        }\n    }\n);\n","Magestore_Webpos/js/action/customer/same-shipping-billing.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*global define*/\ndefine(\n    [\n        'Magestore_Webpos/js/view/layout',\n    ],\n    function(ViewManager) {\n        'use strict';\n        return function (data) {\n            var addBilling = ViewManager.getSingleton('view/checkout/customer/add-billing-address');\n            addBilling.firstNameBilling(data.firstNameShipping);\n            addBilling.lastNameBilling(data.lastNameShipping);\n            addBilling.companyBilling(data.companyShipping);\n            addBilling.phoneBilling(data.phoneShipping);\n            addBilling.street1Billing(data.street1Shipping);\n            addBilling.street2Billing(data.street2Shipping);\n            addBilling.countryBilling(data.countryShipping);\n            addBilling.regionBilling(data.regionShipping);\n            addBilling.regionIdBilling(data.regionIdShipping);\n            addBilling.cityBilling(data.cityShipping);\n            addBilling.zipcodeBilling(data.zipcodeShipping);\n            addBilling.vatBilling(data.vatShipping);\n            addBilling.isShowBillingSummaryForm(true);\n        }\n    }\n);\n","Magestore_Webpos/js/lib/jquery.toaster.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/***********************************************************************************\n* Add Array.indexOf                                                                *\n***********************************************************************************/\n require(['jquery'], function (jQuery) {\n(function ()\n{\n\tif (typeof Array.prototype.indexOf !== 'function')\n\t{\n\t\tArray.prototype.indexOf = function(searchElement, fromIndex)\n\t\t{\n\t\t\tfor (var i = (fromIndex || 0), j = this.length; i < j; i += 1)\n\t\t\t{\n\t\t\t\tif ((searchElement === undefined) || (searchElement === null))\n\t\t\t\t{\n\t\t\t\t\tif (this[i] === searchElement)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (this[i] === searchElement)\n\t\t\t\t{\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\t}\n})();\n/**********************************************************************************/\n\n(function ($,undefined)\n{\n\tvar toasting =\n\t{\n\t\tgettoaster : function ()\n\t\t{\n\t\t\tvar toaster = $('#' + settings.toaster.id);\n\n\t\t\tif(toaster.length < 1)\n\t\t\t{\n\t\t\t\ttoaster = $(settings.toaster.template).attr('id', settings.toaster.id).css(settings.toaster.css).addClass(settings.toaster['class']);\n\n\t\t\t\tif ((settings.stylesheet) && (!$(\"link[href=\" + settings.stylesheet + \"]\").length))\n\t\t\t\t{\n\t\t\t\t\t$('head').appendTo('<link rel=\"stylesheet\" href=\"' + settings.stylesheet + '\">');\n\t\t\t\t}\n\n\t\t\t\t$(settings.toaster.container).append(toaster);\n\t\t\t}\n\n\t\t\treturn toaster;\n\t\t},\n\n\t\tnotify : function (title, message, priority)\n\t\t{\n\t\t\tvar $toaster = this.gettoaster();\n\t\t\tvar $toast  = $(settings.toast.template.replace('%priority%', priority)).hide().css(settings.toast.css).addClass(settings.toast['class']);\n\n\t\t\t$('.title', $toast).css(settings.toast.csst).html(title);\n\t\t\t$('.message', $toast).css(settings.toast.cssm).html(message);\n\n\t\t\tif ((settings.debug) && (window.console))\n\t\t\t{\n\t\t\t\tconsole.log(toast);\n\t\t\t}\n\n\t\t\t$toaster.append(settings.toast.display($toast));\n\n\t\t\tif (settings.donotdismiss.indexOf(priority) === -1)\n\t\t\t{\n\t\t\t\tvar timeout = (typeof settings.timeout === 'number') ? settings.timeout : ((typeof settings.timeout === 'object') && (priority in settings.timeout)) ? settings.timeout[priority] : 1500;\n\t\t\t\tsetTimeout(function()\n\t\t\t\t{\n\t\t\t\t\tsettings.toast.remove($toast, function()\n\t\t\t\t\t{\n\t\t\t\t\t\t$toast.remove();\n\t\t\t\t\t});\n\t\t\t\t}, timeout);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar defaults =\n\t{\n\t\t'toaster'         :\n\t\t{\n\t\t\t'id'        : 'toaster',\n\t\t\t'container' : 'body',\n\t\t\t'template'  : '<div></div>',\n\t\t\t'class'     : 'toaster',\n\t\t\t'css'       :\n\t\t\t{\n\t\t\t\t'position' : 'fixed',\n\t\t\t\t'bottom'      : '50px',\n\t\t\t\t'left'    : '50%',\n\t\t\t\t'marginLeft'    : '-20vw',\n\t\t\t\t'width'    : '40vw',\n\t\t\t\t'zIndex'   : 50000\n\t\t\t}\n\t\t},\n\n\t\t'toast'       :\n\t\t{\n\t\t\t'template' :\n\t\t\t'<div class=\"alert alert-%priority% alert-dismissible\" role=\"alert\">' +\n\t\t\t\t'<button type=\"button\" class=\"close\" data-dismiss=\"alert\">' +\n\t\t\t\t\t'<span aria-hidden=\"true\">&times;</span>' +\n\t\t\t\t\t'<span class=\"sr-only\">Close</span>' +\n\t\t\t\t'</button>' +\n\t\t\t\t'<span class=\"title\"></span>: <span class=\"message\"></span>' +\n\t\t\t'</div>',\n\n\t\t\t'css'      : {},\n\t\t\t'cssm'     : {},\n\t\t\t'csst'     : { 'fontWeight' : 'bold' },\n\n\t\t\t'fade'     : 'slow',\n\n\t\t\t'display'    : function ($toast)\n\t\t\t{\n\t\t\t\treturn $toast.fadeIn(settings.toast.fade);\n\t\t\t},\n\n\t\t\t'remove'     : function ($toast, callback)\n\t\t\t{\n\t\t\t\treturn $toast.animate(\n\t\t\t\t\t{\n\t\t\t\t\t\topacity : '0',\n\t\t\t\t\t\tpadding : '0px',\n\t\t\t\t\t\tmargin  : '0px',\n\t\t\t\t\t\theight  : '0px'\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tduration : settings.toast.fade,\n\t\t\t\t\t\tcomplete : callback\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\n\t\t'debug'        : false,\n\t\t'timeout'      : 3000,\n\t\t'stylesheet'   : null,\n\t\t'donotdismiss' : []\n\t};\n \n\tvar settings = {};\n\t$.extend(settings, defaults);\n\n\t$.toaster = function (options)\n\t{\n\t\tif (typeof options === 'object')\n\t\t{\n\t\t\tif ('settings' in options)\n\t\t\t{\n\t\t\t\tsettings = $.extend(settings, options.settings);\n\t\t\t}\n\n\t\t\tvar title    = ('title' in options) ? options.title : 'Notice';\n\t\t\tvar message  = ('message' in options) ? options.message : null;\n\t\t\tvar priority = ('priority' in options) ? options.priority : 'success';\n\n\t\t\tif (message !== null)\n\t\t\t{\n\t\t\t\ttoasting.notify(title, message, priority);\n\t\t\t}\n\t\t}\n\t};\n\n\t$.toaster.reset = function ()\n\t{\n\t\tsettings = {};\n\t\t$.extend(settings, defaults);\n\t};\n})(jQuery);\n});","Magestore_Webpos/js/lib/jquery-barcode.js":"/*\r\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\r\n *  See COPYING.txt for license details.\r\n *\r\n */\r\n\r\n/*!\r\n *  BarCode Coder Library (BCC Library)\r\n *  BCCL Version 2.0\r\n *    \r\n *  Porting : jQuery barcode plugin \r\n *  Version : 2.0.3\r\n *   \r\n *  Date    : 2013-01-06\r\n *  Author  : DEMONTE Jean-Baptiste <jbdemonte@gmail.com>\r\n *            HOUREZ Jonathan\r\n *             \r\n *  Web site: http://barcode-coder.com/\r\n *  dual licence :  http://www.cecill.info/licences/Licence_CeCILL_V2-fr.html\r\n *                  http://www.gnu.org/licenses/gpl.html\r\n */\r\n\r\n(function ($) {\r\n  \r\n  var barcode = {\r\n    settings:{\r\n      barWidth: 1,\r\n      barHeight: 50,\r\n      moduleSize: 5,\r\n      showHRI: true,\r\n      addQuietZone: true,\r\n      marginHRI: 5,\r\n      bgColor: \"#FFFFFF\",\r\n      color: \"#000000\",\r\n      fontSize: 10,\r\n      output: \"css\",\r\n      posX: 0,\r\n      posY: 0\r\n    },\r\n    intval: function(val){\r\n      var type = typeof( val );\r\n      if (type == 'string'){\r\n        val = val.replace(/[^0-9-.]/g, \"\");\r\n        val = parseInt(val * 1, 10);\r\n        return isNaN(val) || !isFinite(val) ? 0 : val;\r\n      }\r\n      return type == 'number' && isFinite(val) ? Math.floor(val) : 0;\r\n    },\r\n    i25: { // std25 int25\r\n      encoding: [\"NNWWN\", \"WNNNW\", \"NWNNW\", \"WWNNN\", \"NNWNW\", \"WNWNN\", \"NWWNN\", \"NNNWW\", \"WNNWN\",\"NWNWN\"],\r\n      compute: function(code, crc, type){\r\n        if (! crc) {\r\n          if (code.length % 2 != 0) code = '0' + code;\r\n        } else {\r\n          if ( (type == \"int25\") && (code.length % 2 == 0) ) code = '0' + code;\r\n          var odd = true, v, sum = 0;\r\n          for(var i=code.length-1; i>-1; i--){\r\n            v = barcode.intval(code.charAt(i));\r\n            if (isNaN(v)) return(\"\");\r\n            sum += odd ? 3 * v : v;\r\n            odd = ! odd;\r\n          }\r\n          code += ((10 - sum % 10) % 10).toString();\r\n        }\r\n        return(code);\r\n      },\r\n      getDigit: function(code, crc, type){\r\n        code = this.compute(code, crc, type);\r\n        if (code == \"\") return(\"\");\r\n        result = \"\";\r\n        \r\n        var i, j;\r\n        if (type == \"int25\") {\r\n          // Interleaved 2 of 5\r\n          \r\n          // start\r\n          result += \"1010\";\r\n          \r\n          // digits + CRC\r\n          var c1, c2;\r\n          for(i=0; i<code.length / 2; i++){\r\n            c1 = code.charAt(2*i);\r\n            c2 = code.charAt(2*i+1);\r\n            for(j=0; j<5; j++){\r\n              result += '1';\r\n              if (this.encoding[c1].charAt(j) == 'W') result += '1';\r\n              result += '0';\r\n              if (this.encoding[c2].charAt(j) == 'W') result += '0';\r\n            }\r\n          }\r\n          // stop\r\n          result += \"1101\";\r\n        } else if (type == \"std25\") {\r\n          // Standard 2 of 5 is a numeric-only barcode that has been in use a long time. \r\n          // Unlike Interleaved 2 of 5, all of the information is encoded in the bars; the spaces are fixed width and are used only to separate the bars.\r\n          // The code is self-checking and does not include a checksum.\r\n          \r\n          // start\r\n          result += \"11011010\";\r\n          \r\n          // digits + CRC\r\n          var c;\r\n          for(i=0; i<code.length; i++){\r\n            c = code.charAt(i);\r\n            for(j=0; j<5; j++){\r\n              result += '1';\r\n              if (this.encoding[c].charAt(j) == 'W') result += \"11\";\r\n              result += '0';\r\n            }\r\n          }\r\n          // stop\r\n          result += \"11010110\";\r\n        }\r\n        return(result);\r\n      }\r\n    },\r\n    ean: {\r\n      encoding: [ [\"0001101\", \"0100111\", \"1110010\"],\r\n                  [\"0011001\", \"0110011\", \"1100110\"], \r\n                  [\"0010011\", \"0011011\", \"1101100\"],\r\n                  [\"0111101\", \"0100001\", \"1000010\"], \r\n                  [\"0100011\", \"0011101\", \"1011100\"], \r\n                  [\"0110001\", \"0111001\", \"1001110\"],\r\n                  [\"0101111\", \"0000101\", \"1010000\"],\r\n                  [\"0111011\", \"0010001\", \"1000100\"],\r\n                  [\"0110111\", \"0001001\", \"1001000\"],\r\n                  [\"0001011\", \"0010111\", \"1110100\"] ],\r\n      first:  [\"000000\",\"001011\",\"001101\",\"001110\",\"010011\",\"011001\",\"011100\",\"010101\",\"010110\",\"011010\"],\r\n      getDigit: function(code, type){\r\n        // Check len (12 for ean13, 7 for ean8)\r\n        var len = type == \"ean8\" ? 7 : 12;\r\n        code = code.substring(0, len);\r\n        if (code.length != len) return(\"\");\r\n        // Check each digit is numeric\r\n        var c;\r\n        for(var i=0; i<code.length; i++){\r\n          c = code.charAt(i);\r\n          if ( (c < '0') || (c > '9') ) return(\"\");\r\n        }\r\n        // get checksum\r\n        code = this.compute(code, type);\r\n        \r\n        // process analyse\r\n        var result = \"101\"; // start\r\n        \r\n        if (type == \"ean8\"){\r\n  \r\n          // process left part\r\n          for(var i=0; i<4; i++){\r\n            result += this.encoding[barcode.intval(code.charAt(i))][0];\r\n          }\r\n              \r\n          // center guard bars\r\n          result += \"01010\";\r\n              \r\n          // process right part\r\n          for(var i=4; i<8; i++){\r\n            result += this.encoding[barcode.intval(code.charAt(i))][2];\r\n          }\r\n              \r\n        } else { // ean13\r\n          // extract first digit and get sequence\r\n          var seq = this.first[ barcode.intval(code.charAt(0)) ];\r\n          \r\n          // process left part\r\n          for(var i=1; i<7; i++){\r\n            result += this.encoding[barcode.intval(code.charAt(i))][ barcode.intval(seq.charAt(i-1)) ];\r\n          }\r\n          \r\n          // center guard bars\r\n          result += \"01010\";\r\n              \r\n          // process right part\r\n          for(var i=7; i<13; i++){\r\n            result += this.encoding[barcode.intval(code.charAt(i))][ 2 ];\r\n          }\r\n        } // ean13\r\n        \r\n        result += \"101\"; // stop\r\n        return(result);\r\n      },\r\n      compute: function (code, type){\r\n        var len = type == \"ean13\" ? 12 : 7;\r\n        code = code.substring(0, len);\r\n        var sum = 0, odd = true;\r\n        for(i=code.length-1; i>-1; i--){\r\n          sum += (odd ? 3 : 1) * barcode.intval(code.charAt(i));\r\n          odd = ! odd;\r\n        }\r\n        return(code + ((10 - sum % 10) % 10).toString());\r\n      }\r\n    },\r\n    upc: {\r\n      getDigit: function(code){\r\n        if (code.length < 12) {\r\n          code = '0' + code;\r\n        }\r\n        return barcode.ean.getDigit(code, 'ean13');\r\n      },\r\n      compute: function (code){\r\n        if (code.length < 12) {\r\n          code = '0' + code;\r\n        }\r\n        return barcode.ean.compute(code, 'ean13').substr(1);\r\n      }\r\n    },\r\n    msi: {\r\n      encoding:[\"100100100100\", \"100100100110\", \"100100110100\", \"100100110110\",\r\n                \"100110100100\", \"100110100110\", \"100110110100\", \"100110110110\",\r\n                \"110100100100\", \"110100100110\"],\r\n      compute: function(code, crc){\r\n        if (typeof(crc) == \"object\"){\r\n          if (crc.crc1 == \"mod10\"){\r\n            code = this.computeMod10(code);\r\n          } else if (crc.crc1 == \"mod11\"){\r\n            code = this.computeMod11(code);\r\n          }\r\n          if (crc.crc2 == \"mod10\"){\r\n            code = this.computeMod10(code);\r\n          } else if (crc.crc2 == \"mod11\"){\r\n            code = this.computeMod11(code);\r\n          }\r\n        } else if (typeof(crc) == \"boolean\"){\r\n          if (crc) code = this.computeMod10(code);\r\n        }\r\n        return(code);\r\n      },\r\n      computeMod10:function(code){\r\n        var i, \r\n        toPart1 = code.length % 2;\r\n        var n1 = 0, sum = 0;\r\n        for(i=0; i<code.length; i++){\r\n          if (toPart1) {\r\n            n1 = 10 * n1 + barcode.intval(code.charAt(i));\r\n          } else {\r\n            sum += barcode.intval(code.charAt(i));\r\n          }\r\n          toPart1 = ! toPart1;\r\n        }\r\n        var s1 = (2 * n1).toString();\r\n        for(i=0; i<s1.length; i++){\r\n          sum += barcode.intval(s1.charAt(i));\r\n        }\r\n        return(code + ((10 - sum % 10) % 10).toString());\r\n      },\r\n      computeMod11:function(code){\r\n        var sum = 0, weight = 2;\r\n        for(var i=code.length-1; i>=0; i--){\r\n          sum += weight * barcode.intval(code.charAt(i));\r\n          weight = weight == 7 ? 2 : weight + 1;\r\n        }\r\n        return(code + ((11 - sum % 11) % 11).toString());\r\n      },\r\n      getDigit: function(code, crc){\r\n        var table = \"0123456789\";\r\n        var index = 0;\r\n        var result = \"\";\r\n        \r\n        code = this.compute(code, false);\r\n        \r\n        // start\r\n        result = \"110\";\r\n        \r\n        // digits\r\n        for(i=0; i<code.length; i++){\r\n          index = table.indexOf( code.charAt(i) );\r\n          if (index < 0) return(\"\");\r\n          result += this.encoding[ index ];\r\n        }\r\n        \r\n        // stop\r\n        result += \"1001\";\r\n        \r\n        return(result);\r\n      }\r\n    },\r\n    code11: {\r\n      encoding:[  \"101011\", \"1101011\", \"1001011\", \"1100101\",\r\n                  \"1011011\", \"1101101\", \"1001101\", \"1010011\",\r\n                  \"1101001\", \"110101\", \"101101\"],\r\n      getDigit: function(code){\r\n        var table = \"0123456789-\";\r\n        var i, index, result = \"\", intercharacter = '0'\r\n        \r\n        // start\r\n        result = \"1011001\" + intercharacter;\r\n        \r\n        // digits\r\n        for(i=0; i<code.length; i++){\r\n          index = table.indexOf( code.charAt(i) );\r\n          if (index < 0) return(\"\");\r\n          result += this.encoding[ index ] + intercharacter;\r\n        }\r\n        \r\n        // checksum\r\n        var weightC    = 0,\r\n        weightSumC = 0,\r\n        weightK    = 1, // start at 1 because the right-most character is \"C\" checksum\r\n        weightSumK   = 0;\r\n        for(i=code.length-1; i>=0; i--){\r\n          weightC = weightC == 10 ? 1 : weightC + 1;\r\n          weightK = weightK == 10 ? 1 : weightK + 1;\r\n          \r\n          index = table.indexOf( code.charAt(i) );\r\n          \r\n          weightSumC += weightC * index;\r\n          weightSumK += weightK * index;\r\n        }\r\n        \r\n        var c = weightSumC % 11;\r\n        weightSumK += c;\r\n        var k = weightSumK % 11;\r\n        \r\n        result += this.encoding[c] + intercharacter;\r\n        \r\n        if (code.length >= 10){\r\n          result += this.encoding[k] + intercharacter;\r\n        }\r\n        \r\n        // stop\r\n        result  += \"1011001\";\r\n        \r\n        return(result);\r\n      }   \r\n    },\r\n    code39: {\r\n      encoding:[\"101001101101\", \"110100101011\", \"101100101011\", \"110110010101\",\r\n                \"101001101011\", \"110100110101\", \"101100110101\", \"101001011011\",\r\n                \"110100101101\", \"101100101101\", \"110101001011\", \"101101001011\",\r\n                \"110110100101\", \"101011001011\", \"110101100101\", \"101101100101\",\r\n                \"101010011011\", \"110101001101\", \"101101001101\", \"101011001101\",\r\n                \"110101010011\", \"101101010011\", \"110110101001\", \"101011010011\",\r\n                \"110101101001\", \"101101101001\", \"101010110011\", \"110101011001\",\r\n                \"101101011001\", \"101011011001\", \"110010101011\", \"100110101011\",\r\n                \"110011010101\", \"100101101011\", \"110010110101\", \"100110110101\",\r\n                \"100101011011\", \"110010101101\", \"100110101101\", \"100100100101\",\r\n                \"100100101001\", \"100101001001\", \"101001001001\", \"100101101101\"],\r\n      getDigit: function(code){\r\n        var table = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%*\";\r\n        var i, index, result=\"\", intercharacter='0';\r\n        \r\n        if (code.indexOf('*') >= 0) return(\"\");\r\n        \r\n        // Add Start and Stop charactere : *\r\n        code = (\"*\" + code + \"*\").toUpperCase();\r\n        \r\n        for(i=0; i<code.length; i++){\r\n          index = table.indexOf( code.charAt(i) );\r\n          if (index < 0) return(\"\");\r\n          if (i > 0) result += intercharacter;\r\n          result += this.encoding[ index ];\r\n        }\r\n        return(result);\r\n      }\r\n    },\r\n    code93:{\r\n      encoding:[\"100010100\", \"101001000\", \"101000100\", \"101000010\",\r\n                \"100101000\", \"100100100\", \"100100010\", \"101010000\",\r\n                \"100010010\", \"100001010\", \"110101000\", \"110100100\",\r\n                \"110100010\", \"110010100\", \"110010010\", \"110001010\",\r\n                \"101101000\", \"101100100\", \"101100010\", \"100110100\",\r\n                \"100011010\", \"101011000\", \"101001100\", \"101000110\",\r\n                \"100101100\", \"100010110\", \"110110100\", \"110110010\",\r\n                \"110101100\", \"110100110\", \"110010110\", \"110011010\",\r\n                \"101101100\", \"101100110\", \"100110110\", \"100111010\",\r\n                \"100101110\", \"111010100\", \"111010010\", \"111001010\",\r\n                \"101101110\", \"101110110\", \"110101110\", \"100100110\",\r\n                \"111011010\", \"111010110\", \"100110010\", \"101011110\"],\r\n      getDigit: function(code, crc){\r\n        var table = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-. $/+%____*\", // _ => ($), (%), (/) et (+)\r\n        c, result = \"\";\r\n        \r\n        if (code.indexOf('*') >= 0) return(\"\");\r\n        \r\n        code = code.toUpperCase();\r\n        \r\n        // start :  *\r\n        result  += this.encoding[47];\r\n        \r\n        // digits\r\n        for(i=0; i<code.length; i++){\r\n          c = code.charAt(i);\r\n          index = table.indexOf( c );\r\n          if ( (c == '_') || (index < 0) ) return(\"\");\r\n          result += this.encoding[ index ];\r\n        }\r\n        \r\n        // checksum\r\n        if (crc){\r\n          var weightC    = 0,\r\n          weightSumC = 0,\r\n          weightK    = 1, // start at 1 because the right-most character is \"C\" checksum\r\n          weightSumK   = 0;\r\n          for(i=code.length-1; i>=0; i--){\r\n            weightC = weightC == 20 ? 1 : weightC + 1;\r\n            weightK = weightK == 15 ? 1 : weightK + 1;\r\n            \r\n            index = table.indexOf( code.charAt(i) );\r\n            \r\n            weightSumC += weightC * index;\r\n            weightSumK += weightK * index;\r\n          }\r\n          \r\n          var c = weightSumC % 47;\r\n          weightSumK += c;\r\n          var k = weightSumK % 47;\r\n          \r\n          result += this.encoding[c];\r\n          result += this.encoding[k];\r\n        }\r\n        \r\n        // stop : *\r\n        result  += this.encoding[47];\r\n        \r\n        // Terminaison bar\r\n        result  += '1';\r\n        return(result);\r\n      }\r\n    },\r\n    code128: {\r\n      encoding:[\"11011001100\", \"11001101100\", \"11001100110\", \"10010011000\",\r\n                \"10010001100\", \"10001001100\", \"10011001000\", \"10011000100\",\r\n                \"10001100100\", \"11001001000\", \"11001000100\", \"11000100100\",\r\n                \"10110011100\", \"10011011100\", \"10011001110\", \"10111001100\",\r\n                \"10011101100\", \"10011100110\", \"11001110010\", \"11001011100\",\r\n                \"11001001110\", \"11011100100\", \"11001110100\", \"11101101110\",\r\n                \"11101001100\", \"11100101100\", \"11100100110\", \"11101100100\",\r\n                \"11100110100\", \"11100110010\", \"11011011000\", \"11011000110\",\r\n                \"11000110110\", \"10100011000\", \"10001011000\", \"10001000110\",\r\n                \"10110001000\", \"10001101000\", \"10001100010\", \"11010001000\",\r\n                \"11000101000\", \"11000100010\", \"10110111000\", \"10110001110\",\r\n                \"10001101110\", \"10111011000\", \"10111000110\", \"10001110110\",\r\n                \"11101110110\", \"11010001110\", \"11000101110\", \"11011101000\",\r\n                \"11011100010\", \"11011101110\", \"11101011000\", \"11101000110\",\r\n                \"11100010110\", \"11101101000\", \"11101100010\", \"11100011010\",\r\n                \"11101111010\", \"11001000010\", \"11110001010\", \"10100110000\",\r\n                \"10100001100\", \"10010110000\", \"10010000110\", \"10000101100\",\r\n                \"10000100110\", \"10110010000\", \"10110000100\", \"10011010000\",\r\n                \"10011000010\", \"10000110100\", \"10000110010\", \"11000010010\",\r\n                \"11001010000\", \"11110111010\", \"11000010100\", \"10001111010\",\r\n                \"10100111100\", \"10010111100\", \"10010011110\", \"10111100100\",\r\n                \"10011110100\", \"10011110010\", \"11110100100\", \"11110010100\",\r\n                \"11110010010\", \"11011011110\", \"11011110110\", \"11110110110\",\r\n                \"10101111000\", \"10100011110\", \"10001011110\", \"10111101000\",\r\n                \"10111100010\", \"11110101000\", \"11110100010\", \"10111011110\",\r\n                \"10111101110\", \"11101011110\", \"11110101110\", \"11010000100\",\r\n                \"11010010000\", \"11010011100\", \"11000111010\"],\r\n      getDigit: function(code){\r\n        var tableB = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\";\r\n        var result = \"\";\r\n        var sum = 0;\r\n        var isum = 0;\r\n        var i = 0;\r\n        var j = 0;\r\n        var value = 0;\r\n        \r\n        // check each characters\r\n        for(i=0; i<code.length; i++){\r\n          if (tableB.indexOf(code.charAt(i)) == -1) return(\"\");\r\n        }\r\n        \r\n        // check firsts characters : start with C table only if enought numeric\r\n        var tableCActivated = code.length > 1;\r\n        var c = '';\r\n        for(i=0; i<3 && i<code.length; i++){\r\n        c = code.charAt(i);\r\n          tableCActivated &= c >= '0' && c <= '9';\r\n        }\r\n        \r\n        sum = tableCActivated ? 105 : 104;\r\n        \r\n        // start : [105] : C table or [104] : B table \r\n        result = this.encoding[ sum ];\r\n        \r\n        i = 0;\r\n        while( i < code.length ){\r\n          if (! tableCActivated){\r\n            j = 0;\r\n            // check next character to activate C table if interresting\r\n            while ( (i + j < code.length) && (code.charAt(i+j) >= '0') && (code.charAt(i+j) <= '9') ) j++;\r\n            \r\n            // 6 min everywhere or 4 mini at the end\r\n            tableCActivated = (j > 5) || ((i + j - 1 == code.length) && (j > 3));\r\n            \r\n            if ( tableCActivated ){\r\n            result += this.encoding[ 99 ]; // C table\r\n            sum += ++isum * 99;\r\n            }\r\n            //         2 min for table C so need table B\r\n          } else if ( (i == code.length) || (code.charAt(i) < '0') || (code.charAt(i) > '9') || (code.charAt(i+1) < '0') || (code.charAt(i+1) > '9') ) {\r\n            tableCActivated = false;\r\n            result += this.encoding[ 100 ]; // B table\r\n            sum += ++isum * 100;\r\n          }\r\n          \r\n          if ( tableCActivated ) {\r\n            value = barcode.intval(code.charAt(i) + code.charAt(i+1)); // Add two characters (numeric)\r\n            i += 2;\r\n          } else {\r\n            value = tableB.indexOf( code.charAt(i) ); // Add one character\r\n            i += 1;\r\n          }\r\n          result  += this.encoding[ value ];\r\n          sum += ++isum * value;\r\n        }\r\n        \r\n        // Add CRC\r\n        result  += this.encoding[ sum % 103 ];\r\n        \r\n        // Stop\r\n        result += this.encoding[106];\r\n        \r\n        // Termination bar\r\n        result += \"11\";\r\n        \r\n        return(result);\r\n      }\r\n    },\r\n    codabar: {\r\n      encoding:[\"101010011\", \"101011001\", \"101001011\", \"110010101\",\r\n                \"101101001\", \"110101001\", \"100101011\", \"100101101\",\r\n                \"100110101\", \"110100101\", \"101001101\", \"101100101\",\r\n                \"1101011011\", \"1101101011\", \"1101101101\", \"1011011011\",\r\n                \"1011001001\", \"1010010011\", \"1001001011\", \"1010011001\"],\r\n      getDigit: function(code){\r\n        var table = \"0123456789-$:/.+\";\r\n        var i, index, result=\"\", intercharacter = '0';\r\n        \r\n        // add start : A->D : arbitrary choose A\r\n        result += this.encoding[16] + intercharacter;\r\n        \r\n        for(i=0; i<code.length; i++){\r\n          index = table.indexOf( code.charAt(i) );\r\n          if (index < 0) return(\"\");\r\n          result += this.encoding[ index ] + intercharacter;\r\n        }\r\n        \r\n        // add stop : A->D : arbitrary choose A\r\n        result += this.encoding[16];\r\n        return(result);\r\n      }\r\n    },\r\n    datamatrix: {\r\n      lengthRows:       [ 10, 12, 14, 16, 18, 20, 22, 24, 26,  // 24 squares et 6 rectangular\r\n                          32, 36, 40, 44, 48, 52, 64, 72, 80,  88, 96, 104, 120, 132, 144,\r\n                          8, 8, 12, 12, 16, 16],\r\n      lengthCols:       [ 10, 12, 14, 16, 18, 20, 22, 24, 26,  // Number of columns for the entire datamatrix\r\n                          32, 36, 40, 44, 48, 52, 64, 72, 80, 88, 96, 104, 120, 132, 144,\r\n                          18, 32, 26, 36, 36, 48],\r\n      dataCWCount:      [ 3, 5, 8, 12,  18,  22,  30,  36,  // Number of data codewords for the datamatrix\r\n                          44, 62, 86, 114, 144, 174, 204, 280, 368, 456, 576, 696, 816, 1050, \r\n                          1304, 1558, 5, 10, 16, 22, 32, 49],\r\n      solomonCWCount:   [ 5, 7, 10, 12, 14, 18, 20, 24, 28, // Number of Reed-Solomon codewords for the datamatrix\r\n                          36, 42, 48, 56, 68, 84, 112, 144, 192, 224, 272, 336, 408, 496, 620,\r\n                          7, 11, 14, 18, 24, 28],\r\n      dataRegionRows:   [ 8, 10, 12, 14, 16, 18, 20, 22, // Number of rows per region\r\n                          24, 14, 16, 18, 20, 22, 24, 14, 16, 18, 20, 22, 24, 18, 20, 22,\r\n                          6,  6, 10, 10, 14, 14],\r\n      dataRegionCols:   [ 8, 10, 12, 14, 16, 18, 20, 22, // Number of columns per region\r\n                          24, 14, 16, 18, 20, 22, 24, 14, 16, 18, 20, 22, 24, 18, 20, 22,\r\n                          16, 14, 24, 16, 16, 22],\r\n      regionRows:       [ 1, 1, 1, 1, 1, 1, 1, 1, // Number of regions per row\r\n                          1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 6, 6, 6,\r\n                          1, 1, 1, 1, 1, 1],\r\n      regionCols:       [ 1, 1, 1, 1, 1, 1, 1, 1, // Number of regions per column\r\n                          1, 2, 2, 2, 2, 2, 2, 4, 4, 4, 4, 4, 4, 6, 6, 6,\r\n                          1, 2, 1, 2, 2, 2],\r\n      interleavedBlocks:[ 1, 1, 1, 1, 1, 1, 1, 1, // Number of blocks\r\n                          1, 1, 1, 1, 1, 1, 2, 2, 4, 4, 4, 4, 6, 6, 8, 8,\r\n                          1, 1, 1, 1, 1, 1],\r\n      logTab:           [ -255, 255, 1, 240, 2, 225, 241, 53, 3,  // Table of log for the Galois field\r\n                          38, 226, 133, 242, 43, 54, 210, 4, 195, 39, 114, 227, 106, 134, 28, \r\n                          243, 140, 44, 23, 55, 118, 211, 234, 5, 219, 196, 96, 40, 222, 115, \r\n                          103, 228, 78, 107, 125, 135, 8, 29, 162, 244, 186, 141, 180, 45, 99, \r\n                          24, 49, 56, 13, 119, 153, 212, 199, 235, 91, 6, 76, 220, 217, 197, \r\n                          11, 97, 184, 41, 36, 223, 253, 116, 138, 104, 193, 229, 86, 79, 171, \r\n                          108, 165, 126, 145, 136, 34, 9, 74, 30, 32, 163, 84, 245, 173, 187, \r\n                          204, 142, 81, 181, 190, 46, 88, 100, 159, 25, 231, 50, 207, 57, 147, \r\n                          14, 67, 120, 128, 154, 248, 213, 167, 200, 63, 236, 110, 92, 176, 7, \r\n                          161, 77, 124, 221, 102, 218, 95, 198, 90, 12, 152, 98, 48, 185, 179, \r\n                          42, 209, 37, 132, 224, 52, 254, 239, 117, 233, 139, 22, 105, 27, 194, \r\n                          113, 230, 206, 87, 158, 80, 189, 172, 203, 109, 175, 166, 62, 127, \r\n                          247, 146, 66, 137, 192, 35, 252, 10, 183, 75, 216, 31, 83, 33, 73, \r\n                          164, 144, 85, 170, 246, 65, 174, 61, 188, 202, 205, 157, 143, 169, 82, \r\n                          72, 182, 215, 191, 251, 47, 178, 89, 151, 101, 94, 160, 123, 26, 112, \r\n                          232, 21, 51, 238, 208, 131, 58, 69, 148, 18, 15, 16, 68, 17, 121, 149, \r\n                          129, 19, 155, 59, 249, 70, 214, 250, 168, 71, 201, 156, 64, 60, 237, \r\n                          130, 111, 20, 93, 122, 177, 150],\r\n      aLogTab:          [ 1, 2, 4, 8, 16, 32, 64, 128, 45, 90, // Table of aLog for the Galois field\r\n                          180, 69, 138, 57, 114, 228, 229, 231, 227, 235, 251, 219, 155, 27, 54, \r\n                          108, 216, 157, 23, 46, 92, 184, 93, 186, 89, 178, 73, 146, 9, 18, 36, \r\n                          72, 144, 13, 26, 52, 104, 208, 141, 55, 110, 220, 149, 7, 14, 28, 56, \r\n                          112, 224, 237, 247, 195, 171, 123, 246, 193, 175, 115, 230, 225, 239, \r\n                          243, 203, 187, 91, 182, 65, 130, 41, 82, 164, 101, 202, 185, 95, 190, \r\n                          81, 162, 105, 210, 137, 63, 126, 252, 213, 135, 35, 70, 140, 53, 106, \r\n                          212, 133, 39, 78, 156, 21, 42, 84, 168, 125, 250, 217, 159, 19, 38, 76, \r\n                          152, 29, 58, 116, 232, 253, 215, 131, 43, 86, 172, 117, 234, 249, 223, \r\n                          147, 11, 22, 44, 88, 176, 77, 154, 25, 50, 100, 200, 189, 87, 174, 113, \r\n                          226, 233, 255, 211, 139, 59, 118, 236, 245, 199, 163, 107, 214, 129, \r\n                          47, 94, 188, 85, 170, 121, 242, 201, 191, 83, 166, 97, 194, 169, 127, \r\n                          254, 209, 143, 51, 102, 204, 181, 71, 142, 49, 98, 196, 165, 103, 206, \r\n                          177, 79, 158, 17, 34, 68, 136, 61, 122, 244, 197, 167, 99, 198, 161, \r\n                          111, 222, 145, 15, 30, 60, 120, 240, 205, 183, 67, 134, 33, 66, 132, \r\n                          37, 74, 148, 5, 10, 20, 40, 80, 160, 109, 218, 153, 31, 62, 124, 248, \r\n                          221, 151, 3, 6, 12, 24, 48, 96, 192, 173, 119, 238, 241, 207, 179, 75, \r\n                          150, 1],\r\n      champGaloisMult: function(a, b){  // MULTIPLICATION IN GALOIS FIELD GF(2^8)\r\n        if(!a || !b) return 0;\r\n        return this.aLogTab[(this.logTab[a] + this.logTab[b]) % 255];\r\n      },\r\n      champGaloisDoub: function(a, b){  // THE OPERATION a * 2^b IN GALOIS FIELD GF(2^8)\r\n        if (!a) return 0;\r\n        if (!b) return a;\r\n        return this.aLogTab[(this.logTab[a] + b) % 255];\r\n      },\r\n      champGaloisSum: function(a, b){ // SUM IN GALOIS FIELD GF(2^8)\r\n        return a ^ b;\r\n      },\r\n      selectIndex: function(dataCodeWordsCount, rectangular){ // CHOOSE THE GOOD INDEX FOR TABLES\r\n        if ((dataCodeWordsCount<1 || dataCodeWordsCount>1558) && !rectangular) return -1;\r\n        if ((dataCodeWordsCount<1 || dataCodeWordsCount>49) && rectangular)  return -1;\r\n        \r\n        var n = 0;\r\n        if ( rectangular ) n = 24;\r\n        \r\n        while (this.dataCWCount[n] < dataCodeWordsCount) n++;\r\n        return n;\r\n      },\r\n      encodeDataCodeWordsASCII: function(text) {\r\n        var dataCodeWords = new Array();\r\n        var n = 0, i, c;\r\n        for (i=0; i<text.length; i++){\r\n          c = text.charCodeAt(i);\r\n          if (c > 127) {  \r\n            dataCodeWords[n] = 235;\r\n            c = c - 127;\r\n            n++;\r\n          } else if ((c>=48 && c<=57) && (i+1<text.length) && (text.charCodeAt(i+1)>=48 && text.charCodeAt(i+1)<=57)) {\r\n            c = ((c - 48) * 10) + ((text.charCodeAt(i+1))-48);\r\n            c += 130;\r\n            i++;\r\n          } else c++; \r\n          dataCodeWords[n] = c;\r\n          n++;\r\n        }\r\n        return dataCodeWords;\r\n      },\r\n      addPadCW: function(tab, from, to){    \r\n        if (from >= to) return ;\r\n        tab[from] = 129;\r\n        var r, i;\r\n        for (i=from+1; i<to; i++){\r\n          r = ((149 * (i+1)) % 253) + 1;\r\n          tab[i] = (129 + r) % 254;\r\n        }\r\n      },\r\n      calculSolFactorTable: function(solomonCWCount){ // CALCULATE THE REED SOLOMON FACTORS\r\n        var g = new Array();\r\n        var i, j;\r\n        \r\n        for (i=0; i<=solomonCWCount; i++) g[i] = 1;\r\n        \r\n        for(i = 1; i <= solomonCWCount; i++) {\r\n          for(j = i - 1; j >= 0; j--) {\r\n            g[j] = this.champGaloisDoub(g[j], i);  \r\n            if(j > 0) g[j] = this.champGaloisSum(g[j], g[j-1]);\r\n          }\r\n        }\r\n        return g;\r\n      },\r\n      addReedSolomonCW: function(nSolomonCW, coeffTab, nDataCW, dataTab, blocks){ // Add the Reed Solomon codewords\r\n        var temp = 0;    \r\n        var errorBlocks = nSolomonCW / blocks;\r\n        var correctionCW = new Array();\r\n        \r\n        var i,j,k;\r\n        for(k = 0; k < blocks; k++) {      \r\n          for (i=0; i<errorBlocks; i++) correctionCW[i] = 0;\r\n          \r\n          for (i=k; i<nDataCW; i=i+blocks){    \r\n            temp = this.champGaloisSum(dataTab[i], correctionCW[errorBlocks-1]);\r\n            for (j=errorBlocks-1; j>=0; j--){     \r\n              if ( !temp ) {\r\n                correctionCW[j] = 0;\r\n              } else { \r\n                correctionCW[j] = this.champGaloisMult(temp, coeffTab[j]);\r\n              }\r\n              if (j>0) correctionCW[j] = this.champGaloisSum(correctionCW[j-1], correctionCW[j]);\r\n            }\r\n          }\r\n          // Renversement des blocs calcules\r\n          j = nDataCW + k;\r\n          for (i=errorBlocks-1; i>=0; i--){\r\n            dataTab[j] = correctionCW[i];\r\n            j=j+blocks;\r\n          }\r\n        }\r\n        return dataTab;\r\n      },\r\n      getBits: function(entier){ // Transform integer to tab of bits\r\n        var bits = new Array();\r\n        for (var i=0; i<8; i++){\r\n          bits[i] = entier & (128 >> i) ? 1 : 0;\r\n        }\r\n        return bits;\r\n      },\r\n      next: function(etape, totalRows, totalCols, codeWordsBits, datamatrix, assigned){ // Place codewords into the matrix\r\n        var chr = 0; // Place of the 8st bit from the first character to [4][0]\r\n        var row = 4;\r\n        var col = 0;\r\n        \r\n        do {\r\n          // Check for a special case of corner\r\n          if((row == totalRows) && (col == 0)){\r\n            this.patternShapeSpecial1(datamatrix, assigned, codeWordsBits[chr], totalRows, totalCols);  \r\n            chr++;\r\n          } else if((etape<3) && (row == totalRows-2) && (col == 0) && (totalCols%4 != 0)){\r\n            this.patternShapeSpecial2(datamatrix, assigned, codeWordsBits[chr], totalRows, totalCols);\r\n            chr++;\r\n          } else if((row == totalRows-2) && (col == 0) && (totalCols%8 == 4)){\r\n            this.patternShapeSpecial3(datamatrix, assigned, codeWordsBits[chr], totalRows, totalCols);\r\n            chr++;\r\n          }\r\n          else if((row == totalRows+4) && (col == 2) && (totalCols%8 == 0)){\r\n            this.patternShapeSpecial4(datamatrix, assigned, codeWordsBits[chr], totalRows, totalCols);\r\n            chr++;\r\n          }\r\n          \r\n          // Go up and right in the datamatrix\r\n          do {\r\n            if((row < totalRows) && (col >= 0) && (assigned[row][col]!=1)) {\r\n              this.patternShapeStandard(datamatrix, assigned, codeWordsBits[chr], row, col, totalRows, totalCols);\r\n              chr++;\r\n            }\r\n            row -= 2;\r\n            col += 2;      \r\n          } while ((row >= 0) && (col < totalCols));\r\n          row += 1;\r\n          col += 3;\r\n          \r\n          // Go down and left in the datamatrix\r\n          do {\r\n            if((row >= 0) && (col < totalCols) && (assigned[row][col]!=1)){\r\n              this.patternShapeStandard(datamatrix, assigned, codeWordsBits[chr], row, col, totalRows, totalCols);\r\n              chr++;\r\n            }\r\n            row += 2;\r\n            col -= 2;\r\n          } while ((row < totalRows) && (col >=0));\r\n          row += 3;\r\n          col += 1;\r\n        } while ((row < totalRows) || (col < totalCols));\r\n      },\r\n      patternShapeStandard: function(datamatrix, assigned, bits, row, col, totalRows, totalCols){ // Place bits in the matrix (standard or special case)\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[0], row-2, col-2, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[1], row-2, col-1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[2], row-1, col-2, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[3], row-1, col-1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[4], row-1, col, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[5], row, col-2, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[6], row, col-1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[7], row,  col, totalRows, totalCols);\r\n      },  \r\n      patternShapeSpecial1: function(datamatrix, assigned, bits, totalRows, totalCols ){\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[0], totalRows-1,  0, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[1], totalRows-1,  1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[2], totalRows-1,  2, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[3], 0, totalCols-2, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[4], 0, totalCols-1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[5], 1, totalCols-1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[6], 2, totalCols-1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[7], 3, totalCols-1, totalRows, totalCols);\r\n      },\r\n      patternShapeSpecial2: function(datamatrix, assigned, bits, totalRows, totalCols ){\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[0], totalRows-3,  0, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[1], totalRows-2,  0, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[2], totalRows-1,  0, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[3], 0, totalCols-4, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[4], 0, totalCols-3, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[5], 0, totalCols-2, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[6], 0, totalCols-1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[7], 1, totalCols-1, totalRows, totalCols);\r\n      },  \r\n      patternShapeSpecial3: function(datamatrix, assigned, bits, totalRows, totalCols ){\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[0], totalRows-3,  0, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[1], totalRows-2,  0, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[2], totalRows-1,  0, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[3], 0, totalCols-2, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[4], 0, totalCols-1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[5], 1, totalCols-1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[6], 2, totalCols-1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[7], 3, totalCols-1, totalRows, totalCols);\r\n      },\r\n      patternShapeSpecial4: function(datamatrix, assigned, bits, totalRows, totalCols ){\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[0], totalRows-1,  0, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[1], totalRows-1, totalCols-1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[2], 0, totalCols-3, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[3], 0, totalCols-2, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[4], 0, totalCols-1, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[5], 1, totalCols-3, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[6], 1, totalCols-2, totalRows, totalCols);\r\n        this.placeBitInDatamatrix(datamatrix, assigned, bits[7], 1, totalCols-1, totalRows, totalCols);\r\n      },\r\n      placeBitInDatamatrix: function(datamatrix, assigned, bit, row, col, totalRows, totalCols){ // Put a bit into the matrix\r\n        if (row < 0) {\r\n          row += totalRows;\r\n          col += 4 - ((totalRows+4)%8);\r\n        }\r\n        if (col < 0) {\r\n          col += totalCols;\r\n          row += 4 - ((totalCols+4)%8);\r\n        }\r\n        if (assigned[row][col] != 1) {\r\n          datamatrix[row][col] = bit;\r\n          assigned[row][col] = 1;\r\n        }\r\n      },\r\n      addFinderPattern: function(datamatrix, rowsRegion, colsRegion, rowsRegionCW, colsRegionCW){ // Add the finder pattern\r\n        var totalRowsCW = (rowsRegionCW+2) * rowsRegion;\r\n        var totalColsCW = (colsRegionCW+2) * colsRegion;\r\n        \r\n        var datamatrixTemp = new Array();\r\n        datamatrixTemp[0] = new Array();\r\n        for (var j=0; j<totalColsCW+2; j++){\r\n          datamatrixTemp[0][j] = 0;\r\n        }\r\n        for (var i=0; i<totalRowsCW; i++){\r\n          datamatrixTemp[i+1] = new Array();\r\n          datamatrixTemp[i+1][0] = 0;\r\n          datamatrixTemp[i+1][totalColsCW+1] = 0;\r\n          for (var j=0; j<totalColsCW; j++){\r\n            if (i%(rowsRegionCW+2) == 0){\r\n              if (j%2 == 0){\r\n                datamatrixTemp[i+1][j+1] = 1;\r\n              } else { \r\n                datamatrixTemp[i+1][j+1] = 0;\r\n              }\r\n            } else if (i%(rowsRegionCW+2) == rowsRegionCW+1){ \r\n              datamatrixTemp[i+1][j+1] = 1;\r\n            } else if (j%(colsRegionCW+2) == colsRegionCW+1){\r\n              if (i%2 == 0){\r\n                datamatrixTemp[i+1][j+1] = 0;\r\n              } else {\r\n                datamatrixTemp[i+1][j+1] = 1;\r\n              }\r\n            } else if (j%(colsRegionCW+2) == 0){ \r\n              datamatrixTemp[i+1][j+1] = 1;\r\n            } else{\r\n              datamatrixTemp[i+1][j+1] = 0;\r\n              datamatrixTemp[i+1][j+1] = datamatrix[i-1-(2*(parseInt(i/(rowsRegionCW+2))))][j-1-(2*(parseInt(j/(colsRegionCW+2))))];\r\n            }\r\n          }\r\n        }\r\n        datamatrixTemp[totalRowsCW+1] = new Array();\r\n        for (var j=0; j<totalColsCW+2; j++){\r\n          datamatrixTemp[totalRowsCW+1][j] = 0;\r\n        }\r\n        return datamatrixTemp;\r\n      },\r\n      getDigit: function(text, rectangular){\r\n        var dataCodeWords = this.encodeDataCodeWordsASCII(text); // Code the text in the ASCII mode\r\n        var dataCWCount = dataCodeWords.length;\r\n        var index = this.selectIndex(dataCWCount, rectangular); // Select the index for the data tables\r\n        var totalDataCWCount = this.dataCWCount[index]; // Number of data CW\r\n        var solomonCWCount = this.solomonCWCount[index]; // Number of Reed Solomon CW \r\n        var totalCWCount = totalDataCWCount + solomonCWCount; // Number of CW      \r\n        var rowsTotal = this.lengthRows[index]; // Size of symbol\r\n        var colsTotal = this.lengthCols[index];\r\n        var rowsRegion = this.regionRows[index]; // Number of region\r\n        var colsRegion = this.regionCols[index];\r\n        var rowsRegionCW = this.dataRegionRows[index];\r\n        var colsRegionCW = this.dataRegionCols[index];\r\n        var rowsLengthMatrice = rowsTotal-2*rowsRegion; // Size of matrice data\r\n        var colsLengthMatrice = colsTotal-2*colsRegion;\r\n        var blocks = this.interleavedBlocks[index];  // Number of Reed Solomon blocks\r\n        var errorBlocks = (solomonCWCount / blocks);\r\n        \r\n        this.addPadCW(dataCodeWords, dataCWCount, totalDataCWCount); // Add codewords pads\r\n        \r\n        var g = this.calculSolFactorTable(errorBlocks); // Calculate correction coefficients\r\n        \r\n        this.addReedSolomonCW(solomonCWCount, g, totalDataCWCount, dataCodeWords, blocks); // Add Reed Solomon codewords\r\n        \r\n        var codeWordsBits = new Array(); // Calculte bits from codewords\r\n        for (var i=0; i<totalCWCount; i++){\r\n          codeWordsBits[i] = this.getBits(dataCodeWords[i]);\r\n        }\r\n        \r\n        var datamatrix = new Array(); // Put data in the matrix\r\n        var assigned = new Array();\r\n        \r\n        for (var i=0; i<colsLengthMatrice; i++){\r\n          datamatrix[i] = new Array();\r\n          assigned[i] = new Array();\r\n        }\r\n        \r\n        // Add the bottom-right corner if needed\r\n        if ( ((rowsLengthMatrice * colsLengthMatrice) % 8) == 4) {\r\n          datamatrix[rowsLengthMatrice-2][colsLengthMatrice-2] = 1;\r\n          datamatrix[rowsLengthMatrice-1][colsLengthMatrice-1] = 1;\r\n          datamatrix[rowsLengthMatrice-1][colsLengthMatrice-2] = 0;\r\n          datamatrix[rowsLengthMatrice-2][colsLengthMatrice-1] = 0;\r\n          assigned[rowsLengthMatrice-2][colsLengthMatrice-2] = 1;\r\n          assigned[rowsLengthMatrice-1][colsLengthMatrice-1] = 1;\r\n          assigned[rowsLengthMatrice-1][colsLengthMatrice-2] = 1;\r\n          assigned[rowsLengthMatrice-2][colsLengthMatrice-1] = 1;\r\n        }\r\n        \r\n        // Put the codewords into the matrix\r\n        this.next(0,rowsLengthMatrice,colsLengthMatrice, codeWordsBits, datamatrix, assigned);\r\n        \r\n        // Add the finder pattern\r\n        datamatrix = this.addFinderPattern(datamatrix, rowsRegion, colsRegion, rowsRegionCW, colsRegionCW);\r\n        \r\n        return datamatrix;\r\n      }\r\n    },\r\n    // little endian convertor\r\n    lec:{\r\n      // convert an int\r\n      cInt: function(value, byteCount){\r\n        var le = '';\r\n        for(var i=0; i<byteCount; i++){\r\n          le += String.fromCharCode(value & 0xFF);\r\n          value = value >> 8;\r\n        }\r\n        return le;\r\n      },\r\n      // return a byte string from rgb values \r\n      cRgb: function(r,g,b){\r\n        return String.fromCharCode(b) + String.fromCharCode(g) + String.fromCharCode(r);\r\n      },\r\n      // return a byte string from a hex string color\r\n      cHexColor: function(hex){\r\n        var v = parseInt('0x' + hex.substr(1));\r\n        var b = v & 0xFF;\r\n        v = v >> 8;\r\n        var g = v & 0xFF;\r\n        var r = v >> 8;\r\n        return(this.cRgb(r,g,b));\r\n      }\r\n    },\r\n    hexToRGB: function(hex){\r\n      var v = parseInt('0x' + hex.substr(1));\r\n      var b = v & 0xFF;\r\n      v = v >> 8;\r\n      var g = v & 0xFF;\r\n      var r = v >> 8;\r\n      return({r:r,g:g,b:b});\r\n    },\r\n    // test if a string is a hexa string color (like #FF0000)\r\n    isHexColor: function (value){\r\n      var r = new RegExp(\"#[0-91-F]\", \"gi\");\r\n      return  value.match(r);\r\n    },\r\n    // encode data in base64\r\n    base64Encode: function(value) {\r\n      var r = '', c1, c2, c3, b1, b2, b3, b4;\r\n      var k = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n      var i = 0;\r\n      while (i < value.length) {\r\n        c1 = value.charCodeAt(i++);\r\n        c2 = value.charCodeAt(i++);\r\n        c3 = value.charCodeAt(i++);\r\n        b1 = c1 >> 2;\r\n        b2 = ((c1 & 3) << 4) | (c2 >> 4);\r\n        b3 = ((c2 & 15) << 2) | (c3 >> 6);\r\n        b4 = c3 & 63;\r\n        if (isNaN(c2)) b3 = b4 = 64;\r\n        else if (isNaN(c3)) b4 = 64;\r\n        r += k.charAt(b1) + k.charAt(b2) + k.charAt(b3) + k.charAt(b4);\r\n      }\r\n      return r;\r\n    },\r\n    // convert a bit string to an array of array of bit char\r\n    bitStringTo2DArray: function( digit ){\r\n      var d = []; d[0] = [];\r\n      for(var i=0; i<digit.length; i++) d[0][i] = digit.charAt(i);\r\n      return(d);\r\n    },\r\n    // clear jQuery Target\r\n    resize: function($container, w){\r\n      $container\r\n        .css(\"padding\", \"0px\")\r\n        .css(\"overflow\", \"auto\")\r\n        .css(\"width\", w + \"px\")\r\n        .html(\"\");\r\n        return $container;\r\n    },\r\n    // bmp barcode renderer\r\n    digitToBmpRenderer: function($container, settings, digit, hri, mw, mh){\r\n      var lines = digit.length;\r\n      var columns = digit[0].length;\r\n      var i = 0;\r\n      var c0 = this.isHexColor(settings.bgColor) ? this.lec.cHexColor(settings.bgColor) : this.lec.cRgb(255,255,255);\r\n      var c1 = this.isHexColor(settings.color) ? this.lec.cHexColor(settings.color) : this.lec.cRgb(0,0,0);\r\n      var bar0 = '';\r\n      var bar1 = '';\r\n        \r\n      // create one bar 0 and 1 of \"mw\" byte length \r\n      for(i=0; i<mw; i++){\r\n        bar0 += c0;\r\n        bar1 += c1;\r\n      }\r\n      var bars = '';\r\n    \r\n      var padding = (4 - ((mw * columns * 3) % 4)) % 4; // Padding for 4 byte alignment (\"* 3\" come from \"3 byte to color R, G and B\")\r\n      var dataLen = (mw * columns + padding) * mh * lines;\r\n    \r\n      var pad = '';\r\n      for(i=0; i<padding; i++) pad += '\\0';\r\n      \r\n      // Bitmap header\r\n      var bmp = 'BM' +                            // Magic Number\r\n                this.lec.cInt(54 + dataLen, 4) +  // Size of Bitmap size (header size + data len)\r\n                '\\0\\0\\0\\0' +                      // Unused\r\n                this.lec.cInt(54, 4) +            // The offset where the bitmap data (pixels) can be found\r\n                this.lec.cInt(40, 4) +            // The number of bytes in the header (from this point).\r\n                this.lec.cInt(mw * columns, 4) +  // width\r\n                this.lec.cInt(mh * lines, 4) +    // height\r\n                this.lec.cInt(1, 2) +             // Number of color planes being used\r\n                this.lec.cInt(24, 2) +            // The number of bits/pixel\r\n                '\\0\\0\\0\\0' +                      // BI_RGB, No compression used\r\n                this.lec.cInt(dataLen, 4) +       // The size of the raw BMP data (after this header)\r\n                this.lec.cInt(2835, 4) +          // The horizontal resolution of the image (pixels/meter)\r\n                this.lec.cInt(2835, 4) +          // The vertical resolution of the image (pixels/meter)\r\n                this.lec.cInt(0, 4) +             // Number of colors in the palette\r\n                this.lec.cInt(0, 4);              // Means all colors are important\r\n      // Bitmap Data\r\n      for(var y=lines-1; y>=0; y--){\r\n        var line = '';\r\n        for (var x=0; x<columns; x++){\r\n          line += digit[y][x] == '0' ? bar0 : bar1;\r\n        }\r\n        line += pad;\r\n        for(var k=0; k<mh; k++){\r\n          bmp += line;\r\n        }\r\n      }\r\n      // set bmp image to the container\r\n      var object = document.createElement('object');\r\n      object.setAttribute('type', 'image/bmp');\r\n      object.setAttribute('data', 'data:image/bmp;base64,'+ this.base64Encode(bmp));\r\n      this.resize($container, mw * columns + padding).append(object);\r\n                      \r\n    },\r\n    // bmp 1D barcode renderer\r\n    digitToBmp: function($container, settings, digit, hri){\r\n      var w = barcode.intval(settings.barWidth);\r\n      var h = barcode.intval(settings.barHeight);\r\n      this.digitToBmpRenderer($container, settings, this.bitStringTo2DArray(digit), hri, w, h);\r\n    },\r\n    // bmp 2D barcode renderer\r\n    digitToBmp2D: function($container, settings, digit, hri){\r\n      var s = barcode.intval(settings.moduleSize);\r\n      this.digitToBmpRenderer($container, settings, digit, hri, s, s);\r\n    },\r\n    // css barcode renderer\r\n    digitToCssRenderer : function($container, settings, digit, hri, mw, mh){\r\n      var lines = digit.length;\r\n      var columns = digit[0].length;\r\n      var content = \"\";\r\n      var bar0 = \"<div style=\\\"float: left; font-size: 0px; background-color: \" + settings.bgColor + \"; height: \" + mh + \"px; width: &Wpx\\\"></div>\";    \r\n      var bar1 = \"<div style=\\\"float: left; font-size: 0px; width:0; border-left: &Wpx solid \" + settings.color + \"; height: \" + mh + \"px;\\\"></div>\";\r\n  \r\n      var len, current;\r\n      for(var y=0; y<lines; y++){\r\n        len = 0;\r\n        current = digit[y][0];\r\n        for (var x=0; x<columns; x++){\r\n          if ( current == digit[y][x] ) {\r\n            len++;\r\n          } else {\r\n            content += (current == '0' ? bar0 : bar1).replace(\"&W\", len * mw);\r\n            current = digit[y][x];\r\n            len=1;\r\n          }\r\n        }\r\n        if (len > 0){\r\n          content += (current == '0' ? bar0 : bar1).replace(\"&W\", len * mw);\r\n        }\r\n      }  \r\n      if (settings.showHRI){\r\n        content += \"<div style=\\\"clear:both; width: 100%; background-color: \" + settings.bgColor + \"; color: \" + settings.color + \"; text-align: center; font-size: \" + settings.fontSize + \"px; margin-top: \" + settings.marginHRI + \"px;\\\">\"+hri+\"</div>\";\r\n      }\r\n      this.resize($container, mw * columns).html(content);\r\n    },\r\n    // css 1D barcode renderer  \r\n    digitToCss: function($container, settings, digit, hri){\r\n      var w = barcode.intval(settings.barWidth);\r\n      var h = barcode.intval(settings.barHeight);\r\n      this.digitToCssRenderer($container, settings, this.bitStringTo2DArray(digit), hri, w, h);\r\n    },\r\n    // css 2D barcode renderer\r\n    digitToCss2D: function($container, settings, digit, hri){\r\n      var s = barcode.intval(settings.moduleSize);\r\n      this.digitToCssRenderer($container, settings, digit, hri, s, s);\r\n    },\r\n    // svg barcode renderer\r\n    digitToSvgRenderer: function($container, settings, digit, hri, mw, mh){\r\n      var lines = digit.length;\r\n      var columns = digit[0].length;\r\n      \r\n      var width = mw * columns;\r\n      var height = mh * lines;\r\n      if (settings.showHRI){\r\n        var fontSize = barcode.intval(settings.fontSize);\r\n        height += barcode.intval(settings.marginHRI) + fontSize;\r\n      }\r\n      \r\n      // svg header\r\n      var svg = '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"' + width + '\" height=\"' + height + '\">';\r\n      \r\n      // background\r\n      svg += '<rect width=\"' +  width + '\" height=\"' + height + '\" x=\"0\" y=\"0\" fill=\"' + settings.bgColor + '\" />';\r\n      \r\n      var bar1 = '<rect width=\"&W\" height=\"' + mh + '\" x=\"&X\" y=\"&Y\" fill=\"' + settings.color + '\" />';\r\n      \r\n      var len, current;\r\n      for(var y=0; y<lines; y++){\r\n        len = 0;\r\n        current = digit[y][0];\r\n        for (var x=0; x<columns; x++){\r\n          if ( current == digit[y][x] ) {\r\n            len++;\r\n          } else {\r\n            if (current == '1') {\r\n              svg += bar1.replace(\"&W\", len * mw).replace(\"&X\", (x - len) * mw).replace(\"&Y\", y * mh);\r\n            }\r\n            current = digit[y][x];\r\n            len=1;\r\n          }\r\n        }\r\n        if ( (len > 0) && (current == '1') ){\r\n          svg += bar1.replace(\"&W\", len * mw).replace(\"&X\", (columns - len) * mw).replace(\"&Y\", y * mh);\r\n        }\r\n      }\r\n      \r\n      if (settings.showHRI){\r\n        svg += '<g transform=\"translate(' + Math.floor(width/2) + ' 0)\">';\r\n        svg += '<text y=\"' + (height - Math.floor(fontSize/2)) + '\" text-anchor=\"middle\" style=\"font-family: Arial; font-size: ' + fontSize + 'px;\" fill=\"' + settings.color + '\">' + hri + '</text>';\r\n        svg += '</g>';\r\n      }\r\n      // svg footer\r\n      svg += '</svg>';\r\n      \r\n      // create a dom object, flush container and add object to the container\r\n      var object = document.createElement('object');\r\n      object.setAttribute('type', 'image/svg+xml');\r\n      object.setAttribute('data', 'data:image/svg+xml,'+ svg);\r\n      this.resize($container, width).append(object);\r\n    },\r\n    // svg 1D barcode renderer\r\n    digitToSvg: function($container, settings, digit, hri){\r\n      var w = barcode.intval(settings.barWidth);\r\n      var h = barcode.intval(settings.barHeight);\r\n      this.digitToSvgRenderer($container, settings, this.bitStringTo2DArray(digit), hri, w, h);\r\n    },\r\n    // svg 2D barcode renderer\r\n    digitToSvg2D: function($container, settings, digit, hri){\r\n      var s = barcode.intval(settings.moduleSize);\r\n      this.digitToSvgRenderer($container, settings, digit, hri, s, s);\r\n    },\r\n    \r\n    // canvas barcode renderer\r\n    digitToCanvasRenderer : function($container, settings, digit, hri, xi, yi, mw, mh){\r\n      var canvas = $container.get(0);\r\n      if ( !canvas || !canvas.getContext ) return; // not compatible\r\n      \r\n      var lines = digit.length;\r\n      var columns = digit[0].length;\r\n      \r\n      var ctx = canvas.getContext('2d');\r\n      ctx.lineWidth = 1;\r\n      ctx.lineCap = 'butt';\r\n      ctx.fillStyle = settings.bgColor;\r\n      ctx.fillRect (xi, yi, columns * mw, lines * mh);\r\n      \r\n      ctx.fillStyle = settings.color;\r\n      \r\n      for(var y=0; y<lines; y++){\r\n        var len = 0;\r\n        var current = digit[y][0];\r\n        for(var x=0; x<columns; x++){\r\n          if (current == digit[y][x]) {\r\n            len++;\r\n          } else {\r\n            if (current == '1'){\r\n              ctx.fillRect (xi + (x - len) * mw, yi + y * mh, mw * len, mh);\r\n            }\r\n            current = digit[y][x];\r\n            len=1;\r\n          }\r\n        }\r\n        if ( (len > 0) && (current == '1') ){\r\n          ctx.fillRect (xi + (columns - len) * mw, yi + y * mh, mw * len, mh);\r\n        }\r\n      }\r\n      if (settings.showHRI){\r\n        var dim = ctx.measureText(hri);\r\n        ctx.fillText(hri, xi + Math.floor((columns * mw - dim.width)/2), yi + lines * mh + settings.fontSize + settings.marginHRI);\r\n      }\r\n    },\r\n    // canvas 1D barcode renderer\r\n    digitToCanvas: function($container, settings, digit, hri){\r\n      var w  = barcode.intval(settings.barWidth);\r\n      var h = barcode.intval(settings.barHeight);\r\n      var x = barcode.intval(settings.posX);\r\n      var y = barcode.intval(settings.posY);\r\n      this.digitToCanvasRenderer($container, settings, this.bitStringTo2DArray(digit), hri, x, y, w, h);\r\n    },\r\n    // canvas 2D barcode renderer\r\n    digitToCanvas2D: function($container, settings, digit, hri){\r\n      var s = barcode.intval(settings.moduleSize);\r\n      var x = barcode.intval(settings.posX);\r\n      var y = barcode.intval(settings.posY);\r\n      this.digitToCanvasRenderer($container, settings, digit, hri, x, y, s, s);\r\n    }\r\n  };\r\n  \r\n  $.fn.extend({\r\n    barcode: function(datas, type, settings) {\r\n      var digit = \"\",\r\n          hri   = \"\",\r\n          code  = \"\",\r\n          crc   = true,\r\n          rect  = false,\r\n          b2d   = false;\r\n      \r\n      if (typeof(datas) == \"string\"){\r\n        code = datas;\r\n      } else if (typeof(datas) == \"object\"){\r\n        code = typeof(datas.code) == \"string\" ? datas.code : \"\";\r\n        crc = typeof(datas.crc) != \"undefined\" ? datas.crc : true;\r\n        rect = typeof(datas.rect) != \"undefined\" ? datas.rect : false;\r\n      }\r\n      if (code == \"\") return(false);\r\n      \r\n      if (typeof(settings) == \"undefined\") settings = [];\r\n      for(var name in barcode.settings){\r\n        if (settings[name] == undefined) settings[name] = barcode.settings[name];\r\n      }\r\n      \r\n      switch(type){\r\n        case \"std25\":\r\n        case \"int25\":\r\n          digit = barcode.i25.getDigit(code, crc, type);\r\n          hri = barcode.i25.compute(code, crc, type);\r\n        break;\r\n        case \"ean8\":\r\n        case \"ean13\":\r\n          digit = barcode.ean.getDigit(code, type);\r\n          hri = barcode.ean.compute(code, type);\r\n        break;\r\n        case \"upc\":\r\n          digit = barcode.upc.getDigit(code);\r\n          hri = barcode.upc.compute(code);\r\n        break;\r\n        case \"code11\":\r\n          digit = barcode.code11.getDigit(code);\r\n          hri = code;\r\n        break;\r\n        case \"code39\":\r\n          digit = barcode.code39.getDigit(code);\r\n          hri = code;\r\n        break;\r\n        case \"code93\":\r\n          digit = barcode.code93.getDigit(code, crc);\r\n          hri = code;\r\n        break;\r\n        case \"code128\":\r\n          digit = barcode.code128.getDigit(code);\r\n          hri = code;\r\n        break;\r\n        case \"codabar\":\r\n          digit = barcode.codabar.getDigit(code);\r\n          hri = code;\r\n        break;\r\n        case \"msi\":\r\n          digit = barcode.msi.getDigit(code, crc);\r\n          hri = barcode.msi.compute(code, crc);\r\n        break;\r\n        case \"datamatrix\":   \r\n          digit = barcode.datamatrix.getDigit(code, rect);\r\n          hri = code;\r\n          b2d = true;\r\n        break; \r\n      }\r\n      if (digit.length == 0) return($(this));\r\n      \r\n      // Quiet Zone\r\n      if ( !b2d && settings.addQuietZone) digit = \"0000000000\" + digit + \"0000000000\";\r\n      \r\n      var $this = $(this);\r\n      var fname = 'digitTo' + settings.output.charAt(0).toUpperCase() + settings.output.substr(1) + (b2d ? '2D' : '');\r\n      if (typeof(barcode[fname]) == 'function') {\r\n        barcode[fname]($this, settings, digit, hri);\r\n      }\r\n      \r\n      return($this);\r\n    }\r\n  });\r\n\r\n}(jQuery));","Magestore_Webpos/js/lib/jquery.fullscreen.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\nrequire(['jquery'], function (jQuery) {\n    /**\n     * @preserve jquery.fullscreen 1.1.5\n     * https://github.com/kayahr/jquery-fullscreen-plugin\n     * Copyright (C) 2012-2013 Klaus Reimer <k@ailis.de>\n     * Licensed under the MIT license\n     * (See http://www.opensource.org/licenses/mit-license)\n     */\n\n    (function(jQuery) {\n\n    /**\n     * Sets or gets the fullscreen state.\n     * \n     * @param {boolean=} state\n     *            True to enable fullscreen mode, false to disable it. If not\n     *            specified then the current fullscreen state is returned.\n     * @return {boolean|Element|jQuery|null}\n     *            When querying the fullscreen state then the current fullscreen\n     *            element (or true if browser doesn't support it) is returned\n     *            when browser is currently in full screen mode. False is returned\n     *            if browser is not in full screen mode. Null is returned if \n     *            browser doesn't support fullscreen mode at all. When setting \n     *            the fullscreen state then the current jQuery selection is \n     *            returned for chaining.\n     * @this {jQuery}\n     */\n    function fullScreen(state)\n    {\n        var e, func, doc;\n\n        // Do nothing when nothing was selected\n        if (!this.length) return this;\n\n        // We only use the first selected element because it doesn't make sense\n        // to fullscreen multiple elements.\n        e = (/** @type {Element} */ this[0]);\n\n        // Find the real element and the document (Depends on whether the\n        // document itself or a HTML element was selected)\n        if (e.ownerDocument)\n        {\n            doc = e.ownerDocument;\n        }\n        else\n        {\n            doc = e;\n            e = doc.documentElement;\n        }\n\n        // When no state was specified then return the current state.\n        if (state == null)\n        {\n            // When fullscreen mode is not supported then return null\n            if (!((/** @type {?Function} */ doc[\"exitFullscreen\"])\n                || (/** @type {?Function} */ doc[\"webkitExitFullscreen\"])\n                || (/** @type {?Function} */ doc[\"webkitCancelFullScreen\"])\n                || (/** @type {?Function} */ doc[\"msExitFullscreen\"])\n                || (/** @type {?Function} */ doc[\"mozCancelFullScreen\"])))\n            {\n                return null;\n            }\n\n            // Check fullscreen state\n            state = !!doc[\"fullscreenElement\"]\n                || !!doc[\"msFullscreenElement\"]\n                || !!doc[\"webkitIsFullScreen\"]\n                || !!doc[\"mozFullScreen\"];\n            if (!state) return state;\n\n            // Return current fullscreen element or \"true\" if browser doesn't\n            // support this\n            return (/** @type {?Element} */ doc[\"fullscreenElement\"])\n                || (/** @type {?Element} */ doc[\"webkitFullscreenElement\"])\n                || (/** @type {?Element} */ doc[\"webkitCurrentFullScreenElement\"])\n                || (/** @type {?Element} */ doc[\"msFullscreenElement\"])\n                || (/** @type {?Element} */ doc[\"mozFullScreenElement\"])\n                || state;\n        }\n\n        // When state was specified then enter or exit fullscreen mode.\n        if (state)\n        {\n            // Enter fullscreen\n            func = (/** @type {?Function} */ e[\"requestFullscreen\"])\n                || (/** @type {?Function} */ e[\"webkitRequestFullscreen\"])\n                || (/** @type {?Function} */ e[\"webkitRequestFullScreen\"])\n                || (/** @type {?Function} */ e[\"msRequestFullscreen\"])\n                || (/** @type {?Function} */ e[\"mozRequestFullScreen\"]);\n            if (func) \n            {\n                func.call(e);\n            }\n            return this;\n        }\n        else\n        {\n            // Exit fullscreen\n            func = (/** @type {?Function} */ doc[\"exitFullscreen\"])\n                || (/** @type {?Function} */ doc[\"webkitExitFullscreen\"])\n                || (/** @type {?Function} */ doc[\"webkitCancelFullScreen\"])\n                || (/** @type {?Function} */ doc[\"msExitFullscreen\"])\n                || (/** @type {?Function} */ doc[\"mozCancelFullScreen\"]);\n            if (func) func.call(doc);\n            return this;\n        }\n    }\n\n    /**\n     * Toggles the fullscreen mode.\n     * \n     * @return {!jQuery}\n     *            The jQuery selection for chaining.\n     * @this {jQuery}\n     */\n    function toggleFullScreen()\n    {\n        return (/** @type {!jQuery} */ fullScreen.call(this, \n            !fullScreen.call(this)));\n    }\n\n    /**\n     * Handles the browser-specific fullscreenchange event and triggers\n     * a jquery event for it.\n     *\n     * @param {?Event} event\n     *            The fullscreenchange event.\n     */\n    function fullScreenChangeHandler(event)\n    {\n        jQuery(document).trigger(new jQuery.Event(\"fullscreenchange\"));\n    }\n\n    /**\n     * Handles the browser-specific fullscreenerror event and triggers\n     * a jquery event for it.\n     *\n     * @param {?Event} event\n     *            The fullscreenerror event.\n     */\n    function fullScreenErrorHandler(event)\n    {\n        jQuery(document).trigger(new jQuery.Event(\"fullscreenerror\"));\n    }\n\n    /**\n     * Installs the fullscreenchange event handler.\n     */\n    function installFullScreenHandlers()\n    {\n        var e, change, error;\n\n        // Determine event name\n        e = document;\n        if (e[\"webkitCancelFullScreen\"])\n        {\n            change = \"webkitfullscreenchange\";\n            error = \"webkitfullscreenerror\";\n        }\n        else if (e[\"msExitFullscreen\"])\n        {\n            change = \"MSFullscreenChange\";\n            error = \"MSFullscreenError\";\n        }\n        else if (e[\"mozCancelFullScreen\"])\n        {\n            change = \"mozfullscreenchange\";\n            error = \"mozfullscreenerror\";\n        }\n        else \n        {\n            change = \"fullscreenchange\";\n            error = \"fullscreenerror\";\n        }\n\n        // Install the event handlers\n        jQuery(document).bind(change, fullScreenChangeHandler);\n        jQuery(document).bind(error, fullScreenErrorHandler);\n    }\n\n    jQuery.fn[\"fullScreen\"] = fullScreen;\n    jQuery.fn[\"toggleFullScreen\"] = toggleFullScreen;\n    installFullScreenHandlers();\n\n    })(jQuery);\n});","Magestore_Webpos/js/lib/cookie.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n;(function (factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t} else {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\treturn (document.cookie = [\n\t\t\t\t\tkey, '=', value,\n\t\t\t\t\tattributes.expires ? '; expires=' + attributes.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE\n\t\t\t\t\tattributes.path ? '; path=' + attributes.path : '',\n\t\t\t\t\tattributes.domain ? '; domain=' + attributes.domain : '',\n\t\t\t\t\tattributes.secure ? '; secure' : ''\n\t\t\t\t].join(''));\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api(key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","js/theme.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'mage/smart-keyboard-handler',\n    'mage/mage',\n    'mage/ie-class-fixer',\n    'domReady!'\n], function ($, keyboardHandler) {\n    'use strict';\n\n    if ($('body').hasClass('checkout-cart-index')) {\n        if ($('#co-shipping-method-form .fieldset.rates').length > 0 && $('#co-shipping-method-form .fieldset.rates :checked').length === 0) {\n            $('#block-shipping').on('collapsiblecreate', function () {\n                $('#block-shipping').collapsible('forceActivate');\n            });\n        }\n    }\n\n    $('.cart-summary').mage('sticky', {\n        container: '#maincontent'\n    });\n\n    $('.panel.header > .header.links').clone().appendTo('#store\\\\.links');\n\n    keyboardHandler.apply();\n});\n","mage/url.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint regexdash:true eqnull:true browser:true jquery:true*/\ndefine([], function () {\n    var baseUrl = '';\n    return {\n        setBaseUrl: function (url) {\n            baseUrl = url;\n        },\n        build: function(path) {\n            if (path.indexOf(baseUrl) != -1) {\n                return path;\n            }\n            return baseUrl + path;\n        }\n    }\n});\n","mage/tooltip.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n\t'use strict';\n\t\n\t//Widget Wrapper\n\t$.widget('mage.tooltip', $.ui.tooltip, {\n\t});\n\n    return $.mage.tooltip;\n});\n"}
    }
});
