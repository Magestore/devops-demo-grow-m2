require.config({
    config: {
        'jsbuild':{"Magento_Ups/js/model/shipping-rates-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'mageUtils',\n        'Magento_Ups/js/model/shipping-rates-validation-rules',\n        'mage/translate'\n    ],\n    function ($, utils, validationRules, $t) {\n        'use strict';\n        return {\n            validationErrors: [],\n            validate: function (address) {\n                var self = this;\n\n                this.validationErrors = [];\n                $.each(validationRules.getRules(), function (field, rule) {\n                    if (rule.required && utils.isEmpty(address[field])) {\n                        var message = $t('Field ') + field + $t(' is required.');\n\n                        self.validationErrors.push(message);\n                    }\n                });\n\n                return !Boolean(this.validationErrors.length);\n            }\n        };\n    }\n);\n","Magento_Ups/js/view/shipping-rates-validation.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'Magento_Checkout/js/model/shipping-rates-validation-rules',\n        'Magento_Ups/js/model/shipping-rates-validator',\n        'Magento_Ups/js/model/shipping-rates-validation-rules'\n    ],\n    function (\n        Component,\n        defaultShippingRatesValidator,\n        defaultShippingRatesValidationRules,\n        upsShippingRatesValidator,\n        upsShippingRatesValidationRules\n    ) {\n        'use strict';\n        defaultShippingRatesValidator.registerValidator('ups', upsShippingRatesValidator);\n        defaultShippingRatesValidationRules.registerRules('ups', upsShippingRatesValidationRules);\n\n        return Component;\n    }\n);\n","Magento_ProductVideo/js/fotorama-add-video-events.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery/ui',\n    'catalogGallery',\n    'Magento_ProductVideo/js/load-player'\n], function ($) {\n    'use strict';\n\n    /**\n     * @private\n     */\n    var allowBase = true; //global var is needed because fotorama always fully reloads events in case of fullscreen\n\n    /**\n     * @private\n     */\n    function parseHref(href) {\n        var a = document.createElement('a');\n\n        a.href = href;\n\n        return a;\n    }\n\n    /**\n     * @private\n     */\n    function parseURL(href, forceVideo) {\n        var id,\n            type,\n            ampersandPosition,\n            vimeoRegex;\n\n        /**\n         * Get youtube ID\n         * @param {String} srcid\n         * @returns {{}}\n         */\n        function _getYoutubeId(srcid) {\n            if (srcid) {\n                ampersandPosition = srcid.indexOf('&');\n\n                if (ampersandPosition === -1) {\n                    return srcid;\n                }\n\n                srcid = srcid.substring(0, ampersandPosition);\n            }\n\n            return srcid;\n        }\n\n        if (typeof href !== 'string') {\n            return href;\n        }\n\n        href = parseHref(href);\n\n        if (href.host.match(/youtube\\.com/) && href.search) {\n            id = href.search.split('v=')[1];\n\n            if (id) {\n                id = _getYoutubeId(id);\n                type = 'youtube';\n            }\n        } else if (href.host.match(/youtube\\.com|youtu\\.be/)) {\n            id = href.pathname.replace(/^\\/(embed\\/|v\\/)?/, '').replace(/\\/.*/, '');\n            type = 'youtube';\n        } else if (href.host.match(/vimeo\\.com/)) {\n            type = 'vimeo';\n            vimeoRegex = new RegExp(['https?:\\\\/\\\\/(?:www\\\\.|player\\\\.)?vimeo.com\\\\/(?:channels\\\\/(?:\\\\w+\\\\/)',\n                '?|groups\\\\/([^\\\\/]*)\\\\/videos\\\\/|album\\\\/(\\\\d+)\\\\/video\\\\/|video\\\\/|)(\\\\d+)(?:$|\\\\/|\\\\?)'\n            ].join(''));\n            id = href.href.match(vimeoRegex)[3];\n        }\n\n        if ((!id || !type) && forceVideo) {\n            id = href.href;\n            type = 'custom';\n        }\n\n        return id ? {\n            id: id, type: type, s: href.search.replace(/^\\?/, '')\n        } : false;\n    }\n\n    //create AddFotoramaVideoEvents widget\n    $.widget('mage.AddFotoramaVideoEvents', {\n        options: {\n            videoData: '',\n            videoSettings: '',\n            optionsVideoData: ''\n        },\n\n        PV: 'product-video', // [CONST]\n        VU: 'video-unplayed',\n        PVLOADED: 'fotorama__product-video--loaded', // [CONST]\n        VID: 'video', // [CONST]\n        VI: 'vimeo', // [CONST]\n        FTVC: 'fotorama__video-close',\n        FTAR: 'fotorama__arr',\n        TI: 'video-thumb-icon',\n        isFullscreen: false,\n        FTCF: '[data-gallery-role=\"fotorama__fullscreen-icon\"]',\n        Base: 0, //on check for video is base this setting become true if there is any video with base role\n        MobileMaxWidth: 767,\n        GP: 'gallery-placeholder', //gallery placeholder class is needed to find and erase <script> tag\n        videoData: null,\n\n        /**\n         * Creates widget\n         * @private\n         */\n        _create: function () {\n\n            $(this.element).on('gallery:loaded',  $.proxy(function () {\n                this.fotoramaItem = $(this.element).find('.fotorama-item');\n                this._initialize();\n            }, this));\n        },\n\n        /**\n         *\n         * @private\n         */\n        _initialize: function () {\n            this._loadVideoData();\n\n            if (this._checkForVideoExist()) {\n                this._checkFullscreen();\n                this._listenForFullscreen();\n                this._checkForVimeo();\n                this._isVideoBase();\n                this._initFotoramaVideo();\n                this._attachFotoramaEvents();\n            }\n        },\n\n        /**\n         *\n         * @param {Object} options\n         * @private\n         */\n        _setOptions: function (options) {\n\n            if (options.videoData && options.videoData.length) {\n                this.options.videoData = options.videoData;\n            }\n            this._initialize();\n        },\n\n        /**\n         *\n         * @private\n         */\n        _loadVideoData: function () {\n            var $widget = this;\n\n            if (!$widget.videoData) {\n                $widget.videoData = $widget.options.VideoData;\n            }\n\n            $('#product-options-wrapper').find('[option-selected]').each(function () {\n                var key = $(this).attr('attribute-code') + '_' + $(this).attr('option-selected');\n\n                if ($widget.options.optionsVideoData && $widget.options.optionsVideoData[key]) {\n                    $widget.options.VideoData = $widget.options.optionsVideoData[key];\n                } else {\n                    $widget.options.VideoData = $widget.videoData;\n                }\n            });\n\n            if (!$('#product-options-wrapper').find('[option-selected]').length) {\n                $widget.options.VideoData = $widget.videoData;\n            }\n        },\n\n        /**\n         *\n         * @private\n         */\n        _checkFullscreen: function () {\n            if (this.fotoramaItem.data('fotorama').fullScreen || false) {\n                this.isFullscreen = true;\n            }\n        },\n\n        /**\n         *\n         * @private\n         */\n        _listenForFullscreen: function () {\n            var self = this;\n\n            this.fotoramaItem.on('fotorama:fullscreenenter', $.proxy(function () {\n                this.isFullscreen = true;\n            }, this));\n            this.fotoramaItem.on('fotorama:fullscreenexit', $.proxy(function () {\n                this.isFullscreen = false;\n                self._hideVideoArrows();\n            }, this));\n        },\n\n        /**\n         *\n         * @param {Object} inputData\n         * @param {bool} isJSON\n         * @returns {{}}\n         * @private\n         */\n        _createVideoData: function (inputData, isJSON) {\n            var videoData = [],\n                dataUrl,\n                tmpVideoData,\n                tmpInputData,\n                i;\n\n            if (isJSON) {\n                inputData = $.parseJSON(inputData);\n            }\n\n            for (i = 0; i < inputData.length; i++) {\n                tmpInputData = inputData[i];\n                dataUrl = '';\n                tmpVideoData = {\n                    mediaType: '',\n                    isBase: '',\n                    id: '',\n                    provider: ''\n                };\n                tmpVideoData.mediaType = this.VID;\n\n                if (tmpInputData.mediaType !== 'external-video') {\n                    tmpVideoData.mediaType = tmpInputData.mediaType;\n                }\n\n                tmpVideoData.isBase = tmpInputData.isBase;\n\n                if (tmpInputData.videoUrl != null) {\n                    dataUrl = tmpInputData.videoUrl;\n                    dataUrl = parseURL(dataUrl);\n                    tmpVideoData.id = dataUrl.id;\n                    tmpVideoData.provider = dataUrl.type;\n                    tmpVideoData.videoUrl = tmpInputData.videoUrl;\n                }\n\n                videoData.push(tmpVideoData);\n            }\n\n            return videoData;\n        },\n\n        /**\n         *\n         * @param {Object} fotorama\n         * @param {bool} isBase\n         * @private\n         */\n        _createCloseVideo: function (fotorama, isBase) {\n            var closeVideo;\n\n            this.fotoramaItem.find('.' + this.FTVC).remove();\n            this.fotoramaItem.append('<div class=\"' + this.FTVC + '\"></div>');\n            this.fotoramaItem.css('position', 'relative');\n            closeVideo = this.fotoramaItem.find('.' + this.FTVC);\n            this._closeVideoSetEvents(closeVideo, fotorama);\n\n            if (\n                isBase &&\n                this.options.videoData[fotorama.activeIndex].isBase &&\n                $(window).width() > this.MobileMaxWidth) {\n                this._showCloseVideo();\n            }\n        },\n\n        /**\n         *\n         * @private\n         */\n        _hideCloseVideo: function () {\n            this.fotoramaItem\n                .find('.' + this.FTVC)\n                .removeClass('fotorama-show-control');\n        },\n\n        /**\n         *\n         * @private\n         */\n        _showCloseVideo: function () {\n            this.fotoramaItem\n                .find('.' + this.FTVC)\n                .addClass('fotorama-show-control');\n        },\n\n        /**\n         *\n         * @param {jQuery} $closeVideo\n         * @param {jQuery} fotorama\n         * @private\n         */\n        _closeVideoSetEvents: function ($closeVideo, fotorama) {\n            $closeVideo.on('click', $.proxy(function () {\n                this._unloadVideoPlayer(fotorama.activeFrame.$stageFrame.parent(), fotorama, true);\n                this._hideCloseVideo();\n            }, this));\n        },\n\n        /**\n         *\n         * @returns {Boolean}\n         * @private\n         */\n        _checkForVideoExist: function () {\n            var key, result, checker, videoSettings;\n\n            if (!this.options.videoData) {\n                return false;\n            }\n\n            if (!this.options.videoSettings) {\n                return false;\n            }\n            result = this._createVideoData(this.options.videoData, false),\n                checker = false;\n            videoSettings = this.options.videoSettings[0];\n            videoSettings.playIfBase = parseInt(videoSettings.playIfBase, 10);\n            videoSettings.showRelated = parseInt(videoSettings.showRelated, 10);\n            videoSettings.videoAutoRestart = parseInt(videoSettings.videoAutoRestart, 10);\n\n            for (key in result) {\n                if (result[key].mediaType === this.VID) {\n                    checker = true;\n                }\n            }\n\n            if (checker) {\n                this.options.videoData = result;\n            }\n\n            return checker;\n        },\n\n        /**\n         *\n         * @private\n         */\n        _checkForVimeo: function () {\n            var allVideoData = this.options.videoData,\n                videoItem;\n\n            for (videoItem in allVideoData) {\n                if (allVideoData[videoItem].provider === this.VI) {\n                    this._loadVimeoJSFramework();\n                }\n            }\n        },\n\n        /**\n         *\n         * @private\n         */\n        _isVideoBase: function () {\n            var allVideoData = this.options.videoData,\n                videoItem,\n                allVideoDataKeys,\n                key,\n                i;\n\n            allVideoDataKeys = Object.keys(allVideoData);\n\n            for (i = 0; i < allVideoDataKeys.length; i++) {\n                key = allVideoDataKeys[i];\n                videoItem = allVideoData[key];\n\n                if (\n                    videoItem.mediaType === this.VID && videoItem.isBase &&\n                    this.options.videoSettings[0].playIfBase && allowBase\n                ) {\n                    this.Base = true;\n                    allowBase = false;\n                }\n            }\n\n            if (!this.isFullscreen) {\n                this._createCloseVideo(this.fotoramaItem.data('fotorama'), this.Base);\n            }\n        },\n\n        /**\n         *\n         * @private\n         */\n        _loadVimeoJSFramework: function () {\n            var element = document.createElement('script'),\n                scriptTag = document.getElementsByTagName('script')[0];\n\n            element.async = true;\n            element.src = 'https://secure-a.vimeocdn.com/js/froogaloop2.min.js';\n            scriptTag.parentNode.insertBefore(element, scriptTag);\n        },\n\n        /**\n         *\n         * @param {Event} e\n         * @private\n         */\n        _initFotoramaVideo: function (e) {\n            var fotorama = this.fotoramaItem.data('fotorama'),\n                thumbsParent,\n                thumbs,\n                t;\n\n            if (!fotorama.activeFrame.$navThumbFrame) {\n                this.fotoramaItem.on('fotorama:showend', $.proxy(function (evt, fotoramaData) {\n                    $(fotoramaData.activeFrame.$stageFrame).removeAttr('href');\n                }, this));\n\n                this._startPrepareForPlayer(e, fotorama);\n\n                return null;\n            }\n            fotorama.data.map($.proxy(this._setItemType, this));\n\n            thumbsParent = fotorama.activeFrame.$navThumbFrame.parent();\n            thumbs = thumbsParent.find('.fotorama__nav__frame:visible');\n\n            for (t = 0; t < thumbs.length; t++) {\n                this._setThumbsIcon(thumbs.eq(t), t);\n                this._checkForVideo(e, fotorama, t);\n            }\n\n            this.fotoramaItem.on('fotorama:showend', $.proxy(function (evt, fotoramaData) {\n                $(fotoramaData.activeFrame.$stageFrame).removeAttr('href');\n            }, this));\n        },\n\n        /**\n         *\n         * @param {Object} elem\n         * @param {Number} i\n         * @private\n         */\n        _setThumbsIcon: function (elem, i) {\n            var fotorama = this.fotoramaItem.data('fotorama');\n\n            if (fotorama.options.nav === 'dots' && elem.hasClass(this.TI)) {\n                elem.removeClass(this.TI);\n            }\n\n            if (this.options.videoData[i].mediaType === this.VID &&\n                fotorama.data[i].type ===  this.VID &&\n                fotorama.options.nav === 'thumbs') {\n                elem.addClass(this.TI);\n            }\n        },\n\n        /**\n         * Temporary solution with adding types for configurable product items\n         *\n         * @param {Object} item\n         * @param {Number} i\n         * @private\n         */\n        _setItemType: function (item, i) {\n            !item.type && (item.type = this.options.videoData[i].mediaType);\n        },\n\n        /**\n         * Attach\n         *\n         * @private\n         */\n        _attachFotoramaEvents: function () {\n            this.fotoramaItem.on('fotorama:showend', $.proxy(function (e, fotorama) {\n                this._startPrepareForPlayer(e, fotorama);\n            }, this));\n            this.fotoramaItem.on('fotorama:show', $.proxy(function (e, fotorama) {\n                this._unloadVideoPlayer(fotorama.activeFrame.$stageFrame.parent(), fotorama, true);\n            }, this));\n\n            this.fotoramaItem.on('fotorama:fullscreenexit', $.proxy(function (e, fotorama) {\n                fotorama.activeFrame.$stageFrame.find('.' + this.PV).remove();\n                this._startPrepareForPlayer(e, fotorama);\n            }, this));\n        },\n\n        /**\n         * Start prepare for player\n         *\n         * @param {Event} e\n         * @param {jQuery} fotorama\n         * @private\n         */\n        _startPrepareForPlayer: function (e, fotorama) {\n            this._unloadVideoPlayer(fotorama.activeFrame.$stageFrame.parent(), fotorama, false);\n            this._checkForVideo(e, fotorama, fotorama.activeFrame.i);\n            this._checkForVideo(e, fotorama, fotorama.activeFrame.i - 1);\n            this._checkForVideo(e, fotorama, fotorama.activeFrame.i + 1);\n        },\n\n        /**\n         * Check for video\n         *\n         * @param {Event} e\n         * @param {jQuery} fotorama\n         * @param {Number} number\n         * @private\n         */\n        _checkForVideo: function (e, fotorama, number) {\n            var videoData = this.options.videoData[number - 1],\n                $image = fotorama.data[number - 1],\n                videoEventIsSet = false;\n\n            if ($image) {\n\n                !$image.type && this._setItemType($image, number - 1);\n\n                if ($image.type === 'image') {\n                    $image.$navThumbFrame && $image.$navThumbFrame.removeClass(this.TI);\n                    this._hideCloseVideo();\n\n                    return;\n                } else if ($image.$navThumbFrame && $image.type === 'video') {\n                    !$image.$navThumbFrame.hasClass(this.TI) && $image.$navThumbFrame.addClass(this.TI);\n                }\n\n                $image = $image.$stageFrame;\n\n                if ($image) {\n                    videoEventIsSet = $image.hasClass(this.VU);\n                }\n            }\n\n            if ($image && videoData && videoData.mediaType === this.VID && !videoEventIsSet) {\n                $(fotorama.activeFrame.$stageFrame).removeAttr('href');\n                this._prepareForVideoContainer($image, videoData, fotorama, number);\n            }\n\n            if (this.isFullscreen && this.fotoramaItem.data('fotorama').activeFrame.i === number) {\n                this.fotoramaItem.data('fotorama').activeFrame.$stageFrame[0].click();\n            }\n        },\n\n        /**\n         * Prepare for video container\n         *\n         * @param {jQuery} $image\n         * @param {Object} videoData\n         * @param {Object} fotorama\n         * @param {Number} number\n         * @private\n         */\n        _prepareForVideoContainer: function ($image, videoData, fotorama, number) {\n            $image.addClass('fotorama-video-container').addClass(this.VU);\n            this._createVideoContainer(videoData, $image);\n            this._setVideoEvent($image, this.PV, fotorama, number);\n        },\n\n        /**\n         * Create video container\n         *\n         * @param {Object} videoData\n         * @param {jQuery} $image\n         * @private\n         */\n        _createVideoContainer: function (videoData, $image) {\n            var videoSettings;\n\n            if ($image.find('.' + this.PV).length !== 0) {\n                return;\n            }\n\n            videoSettings = this.options.videoSettings[0];\n            $image.append(\n                '<div class=\"' +\n                this.PV +\n                '\" data-related=\"' +\n                videoSettings.showRelated +\n                '\" data-loop=\"' +\n                videoSettings.videoAutoRestart +\n                '\" data-type=\"' +\n                videoData.provider +\n                '\" data-code=\"' +\n                videoData.id +\n                '\" data-width=\"100%\" data-height=\"100%\"></div>'\n            );\n        },\n\n        /**\n         *\n         * @param {Object} $image\n         * @param {Object} PV\n         * @param {Object} fotorama\n         * @param {Number} number\n         * @private\n         */\n        _setVideoEvent: function ($image, PV, fotorama, number) {\n            $image.find('.magnify-lens').remove();\n            $image\n                .off('click tap', $.proxy(this._clickHandler, this))\n                .on('click tap', $.proxy(this._clickHandler, this));\n            this._handleBaseVideo(fotorama, number); //check for video is it base and handle it if it's base\n        },\n\n        /**\n         * Hides preview arrows above video player.\n         * @private\n         */\n        _hideVideoArrows: function () {\n            var arrows = $('.' + this.FTAR);\n\n            arrows.removeClass('fotorama__arr--shown');\n            arrows.removeClass('fotorama__arr--hidden');\n        },\n\n        /**\n         *\n         * @param {Event} event\n         * @private\n         */\n        _clickHandler: function (event) {\n            if ($(event.target).hasClass(this.VU) && $(event.target).find('iframe').length === 0) {\n\n                $(event.target).removeClass(this.VU);\n                $(event.target).find('.' + this.PV).productVideoLoader();\n\n                $('.' + this.FTAR).addClass(this.isFullscreen ? 'fotorama__arr--shown' : 'fotorama__arr--hidden');\n            }\n        },\n\n        /**\n         * Handle base video\n         * @param {Object} fotorama\n         * @param {Number} srcNumber\n         * @private\n         */\n        _handleBaseVideo: function (fotorama, srcNumber) {\n            var waitForFroogaloop,\n                videoData = this.options.videoData,\n                activeIndex = fotorama.activeIndex,\n                number = parseInt(srcNumber, 10),\n                activeIndexIsBase = videoData[activeIndex];\n\n            if (!this.Base) {\n                return;\n            }\n\n            if (activeIndexIsBase && number === 1 && $(window).width() > this.MobileMaxWidth) {\n                if (this.options.videoData[fotorama.activeIndex].provider === this.VI) {\n                    waitForFroogaloop = setInterval($.proxy(function () {\n                        if (window.Froogaloop) {\n                            clearInterval(waitForFroogaloop);\n                            fotorama.requestFullScreen();\n                            this.fotoramaItem.data('fotorama').activeFrame.$stageFrame[0].click();\n                            this.Base = false;\n                        }\n                    }, this), 50);\n                } else { //if not a vimeo - play it immediately with a little lag in case for fotorama fullscreen\n                    setTimeout($.proxy(function () {\n                        fotorama.requestFullScreen();\n                        this.fotoramaItem.data('fotorama').activeFrame.$stageFrame[0].click();\n                        this.Base = false;\n                    }, this), 50);\n                }\n            }\n        },\n\n        /**\n         * Destroy video player\n         * @param {jQuery} $wrapper\n         * @param {jQuery} current\n         * @param {bool} close\n         * @private\n         */\n        _unloadVideoPlayer: function ($wrapper, current, close) {\n            var self = this;\n\n            if (!$wrapper) {\n                return;\n            }\n\n            $wrapper.find('.' + this.PVLOADED).removeClass(this.PVLOADED);\n\n            $wrapper.find('.' + this.PV).each(function () {\n                var $item = $(this).parent(),\n                    cloneVideoDiv,\n                    iframeElement = $(this).find('iframe'),\n                    currentIndex,\n                    itemIndex;\n\n                if (iframeElement.length === 0) {\n                    return;\n                }\n\n                currentIndex = current.activeFrame.$stageFrame.index();\n                itemIndex = $item.index();\n\n                if (currentIndex === itemIndex && !close) {\n                    return;\n                }\n\n                if (currentIndex !== itemIndex && close) {\n                    return;\n                }\n\n                iframeElement.remove();\n                cloneVideoDiv = $(this).clone();\n                $(this).remove();\n                $item.append(cloneVideoDiv);\n                $item.addClass(self.VU);\n\n                self._hideCloseVideo();\n                self._hideVideoArrows();\n\n                if (self.isFullscreen && !self.fotoramaItem.data('fotorama').options.fullscreen.arrows) {\n                    if ($('.' + self.FTAR + '--prev').is(':focus') || $('.' + self.FTAR + '--next').is(':focus')) {\n                        $(self.FTCF).focus();\n                    }\n                }\n            });\n        }\n    });\n\n    return $.mage.AddFotoramaVideoEvents;\n});\n","Magento_ProductVideo/js/load-player.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n @version 0.0.1\n @requires jQuery & jQuery UI\n */\ndefine(['jquery', 'jquery/ui'], function ($) {\n    'use strict';\n\n    var videoRegister = {\n        _register: {},\n\n        /**\n         * Checks, if api is already registered\n         *\n         * @param {String} api\n         * @returns {bool}\n         */\n        isRegistered: function (api) {\n            return this._register[api] !== undefined;\n        },\n\n        /**\n         * Checks, if api is loaded\n         *\n         * @param {String} api\n         * @returns {bool}\n         */\n        isLoaded: function (api) {\n            return this._register[api] !== undefined && this._register[api] === true;\n        },\n\n        /**\n         * Register new video api\n         * @param {String} api\n         * @param {bool} loaded\n         */\n        register: function (api, loaded) {\n            loaded = loaded || false;\n            this._register[api] = loaded;\n        }\n    };\n\n    $.widget('mage.productVideoLoader', {\n\n        /**\n         * @private\n         */\n        _create: function () {\n            switch (this.element.data('type')) {\n                case 'youtube':\n                    this.element.videoYoutube();\n                    this._player = this.element.data('mageVideoYoutube');\n                    break;\n\n                case 'vimeo':\n                    this.element.videoVimeo();\n                    this._player = this.element.data('mageVideoVimeo');\n                    break;\n                default:\n                    throw {\n                        name: 'Video Error',\n                        message: 'Unknown video type',\n\n                        /**\n                         * join name with message\n                         */\n                        toString: function () {\n                            return this.name + ': ' + this.message;\n                        }\n                    };\n            }\n        },\n\n        /**\n         * Initializes variables\n         * @private\n         */\n        _initialize: function () {\n            this._params = this.element.data('params') || {};\n            this._code = this.element.data('code');\n            this._width = this.element.data('width');\n            this._height = this.element.data('height');\n            this._autoplay = !!this.element.data('autoplay');\n            this._playing = this._autoplay || false;\n            this._loop = this.element.data('loop');\n            this._rel = this.element.data('related');\n\n            this._responsive = this.element.data('responsive') !== false;\n\n            if (this._responsive === true) {\n                this.element.addClass('responsive');\n            }\n\n            this._calculateRatio();\n        },\n\n        /**\n         * Abstract play command\n         */\n        play: function () {\n            this._player.play();\n        },\n\n        /**\n         * Abstract pause command\n         */\n        pause: function () {\n            this._player.pause();\n        },\n\n        /**\n         * Abstract stop command\n         */\n        stop: function () {\n            this._player.stop();\n        },\n\n        /**\n         * Abstract playing command\n         */\n        playing: function () {\n            return this._player.playing();\n        },\n\n        /**\n         * Destroyer\n         */\n        destroy: function () {\n            this._player.destroy();\n        },\n\n        /**\n         * Calculates ratio for responsive videos\n         * @private\n         */\n        _calculateRatio: function () {\n            if (!this._responsive) {\n                return;\n            }\n            this.element.css('paddingBottom', this._height / this._width * 100 + '%');\n        }\n    });\n\n    $.widget('mage.videoYoutube', $.mage.productVideoLoader, {\n\n        /**\n         * Initialization of the Youtube widget\n         * @private\n         */\n        _create: function () {\n            var self = this;\n\n            this._initialize();\n\n            this.element.append('<div/>');\n\n            this._on(window, {\n\n                /**\n                 * Handle event\n                 */\n                'youtubeapiready': function () {\n                    if (self._player !== undefined) {\n                        return;\n                    }\n                    self._autoplay = true;\n\n                    if (self._autoplay) {\n                        self._params.autoplay = 1;\n                    }\n\n                    if (!self._rel) {\n                        self._params.rel = 0;\n                    }\n\n                    self._player = new window.YT.Player(self.element.children(':first')[0], {\n                        height: self._height,\n                        width: self._width,\n                        videoId: self._code,\n                        playerVars: self._params,\n                        events: {\n\n                            /**\n                             * Get duration\n                             */\n                            'onReady': function onPlayerReady() {\n                                self._player.getDuration();\n                                self.element.closest('.fotorama__stage__frame')\n                                    .addClass('fotorama__product-video--loaded');\n                            },\n\n                            /**\n                             * Event observer\n                             */\n                            onStateChange: function (data) {\n                                switch (window.parseInt(data.data, 10)) {\n                                    case 1:\n                                        self._playing = true;\n                                        break;\n                                    default:\n                                        self._playing = false;\n                                        break;\n                                }\n\n                                self._trigger('statechange', {}, data);\n\n                                if (data.data === window.YT.PlayerState.ENDED && self._loop) {\n                                    self._player.playVideo();\n                                }\n                            }\n                        }\n\n                    });\n                }\n            });\n\n            this._loadApi();\n        },\n\n        /**\n         * Loads Youtube API and triggers event, when loaded\n         * @private\n         */\n        _loadApi: function () {\n            var element,\n                scriptTag;\n\n            if (videoRegister.isRegistered('youtube')) {\n                if (videoRegister.isLoaded('youtube')) {\n                    $(window).trigger('youtubeapiready');\n                }\n\n                return;\n            }\n            videoRegister.register('youtube');\n\n            element = document.createElement('script');\n            scriptTag = document.getElementsByTagName('script')[0];\n\n            element.async = true;\n            element.src = 'https://www.youtube.com/iframe_api';\n            scriptTag.parentNode.insertBefore(element, scriptTag);\n\n            /**\n             * Event observe and handle\n             */\n            window.onYouTubeIframeAPIReady = function () {\n                $(window).trigger('youtubeapiready');\n                videoRegister.register('youtube', true);\n            };\n        },\n\n        /**\n         * Play command for Youtube\n         */\n        play: function () {\n            this._player.playVideo();\n            this._playing = true;\n        },\n\n        /**\n         * Pause command for Youtube\n         */\n        pause: function () {\n            this._player.pauseVideo();\n            this._playing = false;\n        },\n\n        /**\n         * Stop command for Youtube\n         */\n        stop: function () {\n            this._player.stopVideo();\n            this._playing = false;\n        },\n\n        /**\n         * Playing command for Youtube\n         */\n        playing: function () {\n            return this._playing;\n        },\n\n        /**\n         * stops and unloads player\n         * @private\n         */\n        destroy: function () {\n            this.stop();\n            this._player.destroy();\n        }\n    });\n\n    $.widget('mage.videoVimeo', $.mage.productVideoLoader, {\n\n        /**\n         * Initialize the Vimeo widget\n         * @private\n         */\n        _create: function () {\n            var timestamp,\n                additionalParams = '',\n                src;\n\n            this._initialize();\n            timestamp = new Date().getTime();\n            this._autoplay = true;\n\n            if (this._autoplay) {\n                additionalParams += '&autoplay=1';\n            }\n\n            if (this._loop) {\n                additionalParams += '&loop=1';\n            }\n            src = 'http://player.vimeo.com/video/' +\n                this._code + '?api=1&player_id=vimeo' +\n                this._code +\n                timestamp +\n                additionalParams;\n            this.element.append(\n                $('<iframe/>')\n                    .attr('frameborder', 0)\n                    .attr('id', 'vimeo' + this._code + timestamp)\n                    .attr('width', this._width)\n                    .attr('height', this._height)\n                    .attr('src', src)\n                    .attr('webkitallowfullscreen', '')\n                    .attr('mozallowfullscreen', '')\n                    .attr('allowfullscreen', '')\n            );\n            this._player = window.$f(this.element.children(':first')[0]);\n\n            // Froogaloop throws error without a registered ready event\n            this._player.addEvent('ready', function (id) {\n                $('#' + id).closest('.fotorama__stage__frame').addClass('fotorama__product-video--loaded');\n            });\n        },\n\n        /**\n         * Play command for Vimeo\n         */\n        play: function () {\n            this._player.api('play');\n            this._playing = true;\n        },\n\n        /**\n         * Pause command for Vimeo\n         */\n        pause: function () {\n            this._player.api('pause');\n            this._playing = false;\n        },\n\n        /**\n         * Stop command for Vimeo\n         */\n        stop: function () {\n            this._player.api('unload');\n            this._playing = false;\n        },\n\n        /**\n         * Playing command for Vimeo\n         */\n        playing: function () {\n            return this._playing;\n        }\n    });\n});\n","Magento_Persistent/js/view/remember-me.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        \"ko\",\n        \"uiComponent\"\n    ],\n    function (ko, Component) {\n        \"use strict\";\n        var persistenceConfig = window.checkoutConfig.persistenceConfig;\n        return Component.extend({\n            defaults: {\n                template: \"Magento_Persistent/remember-me\"\n            },\n            dataScope: \"global\",\n            isRememberMeCheckboxVisible: ko.observable(persistenceConfig.isRememberMeCheckboxVisible),\n            isRememberMeCheckboxChecked: ko.observable(persistenceConfig.isRememberMeCheckboxChecked)\n        });\n    }\n);\n","Magento_OfflinePayments/js/view/payment/offline-payments.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/renderer-list'\n    ],\n    function (\n        Component,\n        rendererList\n    ) {\n        'use strict';\n        rendererList.push(\n            {\n                type: 'checkmo',\n                component: 'Magento_OfflinePayments/js/view/payment/method-renderer/checkmo-method'\n            },\n            {\n                type: 'banktransfer',\n                component: 'Magento_OfflinePayments/js/view/payment/method-renderer/banktransfer-method'\n            },\n            {\n                type: 'cashondelivery',\n                component: 'Magento_OfflinePayments/js/view/payment/method-renderer/cashondelivery-method'\n            },\n            {\n                type: 'purchaseorder',\n                component: 'Magento_OfflinePayments/js/view/payment/method-renderer/purchaseorder-method'\n            }\n        );\n        /** Add view logic here if needed */\n        return Component.extend({});\n    }\n);\n","Magento_OfflinePayments/js/view/payment/method-renderer/purchaseorder-method.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/view/payment/default',\n        'jquery',\n        \"mage/validation\"\n    ],\n    function (Component, $) {\n        'use strict';\n        return Component.extend({\n            defaults: {\n                template: 'Magento_OfflinePayments/payment/purchaseorder-form',\n                purchaseOrderNumber: ''\n            },\n            initObservable: function () {\n                this._super()\n                    .observe('purchaseOrderNumber');\n                return this;\n            },\n            getData: function () {\n                return {\n                    \"method\": this.item.method,\n                    'po_number': this.purchaseOrderNumber(),\n                    \"additional_data\": null\n                };\n\n            },\n            validate: function () {\n                var form = 'form[data-role=purchaseorder-form]';\n                return $(form).validation() && $(form).validation('isValid');\n            }\n        });\n    }\n);\n","Magento_OfflinePayments/js/view/payment/method-renderer/cashondelivery-method.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/view/payment/default'\n    ],\n    function (Component) {\n        'use strict';\n        return Component.extend({\n            defaults: {\n                template: 'Magento_OfflinePayments/payment/cashondelivery'\n            },\n\n            /** Returns payment method instructions */\n            getInstructions: function() {\n                return window.checkoutConfig.payment.instructions[this.item.method];\n            }\n        });\n    }\n);\n","Magento_OfflinePayments/js/view/payment/method-renderer/banktransfer-method.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'ko',\n        'Magento_Checkout/js/view/payment/default'\n    ],\n    function (ko, Component) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_OfflinePayments/payment/banktransfer'\n            },\n            /**\n             * Get value of instruction field.\n             * @returns {String}\n             */\n            getInstructions: function () {\n                return window.checkoutConfig.payment.instructions[this.item.method];\n            }\n        });\n    }\n);\n","Magento_OfflinePayments/js/view/payment/method-renderer/checkmo-method.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/view/payment/default'\n    ],\n    function (Component) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_OfflinePayments/payment/checkmo'\n            },\n\n            /** Returns send check to info */\n            getMailingAddress: function() {\n                return window.checkoutConfig.payment.checkmo.mailingAddress;\n            },\n\n            /** Returns payable to info */\n            getPayableTo: function() {\n                return window.checkoutConfig.payment.checkmo.payableTo;\n            }\n        });\n    }\n);\n","Magento_Multishipping/js/multi-shipping.js":"/**\n * @category    checkout multi-shipping addresses\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.multiShipping', {\n        options: {\n            addNewAddressBtn: 'button[data-role=\"add-new-address\"]', // Add a new multishipping address.\n            addNewAddressFlag: '#add_new_address_flag', // Hidden input field with value 0 or 1.\n            canContinueBtn: 'button[data-role=\"can-continue\"]', // Continue (update quantity or go to shipping).\n            canContinueFlag: '#can_continue_flag' // Hidden input field with value 0 or 1.\n        },\n\n        /**\n         * Bind event handlers to click events for corresponding buttons.\n         * @private\n         */\n        _create: function() {\n            $(this.options.addNewAddressBtn).on('click', $.proxy(this._addNewAddress, this));\n            $(this.options.canContinueBtn).on('click', $.proxy(this._canContinue, this));\n        },\n\n        /**\n         * Add a new address. Set the hidden input field and submit the form. Then enter a new shipping address.\n         * @private\n         */\n        _addNewAddress: function() {\n            $(this.options.addNewAddressFlag).val(1);\n            this.element.submit();\n        },\n\n        /**\n         * Can the user continue to the next step? The data-flag attribute holds either 0 (no) or 1 (yes).\n         * @private\n         * @param event {Event} - Click event on the corresponding button.\n         */\n        _canContinue: function(event) {\n            $(this.options.canContinueFlag).val(parseInt($(event.currentTarget).data('flag'), 10));\n        }\n    });\n    \n    return $.mage.multiShipping;\n});\n","Magento_Multishipping/js/overview.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint jquery:true*/\n/*global alert*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\",\n    \"mage/translate\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.orderOverview', {\n        options: {\n            opacity: 0.5, // CSS opacity for the 'Place Order' button when it's clicked and then disabled.\n            pleaseWaitLoader: 'span.please-wait', // 'Submitting order information...' Ajax loader.\n            placeOrderSubmit: 'button[type=\"submit\"]', // The 'Place Order' button.\n            agreements: '#checkout-agreements' // Container for all of the checkout agreements and terms/conditions\n        },\n\n        /**\n         * Bind a submit handler to the form.\n         * @private\n         */\n        _create: function() {\n            this.element.on('submit', $.proxy(this._showLoader, this));\n        },\n\n        /**\n         * Verify that all agreements and terms/conditions are checked. Show the Ajax loader. Disable\n         * the submit button (i.e. Place Order).\n         * @return {Boolean}\n         * @private\n         */\n        _showLoader: function() {\n            if ($(this.options.agreements).find('input[type=\"checkbox\"]:not(:checked)').length > 0) {\n                return false;\n            }\n            this.element.find(this.options.pleaseWaitLoader).show().end()\n                .find(this.options.placeOrderSubmit).prop('disabled', true).css('opacity', this.options.opacity);\n            return true;\n        }\n    });\n\n    return $.mage.orderOverview;\n});\n","Magento_Multishipping/js/payment.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true*/\n/*global alert*/\n\ndefine([\n    'jquery',\n    'mage/template',\n    'Magento_Ui/js/modal/alert',\n    'jquery/ui',\n    'mage/translate'\n], function ($, mageTemplate, alert) {\n    'use strict';\n\n    $.widget('mage.payment', {\n        options: {\n            continueSelector: '#payment-continue',\n            methodsContainer: '#payment-methods',\n            minBalance: 0.0001,\n            tmpl: '<input id=\"hidden-free\" type=\"hidden\" name=\"payment[method]\" value=\"free\">'\n        },\n\n        _create: function () {\n            this.element.find('dd [name^=\"payment[\"]').prop('disabled', true).end()\n                .on('click', this.options.continueSelector, $.proxy(this._submitHandler, this))\n                .on('updateCheckoutPrice', $.proxy(function (event, data) {\n                    //updating the checkoutPrice\n                    if (data.price) {\n                        this.options.checkoutPrice += data.price;\n                    }\n\n                    //updating total price\n                    if (data.totalPrice) {\n                        data.totalPrice = this.options.checkoutPrice;\n                    }\n\n                    if (this.options.checkoutPrice < this.options.minBalance) {\n                        // Add free input field, hide and disable unchecked checkbox payment method and all radio button payment methods\n                        this._disablePaymentMethods();\n                    } else {\n                        // Remove free input field, show all payment method\n                        this._enablePaymentMethods();\n                    }\n                }, this))\n                .on('click', 'dt input:radio', $.proxy(this._paymentMethodHandler, this));\n\n            if (this.options.checkoutPrice < this.options.minBalance) {\n                this._disablePaymentMethods();\n            } else {\n                this._enablePaymentMethods();\n            }\n        },\n\n        /**\n         * Display payment details when payment method radio button is checked\n         * @private\n         * @param {EventObject} e\n         */\n        _paymentMethodHandler: function (e) {\n            var element = $(e.target),\n                parentsDl = element.closest('dl');\n\n            parentsDl.find('dt input:radio').prop('checked', false);\n            parentsDl.find('.items').hide().find('[name^=\"payment[\"]').prop('disabled', true);\n            element.prop('checked', true).parent().nextUntil('dt').find('.items').show().find('[name^=\"payment[\"]').prop('disabled', false);\n        },\n\n        /**\n         * make sure one payment method is selected\n         * @private\n         * @return {Boolean}\n         */\n        _validatePaymentMethod: function () {\n            var methods = this.element.find('[name^=\"payment[\"]'),\n                isValid = false;\n\n            if (methods.length === 0) {\n                alert({\n                    content: $.mage.__('We can\\'t complete your order because you don\\'t have a payment method set up.')\n                });\n            } else if (this.options.checkoutPrice < this.options.minBalance) {\n                isValid = true;\n            } else if (methods.filter('input:radio:checked').length) {\n                isValid = true;\n            } else {\n                alert({\n                    content: $.mage.__('Please choose a payment method.')\n                });\n            }\n\n            return isValid;\n        },\n\n        /**\n         * Disable and enable payment methods\n         * @private\n         */\n        _disablePaymentMethods: function () {\n            var tmpl = mageTemplate(this.options.tmpl, {\n                data: {}\n            });\n\n            this.element.find('input[name=\"payment[method]\"]').prop('disabled', true).end()\n                .find('input[id^=\"use\"][name^=\"payment[use\"]:not(:checked)').prop('disabled', true).parent().hide();\n            this.element.find('[name=\"payment[method]\"][value=\"free\"]').parent('dt').remove();\n            this.element.find(this.options.methodsContainer).hide().find('[name^=\"payment[\"]').prop('disabled', true);\n\n            $(tmpl).appendTo(this.element);\n        },\n\n        /**\n         * Enable and enable payment methods\n         * @private\n         */\n        _enablePaymentMethods: function () {\n            this.element.find('input[name=\"payment[method]\"]').prop('disabled', false).end()\n                .find('input[name=\"payment[method]\"][value=\"free\"]').remove().end()\n                .find('dt input:radio:checked').trigger('click').end()\n                .find('input[id^=\"use\"][name^=\"payment[use\"]:not(:checked)').prop('disabled', false).parent().show();\n            this.element.find(this.options.methodsContainer).show();\n        },\n\n        /**\n         * Validate  before form submit\n         * @private\n         * @param {EventObject} e\n         */\n        _submitHandler: function (e) {\n            e.preventDefault();\n\n            if (this._validatePaymentMethod()) {\n                this.element.submit();\n            }\n        }\n    });\n\n    return $.mage.payment;\n});\n","Magento_Fedex/js/model/shipping-rates-validation-rules.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [],\n    function () {\n        'use strict';\n\n        return {\n            getRules: function () {\n                return {\n                    'postcode': {\n                        'required': true\n                    },\n                    'country_id': {\n                        'required': true\n                    },\n                    'city': {\n                        'required': true\n                    }\n                };\n            }\n        };\n    }\n);\n","Magento_Fedex/js/model/shipping-rates-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'mageUtils',\n        'Magento_Fedex/js/model/shipping-rates-validation-rules',\n        'mage/translate'\n    ],\n    function ($, utils, validationRules, $t) {\n        'use strict';\n\n        return {\n            validationErrors: [],\n            validate: function (address) {\n                var self = this;\n                this.validationErrors = [];\n                $.each(validationRules.getRules(), function (field, rule) {\n                    if (rule.required && utils.isEmpty(address[field])) {\n                        var message = $t('Field ') + field + $t(' is required.');\n\n                        self.validationErrors.push(message);\n                    }\n                });\n                return !Boolean(this.validationErrors.length);\n            }\n        };\n    }\n);\n","Magento_Fedex/js/view/shipping-rates-validation.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'Magento_Checkout/js/model/shipping-rates-validation-rules',\n        'Magento_Fedex/js/model/shipping-rates-validator',\n        'Magento_Fedex/js/model/shipping-rates-validation-rules'\n    ],\n    function (\n        Component,\n        defaultShippingRatesValidator,\n        defaultShippingRatesValidationRules,\n        fedexShippingRatesValidator,\n        fedexShippingRatesValidationRules\n    ) {\n        'use strict';\n        defaultShippingRatesValidator.registerValidator('fedex', fedexShippingRatesValidator);\n        defaultShippingRatesValidationRules.registerRules('fedex', fedexShippingRatesValidationRules);\n        return Component;\n    }\n);\n","Magento_Dhl/js/model/shipping-rates-validation-rules.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [],\n    function () {\n        'use strict';\n\n        return {\n            getRules: function () {\n                return {\n                    'postcode': {\n                        'required': true\n                    },\n                    'country_id': {\n                        'required': true\n                    },\n                    'city': {\n                        'required': true\n                    }\n                };\n            }\n        };\n    }\n);\n","Magento_Dhl/js/model/shipping-rates-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'mageUtils',\n        'Magento_Dhl/js/model/shipping-rates-validation-rules',\n        'mage/translate'\n    ],\n    function ($, utils, validationRules, $t) {\n        'use strict';\n\n        return {\n            validationErrors: [],\n            validate: function (address) {\n                var self = this;\n\n                this.validationErrors = [];\n                $.each(validationRules.getRules(), function (field, rule) {\n                    if (rule.required && utils.isEmpty(address[field])) {\n                        var message = $t('Field ') + field + $t(' is required.');\n\n                        self.validationErrors.push(message);\n                    }\n                });\n                return !Boolean(this.validationErrors.length);\n            }\n        };\n    }\n);\n","Magento_Dhl/js/view/shipping-rates-validation.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'Magento_Checkout/js/model/shipping-rates-validation-rules',\n        'Magento_Dhl/js/model/shipping-rates-validator',\n        'Magento_Dhl/js/model/shipping-rates-validation-rules'\n    ],\n    function (\n        Component,\n        defaultShippingRatesValidator,\n        defaultShippingRatesValidationRules,\n        dhlShippingRatesValidator,\n        dhlShippingRatesValidationRules\n    ) {\n        'use strict';\n\n        defaultShippingRatesValidator.registerValidator('dhl', dhlShippingRatesValidator);\n        defaultShippingRatesValidationRules.registerRules('dhl', dhlShippingRatesValidationRules);\n        return Component;\n    }\n);\n","Magento_CheckoutAgreements/js/model/agreements-modal.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'Magento_Ui/js/modal/modal',\n        'mage/translate'\n    ],\n    function ($, modal, $t) {\n        'use strict';\n        return {\n            modalWindow: null,\n\n            /** Create popUp window for provided element */\n            createModal: function(element) {\n                this.modalWindow = element;\n                var options = {\n                    'type': 'popup',\n                    'modalClass': 'agreements-modal',\n                    'responsive': true,\n                    'innerScroll': true,\n                    'trigger': '.show-modal',\n                    'buttons': [\n                        {\n                            text: $t('Close'),\n                            class: 'action secondary action-hide-popup',\n                            click: function() {\n                                this.closeModal();\n                            }\n                        }\n                    ]\n                };\n                modal(options, $(this.modalWindow));\n            },\n\n            /** Show login popup window */\n            showModal: function() {\n                $(this.modalWindow).modal('openModal');\n            }\n        }\n    }\n);\n","Magento_CheckoutAgreements/js/model/set-payment-information-mixin.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine([\n    'jquery',\n    'mage/utils/wrapper',\n    'Magento_CheckoutAgreements/js/model/agreements-assigner'\n], function ($, wrapper, agreementsAssigner) {\n    'use strict';\n\n    return function (placeOrderAction) {\n\n        /** Override place-order-mixin for set-payment-information action as they differs only by method signature */\n        return wrapper.wrap(placeOrderAction, function (originalAction, messageContainer, paymentData) {\n            agreementsAssigner(paymentData);\n\n            return originalAction(messageContainer, paymentData);\n        });\n    };\n});\n","Magento_CheckoutAgreements/js/model/agreements-assigner.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    var agreementsConfig = window.checkoutConfig.checkoutAgreements;\n\n    /** Override default place order action and add agreement_ids to request */\n    return function (paymentData) {\n        var agreementForm,\n            agreementData,\n            agreementIds;\n\n        if (!agreementsConfig.isEnabled) {\n            return;\n        }\n\n        agreementForm = $('.payment-method._active div[data-role=checkout-agreements] input');\n        agreementData = agreementForm.serializeArray();\n        agreementIds = [];\n\n        agreementData.forEach(function (item) {\n            agreementIds.push(item.value);\n        });\n\n        if (paymentData['extension_attributes'] === undefined) {\n            paymentData['extension_attributes'] = {};\n        }\n\n        paymentData['extension_attributes']['agreement_ids'] = agreementIds;\n    };\n});\n","Magento_CheckoutAgreements/js/model/place-order-mixin.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine([\n    'jquery',\n    'mage/utils/wrapper',\n    'Magento_CheckoutAgreements/js/model/agreements-assigner'\n], function ($, wrapper, agreementsAssigner) {\n    'use strict';\n\n    return function (placeOrderAction) {\n\n        /** Override default place order action and add agreement_ids to request */\n        return wrapper.wrap(placeOrderAction, function (originalAction, paymentData, messageContainer) {\n            agreementsAssigner(paymentData);\n\n            return originalAction(paymentData, messageContainer);\n        });\n    };\n});\n","Magento_CheckoutAgreements/js/model/agreement-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'mage/validation'\n    ],\n    function ($) {\n        'use strict';\n        var checkoutConfig = window.checkoutConfig,\n            agreementsConfig = checkoutConfig ? checkoutConfig.checkoutAgreements : {};\n\n        var agreementsInputPath = '.payment-method._active div.checkout-agreements input';\n\n        return {\n            /**\n             * Validate checkout agreements\n             *\n             * @returns {boolean}\n             */\n            validate: function() {\n                if (!agreementsConfig.isEnabled) {\n                    return true;\n                }\n\n                if ($(agreementsInputPath).length == 0) {\n                    return true;\n                }\n\n                return $('#co-payment-form').validate({\n                    errorClass: 'mage-error',\n                    errorElement: 'div',\n                    meta: 'validate',\n                    errorPlacement: function (error, element) {\n                        var errorPlacement = element;\n                        if (element.is(':checkbox') || element.is(':radio')) {\n                            errorPlacement = element.siblings('label').last();\n                        }\n                        errorPlacement.after(error);\n                    }\n                }).element(agreementsInputPath);\n            }\n        }\n    }\n);\n","Magento_CheckoutAgreements/js/view/agreement-validation.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/additional-validators',\n        'Magento_CheckoutAgreements/js/model/agreement-validator'\n    ],\n    function (Component, additionalValidators, agreementValidator) {\n        'use strict';\n        additionalValidators.registerValidator(agreementValidator);\n        return Component.extend({});\n    }\n);\n","Magento_CheckoutAgreements/js/view/checkout-agreements.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'ko',\n        'jquery',\n        'uiComponent',\n        'Magento_CheckoutAgreements/js/model/agreements-modal'\n    ],\n    function (ko, $, Component, agreementsModal) {\n        'use strict';\n        var checkoutConfig = window.checkoutConfig,\n            agreementManualMode = 1,\n            agreementsConfig = checkoutConfig ? checkoutConfig.checkoutAgreements : {};\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_CheckoutAgreements/checkout/checkout-agreements'\n            },\n            isVisible: agreementsConfig.isEnabled,\n            agreements: agreementsConfig.agreements,\n            modalTitle: ko.observable(null),\n            modalContent: ko.observable(null),\n            modalWindow: null,\n\n            /**\n             * Checks if agreement required\n             *\n             * @param element\n             */\n            isAgreementRequired: function(element) {\n                return element.mode == agreementManualMode;\n            },\n\n            /**\n             * Show agreement content in modal\n             *\n             * @param element\n             */\n            showContent: function (element) {\n                this.modalTitle(element.checkboxText);\n                this.modalContent(element.content);\n                agreementsModal.showModal();\n            },\n\n            /**\n             * Init modal window for rendered element\n             *\n             * @param element\n             */\n            initModal: function(element) {\n                agreementsModal.createModal(element);\n            }\n        });\n    }\n);\n","Magento_Captcha/onepage.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\"jquery\"], function($){\n    \"use strict\";\n    $(document).on(\"login\",function() {\n        $(\"[data-captcha='guest_checkout'], [data-captcha='register_during_checkout']\").hide();\n        $(\"[role='guest_checkout'], [role='register_during_checkout']\").hide();\n        var type = ($(\"#login\\\\:guest\").is(':checked')) ? 'guest_checkout' : 'register_during_checkout';\n        $(\"[role='\" + type + \"'], [data-captcha='\" + type + \"']\").show();\n    }).on('billingSave', function() {\n            $(\".captcha-reload:visible\").trigger(\"click\");\n        });\n});\n","Magento_Captcha/captcha.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.captcha', {\n        options: {\n            refreshClass: 'refreshing',\n            reloadSelector: '.captcha-reload',\n            imageSelector: '.captcha-img',\n            imageLoader: ''\n        },\n\n        /**\n         * Method binds click event to reload image\n         * @private\n         */\n        _create: function() {\n            this.element.on('click', this.options.reloadSelector, $.proxy(this.refresh, this));\n        },\n\n        /**\n         * Method triggeres an AJAX request to refresh the CAPTCHA image\n         * @param e - Event\n         */\n        refresh: function(e) {\n            var imageLoader = this.options.imageLoader;\n\n            if (imageLoader) {\n                this.element.find(this.options.imageSelector).attr('src', imageLoader);\n            }\n            this.element.addClass(this.options.refreshClass);\n\n            $.ajax({\n                url: this.options.url,\n                type: 'post',\n                async: false,\n                dataType: 'json',\n                context: this,\n                data: {\n                    'formId': this.options.type\n                },\n                success: function (response) {\n                    if (response.imgSrc) {\n                        this.element.find(this.options.imageSelector).attr('src', response.imgSrc);\n                    }\n                },\n                complete: function() {\n                    this.element.removeClass(this.options.refreshClass);\n                }\n            });\n        }\n    });\n\n    return $.mage.captcha;\n});\n","Magento_Captcha/js/model/captchaList.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true*/\n/*global define*/\ndefine(['jquery'], function($) {\n    \"use strict\";\n    var captchaList = [];\n    return {\n        add: function (captcha) {\n            captchaList.push(captcha);\n        },\n        getCaptchaByFormId: function(formId) {\n            var captcha = null;\n            $.each(captchaList, function(key, item) {\n                if (formId === item.formId) {\n                    captcha = item;\n                    return false;\n                }\n            });\n            return captcha;\n        },\n        getCaptchaList: function() {\n            return captchaList;\n        }\n    };\n});\n","Magento_Captcha/js/model/captcha.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magento_Captcha/js/action/refresh'\n    ],\n    function($, ko, refreshAction) {\n        return function (captchaData) {\n            return {\n                formId: captchaData.formId,\n                imageSource: ko.observable(captchaData.imageSrc),\n                visibility: ko.observable(false),\n                captchaValue: ko.observable(null),\n                isRequired: captchaData.isRequired,\n                isCaseSensitive: captchaData.isCaseSensitive,\n                imageHeight: captchaData.imageHeight,\n                refreshUrl: captchaData.refreshUrl,\n                isLoading: ko.observable(false),\n\n                getFormId: function () {\n                    return this.formId;\n                },\n                setFormId: function (formId) {\n                    this.formId = formId;\n                },\n                getIsVisible: function () {\n                    return this.visibility;\n                },\n                setIsVisible: function (flag) {\n                    this.visibility(flag);\n                },\n                getIsRequired: function () {\n                    return this.isRequired;\n                },\n                setIsRequired: function (flag) {\n                    this.isRequired = flag;\n                },\n                getIsCaseSensitive: function () {\n                    return this.isCaseSensitive;\n                },\n                setIsCaseSensitive: function (flag) {\n                    this.isCaseSensitive = flag;\n                },\n                getImageHeight: function () {\n                    return this.imageHeight;\n                },\n                setImageHeight: function (height) {\n                    this.imageHeight = height;\n                },\n                getImageSource: function () {\n                    return this.imageSource;\n                },\n                setImageSource: function (imageSource) {\n                     this.imageSource(imageSource);\n                },\n                getRefreshUrl: function () {\n                    return this.refreshUrl;\n                },\n                setRefreshUrl: function (url) {\n                    this.refreshUrl = url;\n                },\n                getCaptchaValue: function () {\n                    return this.captchaValue;\n                },\n                setCaptchaValue: function (value) {\n                    this.captchaValue(value);\n                },\n                refresh: function() {\n                    var refresh,\n                        self = this;\n                    this.isLoading(true);\n\n                    refresh = refreshAction(this.getRefreshUrl(), this.getFormId(), this.getImageSource());\n                    $.when(refresh).done(function() {\n                        self.isLoading(false);\n                    });\n                }\n            };\n        }\n    }\n);\n","Magento_Captcha/js/view/checkout/defaultCaptcha.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true jquery:true*/\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'uiComponent',\n        'Magento_Captcha/js/model/captcha',\n        'Magento_Captcha/js/model/captchaList'\n    ],\n    function ($, Component, Captcha, captchaList) {\n        'use strict';\n        var captchaConfig;\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Captcha/checkout/captcha'\n            },\n            dataScope: 'global',\n            currentCaptcha: null,\n            captchaValue: function() {\n                return this.currentCaptcha.getCaptchaValue();\n            },\n            initialize: function() {\n                this._super();\n\n                if (window[this.configSource] && window[this.configSource]['captcha']) {\n                    captchaConfig = window[this.configSource]['captcha'];\n                    $.each(captchaConfig, function(formId, captchaData) {\n                        captchaData.formId = formId;\n                        captchaList.add(Captcha(captchaData));\n                    });\n                }\n            },\n            getIsLoading: function() {\n                return this.currentCaptcha !== null ? this.currentCaptcha.isLoading : false;\n            },\n            getCurrentCaptcha: function() {\n                return this.currentCaptcha;\n            },\n            setCurrentCaptcha: function(captcha) {\n                this.currentCaptcha = captcha;\n            },\n            getFormId: function() {\n                return this.currentCaptcha !== null ? this.currentCaptcha.getFormId() : null;\n            },\n            getIsVisible: function() {\n                return this.currentCaptcha !== null ? this.currentCaptcha.getIsVisible() : false;\n            },\n            setIsVisible: function(flag) {\n                this.currentCaptcha.setIsVisible(flag);\n            },\n            isRequired: function() {\n                return this.currentCaptcha !== null ? this.currentCaptcha.getIsRequired() : false;\n            },\n            isCaseSensitive: function() {\n                return this.currentCaptcha !== null ? this.currentCaptcha.getIsCaseSensitive() : false;\n            },\n            imageHeight: function() {\n                return this.currentCaptcha !== null ? this.currentCaptcha.getImageHeight() : null;\n            },\n            getImageSource: function () {\n                return this.currentCaptcha !== null ? this.currentCaptcha.getImageSource() : null;\n            },\n            refresh: function() {\n                this.currentCaptcha.refresh();\n            }\n        });\n    }\n);\n","Magento_Captcha/js/view/checkout/loginCaptcha.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true jquery:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Captcha/js/view/checkout/defaultCaptcha',\n        'Magento_Captcha/js/model/captchaList',\n        'Magento_Customer/js/action/login'\n    ],\n    function (defaultCaptcha, captchaList, loginAction) {\n        'use strict';\n        return defaultCaptcha.extend({\n            initialize: function() {\n                this._super();\n                var currentCaptcha = captchaList.getCaptchaByFormId(this.formId),\n                    self = this;\n\n                if (currentCaptcha != null) {\n                    currentCaptcha.setIsVisible(true);\n                    this.setCurrentCaptcha(currentCaptcha);\n\n                    loginAction.registerLoginCallback(function(loginData) {\n                        if (loginData.captcha_form_id && loginData.captcha_form_id == self.formId) {\n                            self.refresh();\n                        }\n                    });\n                }\n            }\n        });\n    }\n);\n","Magento_Captcha/js/action/refresh.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true*/\n/*global define*/\ndefine(\n    ['mage/storage'],\n    function(storage) {\n        \"use strict\";\n        return function(refreshUrl, formId, imageSource) {\n            return storage.post(\n                refreshUrl,\n                JSON.stringify({'formId': formId}),\n                false\n            ).done(\n                function (response) {\n                    if (response.imgSrc) {\n                        imageSource(response.imgSrc);\n                    }\n                }\n            );\n        };\n    }\n);\n","Magento_Braintree/js/validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'underscore'\n], function (_) {\n    'use strict';\n\n    return {\n        config: {},\n\n        /**\n         * Set configuration\n         * @param {Object} config\n         */\n        setConfig: function (config) {\n            this.config = config;\n        },\n\n        /**\n         * Get List of available card types\n         * @returns {*|exports.defaults.availableCardTypes|{}}\n         */\n        getAvailableCardTypes: function () {\n            return this.config.availableCardTypes;\n        },\n\n        /**\n         * Get list of card types\n         * @returns {Object}\n         */\n        getCcTypesMapper: function () {\n            return this.config.ccTypesMapper;\n        },\n\n        /**\n         * Find mage card type by Braintree type\n         * @param {String} type\n         * @param {Object} availableTypes\n         * @returns {*}\n         */\n        getMageCardType: function (type, availableTypes) {\n            var storedCardType = null,\n                mapper = this.getCcTypesMapper();\n\n            if (type && typeof mapper[type] !== 'undefined') {\n                storedCardType = mapper[type];\n\n                if (_.indexOf(availableTypes, storedCardType) !== -1) {\n                    return storedCardType;\n                }\n            }\n\n            return null;\n        },\n\n        /**\n         * Filter list of available card types\n         * @param {Object} availableTypes\n         * @param {Object} countrySpecificCardTypes\n         * @returns {Object}\n         */\n        collectTypes: function (availableTypes, countrySpecificCardTypes) {\n            var key,\n                filteredTypes = [];\n\n            for (key in availableTypes) {\n                if (_.indexOf(countrySpecificCardTypes, availableTypes[key]) !== -1) {\n                    filteredTypes.push(availableTypes[key]);\n                }\n            }\n\n            return filteredTypes;\n        },\n\n        /**\n         * Get list of card types for country\n         * @param {String} countryId\n         * @returns {*}\n         */\n        getCountrySpecificCardTypes: function (countryId) {\n            if (typeof this.config.countrySpecificCardTypes[countryId] !== 'undefined') {\n\n                return this.config.countrySpecificCardTypes[countryId];\n            }\n\n            return false;\n        }\n    };\n});\n","Magento_Braintree/js/view/payment/adapter.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'braintree',\n    'Magento_Ui/js/model/messageList',\n    'mage/translate'\n], function ($, braintree, globalMessageList, $t) {\n    'use strict';\n\n    return {\n        apiClient: null,\n        config: {},\n        checkout: null,\n\n        /**\n         * Get Braintree api client\n         * @returns {Object}\n         */\n        getApiClient: function () {\n            if (!this.apiClient) {\n                this.apiClient = new braintree.api.Client({\n                    clientToken: this.getClientToken()\n                });\n            }\n\n            return this.apiClient;\n        },\n\n        /**\n         * Set configuration\n         * @param {Object} config\n         */\n        setConfig: function (config) {\n            this.config = config;\n        },\n\n        /**\n         * Setup Braintree SDK\n         */\n        setup: function () {\n            if (!this.getClientToken()) {\n                this.showError($t('Sorry, but something went wrong.'));\n            }\n\n            braintree.setup(this.getClientToken(), 'custom', this.config);\n        },\n\n        /**\n         * Get payment name\n         * @returns {String}\n         */\n        getCode: function () {\n            return 'braintree';\n        },\n\n        /**\n         * Get client token\n         * @returns {String|*}\n         */\n        getClientToken: function () {\n\n            return window.checkoutConfig.payment[this.getCode()].clientToken;\n        },\n\n        /**\n         * Show error message\n         *\n         * @param {String} errorMessage\n         */\n        showError: function (errorMessage) {\n            globalMessageList.addErrorMessage({\n                message: errorMessage\n            });\n        },\n\n        /**\n         * May be triggered on Braintree SDK setup\n         */\n        onReady: function () {}\n    };\n});\n","Magento_Braintree/js/view/payment/3d-secure.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\n\ndefine([\n    'jquery',\n    'Magento_Braintree/js/view/payment/adapter',\n    'Magento_Checkout/js/model/quote',\n    'mage/translate'\n], function ($, braintree, quote, $t) {\n    'use strict';\n\n    return {\n        config: null,\n\n        /**\n         * Set 3d secure config\n         * @param {Object} config\n         */\n        setConfig: function (config) {\n            this.config = config;\n            this.config.thresholdAmount = parseFloat(config.thresholdAmount);\n        },\n\n        /**\n         * Get code\n         * @returns {String}\n         */\n        getCode: function () {\n            return 'three_d_secure';\n        },\n\n        /**\n         * Validate Braintree payment nonce\n         * @param {Object} context\n         * @returns {Object}\n         */\n        validate: function (context) {\n            var client = braintree.getApiClient(),\n                state = $.Deferred(),\n                totalAmount = quote.totals()['base_grand_total'],\n                billingAddress = quote.billingAddress();\n\n            if (!this.isAmountAvailable(totalAmount) || !this.isCountryAvailable(billingAddress.countryId)) {\n                state.resolve();\n\n                return state.promise();\n            }\n\n            client.verify3DS({\n                amount: totalAmount,\n                creditCard: context.paymentMethodNonce\n            }, function (error, response) {\n                var liability;\n\n                if (error) {\n                    state.reject(error.message);\n\n                    return;\n                }\n\n                liability = {\n                    shifted: response.verificationDetails.liabilityShifted,\n                    shiftPossible: response.verificationDetails.liabilityShiftPossible\n                };\n\n                if (liability.shifted || !liability.shifted && !liability.shiftPossible) {\n                    context.paymentMethodNonce = response.nonce;\n                    state.resolve();\n                } else {\n                    state.reject($t('Please try again with another form of payment.'));\n                }\n            });\n\n            return state.promise();\n        },\n\n        /**\n         * Check minimal amount for 3d secure activation\n         * @param {Number} amount\n         * @returns {Boolean}\n         */\n        isAmountAvailable: function (amount) {\n            amount = parseFloat(amount);\n\n            return amount >= this.config.thresholdAmount;\n        },\n\n        /**\n         * Check if current country is available for 3d secure\n         * @param {String} countryId\n         * @returns {Boolean}\n         */\n        isCountryAvailable: function (countryId) {\n            var key,\n                specificCountries = this.config.specificCountries;\n\n            // all countries are available\n            if (!specificCountries.length) {\n                return true;\n            }\n\n            for (key in specificCountries) {\n                if (countryId === specificCountries[key]) {\n                    return true;\n                }\n            }\n\n            return false;\n        }\n    };\n});\n","Magento_Braintree/js/view/payment/validator-handler.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\n\ndefine([\n    'jquery',\n    'Magento_Ui/js/model/messageList',\n    'Magento_Braintree/js/view/payment/3d-secure'\n], function ($, globalMessageList, verify3DSecure) {\n    'use strict';\n\n    return {\n        validators: [],\n\n        /**\n         * Get payment config\n         * @returns {Object}\n         */\n        getConfig: function () {\n            return window.checkoutConfig.payment;\n        },\n\n        /**\n         * Init list of validators\n         */\n        initialize: function () {\n            var config = this.getConfig();\n\n            if (config[verify3DSecure.getCode()].enabled) {\n                verify3DSecure.setConfig(config[verify3DSecure.getCode()]);\n                this.add(verify3DSecure);\n            }\n        },\n\n        /**\n         * Add new validator\n         * @param {Object} validator\n         */\n        add: function (validator) {\n            this.validators.push(validator);\n        },\n\n        /**\n         * Run pull of validators\n         * @param {Object} context\n         * @param {Function} callback\n         */\n        validate: function (context, callback) {\n            var self = this,\n                deferred;\n\n            // no available validators\n            if (!self.validators.length) {\n                callback();\n\n                return;\n            }\n\n            // get list of deferred validators\n            deferred = $.map(self.validators, function (current) {\n                return current.validate(context);\n            });\n\n            $.when.apply($, deferred)\n                .done(function () {\n                    callback();\n                }).fail(function (error) {\n                    self.showError(error);\n                });\n        },\n\n        /**\n         * Show error message\n         * @param {String} errorMessage\n         */\n        showError: function (errorMessage) {\n            globalMessageList.addErrorMessage({\n                message: errorMessage\n            });\n        }\n    };\n});\n","Magento_Braintree/js/view/payment/braintree.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/renderer-list'\n    ],\n    function (\n        Component,\n        rendererList\n    ) {\n        'use strict';\n\n        var config = window.checkoutConfig.payment,\n            braintreeType = 'braintree',\n            payPalType = 'braintree_paypal';\n\n        if (config[braintreeType].isActive) {\n            rendererList.push(\n                {\n                    type: braintreeType,\n                    component: 'Magento_Braintree/js/view/payment/method-renderer/hosted-fields'\n                }\n            );\n        }\n\n        if (config[payPalType].isActive) {\n            rendererList.push(\n                {\n                    type: payPalType,\n                    component: 'Magento_Braintree/js/view/payment/method-renderer/paypal'\n                }\n            );\n        }\n\n        /** Add view logic here if needed */\n        return Component.extend({});\n    }\n);\n","Magento_Braintree/js/view/payment/method-renderer/cc-form.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'underscore',\n        'jquery',\n        'Magento_Payment/js/view/payment/cc-form',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Braintree/js/view/payment/adapter',\n        'mage/translate',\n        'Magento_Braintree/js/validator',\n        'Magento_Braintree/js/view/payment/validator-handler',\n        'Magento_Checkout/js/model/full-screen-loader'\n    ],\n    function (\n        _,\n        $,\n        Component,\n        quote,\n        braintree,\n        $t,\n        validator,\n        validatorManager,\n        fullScreenLoader\n    ) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                active: false,\n                braintreeClient: null,\n                braintreeDeviceData: null,\n                paymentMethodNonce: null,\n                lastBillingAddress: null,\n                validatorManager: validatorManager,\n                code: 'braintree',\n\n                /**\n                 * Additional payment data\n                 *\n                 * {Object}\n                 */\n                additionalData: {},\n\n                /**\n                 * Braintree client configuration\n                 *\n                 * {Object}\n                 */\n                clientConfig: {\n\n                    /**\n                     * Triggers on payment nonce receive\n                     * @param {Object} response\n                     */\n                    onPaymentMethodReceived: function (response) {\n                        this.beforePlaceOrder(response);\n                    },\n\n                    /**\n                     * Device data initialization\n                     *\n                     * @param {Object} checkout\n                     */\n                    onReady: function (checkout) {\n                        braintree.checkout = checkout;\n                        braintree.onReady();\n                    },\n\n                    /**\n                     * Triggers on any Braintree error\n                     * @param {Object} response\n                     */\n                    onError: function (response) {\n                        braintree.showError($t('Payment ' + this.getTitle() + ' can\\'t be initialized'));\n                        throw response.message;\n                    },\n\n                    /**\n                     * Triggers when customer click \"Cancel\"\n                     */\n                    onCancelled: function () {\n                        this.paymentMethodNonce = null;\n                    }\n                },\n                imports: {\n                    onActiveChange: 'active'\n                }\n            },\n\n            /**\n             * Set list of observable attributes\n             *\n             * @returns {exports.initObservable}\n             */\n            initObservable: function () {\n                validator.setConfig(window.checkoutConfig.payment[this.getCode()]);\n                this._super()\n                    .observe(['active']);\n                this.validatorManager.initialize();\n                this.initClientConfig();\n\n                return this;\n            },\n\n            /**\n             * Get payment name\n             *\n             * @returns {String}\n             */\n            getCode: function () {\n                return this.code;\n            },\n\n            /**\n             * Check if payment is active\n             *\n             * @returns {Boolean}\n             */\n            isActive: function () {\n                var active = this.getCode() === this.isChecked();\n\n                this.active(active);\n\n                return active;\n            },\n\n            /**\n             * Triggers when payment method change\n             * @param {Boolean} isActive\n             */\n            onActiveChange: function (isActive) {\n                if (!isActive) {\n                    return;\n                }\n\n                this.initBraintree();\n            },\n\n            /**\n             * Init config\n             */\n            initClientConfig: function () {\n                // Advanced fraud tools settings\n                if (this.hasFraudProtection()) {\n                    this.clientConfig = _.extend(this.clientConfig, this.kountConfig());\n                }\n\n                _.each(this.clientConfig, function (fn, name) {\n                    if (typeof fn === 'function') {\n                        this.clientConfig[name] = fn.bind(this);\n                    }\n                }, this);\n            },\n\n            /**\n             * Init Braintree configuration\n             */\n            initBraintree: function () {\n                var intervalId = setInterval(function () {\n                    // stop loader when frame will be loaded\n                    if ($('#braintree-hosted-field-number').length) {\n                        clearInterval(intervalId);\n                        fullScreenLoader.stopLoader();\n                    }\n                }, 500);\n\n                if (braintree.checkout) {\n                    braintree.checkout.teardown(function () {\n                        braintree.checkout = null;\n                    });\n                }\n\n                fullScreenLoader.startLoader();\n                braintree.setConfig(this.clientConfig);\n                braintree.setup();\n            },\n\n            /**\n             * @returns {Object}\n             */\n            kountConfig: function () {\n                var config = {\n                    dataCollector: {\n                        kount: {\n                            environment: this.getEnvironment()\n                        }\n                    },\n\n                    /**\n                     * Device data initialization\n                     *\n                     * @param {Object} checkout\n                     */\n                    onReady: function (checkout) {\n                        braintree.checkout = checkout;\n                        this.additionalData['device_data'] = checkout.deviceData;\n                        braintree.onReady();\n                    }\n                };\n\n                if (this.getKountMerchantId()) {\n                    config.dataCollector.kount.merchantId = this.getKountMerchantId();\n                }\n\n                return config;\n            },\n\n            /**\n             * Get full selector name\n             *\n             * @param {String} field\n             * @returns {String}\n             */\n            getSelector: function (field) {\n                return '#' + this.getCode() + '_' + field;\n            },\n\n            /**\n             * Get list of available CC types\n             *\n             * @returns {Object}\n             */\n            getCcAvailableTypes: function () {\n                var availableTypes = validator.getAvailableCardTypes(),\n                    billingAddress = quote.billingAddress(),\n                    billingCountryId;\n\n                this.lastBillingAddress = quote.shippingAddress();\n\n                if (!billingAddress) {\n                    billingAddress = this.lastBillingAddress;\n                }\n\n                billingCountryId = billingAddress.countryId;\n\n                if (billingCountryId && validator.getCountrySpecificCardTypes(billingCountryId)) {\n\n                    return validator.collectTypes(\n                        availableTypes, validator.getCountrySpecificCardTypes(billingCountryId)\n                    );\n                }\n\n                return availableTypes;\n            },\n\n            /**\n             * @returns {Boolean}\n             */\n            hasFraudProtection: function () {\n                return window.checkoutConfig.payment[this.getCode()].hasFraudProtection;\n            },\n\n            /**\n             * @returns {String}\n             */\n            getEnvironment: function () {\n                return window.checkoutConfig.payment[this.getCode()].environment;\n            },\n\n            /**\n             * @returns {String}\n             */\n            getKountMerchantId: function () {\n                return window.checkoutConfig.payment[this.getCode()].kountMerchantId;\n            },\n\n            /**\n             * Get data\n             *\n             * @returns {Object}\n             */\n            getData: function () {\n                var data = {\n                    'method': this.getCode(),\n                    'additional_data': {\n                        'payment_method_nonce': this.paymentMethodNonce\n                    }\n                };\n\n                data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n                return data;\n            },\n\n            /**\n             * Set payment nonce\n             * @param {String} paymentMethodNonce\n             */\n            setPaymentMethodNonce: function (paymentMethodNonce) {\n                this.paymentMethodNonce = paymentMethodNonce;\n            },\n\n            /**\n             * Prepare data to place order\n             * @param {Object} data\n             */\n            beforePlaceOrder: function (data) {\n                this.setPaymentMethodNonce(data.nonce);\n                this.placeOrder();\n            },\n\n            /**\n             * Action to place order\n             * @param {String} key\n             */\n            placeOrder: function (key) {\n                var self = this;\n\n                if (key) {\n                    return self._super();\n                }\n                // place order on success validation\n                self.validatorManager.validate(self, function () {\n                    return self.placeOrder('parent');\n                });\n\n                return false;\n            }\n        });\n    }\n);\n","Magento_Braintree/js/view/payment/method-renderer/hosted-fields.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\n\ndefine([\n    'jquery',\n    'Magento_Braintree/js/view/payment/method-renderer/cc-form',\n    'Magento_Braintree/js/validator',\n    'Magento_Vault/js/view/payment/vault-enabler',\n    'mage/translate'\n], function ($, Component, validator, VaultEnabler, $t) {\n    'use strict';\n\n    return Component.extend({\n\n        defaults: {\n            template: 'Magento_Braintree/payment/form',\n            clientConfig: {\n\n                /**\n                 * {String}\n                 */\n                id: 'co-transparent-form-braintree'\n            },\n            isValidCardNumber: false\n        },\n\n        /**\n         * @returns {exports.initialize}\n         */\n        initialize: function () {\n            this._super();\n            this.vaultEnabler = new VaultEnabler();\n            this.vaultEnabler.setPaymentCode(this.getVaultCode());\n\n            return this;\n        },\n\n        /**\n         * Init config\n         */\n        initClientConfig: function () {\n            this._super();\n\n            // Hosted fields settings\n            this.clientConfig.hostedFields = this.getHostedFields();\n        },\n\n        /**\n         * @returns {Object}\n         */\n        getData: function () {\n            var data = this._super();\n\n            this.vaultEnabler.visitAdditionalData(data);\n\n            return data;\n        },\n\n        /**\n         * @returns {Bool}\n         */\n        isVaultEnabled: function () {\n            return this.vaultEnabler.isVaultEnabled();\n        },\n\n        /**\n         * Get Braintree Hosted Fields\n         * @returns {Object}\n         */\n        getHostedFields: function () {\n            var self = this,\n                fields = {\n                    number: {\n                        selector: self.getSelector('cc_number')\n                    },\n                    expirationMonth: {\n                        selector: self.getSelector('expirationMonth'),\n                        placeholder: $t('MM')\n                    },\n                    expirationYear: {\n                        selector: self.getSelector('expirationYear'),\n                        placeholder: $t('YY')\n                    }\n                };\n\n            if (self.hasVerification()) {\n                fields.cvv = {\n                    selector: self.getSelector('cc_cid')\n                };\n            }\n\n            /**\n             * Triggers on Hosted Field changes\n             * @param {Object} event\n             * @returns {Boolean}\n             */\n            fields.onFieldEvent = function (event) {\n                if (event.isEmpty === false) {\n                    self.validateCardType();\n                }\n\n                if (event.type !== 'fieldStateChange') {\n\n                    return false;\n                }\n\n                // Handle a change in validation or card type\n                if (event.target.fieldKey === 'number') {\n                    self.selectedCardType(null);\n                }\n\n                if (event.target.fieldKey === 'number' && event.card) {\n                    self.isValidCardNumber = event.isValid;\n                    self.selectedCardType(\n                        validator.getMageCardType(event.card.type, self.getCcAvailableTypes())\n                    );\n                }\n            };\n\n            return fields;\n        },\n\n        /**\n         * Validate current credit card type\n         * @returns {Boolean}\n         */\n        validateCardType: function () {\n            var $selector = $(this.getSelector('cc_number')),\n                invalidClass = 'braintree-hosted-fields-invalid';\n\n            $selector.removeClass(invalidClass);\n\n            if (this.selectedCardType() === null || !this.isValidCardNumber) {\n                $(this.getSelector('cc_number')).addClass(invalidClass);\n\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * Trigger order placing\n         */\n        placeOrderClick: function () {\n            if (this.validateCardType()) {\n                $(this.getSelector('submit')).trigger('click');\n            }\n        },\n\n        /**\n         * @returns {String}\n         */\n        getVaultCode: function () {\n            return window.checkoutConfig.payment[this.getCode()].ccVaultCode;\n        }\n    });\n});\n","Magento_Braintree/js/view/payment/method-renderer/vault.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'Magento_Vault/js/view/payment/method-renderer/vault',\n    'Magento_Braintree/js/view/payment/adapter',\n    'Magento_Ui/js/model/messageList',\n    'Magento_Checkout/js/model/full-screen-loader'\n], function ($, VaultComponent, Braintree, globalMessageList, fullScreenLoader) {\n    'use strict';\n\n    return VaultComponent.extend({\n        defaults: {\n            template: 'Magento_Vault/payment/form',\n            modules: {\n                hostedFields: '${ $.parentName }.braintree'\n            }\n        },\n\n        /**\n         * Get last 4 digits of card\n         * @returns {String}\n         */\n        getMaskedCard: function () {\n            return this.details.maskedCC;\n        },\n\n        /**\n         * Get expiration date\n         * @returns {String}\n         */\n        getExpirationDate: function () {\n            return this.details.expirationDate;\n        },\n\n        /**\n         * Get card type\n         * @returns {String}\n         */\n        getCardType: function () {\n            return this.details.type;\n        },\n\n        /**\n         * Place order\n         */\n        placeOrder: function () {\n            var self = this;\n\n            /**\n             * Define already callback\n             */\n            Braintree.onReady = function () {\n                self.getPaymentMethodNonce();\n            };\n            self.hostedFields(function (formComponent) {\n                formComponent.initBraintree();\n            });\n        },\n\n        /**\n         * Send request to get payment method nonce\n         */\n        getPaymentMethodNonce: function () {\n            var self = this;\n\n            fullScreenLoader.startLoader();\n            $.getJSON(self.nonceUrl, {\n                'public_hash': self.publicHash\n            })\n                .done(function (response) {\n                    fullScreenLoader.stopLoader();\n                    self.hostedFields(function (formComponent) {\n                        formComponent.setPaymentMethodNonce(response.paymentMethodNonce);\n                        formComponent.additionalData['public_hash'] = self.publicHash;\n                        formComponent.code = self.code;\n                        formComponent.placeOrder();\n                    });\n                })\n                .fail(function (response) {\n                    var error = JSON.parse(response.responseText);\n\n                    fullScreenLoader.stopLoader();\n                    globalMessageList.addErrorMessage({\n                        message: error.message\n                    });\n                });\n        }\n    });\n});\n","Magento_Braintree/js/view/payment/method-renderer/paypal-vault.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'underscore',\n    'Magento_Vault/js/view/payment/method-renderer/vault',\n    'Magento_Ui/js/model/messageList',\n    'Magento_Checkout/js/model/full-screen-loader'\n], function ($, _, VaultComponent, globalMessageList, fullScreenLoader) {\n    'use strict';\n\n    return VaultComponent.extend({\n        defaults: {\n            template: 'Magento_Braintree/payment/paypal/vault',\n            additionalData: {}\n        },\n\n        /**\n         * Get PayPal payer email\n         * @returns {String}\n         */\n        getPayerEmail: function () {\n            return this.details.payerEmail;\n        },\n\n        /**\n         * Get type of payment\n         * @returns {String}\n         */\n        getPaymentIcon: function () {\n            return window.checkoutConfig.payment['braintree_paypal'].paymentIcon;\n        },\n\n        /**\n         * Place order\n         */\n        beforePlaceOrder: function () {\n            this.getPaymentMethodNonce();\n        },\n\n        /**\n         * Send request to get payment method nonce\n         */\n        getPaymentMethodNonce: function () {\n            var self = this;\n\n            fullScreenLoader.startLoader();\n            $.getJSON(self.nonceUrl, {\n                'public_hash': self.publicHash\n            })\n                .done(function (response) {\n                    fullScreenLoader.stopLoader();\n                    self.additionalData['payment_method_nonce'] = response.paymentMethodNonce;\n                    self.placeOrder();\n                })\n                .fail(function (response) {\n                    var error = JSON.parse(response.responseText);\n\n                    fullScreenLoader.stopLoader();\n                    globalMessageList.addErrorMessage({\n                        message: error.message\n                    });\n                });\n        },\n\n        /**\n         * Get payment method data\n         * @returns {Object}\n         */\n        getData: function () {\n            var data = {\n                'method': this.code,\n                'additional_data': {\n                    'public_hash': this.publicHash\n                }\n            };\n\n            data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n            return data;\n        }\n    });\n});\n","Magento_Braintree/js/view/payment/method-renderer/paypal.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'underscore',\n    'Magento_Checkout/js/view/payment/default',\n    'Magento_Braintree/js/view/payment/adapter',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Checkout/js/model/full-screen-loader',\n    'Magento_Checkout/js/model/payment/additional-validators',\n    'Magento_Vault/js/view/payment/vault-enabler',\n    'Magento_Checkout/js/action/create-billing-address'\n], function (\n    $,\n    _,\n    Component,\n    Braintree,\n    quote,\n    fullScreenLoader,\n    additionalValidators,\n    VaultEnabler,\n    createBillingAddress\n) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_Braintree/payment/paypal',\n            code: 'braintree_paypal',\n            active: false,\n            paymentMethodNonce: null,\n            grandTotalAmount: null,\n            isReviewRequired: false,\n            customerEmail: null,\n\n            /**\n             * Additional payment data\n             *\n             * {Object}\n             */\n            additionalData: {},\n\n            /**\n             * PayPal client configuration\n             * {Object}\n             */\n            clientConfig: {\n                dataCollector: {\n                    paypal: true\n                },\n\n                /**\n                 * Triggers when widget is loaded\n                 * @param {Object} checkout\n                 */\n                onReady: function (checkout) {\n                    Braintree.checkout = checkout;\n                    this.additionalData['device_data'] = checkout.deviceData;\n                    this.enableButton();\n                    Braintree.onReady();\n                },\n\n                /**\n                 * Triggers on payment nonce receive\n                 * @param {Object} response\n                 */\n                onPaymentMethodReceived: function (response) {\n                    this.beforePlaceOrder(response);\n                }\n            },\n            imports: {\n                onActiveChange: 'active'\n            }\n        },\n\n        /**\n         * Set list of observable attributes\n         * @returns {exports.initObservable}\n         */\n        initObservable: function () {\n            var self = this;\n\n            this._super()\n                .observe(['active', 'isReviewRequired', 'customerEmail']);\n\n            this.vaultEnabler = new VaultEnabler();\n            this.vaultEnabler.setPaymentCode(this.getVaultCode());\n            this.vaultEnabler.isActivePaymentTokenEnabler.subscribe(function () {\n                self.onVaultPaymentTokenEnablerChange();\n            });\n\n            this.grandTotalAmount = quote.totals()['base_grand_total'];\n\n            quote.totals.subscribe(function () {\n                if (self.grandTotalAmount !== quote.totals()['base_grand_total']) {\n                    self.grandTotalAmount = quote.totals()['base_grand_total'];\n                }\n            });\n\n            // for each component initialization need update property\n            this.isReviewRequired(false);\n            this.initClientConfig();\n\n            return this;\n        },\n\n        /**\n         * Get payment name\n         *\n         * @returns {String}\n         */\n        getCode: function () {\n            return this.code;\n        },\n\n        /**\n         * Get payment title\n         *\n         * @returns {String}\n         */\n        getTitle: function () {\n            return window.checkoutConfig.payment[this.getCode()].title;\n        },\n\n        /**\n         * Check if payment is active\n         *\n         * @returns {Boolean}\n         */\n        isActive: function () {\n            var active = this.getCode() === this.isChecked();\n\n            this.active(active);\n\n            return active;\n        },\n\n        /**\n         * Triggers when payment method change\n         * @param {Boolean} isActive\n         */\n        onActiveChange: function (isActive) {\n            if (!isActive) {\n                return;\n            }\n\n            // need always re-init Braintree with PayPal configuration\n            this.reInitPayPal();\n        },\n\n        /**\n         * Init config\n         */\n        initClientConfig: function () {\n            this.clientConfig = _.extend(this.clientConfig, this.getPayPalConfig());\n\n            _.each(this.clientConfig, function (fn, name) {\n                if (typeof fn === 'function') {\n                    this.clientConfig[name] = fn.bind(this);\n                }\n            }, this);\n        },\n\n        /**\n         * Set payment nonce\n         * @param {String} paymentMethodNonce\n         */\n        setPaymentMethodNonce: function (paymentMethodNonce) {\n            this.paymentMethodNonce = paymentMethodNonce;\n        },\n\n        /**\n         * Update quote billing address\n         * @param {Object}customer\n         * @param {Object}address\n         */\n        setBillingAddress: function (customer, address) {\n            var billingAddress = {\n                street: [address.streetAddress],\n                city: address.locality,\n                postcode: address.postalCode,\n                countryId: address.countryCodeAlpha2,\n                email: customer.email,\n                firstname: customer.firstName,\n                lastname: customer.lastName,\n                telephone: customer.phone\n            };\n\n            billingAddress['region_code'] = address.region;\n            billingAddress = createBillingAddress(billingAddress);\n            quote.billingAddress(billingAddress);\n        },\n\n        /**\n         * Prepare data to place order\n         * @param {Object} data\n         */\n        beforePlaceOrder: function (data) {\n            this.setPaymentMethodNonce(data.nonce);\n\n            if (quote.billingAddress() === null && typeof data.details.billingAddress !== 'undefined') {\n                this.setBillingAddress(data.details, data.details.billingAddress);\n            }\n\n            if (this.isSkipOrderReview()) {\n                this.placeOrder();\n            } else {\n                this.customerEmail(data.details.email);\n                this.isReviewRequired(true);\n            }\n        },\n\n        /**\n         * Re-init PayPal Auth Flow\n         */\n        reInitPayPal: function () {\n            if (Braintree.checkout) {\n                Braintree.checkout.teardown(function () {\n                    Braintree.checkout = null;\n                });\n            }\n\n            this.disableButton();\n            this.clientConfig.paypal.amount = this.grandTotalAmount;\n\n            Braintree.setConfig(this.clientConfig);\n            Braintree.setup();\n        },\n\n        /**\n         * Get locale\n         * @returns {String}\n         */\n        getLocale: function () {\n            return window.checkoutConfig.payment[this.getCode()].locale;\n        },\n\n        /**\n         * Is shipping address can be editable on PayPal side\n         * @returns {Boolean}\n         */\n        isAllowOverrideShippingAddress: function () {\n            return window.checkoutConfig.payment[this.getCode()].isAllowShippingAddressOverride;\n        },\n\n        /**\n         * Get configuration for PayPal\n         * @returns {Object}\n         */\n        getPayPalConfig: function () {\n            var totals = quote.totals(),\n                config = {},\n                isActiveVaultEnabler = this.isActiveVault();\n\n            config.paypal = {\n                container: 'paypal-container',\n                singleUse: !isActiveVaultEnabler,\n                headless: true,\n                amount: this.grandTotalAmount,\n                currency: totals['base_currency_code'],\n                locale: this.getLocale(),\n                enableShippingAddress: true,\n\n                /**\n                 * Triggers on any Braintree error\n                 */\n                onError: function () {\n                    this.paymentMethodNonce = null;\n                },\n\n                /**\n                 * Triggers if browser doesn't support PayPal Checkout\n                 */\n                onUnsupported: function () {\n                    this.paymentMethodNonce = null;\n                }\n            };\n\n            config.paypal.shippingAddressOverride = this.getShippingAddress();\n\n            if (this.getMerchantName()) {\n                config.paypal.displayName = this.getMerchantName();\n            }\n\n            return config;\n        },\n\n        /**\n         * Get shipping address\n         * @returns {Object}\n         */\n        getShippingAddress: function () {\n            var address = quote.shippingAddress();\n\n            if (address.postcode === null) {\n\n                return {};\n            }\n\n            return {\n                recipientName: address.firstname + ' ' + address.lastname,\n                streetAddress: address.street[0],\n                locality: address.city,\n                countryCodeAlpha2: address.countryId,\n                postalCode: address.postcode,\n                region: address.regionCode,\n                phone: address.telephone,\n                editable: this.isAllowOverrideShippingAddress()\n            };\n        },\n\n        /**\n         * Get merchant name\n         * @returns {String}\n         */\n        getMerchantName: function () {\n            return window.checkoutConfig.payment[this.getCode()].merchantName;\n        },\n\n        /**\n         * Get data\n         * @returns {Object}\n         */\n        getData: function () {\n            var data = {\n                'method': this.getCode(),\n                'additional_data': {\n                    'payment_method_nonce': this.paymentMethodNonce\n                }\n            };\n\n            data['additional_data'] = _.extend(data['additional_data'], this.additionalData);\n\n            this.vaultEnabler.visitAdditionalData(data);\n\n            return data;\n        },\n\n        /**\n         * Returns payment acceptance mark image path\n         * @returns {String}\n         */\n        getPaymentAcceptanceMarkSrc: function () {\n\n            return window.checkoutConfig.payment[this.getCode()].paymentAcceptanceMarkSrc;\n        },\n\n        /**\n         * @returns {String}\n         */\n        getVaultCode: function () {\n            return window.checkoutConfig.payment[this.getCode()].vaultCode;\n        },\n\n        /**\n         * Check if need to skip order review\n         * @returns {Boolean}\n         */\n        isSkipOrderReview: function () {\n            return window.checkoutConfig.payment[this.getCode()].skipOrderReview;\n        },\n\n        /**\n         * Checks if vault is active\n         * @returns {Boolean}\n         */\n        isActiveVault: function () {\n            return this.vaultEnabler.isVaultEnabled() && this.vaultEnabler.isActivePaymentTokenEnabler();\n        },\n\n        /**\n         * Re-init PayPal Auth flow to use Vault\n         */\n        onVaultPaymentTokenEnablerChange: function () {\n            this.clientConfig.paypal.singleUse = !this.isActiveVault();\n            this.reInitPayPal();\n        },\n\n        /**\n         * Disable submit button\n         */\n        disableButton: function () {\n            // stop any previous shown loaders\n            fullScreenLoader.stopLoader(true);\n            fullScreenLoader.startLoader();\n            $('[data-button=\"place\"]').attr('disabled', 'disabled');\n        },\n\n        /**\n         * Enable submit button\n         */\n        enableButton: function () {\n            $('[data-button=\"place\"]').removeAttr('disabled');\n            fullScreenLoader.stopLoader();\n        },\n\n        /**\n         * Triggers when customer click \"Continue to PayPal\" button\n         */\n        payWithPayPal: function () {\n            if (additionalValidators.validate()) {\n                Braintree.checkout.paypal.initAuthFlow();\n            }\n        },\n\n        /**\n         * Get button title\n         * @returns {String}\n         */\n        getButtonTitle: function () {\n            return this.isSkipOrderReview() ? 'Pay with PayPal' : 'Continue to PayPal';\n        },\n\n        /**\n         * Get button id\n         * @returns {String}\n         */\n        getButtonId: function () {\n            return this.getCode() + (this.isSkipOrderReview() ? '_pay_with' : '_continue_to');\n        }\n    });\n});\n","Magento_Braintree/js/paypal/button.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'rjsResolver',\n        'uiRegistry',\n        'uiComponent',\n        'underscore',\n        'jquery',\n        'braintree',\n        'Magento_Braintree/js/paypal/form-builder',\n        'domReady!'\n    ],\n    function (\n        resolver,\n        registry,\n        Component,\n        _,\n        $,\n        braintree,\n        formBuilder\n    ) {\n        'use strict';\n\n        return Component.extend({\n\n            defaults: {\n\n                integrationName: 'braintreePaypal.currentIntegration',\n\n                /**\n                 * {String}\n                 */\n                displayName: null,\n\n                /**\n                 * {String}\n                 */\n                clientToken: null,\n\n                /**\n                 * {Object}\n                 */\n                clientConfig: {\n\n                    /**\n                     * @param {Object} integration\n                     */\n                    onReady: function (integration) {\n                        resolver(function () {\n                            registry.set(this.integrationName, integration);\n                            $('#' + this.id).removeAttr('disabled');\n                        }, this);\n                    },\n\n                    /**\n                     * @param {Object} payload\n                     */\n                    onPaymentMethodReceived: function (payload) {\n                        $('body').trigger('processStart');\n\n                        formBuilder.build(\n                            {\n                                action: this.actionSuccess,\n                                fields: {\n                                    result: JSON.stringify(payload)\n                                }\n                            }\n                        ).submit();\n                    }\n                }\n            },\n\n            /**\n             * @returns {Object}\n             */\n            initialize: function () {\n                this._super()\n                    .initComponent();\n\n                return this;\n            },\n\n            /**\n             * @returns {Object}\n             */\n            initComponent: function () {\n                var currentIntegration = registry.get(this.integrationName),\n                    $this = $('#' + this.id),\n                    self = this,\n                    data = {\n                        amount: $this.data('amount'),\n                        locale: $this.data('locale'),\n                        currency: $this.data('currency')\n                    },\n                    initCallback = function () {\n                        $this.attr('disabled', 'disabled');\n                        registry.remove(this.integrationName);\n                        braintree.setup(this.clientToken, 'custom', this.getClientConfig(data));\n\n                        $this.off('click')\n                            .on('click', function (event) {\n                                event.preventDefault();\n\n                                registry.get(self.integrationName, function (integration) {\n                                    integration.paypal.initAuthFlow();\n                                });\n                            });\n                    }.bind(this);\n\n                currentIntegration ?\n                    currentIntegration.teardown(initCallback) :\n                    initCallback();\n\n                return this;\n            },\n\n            /**\n             * @returns {Object}\n             */\n            getClientConfig: function (data) {\n                this.clientConfig.paypal = {\n                    singleUse: true,\n                    amount: data.amount,\n                    currency: data.currency,\n                    locale: data.locale,\n                    enableShippingAddress: true,\n                    headless: true\n                };\n\n                if (this.displayName) {\n                    this.clientConfig.paypal.displayName = this.displayName;\n                }\n\n                _.each(this.clientConfig, function (fn, name) {\n                    if (typeof fn === 'function') {\n                        this.clientConfig[name] = fn.bind(this);\n                    }\n                }, this);\n\n                return this.clientConfig;\n            }\n        });\n    }\n);\n","Magento_Braintree/js/paypal/form-builder.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'jquery',\n        'underscore',\n        'mage/template'\n    ],\n    function ($, _, mageTemplate) {\n        'use strict';\n\n        return {\n\n            /**\n             * @param {Object} formData\n             * @returns {*|jQuery}\n             */\n            build: function (formData) {\n                var formTmpl = mageTemplate('<form action=\"<%= data.action %>\"' +\n                    ' method=\"POST\" hidden enctype=\"application/x-www-form-urlencoded\">' +\n                        '<% _.each(data.fields, function(val, key){ %>' +\n                            '<input value=\\'<%= val %>\\' name=\"<%= key %>\" type=\"hidden\">' +\n                        '<% }); %>' +\n                    '</form>');\n\n                return $(formTmpl({\n                    data: {\n                        action: formData.action,\n                        fields: formData.fields\n                    }\n                })).appendTo($('[data-container=\"body\"]'));\n            }\n        };\n    }\n);\n","Magento_Authorizenet/js/view/payment/authorizenet.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/renderer-list'\n    ],\n    function (\n        Component,\n        rendererList\n    ) {\n        'use strict';\n        rendererList.push(\n            {\n                type: 'authorizenet_directpost',\n                component: 'Magento_Authorizenet/js/view/payment/method-renderer/authorizenet-directpost'\n            }\n        );\n        /** Add view logic here if needed */\n        return Component.extend({});\n    }\n);\n","Magento_Authorizenet/js/view/payment/method-renderer/authorizenet-directpost.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'jquery',\n        'Magento_Payment/js/view/payment/iframe'\n    ],\n    function ($, Component) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Authorizenet/payment/authorizenet-directpost',\n                timeoutMessage: 'Sorry, but something went wrong. Please contact the seller.'\n            },\n            placeOrderHandler: null,\n            validateHandler: null,\n\n            /**\n             * @param {Object} handler\n             */\n            setPlaceOrderHandler: function (handler) {\n                this.placeOrderHandler = handler;\n            },\n\n            /**\n             * @param {Object} handler\n             */\n            setValidateHandler: function (handler) {\n                this.validateHandler = handler;\n            },\n\n            /**\n             * @returns {Object}\n             */\n            context: function () {\n                return this;\n            },\n\n            /**\n             * @returns {Boolean}\n             */\n            isShowLegend: function () {\n                return true;\n            },\n\n            /**\n             * @returns {String}\n             */\n            getCode: function () {\n                return 'authorizenet_directpost';\n            },\n\n            /**\n             * @returns {Boolean}\n             */\n            isActive: function () {\n                return true;\n            }\n        });\n    }\n);\n","Magestore_WebposPaypal/js/resource/paypal.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'mage/translate',\n        'Magestore_Webpos/js/helper/alert'\n    ],\n    function (onlineAbstract, addNotification, __, Alert) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.apiStartPaymentUrl = \"/webpos/paypal/startPayment\";\n                this.apiSendInvoiceUrl = \"/webpos/paypal/sendInvoice\";\n            },\n            getCallBackEvent: function(key){\n                switch(key){\n                    case \"startPayment\":\n                        return \"paypal_start_payment_after\";\n                    case \"sendInvoice\":\n                        return \"paypal_send_invoice_after\";\n                }\n            },\n            getApiUrl: function(key){\n                switch(key){\n                    case \"apiStartPaymentUrl\":\n                        return this.apiStartPaymentUrl;\n                    case \"apiSendInvoiceUrl\":\n                        return this.apiSendInvoiceUrl;\n                }\n            },\n            startPayment: function(params,deferred){\n                var apiUrl,\n                    urlParams,\n                    callBackEvent;\n                apiUrl = this.getApiUrl(\"apiStartPaymentUrl\");\n                callBackEvent = this.getCallBackEvent(\"startPayment\");\n                urlParams = {};\n                this.callRestApi(apiUrl, \"post\", urlParams, params, deferred, callBackEvent);\n                this.procressResponse(deferred);\n            },\n            sendInvoice: function(params,deferred){\n                var apiUrl,\n                    urlParams,\n                    callBackEvent;\n                apiUrl = this.getApiUrl(\"apiSendInvoiceUrl\");\n                callBackEvent = this.getCallBackEvent(\"sendInvoice\");\n                urlParams = {};\n                this.callRestApi(apiUrl, \"post\", urlParams, params, deferred, callBackEvent);\n                this.procressResponse(deferred);\n            },\n            procressResponse: function(deferred){\n                deferred.fail(function (response) {\n                    if (response.responseText) {\n                        var error = JSON.parse(response.responseText);\n                        if (error.message != undefined) {\n                            addNotification(error.message, true, 'danger', 'Error');\n                        }else{\n                            Alert({\n                                priority: 'danger',\n                                title: __('Message'),\n                                message: __('Something went wrong with the application, please check the exception.log file to see more detail about the error')\n                            });\n                        }\n                    } else {\n                        addNotification(\"Please check your network connection\", true, 'danger', 'Error');\n                    }\n                });\n            }\n        });\n    }\n);","Magestore_WebposPaypal/js/model/paypal.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'mage/translate',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/view/checkout/checkout/payment_selected',\n        'Magestore_Webpos/js/view/checkout/checkout/payment_popup',\n        'Magestore_Webpos/js/view/checkout/checkout/payment',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/cart/items',\n        'Magestore_Webpos/js/model/checkout/cart/totals-factory',\n        'Magestore_WebposPaypal/js/resource/paypal',\n        'Magestore_Webpos/js/action/notification/add-notification'\n    ],\n    function ($, ko, __, Alert, PriceHelper, Helper, Event, SelectedPayment, PopupPayment, Payment, CheckoutModel, CartModel, Items, TotalsFactory, ApiResource, addNotification) {\n        \"use strict\";\n\n        var PaypalService = {\n            /**\n             * Logo url\n             */\n            logoUrl: ko.observable(''),\n            /**\n             * Paypal authorize url\n             */\n            authorizeUrl: ko.observable(''),\n            /**\n             * show ajax loader\n             */\n            loading: ko.observable(false),\n            /**\n             * Flag to check the popup has been blocked\n             */\n            blocked: ko.observable(false),\n            /**\n             * Flag to check if allow customer pay via email\n             */\n            enableSendInvoice: ko.observable(false),\n            /**\n             * Save invoice number sent to customer email\n             */\n            lastInvoiceData: ko.observable(),\n            /**\n             * authorize window\n             */\n            authorizeWindow: ko.observable(),\n            /**\n             * columns\n             */\n            renderPaymentColumns: ko.observable(false),\n            /**\n             * Payment method code\n             */\n            PAYMENT_METHOD_CODE: 'paypal_integration',\n            /**\n             * Initialize\n             */\n            initialize: function () {\n                var self = this;\n                self.initCallbacks();\n                self.initPaymentMethod();\n                self.initEvents();\n                return self;\n            },\n            /**\n             * Start create payment\n             */\n            start: function(){\n                var self = this;\n                var deferred = $.Deferred();\n                var params = {\n                    transaction:self.getTransactionData()\n                };\n                ApiResource().setPush(true).setLog(false).startPayment(params, deferred);\n                self.loading(true);\n                deferred.done(function (response) {\n                    if(response){\n                        self.openAuthorizeWindow(response);\n                    }else{\n                        Event.dispatch('close_paypal_integration', '');\n                    }\n                    self.showMessage(response);\n                }).always(function () {\n                    self.loading(false);\n                });\n            },\n            /**\n             * Show message by process response\n             * @param response\n             */\n            showMessage: function(response){\n                if(response && response.message){\n                    var priority = (response.success)?'success':'danger';\n                    var title = (response.success)?'Message':'Error';\n                    Alert({\n                        priority: priority,\n                        title: __(title),\n                        message: __(response.message)\n                    });\n                }\n            },\n            /**\n             * Open authorize window\n             * @param url\n             */\n            openAuthorizeWindow: function(url){\n                var self = this;\n                if(self.authorizeWindow()){\n                    self.authorizeWindow().close();\n                }\n                self.authorizeUrl(url);\n                var authorizeWindow = window.open(url, 'authorize_window', 'status=1,width=700,height=700');\n                if(authorizeWindow){\n                    self.blocked(false);\n                    self.authorizeWindow(authorizeWindow);\n                }else{\n                    self.blocked(true);\n                }\n            },\n            /**\n             * Close authorize window\n             */\n            closeAuthorizeWindow: function(){\n                var self = this;\n                if(self.authorizeWindow()){\n                    self.authorizeWindow().close();\n                    self.authorizeWindow('');\n                }\n            },\n            /**\n             * Close paypal integration popup\n             */\n            cancel: function(){\n                Event.dispatch('close_paypal_integration', '');\n            },\n            /**\n             * Update reference number and place order\n             * @param responseText\n             */\n            success: function(responseText){\n                var self = this;\n                if(responseText){\n                    var response = JSON.parse(responseText);\n                    if(response){\n                        self.showMessage(response);\n                        if(response.success){\n                            Event.dispatch('paypal_integration_payment_complete', '');\n                            if(response.transactionId){\n                                self.updateRefNumber(response.transactionId);\n                                if(Helper.isUseOnline('checkout')){\n                                    CheckoutModel.placeOrderOnline();\n                                }else{\n                                    CheckoutModel.createOrder();\n                                }\n                            }\n                        }\n                    }\n                }\n                Event.dispatch('close_paypal_integration', '');\n            },\n            /**\n             * Set init object to call from childs window\n             */\n            initCallbacks: function(){\n                var self = this;\n                if(typeof window.paypalService == 'undefined'){\n                    window.paypalService = {\n                        cancel:self.cancel,\n                        success:$.proxy(self.success, self)\n                    };\n                }\n            },\n            /**\n             * Get paypal method from selected payment list\n             * @returns {*}\n             */\n            getSelectedPaypalMethod: function(){\n                var self = this;\n                var payments = CheckoutModel.selectedPayments();\n                var paypal = ko.utils.arrayFirst(payments, function(method){\n                    return method.code == self.PAYMENT_METHOD_CODE;;\n                });\n                return paypal;\n            },\n            /**\n             * Subscribe the list to add paypal payment method\n             */\n            initPaymentMethod: function(){\n                var self = this;\n                PopupPayment().items.subscribe(function(items){\n                    var paypal = self.getSelectedPaypalMethod();\n                    if(!paypal){\n                        items = self.checkPaymentList(items);\n                    }\n                });\n                Payment().items.subscribe(function(items){\n                    items = self.checkPaymentList(items);\n                });\n            },\n            /**\n             * Add paypal payment method\n             * @param items\n             * @returns {*}\n             */\n            checkPaymentList: function(items){\n                var self = this;\n                var inserted = false;\n                if(items.length > 0){\n                    var paypal = ko.utils.arrayFirst(items, function(method){\n                        return method.code == self.PAYMENT_METHOD_CODE;\n                    });\n                    if(paypal){\n                        inserted = true;\n                        paypal.type = \"0\";\n                    }\n                }\n                if(!inserted){\n                    var firstMethod = ko.utils.arrayFirst(items, function(method){\n                        return method.code != '';\n                    });\n                    if(firstMethod || self.renderPaymentColumns() != false){\n                        if(self.renderPaymentColumns() == false || firstMethod){\n                            self.renderPaymentColumns(firstMethod.columns);\n                        }\n                        items.push({\n                            code:self.PAYMENT_METHOD_CODE,\n                            columns: self.renderPaymentColumns(),\n                            information:\"\",\n                            is_default:\"0\",\n                            is_pay_later:0,\n                            is_reference_number:\"0\",\n                            title:__(\"Web POS - Paypal Integration\"),\n                            type:\"0\"\n                        });\n                    }\n                }\n                return items;\n            },\n            /**\n             * Init some events, change event when place order\n             */\n            initEvents: function(){\n                var self = this;\n                CheckoutModel.selectedPayments.subscribe(function(){\n                    $('#checkout_button').unbind('click');\n                    $('#checkout_button').click(function(){\n                        $.proxy(self.placeOrder(), self);\n                    });\n                });\n                Event.observer('webpos_place_order_before', function (event, data) {\n                    self.placeOrderBefore(data);\n                });\n                Event.observer('webpos_place_order_after', function (event, data) {\n                    self.placeOrderAfter(data);\n                });\n            },\n            /**\n             * Rewrite place order function\n             * @returns {boolean}\n             */\n            placeOrder: function(){\n                var self = this;\n                var paypal = self.getSelectedPaypalMethod();\n                if(paypal){\n                    Event.dispatch('open_paypal_integration', '');\n                    if(!self.enableSendInvoice()){\n                        self.start();\n                    }\n                }else{\n                    Event.dispatch('start_place_order', '');\n                }\n                return false;\n            },\n            /**\n             * Save reference number after process paypal payment\n             * @param transactionId\n             */\n            updateRefNumber: function(transactionId){\n                var self = this;\n                var paypal = self.getSelectedPaypalMethod();\n                if(paypal){\n                    paypal.reference_number = __(\"Paypal Transaction ID \")+'#'+transactionId;\n                    paypal.is_pay_later = 0;\n                }\n            },\n            /**\n             * Get transaction params to create paypal payment\n             * @returns {{total: *, currency: string, description: string}}\n             */\n            getTransactionData: function(){\n                var self = this;\n                var paypal = self.getSelectedPaypalMethod();\n                var amount = (paypal)?paypal.cart_total:0;\n                var transaction = {\n                    total: PriceHelper.currencyConvert(amount),\n                    currency: (window.webposConfig)?window.webposConfig.currentCurrencyCode:'',\n                    description: ''\n                }\n                return transaction;\n            },\n            /**\n             * Get params to create paypal invoice\n             * @returns {{billing: *, shipping: *, items: Array, totals: Array, total_paid: *, currency_code: *, note: *}}\n             */\n            getCreateInvoiceParams: function(){\n                var self = this;\n                var paypal = self.getSelectedPaypalMethod();\n                var totalPaid = parseFloat(CheckoutModel.getTotalPaid()) - parseFloat(paypal.cart_total);\n                var items = [];\n                var totals = [];\n                var Totals = TotalsFactory.get();\n                $.each(Totals.getTotals(), function () {\n                    totals.push({\n                        code: this.code(),\n                        amount: PriceHelper.currencyConvert(this.value())\n                    });\n                });\n\n                $.each(Items.getItems(), function () {\n                    items.push({\n                        'name': this.product_name(),\n                        'qty': this.qty(),\n                        'unit_price': this.item_price(),\n                        'tax_percent': this.tax_rate()\n                    });\n                });\n                var customerData = CartModel.customerData();\n                var billingAddress = CheckoutModel.billingAddress();\n                var shippingAddress = CheckoutModel.shippingAddress();\n                billingAddress.email = customerData.email;\n                billingAddress.id = 0;\n                shippingAddress.id = 0;\n\n                var params = {\n                    billing: billingAddress,\n                    shipping: shippingAddress,\n                    items: items,\n                    totals: totals,\n                    total_paid: PriceHelper.currencyConvert(totalPaid),\n                    currency_code: window.webposConfig.currentCurrencyCode,\n                    note: CheckoutModel.orderComment()\n                };\n                return params;\n            },\n            /**\n             * Create paypal invoice and send to customer\n             */\n            sendInvoice: function(){\n                var self = this;\n                if(self.loading() == false) {\n                    var deferred = $.Deferred();\n                    var params = self.getCreateInvoiceParams();\n                    ApiResource().setPush(true).setLog(false).sendInvoice(params, deferred);\n                    self.loading(true);\n                    deferred.done(function (response) {\n                        if(typeof response == 'string'){\n                            response = JSON.parse(response);\n                        }\n                        if(response.id){\n                            var paypal = self.getSelectedPaypalMethod();\n                            if(paypal && response.number){\n                                paypal.reference_number = __(\"Paypal Invoice Number \")+\"#\"+response.number;\n                                paypal.is_pay_later = 1;\n                                paypal.cart_total = 0;\n                                paypal.paid_amount = 0;\n                            }\n                            self.lastInvoiceData(response);\n                            CheckoutModel.createInvoice(false);\n                            Event.dispatch('disable_create_invoice', '');\n                            Event.dispatch('close_paypal_integration', '');\n                            if(response.qr_code){\n                                self.generateQrCodeImage(response.qr_code);\n                            }\n                            if(Helper.isUseOnline('checkout')){\n                                CheckoutModel.placeOrderOnline();\n                            }else{\n                                CheckoutModel.createOrder();\n                            }\n                        }\n                    }).always(function () {\n                        self.loading(false);\n                    });\n                }\n            },\n            /**\n             * Check if customer has been selected\n             * @returns {boolean}\n             */\n            validateCustomerData: function(){\n                return (CartModel.customerId())?true:false;\n            },\n            /**\n             * Add params to save data to order\n             * @param data\n             */\n            placeOrderBefore: function(data){\n                var self = this;\n                var lastInvoiceData = self.lastInvoiceData();\n                if (data && data.increment_id && CartModel.customerId() && lastInvoiceData && lastInvoiceData.id) {\n                    data.sync_params.extension_data.push({\n                        key:\"webpos_paypal_invoice_number\",\n                        value: lastInvoiceData.number\n                    });\n                    data.sync_params.extension_data.push({\n                        key:\"webpos_paypal_invoice_id\",\n                        value: lastInvoiceData.id\n                    });\n                }\n            },\n            /**\n             * Reset invoice data\n             * @param data\n             */\n            placeOrderAfter: function(data){\n                var self = this;\n                self.lastInvoiceData('');\n            },\n            /**\n             * Show QR code\n             * @param code\n             */\n            generateQrCodeImage: function(code){\n                var html = \"\";\n                if(code){\n                    var src = \"data:image/png;base64,\"+code;\n                    if($('#webpos_paypal_qrcode').length > 0){\n                        $('#webpos_paypal_qrcode').attr('src', src);\n                    }else{\n                        html = \"<img id='webpos_paypal_qrcode' src='\"+src+\"' alt='\"+__(\"Paypal Invoice QR Code\")+\"' />\";\n                        if($('#success_container .icon-iconPOS-success').length > 0){\n                            $('#success_container .icon-iconPOS-success').append(html);\n                        }\n                    }\n                }else{\n                    $('#webpos_paypal_qrcode').hide();\n                }\n            }\n        };\n        return PaypalService.initialize();\n    }\n);","Magestore_WebposPaypal/js/view/container.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'mage/translate',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/helper/alert',\n        'Magestore_WebposPaypal/js/model/paypal'\n    ],\n    function ($, ko, Component, __, Event, Alert, PaypalService) {\n        \"use strict\";\n        return Component.extend({\n            /**\n             * Default data for UI component\n             */\n            defaults: {\n                template: 'Magestore_WebposPaypal/container',\n                container_selector: '#webpos_paypal_integration_container',\n                overlay_selector: '#webpos_paypal_integration_overlay'\n            },\n            /**\n             * Check flag to show iframe\n             */\n            visible: ko.observable(false),\n            /**\n             * Check if using authorize mode\n             */\n            isAuthorize: ko.observable(true),\n            /**\n             * Show ajax loader\n             */\n            loading: PaypalService.loading,\n            /**\n             * Flag to check blocked popup\n             */\n            blocked: PaypalService.blocked,\n            /**\n             * Logo url\n             */\n            logoUrl: PaypalService.logoUrl,\n            /**\n             * Flag to check if allow to pay via email\n             */\n            enableSendInvoice: PaypalService.enableSendInvoice,\n            /**\n             * Initialize\n             */\n            initialize: function () {\n                this._super();\n                var self = this;\n                self.initEvents();\n            },\n            /**\n             * Init events\n             */\n            initEvents: function(){\n                var self = this;\n                Event.observer('enable_create_invoice', function(event, data){\n                    self.enableCreateInvoiceCheckbox(true);\n                });\n                Event.observer('disable_create_invoice', function(event, data){\n                    self.enableCreateInvoiceCheckbox(false);\n                });\n                Event.observer('open_paypal_integration', function(event, data){\n                    self.checkDefaultMode();\n                    self.visible(true);\n                });\n                Event.observer('close_paypal_integration', function(event, data){\n                    self.checkDefaultMode();\n                    self.visible(false);\n                });\n                self.visible.subscribe(function(value){\n                    if(value){\n                        $(self.container_selector).removeClass('hide');\n                        $(self.overlay_selector).removeClass('hide');\n                    }else{\n                        $(self.container_selector).addClass('hide');\n                        $(self.overlay_selector).addClass('hide');\n                    }\n                });\n                self.checkDefaultMode();\n            },\n            /**\n             * Set default mode\n             */\n            checkDefaultMode: function(){\n                var self = this;\n                if(self.enableSendInvoice()){\n                    self.isAuthorize(false);\n                }\n            },\n            /**\n             * Close popup\n             */\n            close: function(){\n                var self = this;\n                self.visible(false);\n                PaypalService.closeAuthorizeWindow();\n            },\n            /**\n             * Open paypal window again\n             */\n            tryAgain: function(){\n                if(PaypalService.authorizeUrl()){\n                    PaypalService.openAuthorizeWindow(PaypalService.authorizeUrl());\n                }\n            },\n            /**\n             * Start authorize mode\n             */\n            authorize: function(){\n                var self = this;\n                self.isAuthorize(true);\n                PaypalService.start();\n            },\n            /**\n             * Start send invoice\n             */\n            sendInvoice: function(){\n                var self = this;\n                if(PaypalService.validateCustomerData()){\n                    self.isAuthorize(false);\n                    self.enableCreateInvoiceCheckbox(false);\n                    PaypalService.sendInvoice();\n                }else{\n                    Alert({\n                        priority: 'danger',\n                        title: __('Message'),\n                        message: __('Send invoice is not allowed for guest checkout, please select the customer to continue!')\n                    });\n                }\n            },\n            enableCreateInvoiceCheckbox: function(enable){\n                var select = $('#can_paid');\n                if($('#can_paid').find('.ios-ui-select') != undefined){\n                    var bootstrapSlide = $('#can_paid').find('.ios-ui-select');\n                    if(enable == true){\n                        bootstrapSlide.addClass('checked');\n                    }else{\n                        bootstrapSlide.removeClass('checked');\n                    }\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/owl.carousel.min.js":"require([\n    'jquery'\n], function (jQuery) {\n    \"function\" !== typeof Object.create && (Object.create = function (f) {\n        function g() {\n        }\n\n        g.prototype = f;\n        return new g\n    });\n    (function (f, g, k) {\n        var l = {\n            init: function (a, b) {\n                this.$elem = f(b);\n                this.options = f.extend({}, f.fn.owlCarousels.options, this.$elem.data(), a);\n                this.userOptions = a;\n                this.loadContent()\n            }, loadContent: function () {\n                function a(a) {\n                    var d, e = \"\";\n                    if (\"function\" === typeof b.options.jsonSuccess)b.options.jsonSuccess.apply(this, [a]); else {\n                        for (d in a.owl)a.owl.hasOwnProperty(d) && (e += a.owl[d].item);\n                        b.$elem.html(e)\n                    }\n                    b.logIn()\n                }\n\n                var b = this, e;\n                \"function\" === typeof b.options.beforeInit && b.options.beforeInit.apply(this, [b.$elem]);\n                \"string\" === typeof b.options.jsonPath ?\n                    (e = b.options.jsonPath, f.getJSON(e, a)) : b.logIn()\n            }, logIn: function () {\n                this.$elem.data(\"owl-originalStyles\", this.$elem.attr(\"style\"));\n                this.$elem.data(\"owl-originalClasses\", this.$elem.attr(\"class\"));\n                this.$elem.css({opacity: 0});\n                this.orignalItems = this.options.items;\n                this.checkBrowser();\n                this.wrapperWidth = 0;\n                this.checkVisible = null;\n                this.setVars()\n            }, setVars: function () {\n                if (0 === this.$elem.children().length)return !1;\n                this.baseClass();\n                this.eventTypes();\n                this.$userItems = this.$elem.children();\n                this.itemsAmount = this.$userItems.length;\n                this.wrapItems();\n                this.$owlItems = this.$elem.find(\".owl-item\");\n                this.$owlWrapper = this.$elem.find(\".owl-wrapper\");\n                this.playDirection = \"next\";\n                this.prevItem = 0;\n                this.prevArr = [0];\n                this.currentItem = 0;\n                this.customEvents();\n                this.onStartup()\n            }, onStartup: function () {\n                this.updateItems();\n                this.calculateAll();\n                this.buildControls();\n                this.updateControls();\n                this.response();\n                this.moveEvents();\n                this.stopOnHover();\n                this.owlStatus();\n                !1 !== this.options.transitionStyle && this.transitionTypes(this.options.transitionStyle);\n                !0 === this.options.autoPlay &&\n                (this.options.autoPlay = 5E3);\n                this.play();\n                this.$elem.find(\".owl-wrapper\").css(\"display\", \"block\");\n                this.$elem.is(\":visible\") ? this.$elem.css(\"opacity\", 1) : this.watchVisibility();\n                this.onstartup = !1;\n                this.eachMoveUpdate();\n                \"function\" === typeof this.options.afterInit && this.options.afterInit.apply(this, [this.$elem])\n            }, eachMoveUpdate: function () {\n                !0 === this.options.lazyLoad && this.lazyLoad();\n                !0 === this.options.autoHeight && this.autoHeight();\n                this.onVisibleItems();\n                \"function\" === typeof this.options.afterAction && this.options.afterAction.apply(this,\n                    [this.$elem])\n            }, updateVars: function () {\n                \"function\" === typeof this.options.beforeUpdate && this.options.beforeUpdate.apply(this, [this.$elem]);\n                this.watchVisibility();\n                this.updateItems();\n                this.calculateAll();\n                this.updatePosition();\n                this.updateControls();\n                this.eachMoveUpdate();\n                \"function\" === typeof this.options.afterUpdate && this.options.afterUpdate.apply(this, [this.$elem])\n            }, reload: function () {\n                var a = this;\n                g.setTimeout(function () {\n                    a.updateVars()\n                }, 0)\n            }, watchVisibility: function () {\n                var a = this;\n                if (!1 === a.$elem.is(\":visible\"))a.$elem.css({opacity: 0}),\n                    g.clearInterval(a.autoPlayInterval), g.clearInterval(a.checkVisible); else return !1;\n                a.checkVisible = g.setInterval(function () {\n                    a.$elem.is(\":visible\") && (a.reload(), a.$elem.animate({opacity: 1}, 200), g.clearInterval(a.checkVisible))\n                }, 500)\n            }, wrapItems: function () {\n                this.$userItems.wrapAll('<div class=\"owl-wrapper\">').wrap('<div class=\"owl-item\"></div>');\n                this.$elem.find(\".owl-wrapper\").wrap('<div class=\"owl-wrapper-outer\">');\n                this.wrapperOuter = this.$elem.find(\".owl-wrapper-outer\");\n                this.$elem.css(\"display\", \"block\")\n            },\n            baseClass: function () {\n                var a = this.$elem.hasClass(this.options.baseClass), b = this.$elem.hasClass(this.options.theme);\n                a || this.$elem.addClass(this.options.baseClass);\n                b || this.$elem.addClass(this.options.theme)\n            }, updateItems: function () {\n                var a, b;\n                if (!1 === this.options.responsive)return !1;\n                if (!0 === this.options.singleItem)return this.options.items = this.orignalItems = 1, this.options.itemsCustom = !1, this.options.itemsDesktop = !1, this.options.itemsDesktopSmall = !1, this.options.itemsTablet = !1, this.options.itemsTabletSmall = !1, this.options.itemsMobile = !1;\n                a = f(this.options.responsiveBaseWidth).width();\n                a > (this.options.itemsDesktop[0] || this.orignalItems) && (this.options.items = this.orignalItems);\n                if (!1 !== this.options.itemsCustom)for (this.options.itemsCustom.sort(function (a, b) {\n                    return a[0] - b[0]\n                }), b = 0; b < this.options.itemsCustom.length; b += 1)this.options.itemsCustom[b][0] <= a && (this.options.items = this.options.itemsCustom[b][1]); else a <= this.options.itemsDesktop[0] && !1 !== this.options.itemsDesktop && (this.options.items = this.options.itemsDesktop[1]),\n                a <= this.options.itemsDesktopSmall[0] && !1 !== this.options.itemsDesktopSmall && (this.options.items = this.options.itemsDesktopSmall[1]), a <= this.options.itemsTablet[0] && !1 !== this.options.itemsTablet && (this.options.items = this.options.itemsTablet[1]), a <= this.options.itemsTabletSmall[0] && !1 !== this.options.itemsTabletSmall && (this.options.items = this.options.itemsTabletSmall[1]), a <= this.options.itemsMobile[0] && !1 !== this.options.itemsMobile && (this.options.items = this.options.itemsMobile[1]);\n                this.options.items > this.itemsAmount &&\n                !0 === this.options.itemsScaleUp && (this.options.items = this.itemsAmount)\n            }, response: function () {\n                var a = this, b, e;\n                if (!0 !== a.options.responsive)return !1;\n                e = f(g).width();\n                a.resizer = function () {\n                    f(g).width() !== e && (!1 !== a.options.autoPlay && g.clearInterval(a.autoPlayInterval), g.clearTimeout(b), b = g.setTimeout(function () {\n                        e = f(g).width();\n                        a.updateVars()\n                    }, a.options.responsiveRefreshRate))\n                };\n                f(g).resize(a.resizer)\n            }, updatePosition: function () {\n                this.jumpTo(this.currentItem);\n                !1 !== this.options.autoPlay && this.checkAp()\n            }, appendItemsSizes: function () {\n                var a =\n                    this, b = 0, e = a.itemsAmount - a.options.items;\n                a.$owlItems.each(function (c) {\n                    var d = f(this);\n                    d.css({width: a.itemWidth}).data(\"owl-item\", Number(c));\n                    if (0 === c % a.options.items || c === e)c > e || (b += 1);\n                    d.data(\"owl-roundPages\", b)\n                })\n            }, appendWrapperSizes: function () {\n                this.$owlWrapper.css({width: this.$owlItems.length * this.itemWidth * 2, left: 0});\n                this.appendItemsSizes()\n            }, calculateAll: function () {\n                this.calculateWidth();\n                this.appendWrapperSizes();\n                this.loops();\n                this.max()\n            }, calculateWidth: function () {\n                this.itemWidth = Math.round(this.$elem.width() /\n                    this.options.items)\n            }, max: function () {\n                var a = -1 * (this.itemsAmount * this.itemWidth - this.options.items * this.itemWidth);\n                this.options.items > this.itemsAmount ? this.maximumPixels = a = this.maximumItem = 0 : (this.maximumItem = this.itemsAmount - this.options.items, this.maximumPixels = a);\n                return a\n            }, min: function () {\n                return 0\n            }, loops: function () {\n                var a = 0, b = 0, e, c;\n                this.positionsInArray = [0];\n                this.pagesInArray = [];\n                for (e = 0; e < this.itemsAmount; e += 1)b += this.itemWidth, this.positionsInArray.push(-b), !0 === this.options.scrollPerPage && (c = f(this.$owlItems[e]),\n                    c = c.data(\"owl-roundPages\"), c !== a && (this.pagesInArray[a] = this.positionsInArray[e], a = c))\n            }, buildControls: function () {\n                if (!0 === this.options.navigation || !0 === this.options.pagination)this.owlControls = f('<div class=\"owl-controls\"/>').toggleClass(\"clickable\", !this.browser.isTouch).appendTo(this.$elem);\n                !0 === this.options.pagination && this.buildPagination();\n                !0 === this.options.navigation && this.buildButtons()\n            }, buildButtons: function () {\n                var a = this, b = f('<div class=\"owl-buttons\"/>');\n                a.owlControls.append(b);\n                a.buttonPrev =\n                    f(\"<div/>\", {\"class\": \"owl-prev\", html: a.options.navigationText[0] || \"\"});\n                a.buttonNext = f(\"<div/>\", {\"class\": \"owl-next\", html: a.options.navigationText[1] || \"\"});\n                b.append(a.buttonPrev).append(a.buttonNext);\n                b.on(\"touchstart.owlControls mousedown.owlControls\", 'div[class^=\"owl\"]', function (a) {\n                    a.preventDefault()\n                });\n                b.on(\"touchend.owlControls mouseup.owlControls\", 'div[class^=\"owl\"]', function (b) {\n                    b.preventDefault();\n                    f(this).hasClass(\"owl-next\") ? a.next() : a.prev()\n                })\n            }, buildPagination: function () {\n                var a = this;\n                a.paginationWrapper =\n                    f('<div class=\"owl-pagination\"/>');\n                a.owlControls.append(a.paginationWrapper);\n                a.paginationWrapper.on(\"touchend.owlControls mouseup.owlControls\", \".owl-page\", function (b) {\n                    b.preventDefault();\n                    Number(f(this).data(\"owl-page\")) !== a.currentItem && a.goTo(Number(f(this).data(\"owl-page\")), !0)\n                })\n            }, updatePagination: function () {\n                var a, b, e, c, d, g;\n                if (!1 === this.options.pagination)return !1;\n                this.paginationWrapper.html(\"\");\n                a = 0;\n                b = this.itemsAmount - this.itemsAmount % this.options.items;\n                for (c = 0; c < this.itemsAmount; c += 1)0 === c % this.options.items &&\n                (a += 1, b === c && (e = this.itemsAmount - this.options.items), d = f(\"<div/>\", {\"class\": \"owl-page\"}), g = f(\"<span></span>\", {\n                    text: !0 === this.options.paginationNumbers ? a : \"\",\n                    \"class\": !0 === this.options.paginationNumbers ? \"owl-numbers\" : \"\"\n                }), d.append(g), d.data(\"owl-page\", b === c ? e : c), d.data(\"owl-roundPages\", a), this.paginationWrapper.append(d));\n                this.checkPagination()\n            }, checkPagination: function () {\n                var a = this;\n                if (!1 === a.options.pagination)return !1;\n                a.paginationWrapper.find(\".owl-page\").each(function () {\n                    f(this).data(\"owl-roundPages\") ===\n                    f(a.$owlItems[a.currentItem]).data(\"owl-roundPages\") && (a.paginationWrapper.find(\".owl-page\").removeClass(\"active\"), f(this).addClass(\"active\"))\n                })\n            }, checkNavigation: function () {\n                if (!1 === this.options.navigation)return !1;\n                !1 === this.options.rewindNav && (0 === this.currentItem && 0 === this.maximumItem ? (this.buttonPrev.addClass(\"disabled\"), this.buttonNext.addClass(\"disabled\")) : 0 === this.currentItem && 0 !== this.maximumItem ? (this.buttonPrev.addClass(\"disabled\"), this.buttonNext.removeClass(\"disabled\")) : this.currentItem ===\n                this.maximumItem ? (this.buttonPrev.removeClass(\"disabled\"), this.buttonNext.addClass(\"disabled\")) : 0 !== this.currentItem && this.currentItem !== this.maximumItem && (this.buttonPrev.removeClass(\"disabled\"), this.buttonNext.removeClass(\"disabled\")))\n            }, updateControls: function () {\n                this.updatePagination();\n                this.checkNavigation();\n                this.owlControls && (this.options.items >= this.itemsAmount ? this.owlControls.hide() : this.owlControls.show())\n            }, destroyControls: function () {\n                this.owlControls && this.owlControls.remove()\n            }, next: function (a) {\n                if (this.isTransition)return !1;\n                this.currentItem += !0 === this.options.scrollPerPage ? this.options.items : 1;\n                if (this.currentItem > this.maximumItem + (!0 === this.options.scrollPerPage ? this.options.items - 1 : 0))if (!0 === this.options.rewindNav)this.currentItem = 0, a = \"rewind\"; else return this.currentItem = this.maximumItem, !1;\n                this.goTo(this.currentItem, a)\n            }, prev: function (a) {\n                if (this.isTransition)return !1;\n                this.currentItem = !0 === this.options.scrollPerPage && 0 < this.currentItem && this.currentItem < this.options.items ? 0 : this.currentItem - (!0 === this.options.scrollPerPage ?\n                    this.options.items : 1);\n                if (0 > this.currentItem)if (!0 === this.options.rewindNav)this.currentItem = this.maximumItem, a = \"rewind\"; else return this.currentItem = 0, !1;\n                this.goTo(this.currentItem, a)\n            }, goTo: function (a, b, e) {\n                var c = this;\n                if (c.isTransition)return !1;\n                \"function\" === typeof c.options.beforeMove && c.options.beforeMove.apply(this, [c.$elem]);\n                a >= c.maximumItem ? a = c.maximumItem : 0 >= a && (a = 0);\n                c.currentItem = c.owl.currentItem = a;\n                if (!1 !== c.options.transitionStyle && \"drag\" !== e && 1 === c.options.items && !0 === c.browser.support3d)return c.swapSpeed(0),\n                    !0 === c.browser.support3d ? c.transition3d(c.positionsInArray[a]) : c.css2slide(c.positionsInArray[a], 1), c.afterGo(), c.singleItemTransition(), !1;\n                a = c.positionsInArray[a];\n                !0 === c.browser.support3d ? (c.isCss3Finish = !1, !0 === b ? (c.swapSpeed(\"paginationSpeed\"), g.setTimeout(function () {\n                    c.isCss3Finish = !0\n                }, c.options.paginationSpeed)) : \"rewind\" === b ? (c.swapSpeed(c.options.rewindSpeed), g.setTimeout(function () {\n                    c.isCss3Finish = !0\n                }, c.options.rewindSpeed)) : (c.swapSpeed(\"slideSpeed\"), g.setTimeout(function () {\n                        c.isCss3Finish = !0\n                    },\n                    c.options.slideSpeed)), c.transition3d(a)) : !0 === b ? c.css2slide(a, c.options.paginationSpeed) : \"rewind\" === b ? c.css2slide(a, c.options.rewindSpeed) : c.css2slide(a, c.options.slideSpeed);\n                c.afterGo()\n            }, jumpTo: function (a) {\n                \"function\" === typeof this.options.beforeMove && this.options.beforeMove.apply(this, [this.$elem]);\n                a >= this.maximumItem || -1 === a ? a = this.maximumItem : 0 >= a && (a = 0);\n                this.swapSpeed(0);\n                !0 === this.browser.support3d ? this.transition3d(this.positionsInArray[a]) : this.css2slide(this.positionsInArray[a], 1);\n                this.currentItem =\n                    this.owl.currentItem = a;\n                this.afterGo()\n            }, afterGo: function () {\n                this.prevArr.push(this.currentItem);\n                this.prevItem = this.owl.prevItem = this.prevArr[this.prevArr.length - 2];\n                this.prevArr.shift(0);\n                this.prevItem !== this.currentItem && (this.checkPagination(), this.checkNavigation(), this.eachMoveUpdate(), !1 !== this.options.autoPlay && this.checkAp());\n                \"function\" === typeof this.options.afterMove && this.prevItem !== this.currentItem && this.options.afterMove.apply(this, [this.$elem])\n            }, stop: function () {\n                this.apStatus = \"stop\";\n                g.clearInterval(this.autoPlayInterval)\n            },\n            checkAp: function () {\n                \"stop\" !== this.apStatus && this.play()\n            }, play: function () {\n                var a = this;\n                a.apStatus = \"play\";\n                if (!1 === a.options.autoPlay)return !1;\n                g.clearInterval(a.autoPlayInterval);\n                a.autoPlayInterval = g.setInterval(function () {\n                    a.next(!0)\n                }, a.options.autoPlay)\n            }, swapSpeed: function (a) {\n                \"slideSpeed\" === a ? this.$owlWrapper.css(this.addCssSpeed(this.options.slideSpeed)) : \"paginationSpeed\" === a ? this.$owlWrapper.css(this.addCssSpeed(this.options.paginationSpeed)) : \"string\" !== typeof a && this.$owlWrapper.css(this.addCssSpeed(a))\n            },\n            addCssSpeed: function (a) {\n                return {\n                    \"-webkit-transition\": \"all \" + a + \"ms ease\",\n                    \"-moz-transition\": \"all \" + a + \"ms ease\",\n                    \"-o-transition\": \"all \" + a + \"ms ease\",\n                    transition: \"all \" + a + \"ms ease\"\n                }\n            }, removeTransition: function () {\n                return {\"-webkit-transition\": \"\", \"-moz-transition\": \"\", \"-o-transition\": \"\", transition: \"\"}\n            }, doTranslate: function (a) {\n                return {\n                    \"-webkit-transform\": \"translate3d(\" + a + \"px, 0px, 0px)\",\n                    \"-moz-transform\": \"translate3d(\" + a + \"px, 0px, 0px)\",\n                    \"-o-transform\": \"translate3d(\" + a + \"px, 0px, 0px)\",\n                    \"-ms-transform\": \"translate3d(\" +\n                    a + \"px, 0px, 0px)\",\n                    transform: \"translate3d(\" + a + \"px, 0px,0px)\"\n                }\n            }, transition3d: function (a) {\n                this.$owlWrapper.css(this.doTranslate(a))\n            }, css2move: function (a) {\n                this.$owlWrapper.css({left: a})\n            }, css2slide: function (a, b) {\n                var e = this;\n                e.isCssFinish = !1;\n                e.$owlWrapper.stop(!0, !0).animate({left: a}, {\n                    duration: b || e.options.slideSpeed,\n                    complete: function () {\n                        e.isCssFinish = !0\n                    }\n                })\n            }, checkBrowser: function () {\n                var a = k.createElement(\"div\");\n                a.style.cssText = \"  -moz-transform:translate3d(0px, 0px, 0px); -ms-transform:translate3d(0px, 0px, 0px); -o-transform:translate3d(0px, 0px, 0px); -webkit-transform:translate3d(0px, 0px, 0px); transform:translate3d(0px, 0px, 0px)\";\n                a = a.style.cssText.match(/translate3d\\(0px, 0px, 0px\\)/g);\n                this.browser = {\n                    support3d: null !== a && 1 === a.length,\n                    isTouch: \"ontouchstart\" in g || g.navigator.msMaxTouchPoints\n                }\n            }, moveEvents: function () {\n                if (!1 !== this.options.mouseDrag || !1 !== this.options.touchDrag)this.gestures(), this.disabledEvents()\n            }, eventTypes: function () {\n                var a = [\"s\", \"e\", \"x\"];\n                this.ev_types = {};\n                !0 === this.options.mouseDrag && !0 === this.options.touchDrag ? a = [\"touchstart.owl mousedown.owl\", \"touchmove.owl mousemove.owl\", \"touchend.owl touchcancel.owl mouseup.owl\"] :\n                    !1 === this.options.mouseDrag && !0 === this.options.touchDrag ? a = [\"touchstart.owl\", \"touchmove.owl\", \"touchend.owl touchcancel.owl\"] : !0 === this.options.mouseDrag && !1 === this.options.touchDrag && (a = [\"mousedown.owl\", \"mousemove.owl\", \"mouseup.owl\"]);\n                this.ev_types.start = a[0];\n                this.ev_types.move = a[1];\n                this.ev_types.end = a[2]\n            }, disabledEvents: function () {\n                this.$elem.on(\"dragstart.owl\", function (a) {\n                    a.preventDefault()\n                });\n                this.$elem.on(\"mousedown.disableTextSelect\", function (a) {\n                    return f(a.target).is(\"input, textarea, select, option\")\n                })\n            },\n            gestures: function () {\n                function a(a) {\n                    if (void 0 !== a.touches)return {x: a.touches[0].pageX, y: a.touches[0].pageY};\n                    if (void 0 === a.touches) {\n                        if (void 0 !== a.pageX)return {x: a.pageX, y: a.pageY};\n                        if (void 0 === a.pageX)return {x: a.clientX, y: a.clientY}\n                    }\n                }\n\n                function b(a) {\n                    \"on\" === a ? (f(k).on(d.ev_types.move, e), f(k).on(d.ev_types.end, c)) : \"off\" === a && (f(k).off(d.ev_types.move), f(k).off(d.ev_types.end))\n                }\n\n                function e(b) {\n                    b = b.originalEvent || b || g.event;\n                    d.newPosX = a(b).x - h.offsetX;\n                    d.newPosY = a(b).y - h.offsetY;\n                    d.newRelativeX = d.newPosX - h.relativePos;\n                    \"function\" === typeof d.options.startDragging && !0 !== h.dragging && 0 !== d.newRelativeX && (h.dragging = !0, d.options.startDragging.apply(d, [d.$elem]));\n                    (8 < d.newRelativeX || -8 > d.newRelativeX) && !0 === d.browser.isTouch && (void 0 !== b.preventDefault ? b.preventDefault() : b.returnValue = !1, h.sliding = !0);\n                    (10 < d.newPosY || -10 > d.newPosY) && !1 === h.sliding && f(k).off(\"touchmove.owl\");\n                    d.newPosX = Math.max(Math.min(d.newPosX, d.newRelativeX / 5), d.maximumPixels + d.newRelativeX / 5);\n                    !0 === d.browser.support3d ? d.transition3d(d.newPosX) : d.css2move(d.newPosX)\n                }\n\n                function c(a) {\n                    a = a.originalEvent || a || g.event;\n                    var c;\n                    a.target = a.target || a.srcElement;\n                    h.dragging = !1;\n                    !0 !== d.browser.isTouch && d.$owlWrapper.removeClass(\"grabbing\");\n                    d.dragDirection = 0 > d.newRelativeX ? d.owl.dragDirection = \"left\" : d.owl.dragDirection = \"right\";\n                    0 !== d.newRelativeX && (c = d.getNewPosition(), d.goTo(c, !1, \"drag\"), h.targetElement === a.target && !0 !== d.browser.isTouch && (f(a.target).on(\"click.disable\", function (a) {\n                        a.stopImmediatePropagation();\n                        a.stopPropagation();\n                        a.preventDefault();\n                        f(a.target).off(\"click.disable\")\n                    }),\n                        a = f._data(a.target, \"events\").click, c = a.pop(), a.splice(0, 0, c)));\n                    b(\"off\")\n                }\n\n                var d = this, h = {\n                    offsetX: 0,\n                    offsetY: 0,\n                    baseElWidth: 0,\n                    relativePos: 0,\n                    position: null,\n                    minSwipe: null,\n                    maxSwipe: null,\n                    sliding: null,\n                    dargging: null,\n                    targetElement: null\n                };\n                d.isCssFinish = !0;\n                d.$elem.on(d.ev_types.start, \".owl-wrapper\", function (c) {\n                    c = c.originalEvent || c || g.event;\n                    var e;\n                    if (3 === c.which)return !1;\n                    if (!(d.itemsAmount <= d.options.items)) {\n                        if (!1 === d.isCssFinish && !d.options.dragBeforeAnimFinish || !1 === d.isCss3Finish && !d.options.dragBeforeAnimFinish)return !1;\n                        !1 !== d.options.autoPlay && g.clearInterval(d.autoPlayInterval);\n                        !0 === d.browser.isTouch || d.$owlWrapper.hasClass(\"grabbing\") || d.$owlWrapper.addClass(\"grabbing\");\n                        d.newPosX = 0;\n                        d.newRelativeX = 0;\n                        f(this).css(d.removeTransition());\n                        e = f(this).position();\n                        h.relativePos = e.left;\n                        h.offsetX = a(c).x - e.left;\n                        h.offsetY = a(c).y - e.top;\n                        b(\"on\");\n                        h.sliding = !1;\n                        h.targetElement = c.target || c.srcElement\n                    }\n                })\n            }, getNewPosition: function () {\n                var a = this.closestItem();\n                a > this.maximumItem ? a = this.currentItem = this.maximumItem : 0 <= this.newPosX && (this.currentItem =\n                    a = 0);\n                return a\n            }, closestItem: function () {\n                var a = this, b = !0 === a.options.scrollPerPage ? a.pagesInArray : a.positionsInArray, e = a.newPosX, c = null;\n                f.each(b, function (d, g) {\n                    e - a.itemWidth / 20 > b[d + 1] && e - a.itemWidth / 20 < g && \"left\" === a.moveDirection() ? (c = g, a.currentItem = !0 === a.options.scrollPerPage ? f.inArray(c, a.positionsInArray) : d) : e + a.itemWidth / 20 < g && e + a.itemWidth / 20 > (b[d + 1] || b[d] - a.itemWidth) && \"right\" === a.moveDirection() && (!0 === a.options.scrollPerPage ? (c = b[d + 1] || b[b.length - 1], a.currentItem = f.inArray(c, a.positionsInArray)) :\n                        (c = b[d + 1], a.currentItem = d + 1))\n                });\n                return a.currentItem\n            }, moveDirection: function () {\n                var a;\n                0 > this.newRelativeX ? (a = \"right\", this.playDirection = \"next\") : (a = \"left\", this.playDirection = \"prev\");\n                return a\n            }, customEvents: function () {\n                var a = this;\n                a.$elem.on(\"owl.next\", function () {\n                    a.next()\n                });\n                a.$elem.on(\"owl.prev\", function () {\n                    a.prev()\n                });\n                a.$elem.on(\"owl.play\", function (b, e) {\n                    a.options.autoPlay = e;\n                    a.play();\n                    a.hoverStatus = \"play\"\n                });\n                a.$elem.on(\"owl.stop\", function () {\n                    a.stop();\n                    a.hoverStatus = \"stop\"\n                });\n                a.$elem.on(\"owl.goTo\", function (b, e) {\n                    a.goTo(e)\n                });\n                a.$elem.on(\"owl.jumpTo\", function (b, e) {\n                    a.jumpTo(e)\n                })\n            }, stopOnHover: function () {\n                var a = this;\n                !0 === a.options.stopOnHover && !0 !== a.browser.isTouch && !1 !== a.options.autoPlay && (a.$elem.on(\"mouseover\", function () {\n                    a.stop()\n                }), a.$elem.on(\"mouseout\", function () {\n                    \"stop\" !== a.hoverStatus && a.play()\n                }))\n            }, lazyLoad: function () {\n                var a, b, e, c, d;\n                if (!1 === this.options.lazyLoad)return !1;\n                for (a = 0; a < this.itemsAmount; a += 1)b = f(this.$owlItems[a]), \"loaded\" !== b.data(\"owl-loaded\") && (e = b.data(\"owl-item\"), c = b.find(\".lazyOwl\"), \"string\" !== typeof c.data(\"src\") ?\n                    b.data(\"owl-loaded\", \"loaded\") : (void 0 === b.data(\"owl-loaded\") && (c.hide(), b.addClass(\"loading\").data(\"owl-loaded\", \"checked\")), (d = !0 === this.options.lazyFollow ? e >= this.currentItem : !0) && e < this.currentItem + this.options.items && c.length && this.lazyPreload(b, c)))\n            }, lazyPreload: function (a, b) {\n                function e() {\n                    a.data(\"owl-loaded\", \"loaded\").removeClass(\"loading\");\n                    b.removeAttr(\"data-src\");\n                    \"fade\" === d.options.lazyEffect ? b.fadeIn(400) : b.show();\n                    \"function\" === typeof d.options.afterLazyLoad && d.options.afterLazyLoad.apply(this,\n                        [d.$elem])\n                }\n\n                function c() {\n                    f += 1;\n                    d.completeImg(b.get(0)) || !0 === k ? e() : 100 >= f ? g.setTimeout(c, 100) : e()\n                }\n\n                var d = this, f = 0, k;\n                \"DIV\" === b.prop(\"tagName\") ? (b.css(\"background-image\", \"url(\" + b.data(\"src\") + \")\"), k = !0) : b[0].src = b.data(\"src\");\n                c()\n            }, autoHeight: function () {\n                function a() {\n                    var a = f(e.$owlItems[e.currentItem]).height();\n                    e.wrapperOuter.css(\"height\", a + \"px\");\n                    e.wrapperOuter.hasClass(\"autoHeight\") || g.setTimeout(function () {\n                        e.wrapperOuter.addClass(\"autoHeight\")\n                    }, 0)\n                }\n\n                function b() {\n                    d += 1;\n                    e.completeImg(c.get(0)) ? a() : 100 >= d ? g.setTimeout(b,\n                        100) : e.wrapperOuter.css(\"height\", \"\")\n                }\n\n                var e = this, c = f(e.$owlItems[e.currentItem]).find(\"img\"), d;\n                void 0 !== c.get(0) ? (d = 0, b()) : a()\n            }, completeImg: function (a) {\n                return !a.complete || \"undefined\" !== typeof a.naturalWidth && 0 === a.naturalWidth ? !1 : !0\n            }, onVisibleItems: function () {\n                var a;\n                !0 === this.options.addClassActive && this.$owlItems.removeClass(\"active\");\n                this.visibleItems = [];\n                for (a = this.currentItem; a < this.currentItem + this.options.items; a += 1)this.visibleItems.push(a), !0 === this.options.addClassActive && f(this.$owlItems[a]).addClass(\"active\");\n                this.owl.visibleItems = this.visibleItems\n            }, transitionTypes: function (a) {\n                this.outClass = \"owl-\" + a + \"-out\";\n                this.inClass = \"owl-\" + a + \"-in\"\n            }, singleItemTransition: function () {\n                var a = this, b = a.outClass, e = a.inClass, c = a.$owlItems.eq(a.currentItem), d = a.$owlItems.eq(a.prevItem), f = Math.abs(a.positionsInArray[a.currentItem]) + a.positionsInArray[a.prevItem], g = Math.abs(a.positionsInArray[a.currentItem]) + a.itemWidth / 2;\n                a.isTransition = !0;\n                a.$owlWrapper.addClass(\"owl-origin\").css({\n                    \"-webkit-transform-origin\": g + \"px\", \"-moz-perspective-origin\": g +\n                    \"px\", \"perspective-origin\": g + \"px\"\n                });\n                d.css({\n                    position: \"relative\",\n                    left: f + \"px\"\n                }).addClass(b).on(\"webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend\", function () {\n                    a.endPrev = !0;\n                    d.off(\"webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend\");\n                    a.clearTransStyle(d, b)\n                });\n                c.addClass(e).on(\"webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend\", function () {\n                    a.endCurrent = !0;\n                    c.off(\"webkitAnimationEnd oAnimationEnd MSAnimationEnd animationend\");\n                    a.clearTransStyle(c, e)\n                })\n            }, clearTransStyle: function (a,\n                                          b) {\n                a.css({position: \"\", left: \"\"}).removeClass(b);\n                this.endPrev && this.endCurrent && (this.$owlWrapper.removeClass(\"owl-origin\"), this.isTransition = this.endCurrent = this.endPrev = !1)\n            }, owlStatus: function () {\n                this.owl = {\n                    userOptions: this.userOptions,\n                    baseElement: this.$elem,\n                    userItems: this.$userItems,\n                    owlItems: this.$owlItems,\n                    currentItem: this.currentItem,\n                    prevItem: this.prevItem,\n                    visibleItems: this.visibleItems,\n                    isTouch: this.browser.isTouch,\n                    browser: this.browser,\n                    dragDirection: this.dragDirection\n                }\n            }, clearEvents: function () {\n                this.$elem.off(\".owl owl mousedown.disableTextSelect\");\n                f(k).off(\".owl owl\");\n                f(g).off(\"resize\", this.resizer)\n            }, unWrap: function () {\n                0 !== this.$elem.children().length && (this.$owlWrapper.unwrap(), this.$userItems.unwrap().unwrap(), this.owlControls && this.owlControls.remove());\n                this.clearEvents();\n                this.$elem.attr(\"style\", this.$elem.data(\"owl-originalStyles\") || \"\").attr(\"class\", this.$elem.data(\"owl-originalClasses\"))\n            }, destroy: function () {\n                this.stop();\n                g.clearInterval(this.checkVisible);\n                this.unWrap();\n                this.$elem.removeData()\n            }, reinit: function (a) {\n                a = f.extend({}, this.userOptions,\n                    a);\n                this.unWrap();\n                this.init(a, this.$elem)\n            }, addItem: function (a, b) {\n                var e;\n                if (!a)return !1;\n                if (0 === this.$elem.children().length)return this.$elem.append(a), this.setVars(), !1;\n                this.unWrap();\n                e = void 0 === b || -1 === b ? -1 : b;\n                e >= this.$userItems.length || -1 === e ? this.$userItems.eq(-1).after(a) : this.$userItems.eq(e).before(a);\n                this.setVars()\n            }, removeItem: function (a) {\n                if (0 === this.$elem.children().length)return !1;\n                a = void 0 === a || -1 === a ? -1 : a;\n                this.unWrap();\n                this.$userItems.eq(a).remove();\n                this.setVars()\n            }\n        };\n        f.fn.owlCarousels = function (a) {\n            return this.each(function () {\n                //if (!0 ===\n                //    f(this).data(\"owl-init\"))return !1;\n                f(this).data(\"owl-init\", !0);\n                var b = Object.create(l);\n                b.init(a, this);\n                f.data(this, \"owlCarousels\", b)\n            })\n        };\n        f.fn.owlCarousels.options = {\n            items: 5,\n            itemsCustom: !1,\n            itemsDesktop: [1199, 4],\n            itemsDesktopSmall: [979, 3],\n            itemsTablet: [768, 2],\n            itemsTabletSmall: !1,\n            itemsMobile: [479, 1],\n            singleItem: !1,\n            itemsScaleUp: !1,\n            slideSpeed: 200,\n            paginationSpeed: 800,\n            rewindSpeed: 1E3,\n            autoPlay: !1,\n            stopOnHover: !1,\n            navigation: !1,\n            navigationText: [\"prev\", \"next\"],\n            rewindNav: !0,\n            scrollPerPage: !1,\n            pagination: !0,\n            paginationNumbers: !1,\n            responsive: !0,\n            responsiveRefreshRate: 200,\n            responsiveBaseWidth: g,\n            baseClass: \"owl-carousel\",\n            theme: \"owl-theme\",\n            lazyLoad: !1,\n            lazyFollow: !0,\n            lazyEffect: \"fade\",\n            autoHeight: !1,\n            jsonPath: !1,\n            jsonSuccess: !1,\n            dragBeforeAnimFinish: !0,\n            mouseDrag: !0,\n            touchDrag: !0,\n            addClassActive: !1,\n            transitionStyle: !1,\n            beforeUpdate: !1,\n            afterUpdate: !1,\n            beforeInit: !1,\n            afterInit: !1,\n            beforeMove: !1,\n            afterMove: !1,\n            afterAction: !1,\n            startDragging: !1,\n            afterLazyLoad: !1\n        }\n    })(jQuery, window, document);\n});\n\n","Magestore_Webpos/js/region-updater.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n/*jshint browser:true expr:true*/\ndefine([\n    'jquery',\n    'mage/template',\n    'jquery/ui',\n    'mage/validation'\n], function ($, mageTemplate) {\n    'use strict';\n\n    $.widget('mage.regionUpdater', {\n        options: {\n            regionTemplate:\n            '<option value=\"<%- data.value %>\" <% if (data.isSelected) { %>selected=\"selected\"<% } %>>' +\n            '<%- data.title %>' +\n            '</option>',\n            isRegionRequired: true,\n            isZipRequired: true,\n            isCountryRequired: true,\n            currentRegion: null,\n            isMultipleCountriesAllowed: true\n        },\n\n        _create: function () {\n            this._initCountryElement();\n\n            this.currentRegionOption = this.options.currentRegion;\n            this.regionTmpl = mageTemplate(this.options.regionTemplate);\n\n            this._updateRegion(this.element.find('option:selected').val());\n\n            this.options.regionList.on('change', $.proxy(function (e) {\n                this.setOption = false;\n                this.currentRegionOption = $(e.target).val();\n            }, this));\n\n            this.options.regionInput.on('focusout', $.proxy(function () {\n                this.setOption = true;\n            }, this));\n        },\n\n        _initCountryElement: function() {\n            if (this.options.isMultipleCountriesAllowed) {\n                this.element.parents('div.field').show();\n                this.element.on('change', $.proxy(function (e) {\n                    this._updateRegion($(e.target).val());\n                }, this));\n                if (this.options.isCountryRequired) {\n                    this.element.addClass('required-entry');\n                    this.element.parents('div.field').addClass('required');\n                }\n            } else {\n                this.element.parents('div.field').hide();\n            }\n        },\n\n        /**\n         * Remove options from dropdown list\n         * @param {Object} selectElement - jQuery object for dropdown list\n         * @private\n         */\n        _removeSelectOptions: function (selectElement) {\n            selectElement.find('option').each(function (index) {\n                if (index) {\n                    $(this).remove();\n                }\n            });\n        },\n\n        /**\n         * Render dropdown list\n         * @param {Object} selectElement - jQuery object for dropdown list\n         * @param {String} key - region code\n         * @param {Object} value - region object\n         * @private\n         */\n        _renderSelectOption: function (selectElement, key, value) {\n            selectElement.append($.proxy(function () {\n                var name = value.name.replace(/[!\"#$%&'()*+,.\\/:;<=>?@[\\\\\\]^`{|}~]/g, '\\\\$&'),\n                    tmplData,\n                    tmpl;\n\n                if (value.code && $(name).is('span')) {\n                    key = value.code;\n                    value.name = $(name).text();\n                }\n\n                tmplData = {\n                    value: key,\n                    title: value.name,\n                    isSelected: false\n                };\n\n                if (this.options.defaultRegion === key) {\n                    tmplData.isSelected = true;\n                }\n\n                tmpl = this.regionTmpl({\n                    data: tmplData\n                });\n\n                return $(tmpl);\n            }, this));\n        },\n\n        /**\n         * Takes clearError callback function as first option\n         * If no form is passed as option, look up the closest form and call clearError method.\n         * @private\n         */\n        _clearError: function () {\n            if (this.options.clearError && typeof (this.options.clearError) === 'function') {\n                this.options.clearError.call(this);\n            } else {\n                if (!this.options.form) {\n                    this.options.form = this.element.closest('form').length ? $(this.element.closest('form')[0]) : null;\n                }\n\n                this.options.form = $(this.options.form);\n\n                this.options.form && this.options.form.data('validation') && this.options.form.validation('clearError',\n                    this.options.regionListId, this.options.regionInputId, this.options.postcodeId);\n            }\n        },\n        /**\n         * Update dropdown list based on the country selected\n         * @param {String} country - 2 uppercase letter for country code\n         * @private\n         */\n        _updateRegion: function (country) {\n            // Clear validation error messages\n            var regionList = this.options.regionList,\n                regionInput = this.options.regionInput,\n                postcode = this.options.postcodeId,\n                label = regionList.parent().siblings('label'),\n                requiredLabel = regionList.parents('.input-box');\n\n            this._clearError();\n            this._checkRegionRequired(country);\n\n            // Populate state/province dropdown list if available or use input box\n            if (this.options.regionJson[country]) {\n                this._removeSelectOptions(regionList);\n                $.each(this.options.regionJson[country], $.proxy(function (key, value) {\n                    this._renderSelectOption(regionList, key, value);\n                }, this));\n\n                if (this.currentRegionOption) {\n                    regionList.val(this.currentRegionOption);\n                }\n\n                if (this.setOption) {\n                    regionList.find('option').filter(function () {\n                        return this.text === regionInput.val();\n                    }).attr('selected', true);\n                }\n\n                if (this.options.isRegionRequired) {\n                    regionList.addClass('required-entry').removeAttr('disabled');\n                    requiredLabel.addClass('required');\n                } else {\n                    regionList.removeClass('required-entry validate-select').removeAttr('data-validate');\n                    requiredLabel.removeClass('required');\n\n                    if (!this.options.optionalRegionAllowed) {\n                        regionList.attr('disabled', 'disabled');\n                    }\n                }\n\n                regionList.show();\n                regionInput.hide();\n                label.attr('for', regionList.attr('id'));\n            } else {\n                if (this.options.isRegionRequired) {\n                    regionInput.addClass('required-entry').removeAttr('disabled');\n                    requiredLabel.addClass('required');\n                } else {\n                    // if (!this.options.optionalRegionAllowed) {\n                    //     regionInput.attr('disabled', 'disabled');\n                    // }\n                }\n\n                regionList.removeClass('required-entry').hide();\n                regionInput.show();\n                requiredLabel.removeClass('required');\n                label.attr('for', regionInput.attr('id'));\n            }\n\n            // If country is in optionalzip list, make postcode input not required\n            // if (this.options.isZipRequired) {\n            //     $.inArray(country, this.options.countriesWithOptionalZip) >= 0 ?\n            //         postcode.removeClass('required-entry').closest('.field').removeClass('required') :\n            //         postcode.addClass('required-entry').closest('.field').addClass('required');\n            // }\n\n            // Add defaultvalue attribute to state/province select element\n            regionList.attr('defaultvalue', this.options.defaultRegion);\n        },\n\n        /**\n         * Check if the selected country has a mandatory region selection\n         *\n         * @param {String} country - Code of the country - 2 uppercase letter for country code\n         * @private\n         */\n        _checkRegionRequired: function (country) {\n            this.options.isRegionRequired = false;\n            var self = this;\n            $.each(this.options.regionJson.config.regions_required, function (index, elem) {\n                if (elem == country) {\n                    self.options.isRegionRequired = true;\n                }\n            });\n        }\n    });\n\n    return $.mage.regionUpdater;\n});\n","Magestore_Webpos/js/login.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine([\n    'jquery',\n    'Magestore_Webpos/js/model/resource-model/magento-rest/abstract',\n    'Magestore_Webpos/js/lib/cookie',\n    'mage/translate',\n    'Magestore_Webpos/js/lib/jquery.toaster',\n    'jquery/ui'\n], function ($, restAbstract, Cookies, Translate) {\n    $.widget(\"magestore.webposLogin\", {\n        _create: function () {\n            var self = this, options = this.options;\n            $.extend(this, {\n\n            });\n            $(this.element).mage('validation', {\n                submitHandler: function (form) {\n                    self.ajaxLogin();\n                }\n            });\n\n        },\n\n        ajaxLogin: function () {\n            var self = this;\n            var apiUrl = '/webpos/staff/login';\n            var deferred = $.Deferred();\n            var staff = {};\n            staff.username = $(this.element).find('#username').val();\n            staff.password = $(this.element).find('#pwd').val();\n            var loginButton = $(this.element).find('button');\n            loginButton.html(Translate('Please wait ...'));\n            loginButton.find('button').prop(\"disabled\",true);\n            restAbstract().setPush(true).setLog(false).callRestApi(\n                apiUrl,\n                'post',\n                {},\n                {\n                    'staff': staff\n                },\n                deferred\n            );\n            deferred.done(function (data) {\n\n                if (data != false) {\n                    Cookies.set('WEBPOSSESSION', data, { expires: parseInt(window.webposConfig.timeoutSession) });\n                    Cookies.set('check_login', 1, { expires: parseInt(window.webposConfig.timeoutSession) });\n                    window.location.reload();\n                } else {\n                    loginButton.html(Translate('Login'));\n                    loginButton.prop(\"disabled\",false);\n\n                    $.toaster(\n                        {\n                            priority: 'danger',\n                            title: Translate(\"Warning\"),\n                            message: Translate(\"Your login information is wrong!\")\n                        }\n                    );\n\n                }\n            });\n            deferred.fail(function (data) {\n                var self = this;\n                loginButton.html(Translate('Login'));\n                loginButton.prop(\"disabled\",false);\n                $.toaster(\n                    {\n                        priority: 'danger',\n                        title: Translate(\"Warning\"),\n                        message: Translate(\"Your login information is wrong!\")\n                    }\n                );\n            })\n        }\n    });\n\n    return $.magestore.webposLogin;\n\n});","Magestore_Webpos/js/general.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/**\n * Created by Luna on 6/7/2016.\n */\n/**\n *\n * Search in header\n */\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/menu'\n    ],\n    function ($j) {\n        \"use strict\";\n        $j(document).ready(function () {\n            window.addEventListener(\"orientationchange\", function() {\n                if (navigator.userAgent.match(/(iPhone|iPod|iPad)/i)) {\n                    document.documentElement.innerHTML = document.documentElement.innerHTML;\n                }\n            }, false);\n\n            var inputsearch = $j('#search-header'); // input text field\n            var inputsearch2 = $j('#search-customer'); // input text field\n            var buttonClear = $j('.o-header .remove-text');\n            var buttonClear2 = $j('#popup-change-customer .remove-text');\n            $j(inputsearch).focus(function () {\n                if ($j.trim($j(inputsearch).val()) != 'Search by SKU, name and Barcode') {\n                    $j(buttonClear).show();\n                }\n                else {\n                    $j(buttonClear).hide();\n                }\n            });\n            $j(buttonClear).click(function () {\n                $j(inputsearch).val(\"\");\n                $j(buttonClear).hide();\n            });\n            $j(inputsearch2).focus(function () {\n                if ($j.trim($j(inputsearch2).val()) != 'Search by name/ email/ phone') {\n                    $j(buttonClear2).show();\n                }\n                else {\n                    $j(buttonClear2).hide();\n                }\n            });\n            $j(buttonClear2).click(function () {\n                $j(inputsearch2).val(\"\");\n                $j(buttonClear2).hide();\n            });\n\n            /** Left Menu  */\n            var pushLeft = new Menu({\n                wrapper: '#o-wrapper',\n                type: 'push-left',\n                menuOpenerClass: '.c-button',\n                maskId: '#c-mask'\n            });\n\n            var pushLeftBtn = document.querySelector('#c-button--push-left');\n            pushLeftBtn.addEventListener('click', function (e) {\n                e.preventDefault;\n                pushLeft.open();\n            });\n\n            // setTimeout(function(){\n            //     //Style for slide of Category\n            //     //$j(\"#list-cat-header\").owlCarousel({\n            //     //    items: 7,\n            //     //    itemsDesktop: [1000, 7],\n            //     //    itemsDesktopSmall: [900, 7],\n            //     //    itemsTablet: [600, 5],\n            //     //    itemsMobile: false,\n            //     //    navigation: true,\n            //     //    navigationText: [\"\", \"\"]\n            //     //});\n            //     $j('div#all-categories .item').on('click', function (event) {\n            //         var $this = $j(this);\n            //         $j('div#all-categories .item').removeClass('clicked');\n            //         $this.addClass('clicked');\n            //\n            //     });\n            // }, 10000);\n\n            //Style for Images of Product in detail popup\n            /*\n             $j(\"#product-img-slise\").owlCarousel({\n             items: 1,\n             itemsDesktop: [1000, 1],\n             itemsDesktopSmall: [900, 1],\n             itemsTablet: [600, 1],\n             itemsMobile: false,\n             navigation: true,\n             pagination:true,\n             navigationText: [\"\", \"\"]\n             });\n             */\n            // style for Add note order\n            // $j(\"[data-toggle=popover]\").popover({\n            //     html: true,\n            //     content: function () {\n            //         var content = $j(this).attr(\"data-popover-content\");\n            //         return $j(content).children(\".popover-body\").html();\n            //     },\n            //     title: function () {\n            //         var title = $j(this).attr(\"data-popover-content\");\n            //         return $j(title).children(\".popover-heading\").html();\n            //     }\n            // });\n            // $j(funiosCheckbox\n\n            // Setup height for list product to scroll\n            $j('.catalog-header').click(function () {\n                if ($j('#all-categories').hasClass('in')) {\n                    $j('.ms-webpos .main-content').css('height', 'calc(100vh - 50px)');\n                    $j('.ms-webpos .main-content .wrap-list-product').css('height', 'calc(100vh - 135px)');\n                }\n                else {\n                    $j('.ms-webpos .main-content').css('height', 'calc(100vh - 196px)');\n                    $j('.ms-webpos .main-content .wrap-list-product').css('height', 'calc(100vh - 253px)');\n                }\n            });\n\n            //Style for Switch in From add new customer\n            // $j(\".ios\").iosCheckbox();\n\n            //Style for popup edit product\n            $j('.main-item-order ul li.product-item .product-img, .main-item-order ul li.product-item .product-info, .main-item-order ul li.product-item .price-box ').click(function (event) {\n                /*var pleft = event.pageX - 355;*/\n                var ptop = event.pageY - 30;\n                var heightvp = $j('body').height();\n                var subheight = heightvp - ptop;\n\n                if (subheight > 422) {\n                    $j(\"#popup-edit-product\").css({display: \"block\", position: \"absolute\", top: ptop + 'px'});\n                    $j(\"#popup-edit-product .arrow\").css({top: '24px'});\n                } else {\n                    var disheight = 422 - subheight;\n                    // console.log(disheight);\n                    var lasttop = ptop - disheight;\n                    var aftertop = 24 + disheight;\n                    $j(\"#popup-edit-product\").css({display: \"block\", position: \"absolute\", top: lasttop + 'px'});\n                    $j(\"#popup-edit-product .arrow\").css({top: aftertop + 'px'});\n                }\n                $j(\".wrap-backover\").show();\n            });\n            $j('.actions-customer .add-customer').click(function (event) {\n                var ptop = event.pageY - 30;\n                $j(\"#popup-change-customer\").css({display: \"block\", position: \"absolute\", top: ptop + 'px'});\n                $j(\".wrap-backover\").show();\n            });\n\n            $j('.list-product-footer .custom-sale').click(function (event) {\n\n                var ptop = event.pageY - 130;\n                $j(\"#popup-custom-sale\").css({display: \"block\", position: \"absolute\"});\n                $j(\".wrap-backover\").show();\n            });\n\n            $j('#form-add-customer .shipping-title .icon-iconPOS-add-discount, #form-add-customer .billing-title .icon-iconPOS-add-discount').click(function(){\n                $j(\"#form-add-customer\").modal('hide');\n            });\n\n            $j('.wrap-backover').click(function () {\n                $j(\"#popup-edit-product\").hide();\n                $j(\"#popup-change-customer\").hide();\n                $j(\"#webpos_cart_discountpopup\").hide();\n                $j(\"#popup-custom-sale\").hide();\n                $j(\".wrap-backover\").hide();\n                $j(\"#popup-product-detail\").hide();\n                $j(\"#popup-custom-sale\").addClass(\"fade\");\n                $j(\"#popup-custom-sale\").removeClass(\"show\");\n                $j(\"#popup-custom-sale\").removeClass(\"fade-in\");\n                $j('.notification-bell').show();\n                if($j('#checkout_container').hasClass('showMenu')){\n                    $j('#c-button--push-left').show();\n                }else{\n                    $j('#c-button--push-left').hide();\n                }\n            });\n\n\n            $j('#btn-add-new-customer').click(function () {\n                $j(\"#popup-change-customer\").hide();\n                $j(\".wrap-backover\").hide();\n            });\n            $j('.panel-collapse .edit').click(function () {\n                $j(\"#form-add-customer\").modal('hide');\n            });\n\n            $j('.c-menu__link').click(function () {\n                $j('body').removeClass('has-active-menu');\n                $j('.o-wrapper').removeClass('has-push-left');\n            });\n\n            //$j('.modal').on('shown.bs.modal', function (e) {\n            //    $j('.modal-backdrop').remove();\n            //    $j(document.createElement('div'))\n            //        .addClass('modal-backdrop in')\n            //        .appendTo('#checkout_container');\n            //})\n\n            $j('.modal').on('shown.bs.modal', function (e) {\n                $j('.modal-backdrop').remove();\n                $j(document.createElement('div')).addClass('modal-backdrop in').appendTo('#checkout_container');\n            });\n\n            $j('#orders_history_container .modal').on('shown.bs.modal', function (e) {\n                $j('.modal-backdrop').remove();\n                $j(document.createElement('div')).addClass('modal-backdrop in').appendTo('#orders_history_container .wrap-order');\n            });\n            $j('.modal').on('hide.bs.modal', function (e) {\n                $j('.modal-backdrop').remove();\n            });\n\n            /* open payments popup */\n            // $j('.checkout-footer .add-payment').click(function (event) {\n            //     var ptop = event.pageY - 130;\n            //     $j(\"#add-more-payment\").addClass('fade-in');\n            //\n            //     $j(\".wrap-backover\").show();\n            // });\n\n            /* close popup */\n            $j('.wrap-backover').click(function () {\n                $j(\".popup-for-right\").hide();\n                $j(\".popup-for-right\").removeClass('fade-in');\n                $j(\".wrap-backover\").hide();\n            });\n\n\n            // Prevent events from getting pass .popup\n\n            // $j(\".notification-bell\").click(function(e){\n            //     e.stopPropagation();\n            //     $j(\".notification-info\").show();\n            // });\n            // If an event gets to the body\n        });\n        \n        window.webposBackoverClicked = function(){\n            $j(\"#popup-edit-product\").hide();\n            $j(\"#popup-change-customer\").hide();\n            $j(\"#webpos_cart_discountpopup\").hide();\n            $j(\"#popup-custom-sale\").hide();\n            $j(\".wrap-backover\").hide();\n            $j(\"#popup-product-detail\").hide();\n            $j(\"#popup-custom-sale\").addClass(\"fade\");\n            $j(\"#popup-custom-sale\").removeClass(\"show\");\n            $j(\"#popup-custom-sale\").removeClass(\"fade-in\");\n            $j('.notification-bell').show();\n            if($j('#checkout_container').hasClass('showMenu')){\n                $j('#c-button--push-left').show();\n                $j('#c-button--push-left').removeClass('hide');\n            }else{\n                $j('#c-button--push-left').hide();\n                $j('#c-button--push-left').addClass('hide');\n            }\n        }\n    }\n);\n","Magestore_Webpos/js/menu.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n(function(window) {\n\n  'use strict';\n\n  /**\n   * Extend Object helper function.\n   */\n  function extend(a, b) {\n    for(var key in b) { \n      if(b.hasOwnProperty(key)) {\n        a[key] = b[key];\n      }\n    }\n    return a;\n  }\n\n  /**\n   * Each helper function.\n   */\n  function each(collection, callback) {\n    for (var i = 0; i < collection.length; i++) {\n      var item = collection[i];\n      callback(item);\n    }\n  }\n\n  /**\n   * Menu Constructor.\n   */\n  function Menu(options) {\n    this.options = extend({}, this.options);\n    extend(this.options, options);\n    this._init();\n  }\n\n  /**\n   * Menu Options.\n   */\n  Menu.prototype.options = {\n    wrapper: '#o-wrapper',          // The content wrapper\n    type: 'slide-left',             // The menu type\n    menuOpenerClass: '.c-button',   // The menu opener class names (i.e. the buttons)\n    maskId: '#c-mask'               // The ID of the mask\n  };\n\n  /**\n   * Initialise Menu.\n   */\n  Menu.prototype._init = function() {\n    this.body = document.body;\n    this.wrapper = document.querySelector(this.options.wrapper);\n    this.mask = document.querySelector(this.options.maskId);\n    this.menu = document.querySelector('#c-menu--' + this.options.type);\n    this.closeBtn = this.menu.querySelector('.c-menu__close');\n    this.menuOpeners = document.querySelectorAll(this.options.menuOpenerClass);\n    this._initEvents();\n  };\n\n  /**\n   * Initialise Menu Events.\n   */\n  Menu.prototype._initEvents = function() {\n    // Event for clicks on the close button inside the menu.\n    this.closeBtn.addEventListener('click', function(e) {\n      e.preventDefault();\n      this.close();\n    }.bind(this));\n\n    // Event for clicks on the mask.\n    this.mask.addEventListener('click', function(e) {\n      e.preventDefault();\n      this.close();\n    }.bind(this));\n  };\n\n  /**\n   * Open Menu.\n   */\n  Menu.prototype.open = function() {\n    this.body.classList.add('has-active-menu');\n    this.wrapper.classList.add('has-' + this.options.type);\n    this.menu.classList.add('is-active');\n    this.mask.classList.add('is-active');\n    this.disableMenuOpeners();\n  };\n\n  /**\n   * Close Menu.\n   */\n  Menu.prototype.close = function() {\n    this.body.classList.remove('has-active-menu');\n    this.wrapper.classList.remove('has-' + this.options.type);\n    this.menu.classList.remove('is-active');\n    this.mask.classList.remove('is-active');\n    this.enableMenuOpeners();\n  };\n\n  /**\n   * Disable Menu Openers.\n   */\n  Menu.prototype.disableMenuOpeners = function() {\n    each(this.menuOpeners, function(item) {\n      item.disabled = true;\n    });\n  };\n\n  /**\n   * Enable Menu Openers.\n   */\n  Menu.prototype.enableMenuOpeners = function() {\n    each(this.menuOpeners, function(item) {\n      item.disabled = false;\n    });\n  };\n\n  /**\n   * Add to global namespace.\n   */\n  window.Menu = Menu;\n\n})(window);","Magestore_Webpos/js/accounting.min.js":"/*!\n * accounting.js v0.4.2, copyright 2014 Open Exchange Rates, MIT license, http://openexchangerates.github.io/accounting.js\n */\n(function(p,z){function q(a){return!!(\"\"===a||a&&a.charCodeAt&&a.substr)}function m(a){return u?u(a):\"[object Array]\"===v.call(a)}function r(a){return\"[object Object]\"===v.call(a)}function s(a,b){var d,a=a||{},b=b||{};for(d in b)b.hasOwnProperty(d)&&null==a[d]&&(a[d]=b[d]);return a}function j(a,b,d){var c=[],e,h;if(!a)return c;if(w&&a.map===w)return a.map(b,d);for(e=0,h=a.length;e<h;e++)c[e]=b.call(d,a[e],e,a);return c}function n(a,b){a=Math.round(Math.abs(a));return isNaN(a)?b:a}function x(a){var b=c.settings.currency.format;\"function\"===typeof a&&(a=a());return q(a)&&a.match(\"%v\")?{pos:a,neg:a.replace(\"-\",\"\").replace(\"%v\",\"-%v\"),zero:a}:!a||!a.pos||!a.pos.match(\"%v\")?!q(b)?b:c.settings.currency.format={pos:b,neg:b.replace(\"%v\",\"-%v\"),zero:b}:a}var c={version:\"0.4.1\",settings:{currency:{symbol:\"$\",format:\"%s%v\",decimal:\".\",thousand:\",\",precision:2,grouping:3},number:{precision:0,grouping:3,thousand:\",\",decimal:\".\"}}},w=Array.prototype.map,u=Array.isArray,v=Object.prototype.toString,o=c.unformat=c.parse=function(a,b){if(m(a))return j(a,function(a){return o(a,b)});a=a||0;if(\"number\"===typeof a)return a;var b=b||\".\",c=RegExp(\"[^0-9-\"+b+\"]\",[\"g\"]),c=parseFloat((\"\"+a).replace(/\\((.*)\\)/,\"-$1\").replace(c,\"\").replace(b,\".\"));return!isNaN(c)?c:0},y=c.toFixed=function(a,b){var b=n(b,c.settings.number.precision),d=Math.pow(10,b);return(Math.round(c.unformat(a)*d)/d).toFixed(b)},t=c.formatNumber=c.format=function(a,b,d,i){if(m(a))return j(a,function(a){return t(a,b,d,i)});var a=o(a),e=s(r(b)?b:{precision:b,thousand:d,decimal:i},c.settings.number),h=n(e.precision),f=0>a?\"-\":\"\",g=parseInt(y(Math.abs(a||0),h),10)+\"\",l=3<g.length?g.length%3:0;return f+(l?g.substr(0,l)+e.thousand:\"\")+g.substr(l).replace(/(\\d{3})(?=\\d)/g,\"$1\"+e.thousand)+(h?e.decimal+y(Math.abs(a),h).split(\".\")[1]:\"\")},A=c.formatMoney=function(a,b,d,i,e,h){if(m(a))return j(a,function(a){return A(a,b,d,i,e,h)});var a=o(a),f=s(r(b)?b:{symbol:b,precision:d,thousand:i,decimal:e,format:h},c.settings.currency),g=x(f.format);return(0<a?g.pos:0>a?g.neg:g.zero).replace(\"%s\",f.symbol).replace(\"%v\",t(Math.abs(a),n(f.precision),f.thousand,f.decimal))};c.formatColumn=function(a,b,d,i,e,h){if(!a)return[];var f=s(r(b)?b:{symbol:b,precision:d,thousand:i,decimal:e,format:h},c.settings.currency),g=x(f.format),l=g.pos.indexOf(\"%s\")<g.pos.indexOf(\"%v\")?!0:!1,k=0,a=j(a,function(a){if(m(a))return c.formatColumn(a,f);a=o(a);a=(0<a?g.pos:0>a?g.neg:g.zero).replace(\"%s\",f.symbol).replace(\"%v\",t(Math.abs(a),n(f.precision),f.thousand,f.decimal));if(a.length>k)k=a.length;return a});return j(a,function(a){return q(a)&&a.length<k?l?a.replace(f.symbol,f.symbol+Array(k-a.length+1).join(\" \")):Array(k-a.length+1).join(\" \")+a:a})};if(\"undefined\"!==typeof exports){if(\"undefined\"!==typeof module&&module.exports)exports=module.exports=c;exports.accounting=c}else\"function\"===typeof define&&define.amd?define([],function(){return c}):(c.noConflict=function(a){return function(){p.accounting=a;c.noConflict=z;return c}}(p.accounting),p.accounting=c)})(this);\n","Magestore_Webpos/js/install.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magestore_Webpos/js/model/config/config',\n        'Magestore_Webpos/js/view/settings/synchronization/sync-map',\n        'Magestore_Webpos/js/model/synchronization',\n        'Magestore_Webpos/js/lib/cookie'\n    ],\n    function ($, ko, Component, config, syncmap, synchronization, Cookies) {\n        \"use strict\";\n        return Component.extend({\n\n            isInstall: ko.observable(true),\n\n            message: ko.observable(''),\n            loading: ko.observable('.'),\n\n            number: syncmap().length,\n\n            model: syncmap(),\n\n            modelListInstall: ko.observableArray([]),\n\n            percent: ko.observable('0'),\n\n            initialize: function () {\n                this._super();\n                var element = $('#install_container');\n                if (Cookies.get('check_login') && element) {\n                    element.addClass('active');\n                    $('#c-button--push-left').hide();\n                    $('#webpos-notification').hide();\n                } else {\n                    if (element.hasClass('active'))\n                        element.removeClass('active');\n                    $('#c-button--push-left').show();\n                    $('#webpos-notification').show();\n                }\n                var self = this;\n                self.model.sort(function (a, b) {\n                    var x = a.sort_order;\n                    var y = b.sort_order;\n                    return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n                });\n                if (Cookies.get('check_login')) {\n                    reloading = true;\n                    self.isInstall(true);\n                    self.installData();\n                    self.loadingProccess();\n                }\n            },\n\n            installData: function () {\n                var self = this;\n                var model = this.model.shift();\n                if (typeof model == 'undefined') {\n                    Cookies.remove('check_login');\n                    location.reload();\n                    return this;\n                }\n                var update = new synchronization(model);\n                var endDeferred = $.Deferred();\n                update.initialize(endDeferred);\n                update.install();\n                self.message(model.label);\n                self.modelListInstall.push(update);\n                endDeferred.done(function () {\n                    self.percent(parseInt(self.modelListInstall().length * 100 / self.number));\n                    if (self.isInstall() && self.percent() >= 100) {\n                        Cookies.remove('check_login');\n                        location.reload();\n                    }\n                    self.installData();\n                });\n                endDeferred.fail(function () {\n                    self.installData();\n                });\n            },\n            loadingProccess: function () {\n                var self = this;\n                var temp = ['.', '..', '...'];\n                var i = 0;\n                setInterval(function () {\n                    self.loading(temp[i]);\n                    i = (i + 1) % 3;\n                }, 1000);\n            }\n        });\n    }\n);","Magestore_Webpos/js/setup/install-schema.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/db'\n    ],\n    function (db) {\n        \"use strict\";\n        if (typeof installRunning == 'undefined') {\n            var installRunning = false;\n        }\n        return {\n            installSchema: function () {\n                if (!installRunning) {\n                    installRunning = true;\n                    var self = this;\n                    new db.open({\n                        server: dbName,\n                        version: version,\n                        schema: {\n                            core_config_data: {\n                                key: {keyPath: 'path'},\n                                indexes: {\n                                    path: {unique: true}\n                                }\n                            },\n                            synchronization: {\n                                key: {keyPath: 'id'},\n                                indexes: {\n                                    id: {unique: true}\n                                }\n                            },\n                            customer: {\n                                key: {keyPath: 'id'},\n                                indexes: {\n                                    id: {unique: true},\n                                    full_name: {unique: false}\n                                }\n                            },\n                            customer_index: {\n                                key: {keyPath: 'id'},\n                                indexes: {\n                                    id: {unique: true}\n                                }\n                            },\n                            customer_complain: {\n                                key: {keyPath: 'complain_id'},\n                                indexes: {\n                                    complain_id: {unique: true}\n                                }\n                            },\n                            category: {\n                                key: {keyPath: 'id'},\n                                indexes: {\n                                    id: {unique: true}\n                                }\n                            },\n                            product: {\n                                key: {keyPath: 'id'},\n                                indexes: {\n                                    id: {unique: true},\n                                    sku: {unique: true}\n                                }\n                            },\n                            product_index: {\n                                key: {keyPath: 'id'},\n                                indexes: {\n                                    id: {unique: true}\n                                }\n                            },\n                            order: {\n                                key: {keyPath: 'entity_id'},\n                                indexes: {\n                                    entity_id: {unique: true},\n                                    increment_id: {unique: true}\n                                }\n                            },\n                            customer_group: {\n                                key: {keyPath: 'id'},\n                                indexes: {\n                                    id: {unique: true}\n                                }\n                            },\n                            stock_item: {\n                                key: {keyPath: 'item_id'},\n                                indexes: {\n                                    item_id: {unique: true},\n                                    product_id: {unique: false}\n                                }\n                            },\n                            stock_item_index: {\n                                key: {keyPath: 'id'},\n                                indexes: {\n                                    id: {unique: true}\n                                }\n                            },\n                            shipping: {\n                                key: {keyPath: 'code'},\n                                indexes: {\n                                    code: {unique: true}\n                                }\n                            },\n                            payment: {\n                                key: {keyPath: 'code'},\n                                indexes: {\n                                    code: {unique: true}\n                                }\n                            },\n                            country: {\n                                key: {keyPath: 'country_id'},\n                                indexes: {\n                                    country_id: {unique: true}\n                                }\n                            },\n                            currency: {\n                                key: {keyPath: 'code'},\n                                indexes: {\n                                    code: {unique: true}\n                                }\n                            },\n                            taxrate: {\n                                key: {keyPath: 'id'},\n                                indexes: {\n                                    id: {unique: true}\n                                }\n                            },\n                            taxclass: {\n                                key: {keyPath: 'class_id'},\n                                indexes: {\n                                    class_id: {unique: true}\n                                }\n                            },\n                            taxrule: {\n                                key: {keyPath: 'id'},\n                                indexes: {\n                                    id: {unique: true}\n                                }\n                            },\n                            action_logs: {\n                                key: {keyPath: 'action_id'},\n                                indexes: {\n                                    action_id: {unique: true}\n                                }\n                            },\n\n                            shift: {\n                                key: {keyPath: 'shift_id'},\n                                indexes: {\n                                    shift_id: {unique: true}\n                                }\n                            },\n                            cash_transaction: {\n                                key: {keyPath: 'transaction_id'},\n                                indexes: {\n                                    transaction_id: {unique: true}\n                                }\n                            },\n                            rewardpoint_rate: {\n                                key: {keyPath: 'rate_id'},\n                                indexes: {\n                                    rate_id: {unique: true}\n                                }\n                            },\n                            swatch: {\n                                key: {keyPath: 'attribute_id'},\n                                indexes: {\n                                    attribute_id: {unique: true}\n                                }\n                            },\n                            customer_credit: {\n                                key: {keyPath: 'credit_id'},\n                                indexes: {\n                                    credit_id: {unique: true}\n                                }\n                            },\n                            customer_point: {\n                                key: {keyPath: 'reward_id'},\n                                indexes: {\n                                    reward_id: {unique: true}\n                                }\n                            }\n                        }\n                    }).catch(function (err) {\n                        console.log(err);\n                        limit = limit - 1;\n                        if (limit > 0) {\n                            self.installSchema();\n                        } else {\n                            return false;\n                        }\n                    }).then(function (s) {\n                        server = s;\n                        installRunning = false;\n                        return true;\n                    });\n                }\n            }\n        }\n    }\n);\n","Magestore_Webpos/js/observer/sales/after-take-payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/sales/order-factory',\n    ],\n    function ($, ViewManager, Event, OrderFactory) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                Event.observer('sales_order_take_payment_afterSave', function(event, data){\n                    if(data.response && data.response.entity_id>0){\n                        var deferedSave = $.Deferred();\n                        OrderFactory.get().setData(data.response).setMode('offline').save(deferedSave);\n                        ViewManager.getSingleton('view/sales/order/view/payment').resetViewData(data.response);\n                        ViewManager.getSingleton('view/sales/order/view/payment').display(false);\n                    }\n                });\n            }\n        }\n    }\n);\n","Magestore_Webpos/js/observer/shift/update-shift-after-create-order.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/shift/shift',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/shift',\n        'Magestore_Webpos/js/helper/datetime',\n    ],\n    function ($, ko, Event, shiftModel, priceHelper, shiftHelper, datetimeHelper) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                var self = this;\n                Event.observer('webpos_place_order_after',function(event,data){\n                    self.updateShiftData(data);\n                });\n                Event.observer('webpos_place_order_online_after',function(event,data){\n                    self.updateShiftData(data);\n                });\n            },\n            updateShiftData: function(data){\n                if(data){\n                    if(!window.webposConfig.shiftId){\n                        return;\n                    }\n                    var methodData = [];\n                    if(data.webpos_order_payments != undefined){\n                        methodData = data.webpos_order_payments;\n                    }\n                    var cashValue = 0;\n                    var discountAmount = data.discount_amount;\n                    var grandTotal = 0;\n\n                    var orderId = data.increment_id;\n\n                    ko.utils.arrayForEach(methodData, function(item) {\n                        grandTotal = grandTotal + priceHelper.toPositiveNumber(item.display_amount);\n                        if (item.method == 'cashforpos'){\n                            cashValue = priceHelper.toPositiveNumber(item.display_amount);\n                        }\n                    });\n\n                    var currentShift = shiftModel();\n                    var deferred = currentShift.load(window.webposConfig.shiftId);\n                    deferred.done(function (currentShiftData) {\n                        var balance = priceHelper.toPositiveNumber(currentShiftData.balance) + priceHelper.toPositiveNumber(cashValue);\n                        var transactionData = {\n                            'shift_id':window.webposConfig.shiftId,\n                            'location_id': window.webposConfig.locationId,\n                            'value': cashValue,\n                            'base_value': priceHelper.currencyConvert(cashValue, window.webposConfig.currentCurrencyCode,window.webposConfig.baseCurrencyCode),\n                            'note': 'Add cash from order with id = ' + orderId,\n                            'balance': balance,\n                            'base_balance': priceHelper.currencyConvert(balance, window.webposConfig.currentCurrencyCode,window.webposConfig.baseCurrencyCode),\n                            'type': 'order',\n                            'base_currency_code': window.webposConfig.baseCurrencyCode,\n                            'transaction_currency_code': window.webposConfig.currentCurrencyCode,\n                            'created_at': data.created_at\n                        };\n\n                        //update data for shift.\n                        currentShiftData.balance = balance;\n                        currentShiftData.base_balance = transactionData.base_balance;\n                        currentShiftData.cash_sale = priceHelper.toPositiveNumber(currentShiftData.cash_sale) + priceHelper.toPositiveNumber(cashValue);\n                        currentShiftData.base_cash_sale = priceHelper.currencyConvert(currentShiftData.cash_sale, window.webposConfig.currentCurrencyCode,window.webposConfig.baseCurrencyCode);\n                        currentShiftData.total_sales = priceHelper.toPositiveNumber(currentShiftData.total_sales) + priceHelper.toPositiveNumber(grandTotal);\n                        currentShiftData.base_total_sales = priceHelper.currencyConvert(currentShiftData.total_sales, window.webposConfig.currentCurrencyCode,window.webposConfig.baseCurrencyCode);\n\n                        //update cash transaction\n                        if(cashValue > 0){\n                            var cashTransaction = [];\n                            if(currentShiftData.cash_transaction){\n                                cashTransaction = currentShiftData.cash_transaction;\n                            }\n                            cashTransaction.push(transactionData);\n                            currentShiftData.cash_transaction = cashTransaction;\n                        }\n\n\n                        //update sale summary\n                        var newSaleSummaryData = {};\n                        var methodCode = [];\n                        var newItem = {};\n\n                        ko.utils.arrayForEach(methodData, function(methodItem) {\n                            newItem = {};\n                            newItem['payment_method'] = methodItem.method;\n                            newItem['payment_amount'] = methodItem.display_amount;\n                            newItem['base_payment_amount'] = methodItem.base_display_amount;\n                            newItem['method_title'] = methodItem.method_title;\n                            newSaleSummaryData[methodItem.method] = newItem;\n                            methodCode.push(methodItem.method);\n                        });\n\n                        if(currentShiftData.sale_summary) {\n                            ko.utils.arrayForEach(currentShiftData.sale_summary, function (saleSummaryItem) {\n                                var method = saleSummaryItem['payment_method'];\n\n                                if(newSaleSummaryData[method]){\n                                    var item1 = newSaleSummaryData[method];\n                                    var item2 =  saleSummaryItem;\n                                    newItem = {};\n                                    newItem['payment_method'] = method;\n                                    newItem['payment_amount'] = priceHelper.toPositiveNumber(item1.payment_amount) + priceHelper.toPositiveNumber(item2.payment_amount);\n                                    newItem['base_payment_amount'] = priceHelper.toPositiveNumber(item1.base_payment_amount) + priceHelper.toPositiveNumber(item2.base_payment_amount);\n                                    newItem['method_title'] = item1.method_title;\n                                    newSaleSummaryData[method] = newItem;\n                                }\n                                else {\n                                    newSaleSummaryData[method] = saleSummaryItem;\n                                    methodCode.push(method);\n                                }\n\n                            });\n                        }\n                        var sale_summary = [];\n                        methodCode.forEach(\n                            function (method, index) {\n                                if(newSaleSummaryData[method]['payment_amount'] > 0){\n                                    sale_summary.push(newSaleSummaryData[method]);\n                                }\n\n                            }\n                        );\n                        currentShiftData.sale_summary = sale_summary;\n\n                        //update zreport data\n                        var zReportData = currentShiftData.zreport_sales_summary;\n                        if(zReportData) {\n                            zReportData.grand_total = currentShiftData.total_sales;\n                            zReportData.discount_amount= priceHelper.toPositiveNumber(zReportData.discount_amount) + priceHelper.toPositiveNumber(discountAmount);\n                            currentShiftData.zreport_sales_summary = zReportData;\n                        }\n                        var self = this;\n                        var model = shiftModel();\n                        var deferred = model.setData(currentShiftData).setMode('offline').save();\n\n                        deferred.done(function (response) {\n                            if(response){\n                                Event.dispatch('refresh_shift_listing',response);\n                            }\n                        });\n                    });\n\n\n                }\n            }\n        }\n    }\n);","Magestore_Webpos/js/observer/shift/refresh-shift-listing.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/view/layout',\n    ],\n    function (Event, ViewManager) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                Event.observer('refresh_shift_listing',function(event,data){\n                    ViewManager.getSingleton('view/shift/shift/shift-listing').refreshData();\n                });\n            }\n        }\n    }\n);","Magestore_Webpos/js/observer/shift/sync-offline-shift-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/shift/shift',\n\n    ],\n    function ($, Event, shift, salesSummary) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                Event.observer('sync_offline_shift_after',function(event,data){\n                    var response = data.response[0];\n                    console.log(response);\n                    var deferred = shift().setMode(\"offline\").setData(response).update();\n                    deferred.done(function (response) {\n                        if(response){\n                            Event.dispatch('refresh_shift_listing',response);\n                        }\n                    });\n\n                });\n            }\n        }\n    }\n);","Magestore_Webpos/js/observer/shift/open-shift-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/shift/shift'\n    ],\n    function ($, Event, ViewManager, shift) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                Event.observer('open_shift_after',function(event,data){\n                    var response = data.response[0];\n                    var updateData = {};\n                    updateData.entity_id = response.entity_id;\n                    updateData.shift_id = response.shift_id;\n\n                    var deferred = shift().setMode(\"offline\").setData(updateData).update();\n                    deferred.done(function (response) {\n                        if(response){\n                            Event.dispatch('refresh_shift_listing',response);\n                            ViewManager.getSingleton('view/shift/sales-summary/sales-summary').setSyncSuccessful();\n                        }\n                    });\n                });\n            }\n        }\n    }\n);","Magestore_Webpos/js/observer/shift/after-closed-shift.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/view/layout',\n    ],\n    function ($, Event, ViewManager) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                Event.observer('after_closed_shift',function(event,data){\n                    ViewManager.getSingleton('view/shift/shift/shift-listing').refreshData();\n                    ViewManager.getSingleton('view/shift/shift/shift-listing').canOpenShift(true);\n                    ViewManager.getSingleton('view/shift/shift/shift-detail').afterClosedShift();\n                });\n            }\n        }\n    }\n);","Magestore_Webpos/js/observer/shift/update-shift-after-take-payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/shift/shift',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/shift',\n        'Magestore_Webpos/js/helper/datetime',\n    ],\n    function ($, ko, Event, shiftModel, priceHelper, shiftHelper, datetimeHelper) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                Event.observer('sales_order_take_payment_beforeSave',function(event,data){\n                    if(data){\n                        if(!window.webposConfig.shiftId){\n                            return;\n                        }\n\n                        var methodData = [];\n                        if(data.response.payment.method_data != undefined){\n                            methodData = data.response.payment.method_data;\n\n                            var cashValue = 0;\n                            var grandTotal = 0;\n\n                            var orderId = data.response.order_increment_id;\n                            //var orderId = \"\";\n\n                            ko.utils.arrayForEach(methodData, function(item) {\n                                grandTotal = grandTotal + priceHelper.toPositiveNumber(item.real_amount);\n                                if (item.code == 'cashforpos'){\n                                    cashValue = priceHelper.toPositiveNumber(item.real_amount);\n                                }\n                            });\n\n                            var currentShift = shiftModel();\n                            var deferred = currentShift.load(window.webposConfig.shiftId);\n                            deferred.done(function (currentShiftData) {\n                                var balance = priceHelper.toPositiveNumber(currentShiftData.balance) + priceHelper.toPositiveNumber(cashValue);\n                                var transactionData = {\n                                    'shift_id':window.webposConfig.shiftId,\n                                    'location_id': window.webposConfig.locationId,\n                                    'value': cashValue,\n                                    'base_value': priceHelper.currencyConvert(cashValue, window.webposConfig.currentCurrencyCode,window.webposConfig.baseCurrencyCode),\n                                    'note': 'Add cash from order with id = ' + orderId,\n                                    'balance': balance,\n                                    'base_balance': priceHelper.currencyConvert(balance, window.webposConfig.currentCurrencyCode,window.webposConfig.baseCurrencyCode),\n                                    'type': 'order',\n                                    'base_currency_code': window.webposConfig.baseCurrencyCode,\n                                    'transaction_currency_code': window.webposConfig.currentCurrencyCode,\n                                    'created_at': datetimeHelper.getSqlDatetime()\n                                };\n\n                                //update data for shift.\n                                currentShiftData.balance = balance;\n                                currentShiftData.base_balance = transactionData.base_balance;\n                                currentShiftData.cash_sale = priceHelper.toPositiveNumber(currentShiftData.cash_sale) + priceHelper.toPositiveNumber(cashValue);\n                                currentShiftData.base_cash_sale = priceHelper.currencyConvert(currentShiftData.cash_sale, window.webposConfig.currentCurrencyCode,window.webposConfig.baseCurrencyCode);\n                                currentShiftData.total_sales = priceHelper.toPositiveNumber(currentShiftData.total_sales) + priceHelper.toPositiveNumber(grandTotal);\n                                currentShiftData.base_total_sales = priceHelper.currencyConvert(currentShiftData.total_sales, window.webposConfig.currentCurrencyCode,window.webposConfig.baseCurrencyCode);\n\n                                //update cash transaction\n                                if(cashValue > 0){\n                                    var cashTransaction = [];\n                                    if(currentShiftData.cash_transaction){\n                                        cashTransaction = currentShiftData.cash_transaction;\n                                    }\n                                    cashTransaction.push(transactionData);\n                                    currentShiftData.cash_transaction = cashTransaction;\n                                }\n\n\n                                //update sale summary\n                                var newSaleSummaryData = {};\n                                var methodCode = [];\n                                var newItem = {};\n\n                                ko.utils.arrayForEach(methodData, function(methodItem) {\n                                    newItem = {};\n                                    newItem['payment_method'] = methodItem.code;\n                                    newItem['payment_amount'] = methodItem.real_amount;\n                                    newItem['base_payment_amount'] = methodItem.base_real_amount;\n                                    newItem['method_title'] = methodItem.title;\n                                    newSaleSummaryData[methodItem.code] = newItem;\n                                    methodCode.push(methodItem.code);\n                                });\n\n                                ko.utils.arrayForEach(currentShiftData.sale_summary, function (saleSummaryItem) {\n                                    var method = saleSummaryItem['payment_method'];\n\n                                    if(newSaleSummaryData[method]){\n                                        var item1 = newSaleSummaryData[method];\n                                        var item2 =  saleSummaryItem;\n                                        newItem = {};\n                                        newItem['payment_method'] = method;\n                                        newItem['payment_amount'] = priceHelper.toPositiveNumber(item1.payment_amount) + priceHelper.toPositiveNumber(item2.payment_amount);\n                                        newItem['base_payment_amount'] = priceHelper.toPositiveNumber(item1.base_payment_amount) + priceHelper.toPositiveNumber(item2.base_payment_amount);\n                                        newItem['method_title'] = item1.method_title;\n                                        newSaleSummaryData[method] = newItem;\n                                    }\n                                    else {\n                                        newSaleSummaryData[method] = saleSummaryItem;\n                                        methodCode.push(method);\n                                    }\n\n                                });\n\n                                var sale_summary = [];\n                                methodCode.forEach(\n                                    function (method, index) {\n                                        if(newSaleSummaryData[method]['payment_amount'] > 0){\n                                            sale_summary.push(newSaleSummaryData[method]);\n                                        }\n\n                                    }\n                                );\n                                currentShiftData.sale_summary = sale_summary;\n\n                                //update zreport data\n                                var zReportData = currentShiftData.zreport_sales_summary;\n                                zReportData.grand_total = currentShiftData.total_sales;\n                                currentShiftData.zreport_sales_summary = zReportData;\n\n                                var self = this;\n                                var model = shiftModel();\n                                var deferred = model.setData(currentShiftData).setMode('offline').save();\n\n                                deferred.done(function (response) {\n                                    if(response){\n                                        Event.dispatch('refresh_shift_listing',response);\n                                    }\n                                });\n                            });\n\n                        }\n                    }\n                });\n            }\n        }\n    }\n);","Magestore_Webpos/js/observer/checkout/sync-offline-order-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'mage/translate',\n        \n    ],\n    function ($, Event, OrderFactory, AddNoti, Translate) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                Event.observer('sync_offline_order_after',function(event,data){\n                    var response = data.response;\n                    if(response.increment_id && response.status != 'holded'){\n                        OrderFactory.get().delete(response.increment_id).done(function(){\n                            OrderFactory.get().getCollection().addFieldToFilter('increment_id',response.increment_id,'eq').load().done(function(data){\n                                if(data.items && data.items.length < 1){\n                                    OrderFactory.create().setMode(\"offline\").setData(response).save().done(function(){\n                                        Event.dispatch('show_container_after',\"orders_history\");\n                                    });\n                                }\n                            });\n                        });\n                    }\n                });\n                Event.observer('sync_offline_order_after_error',function(event,data){\n                    if(data.action){\n                        var orderParams = data.action.payload;\n                        var extension_data = orderParams.extension_data;\n                        var orderId = \"\";\n                        $.each(extension_data, function(index,field){\n                            if(field && field.key == \"webpos_order_id\"){\n                                orderId = field.value;\n                            }\n                        });\n                        if(data.action && data.action.error){\n                            if(orderId != \"\"){\n                                var message = Translate(\"Cannot sync order\");\n                                message += \":#\"+orderId;\n                                AddNoti(message, true, 'danger', Translate('Error'));\n                                AddNoti(data.action.error, false, 'danger', Translate('Error'));\n                                OrderFactory.get().setMode('offline').load(orderId).done(function(order){\n                                    order.error = 1;\n                                    OrderFactory.create().setData(order).setMode('offline').save().done(function(response){\n                                        if(response){\n                                            Event.dispatch('order_pull_after',response);\n                                        }\n                                    });\n                                });\n                            }\n                        }\n                    }\n                });\n            }\n        }        \n    }\n);","Magestore_Webpos/js/observer/checkout/place-order-before.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'mage/translate'\n    ],\n    function ($, Event, CartModel, AddNoti, Translate) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                /**/\n                Event.observer('webpos_place_order_before',function(event, data){\n                    $('#checkout-loader').show();\n                    if(data && data.items){\n                        var result = CartModel.validateItemsQty();\n                        if(result !== true && result.length > 0){\n                            $.each(result, function(key, message){\n                                AddNoti(message, true, \"danger\", Translate('Error'));\n                            });\n                            data.validate = false;\n                        }else{\n                            data.validate = true;\n                        }\n                    }\n                });\n            }\n        }        \n    }\n);","Magestore_Webpos/js/observer/checkout/place-order-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/model/catalog/product-factory',\n        'Magestore_Webpos/js/helper/order',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'mage/translate',\n        \n    ],\n    function ($, ko, Event, CartModel, ProductFactory, HelperOrder, AddNoti, Translate) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                Event.observer('webpos_place_order_after',function(event,data){\n                    $('#checkout-loader').hide();\n                    if(data && data.increment_id){\n                        var message = Translate('Order has been created successfully ') + \"#\"+data.increment_id;\n                        AddNoti(message, true, \"success\", Translate('Message'));\n                        HelperOrder.setLastId(data.increment_id);\n                    }\n                });\n                Event.observer('webpos_order_save_after',function(event,data){\n                    if(data && data.increment_id){\n                        var Product = ProductFactory.get();\n                        var childs = CartModel.getItemChildsQty();\n                        if(childs && childs.length > 0){\n                            ko.utils.arrayForEach(childs, function(child) {\n                                Product.updateStock(-child.qty, parseInt(child.id));\n                            });\n                        }\n                    }\n                });\n            }\n        }        \n    }\n);","Magestore_Webpos/js/observer/checkout/cart-item-remove-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/checkout/cart/totals-factory',\n    ],\n    function (Event, ViewManager, TotalsFactory) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                Event.observer('cart_item_remove_after',function(event,items){\n                    if(!items || (items && items.length == 0)){\n                        ViewManager.getSingleton('view/checkout/cart/discountpopup').resetData();\n                        TotalsFactory.get().updateDiscountTotal();\n                    }\n                });\n            }\n        }        \n    }\n);","Magestore_Webpos/js/observer/checkout/tax-calculation-finish-pull-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/checkout/taxcalculator-factory',\n    ],\n    function ($, ko, Event, TaxCalculatorFactory) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                Event.observer('taxrule_finish_pull_after',function(event,data){\n                    TaxCalculatorFactory.get().reInitData();\n                });\n                Event.observer('taxrate_finish_pull_after',function(event,data){\n                    TaxCalculatorFactory.get().reInitData();\n                });\n                Event.observer('taxclass_finish_pull_after',function(event,data){\n                    TaxCalculatorFactory.get().reInitData();\n                });\n            }\n        }        \n    }\n);","Magestore_Webpos/js/observer/synchronization/model-save-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function ($, eventManager) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                eventManager.observer('model_save_after',function(event, eventData){\n                    var model = eventData.model;\n                    /* check mode */\n                    if(model.getMode() == 'online') {\n                        return;\n                    }\n                    /* auto push is false */\n                    if(!model.push) {\n                        return;\n                    }\n                    /* has no online resource */\n                    if(!model.getResourceOnline()){\n                        return;\n                    }\n                    /* auto push to server */\n                    model.prepareBeforeSave().getResourceOnline().save(model);\n                });\n            }\n        }        \n    }\n);","Magestore_Webpos/js/observer/synchronization/model-massupdate-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function ($, eventManager) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                eventManager.observer('model_massupdate_after',function(event, eventData){\n                    /* check mode */\n                    var model = eventData.model;\n                    var items = eventData.items\n                    if(model.getMode() == 'online') {\n                        return;\n                    }\n                    /* auto push is false */\n                    if(!model.push) {\n                        return;\n                    }\n                    /* has no online resource */\n                    if(!model.getResourceOnline()){\n                        return;\n                    }\n                    /* auto push to server */\n                    model.getResourceOnline().massUpdate(items);\n                });\n            }\n        }        \n    }\n);","Magestore_Webpos/js/observer/integration/storecredit/sync-prepare-maps.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'Magestore_Webpos/js/helper/general'\n        ],\n        function (Helper) {\n            \"use strict\";\n\n            return {\n                execute: function () {\n                    if(Helper.isStoreCreditEnable()) {\n                        Helper.observerEvent('sync_prepare_maps', function (event, data) {\n                            if (data.maps) {\n                                data.maps.push({\n                                    sort_order: 7,\n                                    label: 'Customer Credit',\n                                    model: 'model/checkout/integration/store-credit',\n                                    limitPage: 0\n                                });\n                            }\n                        });\n                    }\n                }\n            }\n        }\n);","Magestore_Webpos/js/observer/integration/rewardpoints/sync-prepare-maps.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'Magestore_Webpos/js/helper/general'\n        ],\n        function (Helper) {\n            \"use strict\";\n\n            return {\n                execute: function () {\n                    if(Helper.isRewardPointsEnable()){\n                        Helper.observerEvent('sync_prepare_maps', function (event, data) {\n                            if (data.maps) {\n                                data.maps.push({\n                                    sort_order: 8,\n                                    label: 'Customer Points',\n                                    model: 'model/checkout/integration/reward-points',\n                                    push: false\n                                });\n                                data.maps.push({\n                                    sort_order: 9,\n                                    label: 'Reward Point Rates',\n                                    model: 'model/checkout/integration/rewardpoints/rate',\n                                    push: false\n                                });\n                            }\n                        });\n                    }\n                }\n            }\n        }\n);","Magestore_Webpos/js/observer/catalog/stock-item-pull-after.js":"\n/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'Magestore_Webpos/js/model/event-manager',\n            'Magestore_Webpos/js/action/inventory/stock-item/update-product-list',\n        ],\n        function ($, eventManager, updateProductList) {\n            \"use strict\";\n\n            return {\n                /*\n                 * Update list view after pulled stock items\n                 * \n                 */\n                execute: function () {\n                    eventManager.observer('stock_item_pull_after', function (event, eventData) {\n                        return;\n                        var items = eventData.items;\n                        updateProductList(items);\n                    });\n                }\n            }\n        }\n);","Magestore_Webpos/js/observer/catalog/stock-item-page-massupdate-after.js":"\n/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'Magestore_Webpos/js/model/event-manager',\n            'Magestore_Webpos/js/action/inventory/stock-item/update-product-list',\n        ],\n        function ($, eventManager, updateProductList) {\n            \"use strict\";\n\n            return {\n                /*\n                 * Update stock data to product list view after mass updated stock-item \n                 * \n                 */\n                execute: function () {\n                    eventManager.observer('stock_item_page_massupdate_after', function (event, eventData) {\n                        var items = eventData.items;\n                        updateProductList(items);\n                    });\n                }\n            }\n        }\n);","Magestore_Webpos/js/observer/catalog/stock-item-massupdate-after.js":"\n/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'Magestore_Webpos/js/model/event-manager',\n            'Magestore_Webpos/js/action/inventory/stock-item/update-product-list',\n        ],\n        function ($, eventManager, updateProductList) {\n            \"use strict\";\n\n            return {\n                /*\n                 * Update stock data to product list view after mass updated stock-item \n                 * \n                 */\n                execute: function () {\n                    eventManager.observer('stock_item_massupdate_after', function (event, eventData) {\n                        return;\n                        var items = eventData.items;\n                        updateProductList(items);\n                    });\n                }\n            }\n        }\n);","Magestore_Webpos/js/observer/catalog/stock-item-save-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'Magestore_Webpos/js/model/event-manager',\n            'Magestore_Webpos/js/action/inventory/stock-item/update-product-list',\n        ],\n        function ($, eventManager, updateProductList) {\n            \"use strict\";\n\n            return {\n                /*\n                 * Update stock data to product list view after saved stock-item \n                 * \n                 */\n                execute: function () {\n                    eventManager.observer('stock_item_save_after', function (event, eventData) {\n                        var model = eventData.model;\n                        var items = [model.data];\n                        updateProductList(items);\n                    });\n                }\n            }\n        }\n);\n","Magestore_Webpos/js/observer/catalog/category/load-product-by-category.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/view/layout',\n    ],\n    function ($, eventManager, ViewManager) {\n        \"use strict\";\n\n        return {\n            /*\n             * Update stock data to product list view after mass updated stock-item\n             *\n             */\n            execute: function () {\n                eventManager.observer('load_product_by_category', function (event, eventData) {\n                    var catagory = ViewManager.getSingleton('view/catalog/category/cell-grid');\n                    var data = eventData.catagory;\n                    catagory.clickCat(data);\n                    if (eventData.open_category) {\n                        $('#all-categories').addClass('in');\n                    }\n                });\n            }\n        }\n    }\n);","Magestore_Webpos/js/observer/inventory/sales-order-cancel-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'Magestore_Webpos/js/model/event-manager',\n            'Magestore_Webpos/js/model/catalog/product-factory',\n            'Magestore_Webpos/js/model/sales/order-factory',\n        ],\n        function ($, eventManager, ProductFactory, OrderFactory) {\n            \"use strict\";\n\n            return {\n                /*\n                 * Update stock data after canceled order\n                 * \n                 */\n                execute: function () {\n                    eventManager.observer('sales_order_cancel_after', function (event, eventData) {\n                        var orderData = eventData.response;\n                        var productModel = ProductFactory.get();\n                        var orderModel = OrderFactory.get();\n                        var updateQty = false;\n                        var isCanceled = true;\n                        for (var i in orderData.items) {\n                            var item = orderData.items[i];\n                            /* calculate return qty */\n                            var returnQty = item.qty_ordered - item.qty_invoiced - item.qty_shipped - item.qty_canceled;\n                            returnQty = Math.max(returnQty, 0);\n                            if (returnQty > 0) {\n                                updateQty = true;\n                                /* return qty to stock */\n                                productModel.updateStock(returnQty, item.product_id);\n                                /* update qty_canceled in order item */\n                                orderData.items[i].qty_canceled += returnQty;\n                            }\n                            if((orderData.items[i].qty_canceled+orderData.items[i].qty_refunded) < \n                                orderData.items[i].qty_ordered){\n                                isCanceled = false;\n                            }\n                        }\n                        if(isCanceled){\n                            orderData.status = 'canceled';\n                            orderData.state = 'canceled';\n                        }\n                        if(updateQty) {\n                            /* save order data to local */\n                            orderModel.setData(orderData).save();\n                        }\n                    });\n                }\n            }\n        }\n);\n","Magestore_Webpos/js/observer/inventory/sales-order-creditmemo-save-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'Magestore_Webpos/js/model/event-manager',\n            'Magestore_Webpos/js/model/catalog/product-factory',\n            'Magestore_Webpos/js/model/sales/order-factory',            \n        ],\n        function ($, eventManager, ProductFactory, OrderFactory) {\n            \"use strict\";\n\n            return {\n                /*\n                 * Update stock data after canceled order\n                 * \n                 */\n                execute: function () {\n                    eventManager.observer('sales_order_creditmemo_save_after', function (event, eventData) {\n                        return;\n                        var orderData = eventData.response;\n                        var submitData = eventData.submitData;\n                        var productModel = ProductFactory.get();\n                        var orderModel = OrderFactory.get();\n                        var updateQty = false;\n                        $.each(submitData.entity.items, function(index, value){\n                            if(value.additionalData && value.additionalData.search('back_to_stock')!=-1){\n                                $.each(orderData.items, function(orderItemIndex, orderItemValue){\n                                    if(value.orderItemId == orderItemValue.item_id)\n                                        productModel.updateStock(value.qty, orderItemValue.product_id);\n                                    if(value.orderItemId == orderItemValue.parent_item_id)\n                                        productModel.updateStock(value.qty, orderItemValue.product_id);\n                                })\n                            }\n                        });\n                    });\n                }\n            }\n        }\n);\n","Magestore_Webpos/js/observer/inventory/catalog-product-collection-load-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'ko',\n            'underscore',\n            'Magestore_Webpos/js/model/event-manager',\n            'Magestore_Webpos/js/model/catalog/product-factory',\n            'Magestore_Webpos/js/model/inventory/stock-item-factory',\n            'Magestore_Webpos/js/helper/general'\n        ],\n        function ($, ko, _,  eventManager, ProductFactory, StockItemFactory, Helper) {\n            \"use strict\";\n\n            return {\n                execute: function () {\n                    eventManager.observer('catalog_product_collection_load_after', function (event, eventData) {\n                        if(Helper.isStockOnline()){\n                            return true;\n                        }\n                        var collection = eventData.collection;\n                        var items = collection.data.items;\n                        var childIds = [];\n                        \n                        /* prepare child ids */\n                        var product = ProductFactory.get();\n                        \n                        for (var i in items) {    \n                            product.setData(items[i]);\n                            items[i].childs = product.getTypeInstance().getChildProductIds();\n                            childIds = childIds.concat(items[i].childs);\n                            childIds = childIds.concat([items[i].id]);\n          \n                        }\n                        childIds = _.uniq(childIds);\n                        /* there is no product id */\n                        if (childIds.length == 0) {\n                            return;\n                        }\n                        \n                        collection.deferred = $.Deferred();\n                        \n                        /* load child stocks */\n                        var stockItem = StockItemFactory.get();\n                        var ccdeferred = stockItem.loadByProductIds(childIds);\n                        var self = this;\n                        /* set child stocks to product */\n                        ccdeferred.done(function (stockItems) {\n                            var stockArray = {};\n                            for (var i in stockItems) {\n                                var stockItem = stockItems[i];\n                                stockArray[stockItem.product_id] = stockItem;\n                            }\n                            var productModel = ProductFactory.get();\n                            for (var i in items) {\n                                items[i].isShowOutStock = false;\n                                items[i].stocks = [];\n                                for (var j in items[i].childs) {\n                                    var childId = items[i].childs[j];\n                                    /* set stock data to product item */\n                                    if (stockArray[childId]) {\n                                        items[i].stocks.push(stockArray[childId]);\n                                    }\n                                }\n                                /* set stock data to composite product */\n                                if (stockArray[items[i].id]) {\n                                    items[i].stock = stockArray[items[i].id];\n                                }\n                                /* calculate is_in_stock status */\n                                productModel.setData(items[i]);\n                                var isOutStock = !productModel.isSalable();\n                                items[i].isShowOutStock = isOutStock;\n                            }\n                            stockArray = {};\n                            stockItems = {};\n                            /* do not render product list again */\n                            collection.data.items = items;\n\n                            /* done deferred */\n                            collection.deferred.resolve(collection);\n                        });\n                    });\n                }\n            }\n        }\n);","Magestore_Webpos/js/observer/customer/sync-offline-customer-after.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/customer/customer-factory',\n        'Magestore_Webpos/js/action/checkout/select-customer-checkout'\n    ],\n    function ($, ViewManager, Event, CustomerFactory, selectCustomer) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                Event.observer('customer_afterSave',function(event,data){\n                    var response = data.response;\n                    if(response.email){\n                        CustomerFactory.get().setMode(\"offline\").delete('notsync_' + response.email);\n                        CustomerFactory.get().setMode(\"offline\").setPush(false).setData(response).save().done(function (response) {\n                            if(response){\n                                Event.dispatch('customer_pull_after',[]);\n                                if (ViewManager.getSingleton('view/checkout/customer/add-customer').isAddCustomer()) {\n                                    selectCustomer(response);\n                                    var addressData = response.addresses;\n                                    var isSetBilling = false;\n                                    var isSetShipping = false;\n                                    $.each(addressData, function (index, value) {\n                                        if (value.default_billing) {\n                                            ViewManager.getSingleton('view/checkout/customer/edit-customer').billingAddressId(value.id);\n                                            ViewManager.getSingleton('view/checkout/customer/edit-customer').setBillingPreviewData(value);\n                                            ViewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewBilling(true);\n                                            isSetBilling = true;\n                                        }\n                                        if (value.default_shipping) {\n                                            ViewManager.getSingleton('view/checkout/customer/edit-customer').shippingAddressId(value.id);\n                                            ViewManager.getSingleton('view/checkout/customer/edit-customer').setShippingPreviewData(value);\n                                            ViewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewShipping(true);\n                                            isSetShipping = true;\n                                        }\n                                    });\n                                    if (!isSetBilling) {\n                                        ViewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewBilling(false);\n                                    }\n                                    if (!isSetShipping) {\n                                        ViewManager.getSingleton('view/checkout/customer/edit-customer').isShowPreviewShipping(false);\n                                    }\n                                    ViewManager.getSingleton('view/checkout/customer/add-customer').isAddCustomer(false);\n                                }\n                            }\n                        });\n                    }\n                });\n            }\n        }\n    }\n);","Magestore_Webpos/js/observer/customer/customer-pull-duplicate.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/customer/customer-factory',\n        'Magestore_Webpos/js/action/checkout/select-customer-checkout'\n    ],\n    function ($, ViewManager, Event, CustomerFactory, selectCustomer) {\n        \"use strict\";\n\n        return {\n            execute: function() {\n                Event.observer('customer_pull_duplicate',function(event,data){\n                    if (typeof (data.data) != 'undefined' && data.data) {\n                        var customerInformation = data.data;\n                        if(customerInformation.email){\n                            CustomerFactory.get().setMode(\"offline\").delete('notsync_' + customerInformation.email);\n                            CustomerFactory.get().setMode(\"offline\").setData(customerInformation).save().done(function (response) {\n                                if(response){\n                                    Event.dispatch('customer_pull_after',[]);\n                                    if (ViewManager.getSingleton('view/checkout/customer/add-customer').isAddCustomer()) {\n                                        selectCustomer(response);\n                                        ViewManager.getSingleton('view/checkout/customer/add-customer').isAddCustomer(false);\n                                    }\n                                }\n                            });\n                        }\n                    }\n\n                });\n            }\n        }\n    }\n);","Magestore_Webpos/js/bootstrap/bootstrap-switch.js":"require([\r\n    'jquery'\r\n], function (jQuery) {\r\n    !function (e) {\r\n        e.fn.extend({\r\n            iosCheckbox: function () {\r\n                \"true\" !== e(this).attr(\"data-ios-checkbox\") && (e(this).attr(\"data-ios-checkbox\", \"true\"), e(this).each(function () {\r\n                    var c = e(this), s = jQuery(\"<div>\", {\"class\": \"ios-ui-select\"}).append(jQuery(\"<div>\", {\"class\": \"inner\"}));\r\n                    c.is(\":checked\") && s.addClass(\"checked\"), c.hide().after(s), s.click(function () {\r\n                        if (!c[0].disabled) {\r\n                            s.toggleClass(\"checked\"), s.hasClass(\"checked\") ? c.prop(\"checked\", !0) : c.prop(\"checked\", !1);\r\n                            c.trigger('switchchange');\r\n                            c.trigger('change');\r\n                        }\r\n                    })\r\n                }))\r\n            }\r\n        })\r\n    }(jQuery);\r\n});","Magestore_Webpos/js/bootstrap/bootstrap-slider.min.js":"!function(a){function b(b,d){if(g[b]){var e=c(this),f=g[b].apply(e,d);return\"undefined\"==typeof f?a(this):f}throw new Error(\"method '\"+b+\"()' does not exist for slider.\")}function c(b){var c=a(b).data(\"slider\");if(c&&c instanceof f)return c;throw new Error(e.callingContextNotSliderInstance)}function d(b){var c=a(this);return c.each(function(){var c=a(this),d=c.data(\"slider\"),e=\"object\"==typeof b&&b;d&&!e&&(e={},a.each(a.fn.slider.defaults,function(a){e[a]=d[a]})),c.data(\"slider\",new f(this,a.extend({},a.fn.slider.defaults,e)))}),c}var e={formatInvalidInputErrorMsg:function(a){return\"Invalid input value '\"+a+\"' passed in\"},callingContextNotSliderInstance:\"Calling context element does not have instance of Slider bound to it. Check your code to make sure the JQuery object returned from the call to the slider() initializer is calling the method\"},f=function(b,c){var d=this.element=a(b).hide(),e=a(b)[0].style.width,f=!1,g=this.element.parent();g.hasClass(\"slider\")===!0?(f=!0,this.picker=g):this.picker=a('<div class=\"slider\"><div class=\"slider-track\"><div class=\"slider-selection\"></div><div class=\"slider-handle\"></div><div class=\"slider-handle\"></div></div><div id=\"tooltip\" class=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div><div id=\"tooltip_min\" class=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div><div id=\"tooltip_max\" class=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div></div>').insertBefore(this.element).append(this.element),this.id=this.element.data(\"slider-id\")||c.id,this.id&&(this.picker[0].id=this.id),(\"ontouchstart\"in window||window.DocumentTouch&&document instanceof window.DocumentTouch)&&(this.touchCapable=!0);var h=this.element.data(\"slider-tooltip\")||c.tooltip;switch(this.tooltip=this.picker.find(\"#tooltip\"),this.tooltipInner=this.tooltip.find(\"div.tooltip-inner\"),this.tooltip_min=this.picker.find(\"#tooltip_min\"),this.tooltipInner_min=this.tooltip_min.find(\"div.tooltip-inner\"),this.tooltip_max=this.picker.find(\"#tooltip_max\"),this.tooltipInner_max=this.tooltip_max.find(\"div.tooltip-inner\"),f===!0&&(this.picker.removeClass(\"slider-horizontal\"),this.picker.removeClass(\"slider-vertical\"),this.tooltip.removeClass(\"hide\"),this.tooltip_min.removeClass(\"hide\"),this.tooltip_max.removeClass(\"hide\")),this.orientation=this.element.data(\"slider-orientation\")||c.orientation,this.orientation){case\"vertical\":this.picker.addClass(\"slider-vertical\"),this.stylePos=\"top\",this.mousePos=\"pageY\",this.sizePos=\"offsetHeight\",this.tooltip.addClass(\"right\")[0].style.left=\"100%\",this.tooltip_min.addClass(\"right\")[0].style.left=\"100%\",this.tooltip_max.addClass(\"right\")[0].style.left=\"100%\";break;default:this.picker.addClass(\"slider-horizontal\").css(\"width\",e),this.orientation=\"horizontal\",this.stylePos=\"left\",this.mousePos=\"pageX\",this.sizePos=\"offsetWidth\",this.tooltip.addClass(\"top\")[0].style.top=-this.tooltip.outerHeight()-14+\"px\",this.tooltip_min.addClass(\"top\")[0].style.top=-this.tooltip_min.outerHeight()-14+\"px\",this.tooltip_max.addClass(\"top\")[0].style.top=-this.tooltip_max.outerHeight()-14+\"px\"}var i=this;a.each([\"min\",\"max\",\"step\",\"value\"],function(a,b){i[b]=\"undefined\"!=typeof d.data(\"slider-\"+b)?d.data(\"slider-\"+b):\"undefined\"!=typeof c[b]?c[b]:\"undefined\"!=typeof d.prop(b)?d.prop(b):0}),this.value instanceof Array?f&&!this.range?this.value=this.value[0]:this.range=!0:this.range&&(this.value=[this.value,this.max]),this.selection=this.element.data(\"slider-selection\")||c.selection,this.selectionEl=this.picker.find(\".slider-selection\"),\"none\"===this.selection&&this.selectionEl.addClass(\"hide\"),this.selectionElStyle=this.selectionEl[0].style,this.handle1=this.picker.find(\".slider-handle:first\"),this.handle1Stype=this.handle1[0].style,this.handle2=this.picker.find(\".slider-handle:last\"),this.handle2Stype=this.handle2[0].style,f===!0&&(this.handle1.removeClass(\"round triangle\"),this.handle2.removeClass(\"round triangle hide\"));var j=this.element.data(\"slider-handle\")||c.handle;switch(j){case\"round\":this.handle1.addClass(\"round\"),this.handle2.addClass(\"round\");break;case\"triangle\":this.handle1.addClass(\"triangle\"),this.handle2.addClass(\"triangle\")}this.range?(this.value[0]=Math.max(this.min,Math.min(this.max,this.value[0])),this.value[1]=Math.max(this.min,Math.min(this.max,this.value[1]))):(this.value=[Math.max(this.min,Math.min(this.max,this.value))],this.handle2.addClass(\"hide\"),this.value[1]=\"after\"===this.selection?this.max:this.min),this.diff=this.max-this.min,this.percentage=this.diff>0?[100*(this.value[0]-this.min)/this.diff,100*(this.value[1]-this.min)/this.diff,100*this.step/this.diff]:[0,0,100],this.offset=this.picker.offset(),this.size=this.picker[0][this.sizePos],this.formater=c.formater,this.tooltip_separator=c.tooltip_separator,this.tooltip_split=c.tooltip_split,this.reversed=this.element.data(\"slider-reversed\")||c.reversed,this.layout(),this.layout(),this.handle1.on({keydown:a.proxy(this.keydown,this,0)}),this.handle2.on({keydown:a.proxy(this.keydown,this,1)}),this.touchCapable&&this.picker.on({touchstart:a.proxy(this.mousedown,this)}),this.picker.on({mousedown:a.proxy(this.mousedown,this)}),\"hide\"===h?(this.tooltip.addClass(\"hide\"),this.tooltip_min.addClass(\"hide\"),this.tooltip_max.addClass(\"hide\")):\"always\"===h?(this.showTooltip(),this.alwaysShowTooltip=!0):(this.picker.on({mouseenter:a.proxy(this.showTooltip,this),mouseleave:a.proxy(this.hideTooltip,this)}),this.handle1.on({focus:a.proxy(this.showTooltip,this),blur:a.proxy(this.hideTooltip,this)}),this.handle2.on({focus:a.proxy(this.showTooltip,this),blur:a.proxy(this.hideTooltip,this)})),this.enabled=c.enabled&&(void 0===this.element.data(\"slider-enabled\")||this.element.data(\"slider-enabled\")===!0),this.enabled?this.enable():this.disable()};f.prototype={constructor:f,over:!1,inDrag:!1,showTooltip:function(){this.tooltip_split===!1?this.tooltip.addClass(\"in\"):(this.tooltip_min.addClass(\"in\"),this.tooltip_max.addClass(\"in\")),this.over=!0},hideTooltip:function(){this.inDrag===!1&&this.alwaysShowTooltip!==!0&&(this.tooltip.removeClass(\"in\"),this.tooltip_min.removeClass(\"in\"),this.tooltip_max.removeClass(\"in\")),this.over=!1},layout:function(){var a;if(a=this.reversed?[100-this.percentage[0],this.percentage[1]]:[this.percentage[0],this.percentage[1]],this.handle1Stype[this.stylePos]=a[0]+\"%\",this.handle2Stype[this.stylePos]=a[1]+\"%\",\"vertical\"===this.orientation)this.selectionElStyle.top=Math.min(a[0],a[1])+\"%\",this.selectionElStyle.height=Math.abs(a[0]-a[1])+\"%\";else{this.selectionElStyle.left=Math.min(a[0],a[1])+\"%\",this.selectionElStyle.width=Math.abs(a[0]-a[1])+\"%\";var b=this.tooltip_min[0].getBoundingClientRect(),c=this.tooltip_max[0].getBoundingClientRect();b.right>c.left?(this.tooltip_max.removeClass(\"top\"),this.tooltip_max.addClass(\"bottom\")[0].style.top=\"18px\"):(this.tooltip_max.removeClass(\"bottom\"),this.tooltip_max.addClass(\"top\")[0].style.top=\"-30px\")}this.range?(this.tooltipInner.text(this.formater(this.value[0])+this.tooltip_separator+this.formater(this.value[1])),this.tooltip[0].style[this.stylePos]=this.size*(a[0]+(a[1]-a[0])/2)/100-(\"vertical\"===this.orientation?this.tooltip.outerHeight()/2:this.tooltip.outerWidth()/2)+\"px\",this.tooltipInner_min.text(this.formater(this.value[0])),this.tooltipInner_max.text(this.formater(this.value[1])),this.tooltip_min[0].style[this.stylePos]=this.size*(a[0]/100)-(\"vertical\"===this.orientation?this.tooltip_min.outerHeight()/2:this.tooltip_min.outerWidth()/2)+\"px\",this.tooltip_max[0].style[this.stylePos]=this.size*(a[1]/100)-(\"vertical\"===this.orientation?this.tooltip_max.outerHeight()/2:this.tooltip_max.outerWidth()/2)+\"px\"):(this.tooltipInner.text(this.formater(this.value[0])),this.tooltip[0].style[this.stylePos]=this.size*a[0]/100-(\"vertical\"===this.orientation?this.tooltip.outerHeight()/2:this.tooltip.outerWidth()/2)+\"px\")},mousedown:function(b){if(!this.isEnabled())return!1;this.touchCapable&&\"touchstart\"===b.type&&(b=b.originalEvent),this.triggerFocusOnHandle(),this.offset=this.picker.offset(),this.size=this.picker[0][this.sizePos];var c=this.getPercentage(b);if(this.range){var d=Math.abs(this.percentage[0]-c),e=Math.abs(this.percentage[1]-c);this.dragged=e>d?0:1}else this.dragged=0;this.percentage[this.dragged]=this.reversed?100-c:c,this.layout(),this.touchCapable&&a(document).on({touchmove:a.proxy(this.mousemove,this),touchend:a.proxy(this.mouseup,this)}),a(document).on({mousemove:a.proxy(this.mousemove,this),mouseup:a.proxy(this.mouseup,this)}),this.inDrag=!0;var f=this.calculateValue();return this.setValue(f),this.element.trigger({type:\"slideStart\",value:f}).data(\"value\",f).prop(\"value\",f),!0},triggerFocusOnHandle:function(a){0===a&&this.handle1.focus(),1===a&&this.handle2.focus()},keydown:function(a,b){if(!this.isEnabled())return!1;var c;switch(b.which){case 37:case 40:c=-1;break;case 39:case 38:c=1}if(c){var d=c*this.percentage[2],e=this.percentage[a]+d;e>100?e=100:0>e&&(e=0),this.dragged=a,this.adjustPercentageForRangeSliders(e),this.percentage[this.dragged]=e,this.layout();var f=this.calculateValue();return this.setValue(f),this.element.trigger({type:\"slideStop\",value:f}).data(\"value\",f).prop(\"value\",f),!1}},mousemove:function(a){if(!this.isEnabled())return!1;this.touchCapable&&\"touchmove\"===a.type&&(a=a.originalEvent);var b=this.getPercentage(a);this.adjustPercentageForRangeSliders(b),this.percentage[this.dragged]=this.reversed?100-b:b,this.layout();var c=this.calculateValue();return this.setValue(c),!1},adjustPercentageForRangeSliders:function(a){this.range&&(0===this.dragged&&this.percentage[1]<a?(this.percentage[0]=this.percentage[1],this.dragged=1):1===this.dragged&&this.percentage[0]>a&&(this.percentage[1]=this.percentage[0],this.dragged=0))},mouseup:function(){if(!this.isEnabled())return!1;this.touchCapable&&a(document).off({touchmove:this.mousemove,touchend:this.mouseup}),a(document).off({mousemove:this.mousemove,mouseup:this.mouseup}),this.inDrag=!1,this.over===!1&&this.hideTooltip();var b=this.calculateValue();return this.layout(),this.element.data(\"value\",b).prop(\"value\",b).trigger({type:\"slideStop\",value:b}),!1},calculateValue:function(){var a;return this.range?(a=[this.min,this.max],0!==this.percentage[0]&&(a[0]=Math.max(this.min,this.min+Math.round(this.diff*this.percentage[0]/100/this.step)*this.step)),100!==this.percentage[1]&&(a[1]=Math.min(this.max,this.min+Math.round(this.diff*this.percentage[1]/100/this.step)*this.step)),this.value=a):(a=this.min+Math.round(this.diff*this.percentage[0]/100/this.step)*this.step,a<this.min?a=this.min:a>this.max&&(a=this.max),a=parseFloat(a),this.value=[a,this.value[1]]),a},getPercentage:function(a){!this.touchCapable||\"touchstart\"!==a.type&&\"touchmove\"!==a.type||(a=a.touches[0]);var b=100*(a[this.mousePos]-this.offset[this.stylePos])/this.size;return b=Math.round(b/this.percentage[2])*this.percentage[2],Math.max(0,Math.min(100,b))},getValue:function(){return this.range?this.value:this.value[0]},setValue:function(a){a||(a=0),this.value=this.validateInputValue(a),this.range?(this.value[0]=Math.max(this.min,Math.min(this.max,this.value[0])),this.value[1]=Math.max(this.min,Math.min(this.max,this.value[1]))):(this.value=[Math.max(this.min,Math.min(this.max,this.value))],this.handle2.addClass(\"hide\"),this.value[1]=\"after\"===this.selection?this.max:this.min),this.diff=this.max-this.min,this.percentage=this.diff>0?[100*(this.value[0]-this.min)/this.diff,100*(this.value[1]-this.min)/this.diff,100*this.step/this.diff]:[0,0,100],this.layout();var b=this.range?this.value:this.value[0];this.element.trigger({type:\"slide\",value:b}).data(\"value\",this.value).prop(\"value\",this.value)},validateInputValue:function(b){if(\"number\"==typeof b)return b;if(b instanceof Array)return a.each(b,function(a,b){if(\"number\"!=typeof b)throw new Error(e.formatInvalidInputErrorMsg(b))}),b;throw new Error(e.formatInvalidInputErrorMsg(b))},destroy:function(){this.handle1.off(),this.handle2.off(),this.element.off().show().insertBefore(this.picker),this.picker.off().remove(),a(this.element).removeData(\"slider\")},disable:function(){this.enabled=!1,this.handle1.removeAttr(\"tabindex\"),this.handle2.removeAttr(\"tabindex\"),this.picker.addClass(\"slider-disabled\"),this.element.trigger(\"slideDisabled\")},enable:function(){this.enabled=!0,this.handle1.attr(\"tabindex\",0),this.handle2.attr(\"tabindex\",0),this.picker.removeClass(\"slider-disabled\"),this.element.trigger(\"slideEnabled\")},toggle:function(){this.enabled?this.disable():this.enable()},isEnabled:function(){return this.enabled},setAttribute:function(a,b){this[a]=b},getAttribute:function(a){return this[a]}};var g={getValue:f.prototype.getValue,setValue:f.prototype.setValue,setAttribute:f.prototype.setAttribute,getAttribute:f.prototype.getAttribute,destroy:f.prototype.destroy,disable:f.prototype.disable,enable:f.prototype.enable,toggle:f.prototype.toggle,isEnabled:f.prototype.isEnabled};a.fn.slider=function(a){if(\"string\"==typeof a&&\"refresh\"!==a){var c=Array.prototype.slice.call(arguments,1);return b.call(this,a,c)}return d.call(this,a)},a.fn.slider.defaults={min:0,max:10,step:1,orientation:\"horizontal\",value:5,range:!1,selection:\"before\",tooltip:\"show\",tooltip_separator:\":\",tooltip_split:!1,handle:\"round\",reversed:!1,enabled:!0,formater:function(a){return a}},a.fn.slider.Constructor=f}(window.jQuery);","Magestore_Webpos/js/bootstrap/bootstrap.js":"\nrequire([\n  'jquery'\n], function (jQuery) {\n  if (typeof jQuery === 'undefined') {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n  }\n\n  +function ($) {\n    'use strict';\n    var version = $.fn.jquery.split(' ')[0].split('.')\n    if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 2)) {\n      throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3')\n    }\n  }(jQuery);\n\n  /* ========================================================================\n   * Bootstrap: transition.js v3.3.6\n   * http://getbootstrap.com/javascript/#transitions\n   * ========================================================================\n   * Copyright 2011-2015 Twitter, Inc.\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * ======================================================================== */\n\n\n  +function ($) {\n    'use strict';\n\n    // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n    // ============================================================\n\n    function transitionEnd() {\n      var el = document.createElement('bootstrap')\n\n      var transEndEventNames = {\n        WebkitTransition : 'webkitTransitionEnd',\n        MozTransition    : 'transitionend',\n        OTransition      : 'oTransitionEnd otransitionend',\n        transition       : 'transitionend'\n      }\n\n      for (var name in transEndEventNames) {\n        if (el.style[name] !== undefined) {\n          return { end: transEndEventNames[name] }\n        }\n      }\n\n      return false // explicit for ie8 (  ._.)\n    }\n\n    // http://blog.alexmaccaw.com/css-transitions\n    $.fn.emulateTransitionEnd = function (duration) {\n      var called = false\n      var $el = this\n      $(this).one('bsTransitionEnd', function () { called = true })\n      var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n      setTimeout(callback, duration)\n      return this\n    }\n\n    $(function () {\n      $.support.transition = transitionEnd()\n\n      if (!$.support.transition) return\n\n      $.event.special.bsTransitionEnd = {\n        bindType: $.support.transition.end,\n        delegateType: $.support.transition.end,\n        handle: function (e) {\n          if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n        }\n      }\n    })\n\n  }(jQuery);\n\n  /* ========================================================================\n   * Bootstrap: alert.js v3.3.6\n   * http://getbootstrap.com/javascript/#alerts\n   * ========================================================================\n   * Copyright 2011-2015 Twitter, Inc.\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * ======================================================================== */\n\n\n  +function ($) {\n    'use strict';\n\n    // ALERT CLASS DEFINITION\n    // ======================\n\n    var dismiss = '[data-dismiss=\"alert\"]'\n    var Alert   = function (el) {\n      $(el).on('click', dismiss, this.close)\n    }\n\n    Alert.VERSION = '3.3.6'\n\n    Alert.TRANSITION_DURATION = 150\n\n    Alert.prototype.close = function (e) {\n      var $this    = $(this)\n      var selector = $this.attr('data-target')\n\n      if (!selector) {\n        selector = $this.attr('href')\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n      }\n\n      var $parent = $(selector)\n\n      if (e) e.preventDefault()\n\n      if (!$parent.length) {\n        $parent = $this.closest('.alert')\n      }\n\n      $parent.trigger(e = $.Event('close.bs.alert'))\n\n      if (e.isDefaultPrevented()) return\n\n      $parent.removeClass('in')\n\n      function removeElement() {\n        // detach from parent, fire event then clean up data\n        $parent.detach().trigger('closed.bs.alert').remove()\n      }\n\n      $.support.transition && $parent.hasClass('fade') ?\n          $parent\n              .one('bsTransitionEnd', removeElement)\n              .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n          removeElement()\n    }\n\n\n    // ALERT PLUGIN DEFINITION\n    // =======================\n\n    function Plugin(option) {\n      return this.each(function () {\n        var $this = $(this)\n        var data  = $this.data('bs.alert')\n\n        if (!data) $this.data('bs.alert', (data = new Alert(this)))\n        if (typeof option == 'string') data[option].call($this)\n      })\n    }\n\n    var old = $.fn.alert\n\n    $.fn.alert             = Plugin\n    $.fn.alert.Constructor = Alert\n\n\n    // ALERT NO CONFLICT\n    // =================\n\n    $.fn.alert.noConflict = function () {\n      $.fn.alert = old\n      return this\n    }\n\n\n    // ALERT DATA-API\n    // ==============\n\n    $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n  }(jQuery);\n\n  /* ========================================================================\n   * Bootstrap: button.js v3.3.6\n   * http://getbootstrap.com/javascript/#buttons\n   * ========================================================================\n   * Copyright 2011-2015 Twitter, Inc.\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * ======================================================================== */\n\n\n  +function ($) {\n    'use strict';\n\n    // BUTTON PUBLIC CLASS DEFINITION\n    // ==============================\n\n    var Button = function (element, options) {\n      this.$element  = $(element)\n      this.options   = $.extend({}, Button.DEFAULTS, options)\n      this.isLoading = false\n    }\n\n    Button.VERSION  = '3.3.6'\n\n    Button.DEFAULTS = {\n      loadingText: 'loading...'\n    }\n\n    Button.prototype.setState = function (state) {\n      var d    = 'disabled'\n      var $el  = this.$element\n      var val  = $el.is('input') ? 'val' : 'html'\n      var data = $el.data()\n\n      state += 'Text'\n\n      if (data.resetText == null) $el.data('resetText', $el[val]())\n\n      // push to event loop to allow forms to submit\n      setTimeout($.proxy(function () {\n        $el[val](data[state] == null ? this.options[state] : data[state])\n\n        if (state == 'loadingText') {\n          this.isLoading = true\n          $el.addClass(d).attr(d, d)\n        } else if (this.isLoading) {\n          this.isLoading = false\n          $el.removeClass(d).removeAttr(d)\n        }\n      }, this), 0)\n    }\n\n    Button.prototype.toggle = function () {\n      var changed = true\n      var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n      if ($parent.length) {\n        var $input = this.$element.find('input')\n        if ($input.prop('type') == 'radio') {\n          if ($input.prop('checked')) changed = false\n          $parent.find('.active').removeClass('active')\n          this.$element.addClass('active')\n        } else if ($input.prop('type') == 'checkbox') {\n          if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n          this.$element.toggleClass('active')\n        }\n        $input.prop('checked', this.$element.hasClass('active'))\n        if (changed) $input.trigger('change')\n      } else {\n        this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n        this.$element.toggleClass('active')\n      }\n    }\n\n\n    // BUTTON PLUGIN DEFINITION\n    // ========================\n\n    function Plugin(option) {\n      return this.each(function () {\n        var $this   = $(this)\n        var data    = $this.data('bs.button')\n        var options = typeof option == 'object' && option\n\n        if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n        if (option == 'toggle') data.toggle()\n        else if (option) data.setState(option)\n      })\n    }\n\n    var old = $.fn.button\n\n    $.fn.button             = Plugin\n    $.fn.button.Constructor = Button\n\n\n    // BUTTON NO CONFLICT\n    // ==================\n\n    $.fn.button.noConflict = function () {\n      $.fn.button = old\n      return this\n    }\n\n\n    // BUTTON DATA-API\n    // ===============\n\n    $(document)\n        .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n          var $btn = $(e.target)\n          if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n          Plugin.call($btn, 'toggle')\n          if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()\n        })\n        .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n          $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n        })\n\n  }(jQuery);\n\n  /* ========================================================================\n   * Bootstrap: carousel.js v3.3.6\n   * http://getbootstrap.com/javascript/#carousel\n   * ========================================================================\n   * Copyright 2011-2015 Twitter, Inc.\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * ======================================================================== */\n\n\n  +function ($) {\n    'use strict';\n\n    // CAROUSEL CLASS DEFINITION\n    // =========================\n\n    var Carousel = function (element, options) {\n      this.$element    = $(element)\n      this.$indicators = this.$element.find('.carousel-indicators')\n      this.options     = options\n      this.paused      = null\n      this.sliding     = null\n      this.interval    = null\n      this.$active     = null\n      this.$items      = null\n\n      this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n      this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n          .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n          .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n    }\n\n    Carousel.VERSION  = '3.3.6'\n\n    Carousel.TRANSITION_DURATION = 600\n\n    Carousel.DEFAULTS = {\n      interval: 5000,\n      pause: 'hover',\n      wrap: true,\n      keyboard: true\n    }\n\n    Carousel.prototype.keydown = function (e) {\n      if (/input|textarea/i.test(e.target.tagName)) return\n      switch (e.which) {\n        case 37: this.prev(); break\n        case 39: this.next(); break\n        default: return\n      }\n\n      e.preventDefault()\n    }\n\n    Carousel.prototype.cycle = function (e) {\n      e || (this.paused = false)\n\n      this.interval && clearInterval(this.interval)\n\n      this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n      return this\n    }\n\n    Carousel.prototype.getItemIndex = function (item) {\n      this.$items = item.parent().children('.item')\n      return this.$items.index(item || this.$active)\n    }\n\n    Carousel.prototype.getItemForDirection = function (direction, active) {\n      var activeIndex = this.getItemIndex(active)\n      var willWrap = (direction == 'prev' && activeIndex === 0)\n          || (direction == 'next' && activeIndex == (this.$items.length - 1))\n      if (willWrap && !this.options.wrap) return active\n      var delta = direction == 'prev' ? -1 : 1\n      var itemIndex = (activeIndex + delta) % this.$items.length\n      return this.$items.eq(itemIndex)\n    }\n\n    Carousel.prototype.to = function (pos) {\n      var that        = this\n      var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n      if (pos > (this.$items.length - 1) || pos < 0) return\n\n      if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n      if (activeIndex == pos) return this.pause().cycle()\n\n      return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n    }\n\n    Carousel.prototype.pause = function (e) {\n      e || (this.paused = true)\n\n      if (this.$element.find('.next, .prev').length && $.support.transition) {\n        this.$element.trigger($.support.transition.end)\n        this.cycle(true)\n      }\n\n      this.interval = clearInterval(this.interval)\n\n      return this\n    }\n\n    Carousel.prototype.next = function () {\n      if (this.sliding) return\n      return this.slide('next')\n    }\n\n    Carousel.prototype.prev = function () {\n      if (this.sliding) return\n      return this.slide('prev')\n    }\n\n    Carousel.prototype.slide = function (type, next) {\n      var $active   = this.$element.find('.item.active')\n      var $next     = next || this.getItemForDirection(type, $active)\n      var isCycling = this.interval\n      var direction = type == 'next' ? 'left' : 'right'\n      var that      = this\n\n      if ($next.hasClass('active')) return (this.sliding = false)\n\n      var relatedTarget = $next[0]\n      var slideEvent = $.Event('slide.bs.carousel', {\n        relatedTarget: relatedTarget,\n        direction: direction\n      })\n      this.$element.trigger(slideEvent)\n      if (slideEvent.isDefaultPrevented()) return\n\n      this.sliding = true\n\n      isCycling && this.pause()\n\n      if (this.$indicators.length) {\n        this.$indicators.find('.active').removeClass('active')\n        var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n        $nextIndicator && $nextIndicator.addClass('active')\n      }\n\n      var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n      if ($.support.transition && this.$element.hasClass('slide')) {\n        $next.addClass(type)\n        $next[0].offsetWidth // force reflow\n        $active.addClass(direction)\n        $next.addClass(direction)\n        $active\n            .one('bsTransitionEnd', function () {\n              $next.removeClass([type, direction].join(' ')).addClass('active')\n              $active.removeClass(['active', direction].join(' '))\n              that.sliding = false\n              setTimeout(function () {\n                that.$element.trigger(slidEvent)\n              }, 0)\n            })\n            .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n      } else {\n        $active.removeClass('active')\n        $next.addClass('active')\n        this.sliding = false\n        this.$element.trigger(slidEvent)\n      }\n\n      isCycling && this.cycle()\n\n      return this\n    }\n\n\n    // CAROUSEL PLUGIN DEFINITION\n    // ==========================\n\n    function Plugin(option) {\n      return this.each(function () {\n        var $this   = $(this)\n        var data    = $this.data('bs.carousel')\n        var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n        var action  = typeof option == 'string' ? option : options.slide\n\n        if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n        if (typeof option == 'number') data.to(option)\n        else if (action) data[action]()\n        else if (options.interval) data.pause().cycle()\n      })\n    }\n\n    var old = $.fn.carousel\n\n    $.fn.carousel             = Plugin\n    $.fn.carousel.Constructor = Carousel\n\n\n    // CAROUSEL NO CONFLICT\n    // ====================\n\n    $.fn.carousel.noConflict = function () {\n      $.fn.carousel = old\n      return this\n    }\n\n\n    // CAROUSEL DATA-API\n    // =================\n\n    var clickHandler = function (e) {\n      var href\n      var $this   = $(this)\n      var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n      if (!$target.hasClass('carousel')) return\n      var options = $.extend({}, $target.data(), $this.data())\n      var slideIndex = $this.attr('data-slide-to')\n      if (slideIndex) options.interval = false\n\n      Plugin.call($target, options)\n\n      if (slideIndex) {\n        $target.data('bs.carousel').to(slideIndex)\n      }\n\n      e.preventDefault()\n    }\n\n    $(document)\n        .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n        .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n    $(window).on('load', function () {\n      $('[data-ride=\"carousel\"]').each(function () {\n        var $carousel = $(this)\n        Plugin.call($carousel, $carousel.data())\n      })\n    })\n\n  }(jQuery);\n\n  /* ========================================================================\n   * Bootstrap: collapse.js v3.3.6\n   * http://getbootstrap.com/javascript/#collapse\n   * ========================================================================\n   * Copyright 2011-2015 Twitter, Inc.\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * ======================================================================== */\n\n\n  +function ($) {\n    'use strict';\n\n    // COLLAPSE PUBLIC CLASS DEFINITION\n    // ================================\n\n    var Collapse = function (element, options) {\n      this.$element      = $(element)\n      this.options       = $.extend({}, Collapse.DEFAULTS, options)\n      this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n          '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n      this.transitioning = null\n\n      if (this.options.parent) {\n        this.$parent = this.getParent()\n      } else {\n        this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n      }\n\n      if (this.options.toggle) this.toggle()\n    }\n\n    Collapse.VERSION  = '3.3.6'\n\n    Collapse.TRANSITION_DURATION = 350\n\n    Collapse.DEFAULTS = {\n      toggle: true\n    }\n\n    Collapse.prototype.dimension = function () {\n      var hasWidth = this.$element.hasClass('width')\n      return hasWidth ? 'width' : 'height'\n    }\n\n    Collapse.prototype.show = function () {\n      if (this.transitioning || this.$element.hasClass('in')) return\n\n      var activesData\n      var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n      if (actives && actives.length) {\n        activesData = actives.data('bs.collapse')\n        if (activesData && activesData.transitioning) return\n      }\n\n      var startEvent = $.Event('show.bs.collapse')\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      if (actives && actives.length) {\n        Plugin.call(actives, 'hide')\n        activesData || actives.data('bs.collapse', null)\n      }\n\n      var dimension = this.dimension()\n\n      this.$element\n          .removeClass('collapse')\n          .addClass('collapsing')[dimension](0)\n          .attr('aria-expanded', true)\n\n      this.$trigger\n          .removeClass('collapsed')\n          .attr('aria-expanded', true)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.$element\n            .removeClass('collapsing')\n            .addClass('collapse in')[dimension]('')\n        this.transitioning = 0\n        this.$element\n            .trigger('shown.bs.collapse')\n      }\n\n      if (!$.support.transition) return complete.call(this)\n\n      var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n      this.$element\n          .one('bsTransitionEnd', $.proxy(complete, this))\n          .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n    }\n\n    Collapse.prototype.hide = function () {\n      if (this.transitioning || !this.$element.hasClass('in')) return\n\n      var startEvent = $.Event('hide.bs.collapse')\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      var dimension = this.dimension()\n\n      this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n      this.$element\n          .addClass('collapsing')\n          .removeClass('collapse in')\n          .attr('aria-expanded', false)\n\n      this.$trigger\n          .addClass('collapsed')\n          .attr('aria-expanded', false)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.transitioning = 0\n        this.$element\n            .removeClass('collapsing')\n            .addClass('collapse')\n            .trigger('hidden.bs.collapse')\n      }\n\n      if (!$.support.transition) return complete.call(this)\n\n      this.$element\n          [dimension](0)\n          .one('bsTransitionEnd', $.proxy(complete, this))\n          .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n    }\n\n    Collapse.prototype.toggle = function () {\n      this[this.$element.hasClass('in') ? 'hide' : 'show']()\n    }\n\n    Collapse.prototype.getParent = function () {\n      return $(this.options.parent)\n          .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n          .each($.proxy(function (i, element) {\n            var $element = $(element)\n            this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n          }, this))\n          .end()\n    }\n\n    Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n      var isOpen = $element.hasClass('in')\n\n      $element.attr('aria-expanded', isOpen)\n      $trigger\n          .toggleClass('collapsed', !isOpen)\n          .attr('aria-expanded', isOpen)\n    }\n\n    function getTargetFromTrigger($trigger) {\n      var href\n      var target = $trigger.attr('data-target')\n          || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n      return $(target)\n    }\n\n\n    // COLLAPSE PLUGIN DEFINITION\n    // ==========================\n\n    function Plugin(option) {\n      return this.each(function () {\n        var $this   = $(this)\n        var data    = $this.data('bs.collapse')\n        var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n        if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n        if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n        if (typeof option == 'string') data[option]()\n      })\n    }\n\n    var old = $.fn.collapse\n\n    $.fn.collapse             = Plugin\n    $.fn.collapse.Constructor = Collapse\n\n\n    // COLLAPSE NO CONFLICT\n    // ====================\n\n    $.fn.collapse.noConflict = function () {\n      $.fn.collapse = old\n      return this\n    }\n\n\n    // COLLAPSE DATA-API\n    // =================\n\n    $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n      var $this   = $(this)\n\n      if (!$this.attr('data-target')) e.preventDefault()\n\n      var $target = getTargetFromTrigger($this)\n      var data    = $target.data('bs.collapse')\n      var option  = data ? 'toggle' : $this.data()\n\n      Plugin.call($target, option)\n    })\n\n  }(jQuery);\n\n  /* ========================================================================\n   * Bootstrap: dropdown.js v3.3.6\n   * http://getbootstrap.com/javascript/#dropdowns\n   * ========================================================================\n   * Copyright 2011-2015 Twitter, Inc.\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * ======================================================================== */\n\n\n  +function ($) {\n    'use strict';\n\n    // DROPDOWN CLASS DEFINITION\n    // =========================\n\n    var backdrop = '.dropdown-backdrop'\n    var toggle   = '[data-toggle=\"dropdown\"]'\n    var Dropdown = function (element) {\n      $(element).on('click.bs.dropdown', this.toggle)\n    }\n\n    Dropdown.VERSION = '3.3.6'\n\n    function getParent($this) {\n      var selector = $this.attr('data-target')\n\n      if (!selector) {\n        selector = $this.attr('href')\n        selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n      }\n\n      var $parent = selector && $(selector)\n\n      return $parent && $parent.length ? $parent : $this.parent()\n    }\n\n    function clearMenus(e) {\n      if (e && e.which === 3) return\n      $(backdrop).remove()\n      $(toggle).each(function () {\n        var $this         = $(this)\n        var $parent       = getParent($this)\n        var relatedTarget = { relatedTarget: this }\n\n        if (!$parent.hasClass('open')) return\n\n        if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n        $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n        if (e.isDefaultPrevented()) return\n\n        $this.attr('aria-expanded', 'false')\n        $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))\n      })\n    }\n\n    Dropdown.prototype.toggle = function (e) {\n      var $this = $(this)\n\n      if ($this.is('.disabled, :disabled')) return\n\n      var $parent  = getParent($this)\n      var isActive = $parent.hasClass('open')\n\n      clearMenus()\n\n      if (!isActive) {\n        if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n          // if mobile we use a backdrop because click events don't delegate\n          $(document.createElement('div'))\n              .addClass('dropdown-backdrop')\n              .insertAfter($(this))\n              .on('click', clearMenus)\n        }\n\n        var relatedTarget = { relatedTarget: this }\n        $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n        if (e.isDefaultPrevented()) return\n\n        $this\n            .trigger('focus')\n            .attr('aria-expanded', 'true')\n\n        $parent\n            .toggleClass('open')\n            .trigger($.Event('shown.bs.dropdown', relatedTarget))\n      }\n\n      return false\n    }\n\n    Dropdown.prototype.keydown = function (e) {\n      if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n      var $this = $(this)\n\n      e.preventDefault()\n      e.stopPropagation()\n\n      if ($this.is('.disabled, :disabled')) return\n\n      var $parent  = getParent($this)\n      var isActive = $parent.hasClass('open')\n\n      if (!isActive && e.which != 27 || isActive && e.which == 27) {\n        if (e.which == 27) $parent.find(toggle).trigger('focus')\n        return $this.trigger('click')\n      }\n\n      var desc = ' li:not(.disabled):visible a'\n      var $items = $parent.find('.dropdown-menu' + desc)\n\n      if (!$items.length) return\n\n      var index = $items.index(e.target)\n\n      if (e.which == 38 && index > 0)                 index--         // up\n      if (e.which == 40 && index < $items.length - 1) index++         // down\n      if (!~index)                                    index = 0\n\n      $items.eq(index).trigger('focus')\n    }\n\n\n    // DROPDOWN PLUGIN DEFINITION\n    // ==========================\n\n    function Plugin(option) {\n      return this.each(function () {\n        var $this = $(this)\n        var data  = $this.data('bs.dropdown')\n\n        if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n        if (typeof option == 'string') data[option].call($this)\n      })\n    }\n\n    var old = $.fn.dropdown\n\n    $.fn.dropdown             = Plugin\n    $.fn.dropdown.Constructor = Dropdown\n\n\n    // DROPDOWN NO CONFLICT\n    // ====================\n\n    $.fn.dropdown.noConflict = function () {\n      $.fn.dropdown = old\n      return this\n    }\n\n\n    // APPLY TO STANDARD DROPDOWN ELEMENTS\n    // ===================================\n\n    $(document)\n        .on('click.bs.dropdown.data-api', clearMenus)\n        .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n        .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n        .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n        .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n  }(jQuery);\n\n  /* ========================================================================\n   * Bootstrap: modal.js v3.3.6\n   * http://getbootstrap.com/javascript/#modals\n   * ========================================================================\n   * Copyright 2011-2015 Twitter, Inc.\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * ======================================================================== */\n\n\n  +function ($) {\n    'use strict';\n\n    // MODAL CLASS DEFINITION\n    // ======================\n\n    var Modal = function (element, options) {\n      this.options             = options\n      this.$body               = $(document.body)\n      this.$element            = $(element)\n      this.$dialog             = this.$element.find('.modal-dialog')\n      this.$backdrop           = null\n      this.isShown             = null\n      this.originalBodyPad     = null\n      this.scrollbarWidth      = 0\n      this.ignoreBackdropClick = false\n\n      if (this.options.remote) {\n        this.$element\n            .find('.modal-content')\n            .load(this.options.remote, $.proxy(function () {\n              this.$element.trigger('loaded.bs.modal')\n            }, this))\n      }\n    }\n\n    Modal.VERSION  = '3.3.6'\n\n    Modal.TRANSITION_DURATION = 300\n    Modal.BACKDROP_TRANSITION_DURATION = 150\n\n    Modal.DEFAULTS = {\n      backdrop: true,\n      keyboard: true,\n      show: true\n    }\n\n    Modal.prototype.toggle = function (_relatedTarget) {\n      return this.isShown ? this.hide() : this.show(_relatedTarget)\n    }\n\n    Modal.prototype.show = function (_relatedTarget) {\n      var that = this\n      var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n      this.$element.trigger(e)\n\n      if (this.isShown || e.isDefaultPrevented()) return\n\n      this.isShown = true\n\n      this.checkScrollbar()\n      this.setScrollbar()\n      this.$body.addClass('modal-open')\n\n      this.escape()\n      this.resize()\n\n      this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n      this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n        that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n          if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n        })\n      })\n\n      this.backdrop(function () {\n        var transition = $.support.transition && that.$element.hasClass('fade')\n\n        if (!that.$element.parent().length) {\n          that.$element.appendTo(that.$body) // don't move modals dom position\n        }\n\n        that.$element\n            .show()\n            .scrollTop(0)\n\n        that.adjustDialog()\n\n        if (transition) {\n          that.$element[0].offsetWidth // force reflow\n        }\n\n        that.$element.addClass('in')\n\n        that.enforceFocus()\n\n        var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n        transition ?\n            that.$dialog // wait for modal to slide in\n                .one('bsTransitionEnd', function () {\n                  that.$element.trigger('focus').trigger(e)\n                })\n                .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n            that.$element.trigger('focus').trigger(e)\n      })\n    }\n\n    Modal.prototype.hide = function (e) {\n      if (e) e.preventDefault()\n\n      e = $.Event('hide.bs.modal')\n\n      this.$element.trigger(e)\n\n      if (!this.isShown || e.isDefaultPrevented()) return\n\n      this.isShown = false\n\n      this.escape()\n      this.resize()\n\n      $(document).off('focusin.bs.modal')\n\n      this.$element\n          .removeClass('in')\n          .off('click.dismiss.bs.modal')\n          .off('mouseup.dismiss.bs.modal')\n\n      this.$dialog.off('mousedown.dismiss.bs.modal')\n\n      $.support.transition && this.$element.hasClass('fade') ?\n          this.$element\n              .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n              .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n          this.hideModal()\n    }\n\n    Modal.prototype.enforceFocus = function () {\n      $(document)\n          .off('focusin.bs.modal') // guard against infinite focus loop\n          .on('focusin.bs.modal', $.proxy(function (e) {\n            if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n              this.$element.trigger('focus')\n            }\n          }, this))\n    }\n\n    Modal.prototype.escape = function () {\n      if (this.isShown && this.options.keyboard) {\n        this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n          e.which == 27 && this.hide()\n        }, this))\n      } else if (!this.isShown) {\n        this.$element.off('keydown.dismiss.bs.modal')\n      }\n    }\n\n    Modal.prototype.resize = function () {\n      if (this.isShown) {\n        $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n      } else {\n        $(window).off('resize.bs.modal')\n      }\n    }\n\n    Modal.prototype.hideModal = function () {\n      var that = this\n      this.$element.hide()\n      this.backdrop(function () {\n        that.$body.removeClass('modal-open')\n        that.resetAdjustments()\n        that.resetScrollbar()\n        that.$element.trigger('hidden.bs.modal')\n      })\n    }\n\n    Modal.prototype.removeBackdrop = function () {\n      this.$backdrop && this.$backdrop.remove()\n      this.$backdrop = null\n    }\n\n    Modal.prototype.backdrop = function (callback) {\n      var that = this\n      var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n      if (this.isShown && this.options.backdrop) {\n        var doAnimate = $.support.transition && animate\n\n        this.$backdrop = $(document.createElement('div'))\n            .addClass('modal-backdrop ' + animate)\n            .appendTo(this.$body)\n\n        this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n          if (this.ignoreBackdropClick) {\n            this.ignoreBackdropClick = false\n            return\n          }\n          if (e.target !== e.currentTarget) return\n          this.options.backdrop == 'static'\n              ? this.$element[0].focus()\n              : this.hide()\n        }, this))\n\n        if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n        this.$backdrop.addClass('in')\n\n        if (!callback) return\n\n        doAnimate ?\n            this.$backdrop\n                .one('bsTransitionEnd', callback)\n                .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n            callback()\n\n      } else if (!this.isShown && this.$backdrop) {\n        this.$backdrop.removeClass('in')\n\n        var callbackRemove = function () {\n          that.removeBackdrop()\n          callback && callback()\n        }\n        $.support.transition && this.$element.hasClass('fade') ?\n            this.$backdrop\n                .one('bsTransitionEnd', callbackRemove)\n                .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n            callbackRemove()\n\n      } else if (callback) {\n        callback()\n      }\n    }\n\n    // these following methods are used to handle overflowing modals\n\n    Modal.prototype.handleUpdate = function () {\n      this.adjustDialog()\n    }\n\n    Modal.prototype.adjustDialog = function () {\n      var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n      this.$element.css({\n        paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n        paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n      })\n    }\n\n    Modal.prototype.resetAdjustments = function () {\n      this.$element.css({\n        paddingLeft: '',\n        paddingRight: ''\n      })\n    }\n\n    Modal.prototype.checkScrollbar = function () {\n      var fullWindowWidth = window.innerWidth\n      if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n        var documentElementRect = document.documentElement.getBoundingClientRect()\n        fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n      }\n      this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n      this.scrollbarWidth = this.measureScrollbar()\n    }\n\n    Modal.prototype.setScrollbar = function () {\n      var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n      this.originalBodyPad = document.body.style.paddingRight || ''\n      if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n    }\n\n    Modal.prototype.resetScrollbar = function () {\n      this.$body.css('padding-right', this.originalBodyPad)\n    }\n\n    Modal.prototype.measureScrollbar = function () { // thx walsh\n      var scrollDiv = document.createElement('div')\n      scrollDiv.className = 'modal-scrollbar-measure'\n      this.$body.append(scrollDiv)\n      var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n      this.$body[0].removeChild(scrollDiv)\n      return scrollbarWidth\n    }\n\n\n    // MODAL PLUGIN DEFINITION\n    // =======================\n\n    function Plugin(option, _relatedTarget) {\n      return this.each(function () {\n        var $this   = $(this)\n        var data    = $this.data('bs.modal')\n        var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n        if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n        if (typeof option == 'string') data[option](_relatedTarget)\n        else if (options.show) data.show(_relatedTarget)\n      })\n    }\n\n    var old = $.fn.modal\n\n    $.fn.modal             = Plugin\n    $.fn.modal.Constructor = Modal\n\n\n    // MODAL NO CONFLICT\n    // =================\n\n    $.fn.modal.noConflict = function () {\n      $.fn.modal = old\n      return this\n    }\n\n\n    // MODAL DATA-API\n    // ==============\n\n    $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n      var $this   = $(this)\n      var href    = $this.attr('href')\n      var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n      var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n      if ($this.is('a')) e.preventDefault()\n\n      $target.one('show.bs.modal', function (showEvent) {\n        if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n        $target.one('hidden.bs.modal', function () {\n          $this.is(':visible') && $this.trigger('focus')\n        })\n      })\n      Plugin.call($target, option, this)\n    })\n\n  }(jQuery);\n\n  /* ========================================================================\n   * Bootstrap: tooltip.js v3.3.6\n   * http://getbootstrap.com/javascript/#tooltip\n   * Inspired by the original jQuery.tipsy by Jason Frame\n   * ========================================================================\n   * Copyright 2011-2015 Twitter, Inc.\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * ======================================================================== */\n\n\n  +function ($) {\n    'use strict';\n\n    // TOOLTIP PUBLIC CLASS DEFINITION\n    // ===============================\n\n    var Tooltip = function (element, options) {\n      this.type       = null\n      this.options    = null\n      this.enabled    = null\n      this.timeout    = null\n      this.hoverState = null\n      this.$element   = null\n      this.inState    = null\n\n      this.init('tooltip', element, options)\n    }\n\n    Tooltip.VERSION  = '3.3.6'\n\n    Tooltip.TRANSITION_DURATION = 150\n\n    Tooltip.DEFAULTS = {\n      animation: true,\n      placement: 'top',\n      selector: false,\n      template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n      trigger: 'hover focus',\n      title: '',\n      delay: 0,\n      html: false,\n      container: false,\n      viewport: {\n        selector: 'body',\n        padding: 0\n      }\n    }\n\n    Tooltip.prototype.init = function (type, element, options) {\n      this.enabled   = true\n      this.type      = type\n      this.$element  = $(element)\n      this.options   = this.getOptions(options)\n      this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n      this.inState   = { click: false, hover: false, focus: false }\n\n      if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n        throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n      }\n\n      var triggers = this.options.trigger.split(' ')\n\n      for (var i = triggers.length; i--;) {\n        var trigger = triggers[i]\n\n        if (trigger == 'click') {\n          this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n        } else if (trigger != 'manual') {\n          var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n          var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n          this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n          this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n        }\n      }\n\n      this.options.selector ?\n          (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n          this.fixTitle()\n    }\n\n    Tooltip.prototype.getDefaults = function () {\n      return Tooltip.DEFAULTS\n    }\n\n    Tooltip.prototype.getOptions = function (options) {\n      options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n      if (options.delay && typeof options.delay == 'number') {\n        options.delay = {\n          show: options.delay,\n          hide: options.delay\n        }\n      }\n\n      return options\n    }\n\n    Tooltip.prototype.getDelegateOptions = function () {\n      var options  = {}\n      var defaults = this.getDefaults()\n\n      this._options && $.each(this._options, function (key, value) {\n        if (defaults[key] != value) options[key] = value\n      })\n\n      return options\n    }\n\n    Tooltip.prototype.enter = function (obj) {\n      var self = obj instanceof this.constructor ?\n          obj : $(obj.currentTarget).data('bs.' + this.type)\n\n      if (!self) {\n        self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n        $(obj.currentTarget).data('bs.' + this.type, self)\n      }\n\n      if (obj instanceof $.Event) {\n        self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n      }\n\n      if (self.tip().hasClass('in') || self.hoverState == 'in') {\n        self.hoverState = 'in'\n        return\n      }\n\n      clearTimeout(self.timeout)\n\n      self.hoverState = 'in'\n\n      if (!self.options.delay || !self.options.delay.show) return self.show()\n\n      self.timeout = setTimeout(function () {\n        if (self.hoverState == 'in') self.show()\n      }, self.options.delay.show)\n    }\n\n    Tooltip.prototype.isInStateTrue = function () {\n      for (var key in this.inState) {\n        if (this.inState[key]) return true\n      }\n\n      return false\n    }\n\n    Tooltip.prototype.leave = function (obj) {\n      var self = obj instanceof this.constructor ?\n          obj : $(obj.currentTarget).data('bs.' + this.type)\n\n      if (!self) {\n        self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n        $(obj.currentTarget).data('bs.' + this.type, self)\n      }\n\n      if (obj instanceof $.Event) {\n        self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n      }\n\n      if (self.isInStateTrue()) return\n\n      clearTimeout(self.timeout)\n\n      self.hoverState = 'out'\n\n      if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n      self.timeout = setTimeout(function () {\n        if (self.hoverState == 'out') self.hide()\n      }, self.options.delay.hide)\n    }\n\n    Tooltip.prototype.show = function () {\n      var e = $.Event('show.bs.' + this.type)\n\n      if (this.hasContent() && this.enabled) {\n        this.$element.trigger(e)\n\n        var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n        if (e.isDefaultPrevented() || !inDom) return\n        var that = this\n\n        var $tip = this.tip()\n\n        var tipId = this.getUID(this.type)\n\n        this.setContent()\n        $tip.attr('id', tipId)\n        this.$element.attr('aria-describedby', tipId)\n\n        if (this.options.animation) $tip.addClass('fade')\n\n        var placement = typeof this.options.placement == 'function' ?\n            this.options.placement.call(this, $tip[0], this.$element[0]) :\n            this.options.placement\n\n        var autoToken = /\\s?auto?\\s?/i\n        var autoPlace = autoToken.test(placement)\n        if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n        $tip\n            .detach()\n            .css({ top: 0, left: 0, display: 'block' })\n            .addClass(placement)\n            .data('bs.' + this.type, this)\n\n        this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n        this.$element.trigger('inserted.bs.' + this.type)\n\n        var pos          = this.getPosition()\n        var actualWidth  = $tip[0].offsetWidth\n        var actualHeight = $tip[0].offsetHeight\n\n        if (autoPlace) {\n          var orgPlacement = placement\n          var viewportDim = this.getPosition(this.$viewport)\n\n          placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n              placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                  placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                      placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                          placement\n\n          $tip\n              .removeClass(orgPlacement)\n              .addClass(placement)\n        }\n\n        var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n        this.applyPlacement(calculatedOffset, placement)\n\n        var complete = function () {\n          var prevHoverState = that.hoverState\n          that.$element.trigger('shown.bs.' + that.type)\n          that.hoverState = null\n\n          if (prevHoverState == 'out') that.leave(that)\n        }\n\n        $.support.transition && this.$tip.hasClass('fade') ?\n            $tip\n                .one('bsTransitionEnd', complete)\n                .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n            complete()\n      }\n    }\n\n    Tooltip.prototype.applyPlacement = function (offset, placement) {\n      var $tip   = this.tip()\n      var width  = $tip[0].offsetWidth\n      var height = $tip[0].offsetHeight\n\n      // manually read margins because getBoundingClientRect includes difference\n      var marginTop = parseInt($tip.css('margin-top'), 10)\n      var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n      // we must check for NaN for ie 8/9\n      if (isNaN(marginTop))  marginTop  = 0\n      if (isNaN(marginLeft)) marginLeft = 0\n\n      offset.top  += marginTop\n      offset.left += marginLeft\n\n      // $.fn.offset doesn't round pixel values\n      // so we use setOffset directly with our own function B-0\n      $.offset.setOffset($tip[0], $.extend({\n        using: function (props) {\n          $tip.css({\n            top: Math.round(props.top),\n            left: Math.round(props.left)\n          })\n        }\n      }, offset), 0)\n\n      $tip.addClass('in')\n\n      // check to see if placing tip in new offset caused the tip to resize itself\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (placement == 'top' && actualHeight != height) {\n        offset.top = offset.top + height - actualHeight\n      }\n\n      var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n      if (delta.left) offset.left += delta.left\n      else offset.top += delta.top\n\n      var isVertical          = /top|bottom/.test(placement)\n      var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n      var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n      $tip.offset(offset)\n      this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n    }\n\n    Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n      this.arrow()\n          .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n          .css(isVertical ? 'top' : 'left', '')\n    }\n\n    Tooltip.prototype.setContent = function () {\n      var $tip  = this.tip()\n      var title = this.getTitle()\n\n      $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n      $tip.removeClass('fade in top bottom left right')\n    }\n\n    Tooltip.prototype.hide = function (callback) {\n      var that = this\n      var $tip = $(this.$tip)\n      var e    = $.Event('hide.bs.' + this.type)\n\n      function complete() {\n        if (that.hoverState != 'in') $tip.detach()\n        that.$element\n            .removeAttr('aria-describedby')\n            .trigger('hidden.bs.' + that.type)\n        callback && callback()\n      }\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      $tip.removeClass('in')\n\n      $.support.transition && $tip.hasClass('fade') ?\n          $tip\n              .one('bsTransitionEnd', complete)\n              .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n          complete()\n\n      this.hoverState = null\n\n      return this\n    }\n\n    Tooltip.prototype.fixTitle = function () {\n      var $e = this.$element\n      if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n        $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n      }\n    }\n\n    Tooltip.prototype.hasContent = function () {\n      return this.getTitle()\n    }\n\n    Tooltip.prototype.getPosition = function ($element) {\n      $element   = $element || this.$element\n\n      var el     = $element[0]\n      var isBody = el.tagName == 'BODY'\n\n      var elRect    = el.getBoundingClientRect()\n      if (elRect.width == null) {\n        // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n        elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n      }\n      var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n      var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n      var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n      return $.extend({}, elRect, scroll, outerDims, elOffset)\n    }\n\n    Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n      return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n          placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n              placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n                /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n    }\n\n    Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n      var delta = { top: 0, left: 0 }\n      if (!this.$viewport) return delta\n\n      var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n      var viewportDimensions = this.getPosition(this.$viewport)\n\n      if (/right|left/.test(placement)) {\n        var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n        var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n        if (topEdgeOffset < viewportDimensions.top) { // top overflow\n          delta.top = viewportDimensions.top - topEdgeOffset\n        } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n          delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n        }\n      } else {\n        var leftEdgeOffset  = pos.left - viewportPadding\n        var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n        if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n          delta.left = viewportDimensions.left - leftEdgeOffset\n        } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n          delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n        }\n      }\n\n      return delta\n    }\n\n    Tooltip.prototype.getTitle = function () {\n      var title\n      var $e = this.$element\n      var o  = this.options\n\n      title = $e.attr('data-original-title')\n          || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n      return title\n    }\n\n    Tooltip.prototype.getUID = function (prefix) {\n      do prefix += ~~(Math.random() * 1000000)\n      while (document.getElementById(prefix))\n      return prefix\n    }\n\n    Tooltip.prototype.tip = function () {\n      if (!this.$tip) {\n        this.$tip = $(this.options.template)\n        if (this.$tip.length != 1) {\n          throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n        }\n      }\n      return this.$tip\n    }\n\n    Tooltip.prototype.arrow = function () {\n      return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n    }\n\n    Tooltip.prototype.enable = function () {\n      this.enabled = true\n    }\n\n    Tooltip.prototype.disable = function () {\n      this.enabled = false\n    }\n\n    Tooltip.prototype.toggleEnabled = function () {\n      this.enabled = !this.enabled\n    }\n\n    Tooltip.prototype.toggle = function (e) {\n      var self = this\n      if (e) {\n        self = $(e.currentTarget).data('bs.' + this.type)\n        if (!self) {\n          self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n          $(e.currentTarget).data('bs.' + this.type, self)\n        }\n      }\n\n      if (e) {\n        self.inState.click = !self.inState.click\n        if (self.isInStateTrue()) self.enter(self)\n        else self.leave(self)\n      } else {\n        self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n      }\n    }\n\n    Tooltip.prototype.destroy = function () {\n      var that = this\n      clearTimeout(this.timeout)\n      this.hide(function () {\n        that.$element.off('.' + that.type).removeData('bs.' + that.type)\n        if (that.$tip) {\n          that.$tip.detach()\n        }\n        that.$tip = null\n        that.$arrow = null\n        that.$viewport = null\n      })\n    }\n\n\n    // TOOLTIP PLUGIN DEFINITION\n    // =========================\n\n    function Plugin(option) {\n      return this.each(function () {\n        var $this   = $(this)\n        var data    = $this.data('bs.tooltip')\n        var options = typeof option == 'object' && option\n\n        if (!data && /destroy|hide/.test(option)) return\n        if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n        if (typeof option == 'string') data[option]()\n      })\n    }\n\n    var old = $.fn.tooltip\n\n    $.fn.tooltip             = Plugin\n    $.fn.tooltip.Constructor = Tooltip\n\n\n    // TOOLTIP NO CONFLICT\n    // ===================\n\n    $.fn.tooltip.noConflict = function () {\n      $.fn.tooltip = old\n      return this\n    }\n\n  }(jQuery);\n\n  /* ========================================================================\n   * Bootstrap: popover.js v3.3.6\n   * http://getbootstrap.com/javascript/#popovers\n   * ========================================================================\n   * Copyright 2011-2015 Twitter, Inc.\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * ======================================================================== */\n\n\n  +function ($) {\n    'use strict';\n\n    // POPOVER PUBLIC CLASS DEFINITION\n    // ===============================\n\n    var Popover = function (element, options) {\n      this.init('popover', element, options)\n    }\n\n    if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n    Popover.VERSION  = '3.3.6'\n\n    Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n      placement: 'right',\n      trigger: 'click',\n      content: '',\n      template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n    })\n\n\n    // NOTE: POPOVER EXTENDS tooltip.js\n    // ================================\n\n    Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n    Popover.prototype.constructor = Popover\n\n    Popover.prototype.getDefaults = function () {\n      return Popover.DEFAULTS\n    }\n\n    Popover.prototype.setContent = function () {\n      var $tip    = this.tip()\n      var title   = this.getTitle()\n      var content = this.getContent()\n\n      $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n      $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n          this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n          ](content)\n\n      $tip.removeClass('fade top bottom left right in')\n\n      // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n      // this manually by checking the contents.\n      if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n    }\n\n    Popover.prototype.hasContent = function () {\n      return this.getTitle() || this.getContent()\n    }\n\n    Popover.prototype.getContent = function () {\n      var $e = this.$element\n      var o  = this.options\n\n      return $e.attr('data-content')\n          || (typeof o.content == 'function' ?\n              o.content.call($e[0]) :\n              o.content)\n    }\n\n    Popover.prototype.arrow = function () {\n      return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n    }\n\n\n    // POPOVER PLUGIN DEFINITION\n    // =========================\n\n    function Plugin(option) {\n      return this.each(function () {\n        var $this   = $(this)\n        var data    = $this.data('bs.popover')\n        var options = typeof option == 'object' && option\n\n        if (!data && /destroy|hide/.test(option)) return\n        if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n        if (typeof option == 'string') data[option]()\n      })\n    }\n\n    var old = $.fn.popover\n\n    $.fn.popover             = Plugin\n    $.fn.popover.Constructor = Popover\n\n\n    // POPOVER NO CONFLICT\n    // ===================\n\n    $.fn.popover.noConflict = function () {\n      $.fn.popover = old\n      return this\n    }\n\n  }(jQuery);\n\n  /* ========================================================================\n   * Bootstrap: scrollspy.js v3.3.6\n   * http://getbootstrap.com/javascript/#scrollspy\n   * ========================================================================\n   * Copyright 2011-2015 Twitter, Inc.\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * ======================================================================== */\n\n\n  +function ($) {\n    'use strict';\n\n    // SCROLLSPY CLASS DEFINITION\n    // ==========================\n\n    function ScrollSpy(element, options) {\n      this.$body          = $(document.body)\n      this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n      this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n      this.selector       = (this.options.target || '') + ' .nav li > a'\n      this.offsets        = []\n      this.targets        = []\n      this.activeTarget   = null\n      this.scrollHeight   = 0\n\n      this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n      this.refresh()\n      this.process()\n    }\n\n    ScrollSpy.VERSION  = '3.3.6'\n\n    ScrollSpy.DEFAULTS = {\n      offset: 10\n    }\n\n    ScrollSpy.prototype.getScrollHeight = function () {\n      return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n    }\n\n    ScrollSpy.prototype.refresh = function () {\n      var that          = this\n      var offsetMethod  = 'offset'\n      var offsetBase    = 0\n\n      this.offsets      = []\n      this.targets      = []\n      this.scrollHeight = this.getScrollHeight()\n\n      if (!$.isWindow(this.$scrollElement[0])) {\n        offsetMethod = 'position'\n        offsetBase   = this.$scrollElement.scrollTop()\n      }\n\n      this.$body\n          .find(this.selector)\n          .map(function () {\n            var $el   = $(this)\n            var href  = $el.data('target') || $el.attr('href')\n            var $href = /^#./.test(href) && $(href)\n\n            return ($href\n                && $href.length\n                && $href.is(':visible')\n                && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n          })\n          .sort(function (a, b) { return a[0] - b[0] })\n          .each(function () {\n            that.offsets.push(this[0])\n            that.targets.push(this[1])\n          })\n    }\n\n    ScrollSpy.prototype.process = function () {\n      var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n      var scrollHeight = this.getScrollHeight()\n      var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n      var offsets      = this.offsets\n      var targets      = this.targets\n      var activeTarget = this.activeTarget\n      var i\n\n      if (this.scrollHeight != scrollHeight) {\n        this.refresh()\n      }\n\n      if (scrollTop >= maxScroll) {\n        return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n      }\n\n      if (activeTarget && scrollTop < offsets[0]) {\n        this.activeTarget = null\n        return this.clear()\n      }\n\n      for (i = offsets.length; i--;) {\n        activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n      }\n    }\n\n    ScrollSpy.prototype.activate = function (target) {\n      this.activeTarget = target\n\n      this.clear()\n\n      var selector = this.selector +\n          '[data-target=\"' + target + '\"],' +\n          this.selector + '[href=\"' + target + '\"]'\n\n      var active = $(selector)\n          .parents('li')\n          .addClass('active')\n\n      if (active.parent('.dropdown-menu').length) {\n        active = active\n            .closest('li.dropdown')\n            .addClass('active')\n      }\n\n      active.trigger('activate.bs.scrollspy')\n    }\n\n    ScrollSpy.prototype.clear = function () {\n      $(this.selector)\n          .parentsUntil(this.options.target, '.active')\n          .removeClass('active')\n    }\n\n\n    // SCROLLSPY PLUGIN DEFINITION\n    // ===========================\n\n    function Plugin(option) {\n      return this.each(function () {\n        var $this   = $(this)\n        var data    = $this.data('bs.scrollspy')\n        var options = typeof option == 'object' && option\n\n        if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n        if (typeof option == 'string') data[option]()\n      })\n    }\n\n    var old = $.fn.scrollspy\n\n    $.fn.scrollspy             = Plugin\n    $.fn.scrollspy.Constructor = ScrollSpy\n\n\n    // SCROLLSPY NO CONFLICT\n    // =====================\n\n    $.fn.scrollspy.noConflict = function () {\n      $.fn.scrollspy = old\n      return this\n    }\n\n\n    // SCROLLSPY DATA-API\n    // ==================\n\n    $(window).on('load.bs.scrollspy.data-api', function () {\n      $('[data-spy=\"scroll\"]').each(function () {\n        var $spy = $(this)\n        Plugin.call($spy, $spy.data())\n      })\n    })\n\n  }(jQuery);\n\n  /* ========================================================================\n   * Bootstrap: tab.js v3.3.6\n   * http://getbootstrap.com/javascript/#tabs\n   * ========================================================================\n   * Copyright 2011-2015 Twitter, Inc.\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * ======================================================================== */\n\n\n  +function ($) {\n    'use strict';\n\n    // TAB CLASS DEFINITION\n    // ====================\n\n    var Tab = function (element) {\n      // jscs:disable requireDollarBeforejQueryAssignment\n      this.element = $(element)\n      // jscs:enable requireDollarBeforejQueryAssignment\n    }\n\n    Tab.VERSION = '3.3.6'\n\n    Tab.TRANSITION_DURATION = 150\n\n    Tab.prototype.show = function () {\n      var $this    = this.element\n      var $ul      = $this.closest('ul:not(.dropdown-menu)')\n      var selector = $this.data('target')\n\n      if (!selector) {\n        selector = $this.attr('href')\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n      }\n\n      if ($this.parent('li').hasClass('active')) return\n\n      var $previous = $ul.find('.active:last a')\n      var hideEvent = $.Event('hide.bs.tab', {\n        relatedTarget: $this[0]\n      })\n      var showEvent = $.Event('show.bs.tab', {\n        relatedTarget: $previous[0]\n      })\n\n      $previous.trigger(hideEvent)\n      $this.trigger(showEvent)\n\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n      var $target = $(selector)\n\n      this.activate($this.closest('li'), $ul)\n      this.activate($target, $target.parent(), function () {\n        $previous.trigger({\n          type: 'hidden.bs.tab',\n          relatedTarget: $this[0]\n        })\n        $this.trigger({\n          type: 'shown.bs.tab',\n          relatedTarget: $previous[0]\n        })\n      })\n    }\n\n    Tab.prototype.activate = function (element, container, callback) {\n      var $active    = container.find('> .active')\n      var transition = callback\n          && $.support.transition\n          && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n      function next() {\n        $active\n            .removeClass('active')\n            .find('> .dropdown-menu > .active')\n            .removeClass('active')\n            .end()\n            .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', false)\n\n        element\n            .addClass('active')\n            .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n\n        if (transition) {\n          element[0].offsetWidth // reflow for transition\n          element.addClass('in')\n        } else {\n          element.removeClass('fade')\n        }\n\n        if (element.parent('.dropdown-menu').length) {\n          element\n              .closest('li.dropdown')\n              .addClass('active')\n              .end()\n              .find('[data-toggle=\"tab\"]')\n              .attr('aria-expanded', true)\n        }\n\n        callback && callback()\n      }\n\n      $active.length && transition ?\n          $active\n              .one('bsTransitionEnd', next)\n              .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n          next()\n\n      $active.removeClass('in')\n    }\n\n\n    // TAB PLUGIN DEFINITION\n    // =====================\n\n    function Plugin(option) {\n      return this.each(function () {\n        var $this = $(this)\n        var data  = $this.data('bs.tab')\n\n        if (!data) $this.data('bs.tab', (data = new Tab(this)))\n        if (typeof option == 'string') data[option]()\n      })\n    }\n\n    var old = $.fn.tab\n\n    $.fn.tab             = Plugin\n    $.fn.tab.Constructor = Tab\n\n\n    // TAB NO CONFLICT\n    // ===============\n\n    $.fn.tab.noConflict = function () {\n      $.fn.tab = old\n      return this\n    }\n\n\n    // TAB DATA-API\n    // ============\n\n    var clickHandler = function (e) {\n      e.preventDefault()\n      Plugin.call($(this), 'show')\n    }\n\n    $(document)\n        .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n        .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n  }(jQuery);\n\n  /* ========================================================================\n   * Bootstrap: affix.js v3.3.6\n   * http://getbootstrap.com/javascript/#affix\n   * ========================================================================\n   * Copyright 2011-2015 Twitter, Inc.\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n   * ======================================================================== */\n\n\n  +function ($) {\n    'use strict';\n\n    // AFFIX CLASS DEFINITION\n    // ======================\n\n    var Affix = function (element, options) {\n      this.options = $.extend({}, Affix.DEFAULTS, options)\n\n      this.$target = $(this.options.target)\n          .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n          .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n      this.$element     = $(element)\n      this.affixed      = null\n      this.unpin        = null\n      this.pinnedOffset = null\n\n      this.checkPosition()\n    }\n\n    Affix.VERSION  = '3.3.6'\n\n    Affix.RESET    = 'affix affix-top affix-bottom'\n\n    Affix.DEFAULTS = {\n      offset: 0,\n      target: window\n    }\n\n    Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n      var scrollTop    = this.$target.scrollTop()\n      var position     = this.$element.offset()\n      var targetHeight = this.$target.height()\n\n      if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n      if (this.affixed == 'bottom') {\n        if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n        return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n      }\n\n      var initializing   = this.affixed == null\n      var colliderTop    = initializing ? scrollTop : position.top\n      var colliderHeight = initializing ? targetHeight : height\n\n      if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n      if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n      return false\n    }\n\n    Affix.prototype.getPinnedOffset = function () {\n      if (this.pinnedOffset) return this.pinnedOffset\n      this.$element.removeClass(Affix.RESET).addClass('affix')\n      var scrollTop = this.$target.scrollTop()\n      var position  = this.$element.offset()\n      return (this.pinnedOffset = position.top - scrollTop)\n    }\n\n    Affix.prototype.checkPositionWithEventLoop = function () {\n      setTimeout($.proxy(this.checkPosition, this), 1)\n    }\n\n    Affix.prototype.checkPosition = function () {\n      if (!this.$element.is(':visible')) return\n\n      var height       = this.$element.height()\n      var offset       = this.options.offset\n      var offsetTop    = offset.top\n      var offsetBottom = offset.bottom\n      var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n      if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n      if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n      if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n      var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n      if (this.affixed != affix) {\n        if (this.unpin != null) this.$element.css('top', '')\n\n        var affixType = 'affix' + (affix ? '-' + affix : '')\n        var e         = $.Event(affixType + '.bs.affix')\n\n        this.$element.trigger(e)\n\n        if (e.isDefaultPrevented()) return\n\n        this.affixed = affix\n        this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n        this.$element\n            .removeClass(Affix.RESET)\n            .addClass(affixType)\n            .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n      }\n\n      if (affix == 'bottom') {\n        this.$element.offset({\n          top: scrollHeight - height - offsetBottom\n        })\n      }\n    }\n\n\n    // AFFIX PLUGIN DEFINITION\n    // =======================\n\n    function Plugin(option) {\n      return this.each(function () {\n        var $this   = $(this)\n        var data    = $this.data('bs.affix')\n        var options = typeof option == 'object' && option\n\n        if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n        if (typeof option == 'string') data[option]()\n      })\n    }\n\n    var old = $.fn.affix\n\n    $.fn.affix             = Plugin\n    $.fn.affix.Constructor = Affix\n\n\n    // AFFIX NO CONFLICT\n    // =================\n\n    $.fn.affix.noConflict = function () {\n      $.fn.affix = old\n      return this\n    }\n\n\n    // AFFIX DATA-API\n    // ==============\n\n    $(window).on('load', function () {\n      $('[data-spy=\"affix\"]').each(function () {\n        var $spy = $(this)\n        var data = $spy.data()\n\n        data.offset = data.offset || {}\n\n        if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n        if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n        Plugin.call($spy, data)\n      })\n    })\n\n  }(jQuery);\n\n});\n","Magestore_Webpos/js/bootstrap/bootstrap.min.js":"/*!\n * Bootstrap v3.3.6 (http://getbootstrap.com)\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under the MIT license\n */\nif(\"undefined\"==typeof jQuery)throw new Error(\"Bootstrap's JavaScript requires jQuery\");+function(a){\"use strict\";var b=a.fn.jquery.split(\" \")[0].split(\".\");if(b[0]<2&&b[1]<9||1==b[0]&&9==b[1]&&b[2]<1||b[0]>2)throw new Error(\"Bootstrap's JavaScript requires jQuery version 1.9.1 or higher, but lower than version 3\")}(jQuery),+function(a){\"use strict\";function b(){var a=document.createElement(\"bootstrap\"),b={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]};return!1}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(\"bsTransitionEnd\",function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b(),a.support.transition&&(a.event.special.bsTransitionEnd={bindType:a.support.transition.end,delegateType:a.support.transition.end,handle:function(b){return a(b.target).is(this)?b.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var c=a(this),e=c.data(\"bs.alert\");e||c.data(\"bs.alert\",e=new d(this)),\"string\"==typeof b&&e[b].call(c)})}var c='[data-dismiss=\"alert\"]',d=function(b){a(b).on(\"click\",c,this.close)};d.VERSION=\"3.3.6\",d.TRANSITION_DURATION=150,d.prototype.close=function(b){function c(){g.detach().trigger(\"closed.bs.alert\").remove()}var e=a(this),f=e.attr(\"data-target\");f||(f=e.attr(\"href\"),f=f&&f.replace(/.*(?=#[^\\s]*$)/,\"\"));var g=a(f);b&&b.preventDefault(),g.length||(g=e.closest(\".alert\")),g.trigger(b=a.Event(\"close.bs.alert\")),b.isDefaultPrevented()||(g.removeClass(\"in\"),a.support.transition&&g.hasClass(\"fade\")?g.one(\"bsTransitionEnd\",c).emulateTransitionEnd(d.TRANSITION_DURATION):c())};var e=a.fn.alert;a.fn.alert=b,a.fn.alert.Constructor=d,a.fn.alert.noConflict=function(){return a.fn.alert=e,this},a(document).on(\"click.bs.alert.data-api\",c,d.prototype.close)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.button\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.button\",e=new c(this,f)),\"toggle\"==b?e.toggle():b&&e.setState(b)})}var c=function(b,d){this.$element=a(b),this.options=a.extend({},c.DEFAULTS,d),this.isLoading=!1};c.VERSION=\"3.3.6\",c.DEFAULTS={loadingText:\"loading...\"},c.prototype.setState=function(b){var c=\"disabled\",d=this.$element,e=d.is(\"input\")?\"val\":\"html\",f=d.data();b+=\"Text\",null==f.resetText&&d.data(\"resetText\",d[e]()),setTimeout(a.proxy(function(){d[e](null==f[b]?this.options[b]:f[b]),\"loadingText\"==b?(this.isLoading=!0,d.addClass(c).attr(c,c)):this.isLoading&&(this.isLoading=!1,d.removeClass(c).removeAttr(c))},this),0)},c.prototype.toggle=function(){var a=!0,b=this.$element.closest('[data-toggle=\"buttons\"]');if(b.length){var c=this.$element.find(\"input\");\"radio\"==c.prop(\"type\")?(c.prop(\"checked\")&&(a=!1),b.find(\".active\").removeClass(\"active\"),this.$element.addClass(\"active\")):\"checkbox\"==c.prop(\"type\")&&(c.prop(\"checked\")!==this.$element.hasClass(\"active\")&&(a=!1),this.$element.toggleClass(\"active\")),c.prop(\"checked\",this.$element.hasClass(\"active\")),a&&c.trigger(\"change\")}else this.$element.attr(\"aria-pressed\",!this.$element.hasClass(\"active\")),this.$element.toggleClass(\"active\")};var d=a.fn.button;a.fn.button=b,a.fn.button.Constructor=c,a.fn.button.noConflict=function(){return a.fn.button=d,this},a(document).on(\"click.bs.button.data-api\",'[data-toggle^=\"button\"]',function(c){var d=a(c.target);d.hasClass(\"btn\")||(d=d.closest(\".btn\")),b.call(d,\"toggle\"),a(c.target).is('input[type=\"radio\"]')||a(c.target).is('input[type=\"checkbox\"]')||c.preventDefault()}).on(\"focus.bs.button.data-api blur.bs.button.data-api\",'[data-toggle^=\"button\"]',function(b){a(b.target).closest(\".btn\").toggleClass(\"focus\",/^focus(in)?$/.test(b.type))})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.carousel\"),f=a.extend({},c.DEFAULTS,d.data(),\"object\"==typeof b&&b),g=\"string\"==typeof b?b:f.slide;e||d.data(\"bs.carousel\",e=new c(this,f)),\"number\"==typeof b?e.to(b):g?e[g]():f.interval&&e.pause().cycle()})}var c=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(\".carousel-indicators\"),this.options=c,this.paused=null,this.sliding=null,this.interval=null,this.$active=null,this.$items=null,this.options.keyboard&&this.$element.on(\"keydown.bs.carousel\",a.proxy(this.keydown,this)),\"hover\"==this.options.pause&&!(\"ontouchstart\"in document.documentElement)&&this.$element.on(\"mouseenter.bs.carousel\",a.proxy(this.pause,this)).on(\"mouseleave.bs.carousel\",a.proxy(this.cycle,this))};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=600,c.DEFAULTS={interval:5e3,pause:\"hover\",wrap:!0,keyboard:!0},c.prototype.keydown=function(a){if(!/input|textarea/i.test(a.target.tagName)){switch(a.which){case 37:this.prev();break;case 39:this.next();break;default:return}a.preventDefault()}},c.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},c.prototype.getItemIndex=function(a){return this.$items=a.parent().children(\".item\"),this.$items.index(a||this.$active)},c.prototype.getItemForDirection=function(a,b){var c=this.getItemIndex(b),d=\"prev\"==a&&0===c||\"next\"==a&&c==this.$items.length-1;if(d&&!this.options.wrap)return b;var e=\"prev\"==a?-1:1,f=(c+e)%this.$items.length;return this.$items.eq(f)},c.prototype.to=function(a){var b=this,c=this.getItemIndex(this.$active=this.$element.find(\".item.active\"));return a>this.$items.length-1||0>a?void 0:this.sliding?this.$element.one(\"slid.bs.carousel\",function(){b.to(a)}):c==a?this.pause().cycle():this.slide(a>c?\"next\":\"prev\",this.$items.eq(a))},c.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(\".next, .prev\").length&&a.support.transition&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},c.prototype.next=function(){return this.sliding?void 0:this.slide(\"next\")},c.prototype.prev=function(){return this.sliding?void 0:this.slide(\"prev\")},c.prototype.slide=function(b,d){var e=this.$element.find(\".item.active\"),f=d||this.getItemForDirection(b,e),g=this.interval,h=\"next\"==b?\"left\":\"right\",i=this;if(f.hasClass(\"active\"))return this.sliding=!1;var j=f[0],k=a.Event(\"slide.bs.carousel\",{relatedTarget:j,direction:h});if(this.$element.trigger(k),!k.isDefaultPrevented()){if(this.sliding=!0,g&&this.pause(),this.$indicators.length){this.$indicators.find(\".active\").removeClass(\"active\");var l=a(this.$indicators.children()[this.getItemIndex(f)]);l&&l.addClass(\"active\")}var m=a.Event(\"slid.bs.carousel\",{relatedTarget:j,direction:h});return a.support.transition&&this.$element.hasClass(\"slide\")?(f.addClass(b),f[0].offsetWidth,e.addClass(h),f.addClass(h),e.one(\"bsTransitionEnd\",function(){f.removeClass([b,h].join(\" \")).addClass(\"active\"),e.removeClass([\"active\",h].join(\" \")),i.sliding=!1,setTimeout(function(){i.$element.trigger(m)},0)}).emulateTransitionEnd(c.TRANSITION_DURATION)):(e.removeClass(\"active\"),f.addClass(\"active\"),this.sliding=!1,this.$element.trigger(m)),g&&this.cycle(),this}};var d=a.fn.carousel;a.fn.carousel=b,a.fn.carousel.Constructor=c,a.fn.carousel.noConflict=function(){return a.fn.carousel=d,this};var e=function(c){var d,e=a(this),f=a(e.attr(\"data-target\")||(d=e.attr(\"href\"))&&d.replace(/.*(?=#[^\\s]+$)/,\"\"));if(f.hasClass(\"carousel\")){var g=a.extend({},f.data(),e.data()),h=e.attr(\"data-slide-to\");h&&(g.interval=!1),b.call(f,g),h&&f.data(\"bs.carousel\").to(h),c.preventDefault()}};a(document).on(\"click.bs.carousel.data-api\",\"[data-slide]\",e).on(\"click.bs.carousel.data-api\",\"[data-slide-to]\",e),a(window).on(\"load\",function(){a('[data-ride=\"carousel\"]').each(function(){var c=a(this);b.call(c,c.data())})})}(jQuery),+function(a){\"use strict\";function b(b){var c,d=b.attr(\"data-target\")||(c=b.attr(\"href\"))&&c.replace(/.*(?=#[^\\s]+$)/,\"\");return a(d)}function c(b){return this.each(function(){var c=a(this),e=c.data(\"bs.collapse\"),f=a.extend({},d.DEFAULTS,c.data(),\"object\"==typeof b&&b);!e&&f.toggle&&/show|hide/.test(b)&&(f.toggle=!1),e||c.data(\"bs.collapse\",e=new d(this,f)),\"string\"==typeof b&&e[b]()})}var d=function(b,c){this.$element=a(b),this.options=a.extend({},d.DEFAULTS,c),this.$trigger=a('[data-toggle=\"collapse\"][href=\"#'+b.id+'\"],[data-toggle=\"collapse\"][data-target=\"#'+b.id+'\"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};d.VERSION=\"3.3.6\",d.TRANSITION_DURATION=350,d.DEFAULTS={toggle:!0},d.prototype.dimension=function(){var a=this.$element.hasClass(\"width\");return a?\"width\":\"height\"},d.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass(\"in\")){var b,e=this.$parent&&this.$parent.children(\".panel\").children(\".in, .collapsing\");if(!(e&&e.length&&(b=e.data(\"bs.collapse\"),b&&b.transitioning))){var f=a.Event(\"show.bs.collapse\");if(this.$element.trigger(f),!f.isDefaultPrevented()){e&&e.length&&(c.call(e,\"hide\"),b||e.data(\"bs.collapse\",null));var g=this.dimension();this.$element.removeClass(\"collapse\").addClass(\"collapsing\")[g](0).attr(\"aria-expanded\",!0),this.$trigger.removeClass(\"collapsed\").attr(\"aria-expanded\",!0),this.transitioning=1;var h=function(){this.$element.removeClass(\"collapsing\").addClass(\"collapse in\")[g](\"\"),this.transitioning=0,this.$element.trigger(\"shown.bs.collapse\")};if(!a.support.transition)return h.call(this);var i=a.camelCase([\"scroll\",g].join(\"-\"));this.$element.one(\"bsTransitionEnd\",a.proxy(h,this)).emulateTransitionEnd(d.TRANSITION_DURATION)[g](this.$element[0][i])}}}},d.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass(\"in\")){var b=a.Event(\"hide.bs.collapse\");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass(\"collapsing\").removeClass(\"collapse in\").attr(\"aria-expanded\",!1),this.$trigger.addClass(\"collapsed\").attr(\"aria-expanded\",!1),this.transitioning=1;var e=function(){this.transitioning=0,this.$element.removeClass(\"collapsing\").addClass(\"collapse\").trigger(\"hidden.bs.collapse\")};return a.support.transition?void this.$element[c](0).one(\"bsTransitionEnd\",a.proxy(e,this)).emulateTransitionEnd(d.TRANSITION_DURATION):e.call(this)}}},d.prototype.toggle=function(){this[this.$element.hasClass(\"in\")?\"hide\":\"show\"]()},d.prototype.getParent=function(){return a(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"'+this.options.parent+'\"]').each(a.proxy(function(c,d){var e=a(d);this.addAriaAndCollapsedClass(b(e),e)},this)).end()},d.prototype.addAriaAndCollapsedClass=function(a,b){var c=a.hasClass(\"in\");a.attr(\"aria-expanded\",c),b.toggleClass(\"collapsed\",!c).attr(\"aria-expanded\",c)};var e=a.fn.collapse;a.fn.collapse=c,a.fn.collapse.Constructor=d,a.fn.collapse.noConflict=function(){return a.fn.collapse=e,this},a(document).on(\"click.bs.collapse.data-api\",'[data-toggle=\"collapse\"]',function(d){var e=a(this);e.attr(\"data-target\")||d.preventDefault();var f=b(e),g=f.data(\"bs.collapse\"),h=g?\"toggle\":e.data();c.call(f,h)})}(jQuery),+function(a){\"use strict\";function b(b){var c=b.attr(\"data-target\");c||(c=b.attr(\"href\"),c=c&&/#[A-Za-z]/.test(c)&&c.replace(/.*(?=#[^\\s]*$)/,\"\"));var d=c&&a(c);return d&&d.length?d:b.parent()}function c(c){c&&3===c.which||(a(e).remove(),a(f).each(function(){var d=a(this),e=b(d),f={relatedTarget:this};e.hasClass(\"open\")&&(c&&\"click\"==c.type&&/input|textarea/i.test(c.target.tagName)&&a.contains(e[0],c.target)||(e.trigger(c=a.Event(\"hide.bs.dropdown\",f)),c.isDefaultPrevented()||(d.attr(\"aria-expanded\",\"false\"),e.removeClass(\"open\").trigger(a.Event(\"hidden.bs.dropdown\",f)))))}))}function d(b){return this.each(function(){var c=a(this),d=c.data(\"bs.dropdown\");d||c.data(\"bs.dropdown\",d=new g(this)),\"string\"==typeof b&&d[b].call(c)})}var e=\".dropdown-backdrop\",f='[data-toggle=\"dropdown\"]',g=function(b){a(b).on(\"click.bs.dropdown\",this.toggle)};g.VERSION=\"3.3.6\",g.prototype.toggle=function(d){var e=a(this);if(!e.is(\".disabled, :disabled\")){var f=b(e),g=f.hasClass(\"open\");if(c(),!g){\"ontouchstart\"in document.documentElement&&!f.closest(\".navbar-nav\").length&&a(document.createElement(\"div\")).addClass(\"dropdown-backdrop\").insertAfter(a(this)).on(\"click\",c);var h={relatedTarget:this};if(f.trigger(d=a.Event(\"show.bs.dropdown\",h)),d.isDefaultPrevented())return;e.trigger(\"focus\").attr(\"aria-expanded\",\"true\"),f.toggleClass(\"open\").trigger(a.Event(\"shown.bs.dropdown\",h))}return!1}},g.prototype.keydown=function(c){if(/(38|40|27|32)/.test(c.which)&&!/input|textarea/i.test(c.target.tagName)){var d=a(this);if(c.preventDefault(),c.stopPropagation(),!d.is(\".disabled, :disabled\")){var e=b(d),g=e.hasClass(\"open\");if(!g&&27!=c.which||g&&27==c.which)return 27==c.which&&e.find(f).trigger(\"focus\"),d.trigger(\"click\");var h=\" li:not(.disabled):visible a\",i=e.find(\".dropdown-menu\"+h);if(i.length){var j=i.index(c.target);38==c.which&&j>0&&j--,40==c.which&&j<i.length-1&&j++,~j||(j=0),i.eq(j).trigger(\"focus\")}}}};var h=a.fn.dropdown;a.fn.dropdown=d,a.fn.dropdown.Constructor=g,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=h,this},a(document).on(\"click.bs.dropdown.data-api\",c).on(\"click.bs.dropdown.data-api\",\".dropdown form\",function(a){a.stopPropagation()}).on(\"click.bs.dropdown.data-api\",f,g.prototype.toggle).on(\"keydown.bs.dropdown.data-api\",f,g.prototype.keydown).on(\"keydown.bs.dropdown.data-api\",\".dropdown-menu\",g.prototype.keydown)}(jQuery),+function(a){\"use strict\";function b(b,d){return this.each(function(){var e=a(this),f=e.data(\"bs.modal\"),g=a.extend({},c.DEFAULTS,e.data(),\"object\"==typeof b&&b);f||e.data(\"bs.modal\",f=new c(this,g)),\"string\"==typeof b?f[b](d):g.show&&f.show(d)})}var c=function(b,c){this.options=c,this.$body=a(document.body),this.$element=a(b),this.$dialog=this.$element.find(\".modal-dialog\"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(\".modal-content\").load(this.options.remote,a.proxy(function(){this.$element.trigger(\"loaded.bs.modal\")},this))};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=300,c.BACKDROP_TRANSITION_DURATION=150,c.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},c.prototype.toggle=function(a){return this.isShown?this.hide():this.show(a)},c.prototype.show=function(b){var d=this,e=a.Event(\"show.bs.modal\",{relatedTarget:b});this.$element.trigger(e),this.isShown||e.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass(\"modal-open\"),this.escape(),this.resize(),this.$element.on(\"click.dismiss.bs.modal\",'[data-dismiss=\"modal\"]',a.proxy(this.hide,this)),this.$dialog.on(\"mousedown.dismiss.bs.modal\",function(){d.$element.one(\"mouseup.dismiss.bs.modal\",function(b){a(b.target).is(d.$element)&&(d.ignoreBackdropClick=!0)})}),this.backdrop(function(){var e=a.support.transition&&d.$element.hasClass(\"fade\");d.$element.parent().length||d.$element.appendTo(d.$body),d.$element.show().scrollTop(0),d.adjustDialog(),e&&d.$element[0].offsetWidth,d.$element.addClass(\"in\"),d.enforceFocus();var f=a.Event(\"shown.bs.modal\",{relatedTarget:b});e?d.$dialog.one(\"bsTransitionEnd\",function(){d.$element.trigger(\"focus\").trigger(f)}).emulateTransitionEnd(c.TRANSITION_DURATION):d.$element.trigger(\"focus\").trigger(f)}))},c.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event(\"hide.bs.modal\"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),a(document).off(\"focusin.bs.modal\"),this.$element.removeClass(\"in\").off(\"click.dismiss.bs.modal\").off(\"mouseup.dismiss.bs.modal\"),this.$dialog.off(\"mousedown.dismiss.bs.modal\"),a.support.transition&&this.$element.hasClass(\"fade\")?this.$element.one(\"bsTransitionEnd\",a.proxy(this.hideModal,this)).emulateTransitionEnd(c.TRANSITION_DURATION):this.hideModal())},c.prototype.enforceFocus=function(){a(document).off(\"focusin.bs.modal\").on(\"focusin.bs.modal\",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.trigger(\"focus\")},this))},c.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on(\"keydown.dismiss.bs.modal\",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off(\"keydown.dismiss.bs.modal\")},c.prototype.resize=function(){this.isShown?a(window).on(\"resize.bs.modal\",a.proxy(this.handleUpdate,this)):a(window).off(\"resize.bs.modal\")},c.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.$body.removeClass(\"modal-open\"),a.resetAdjustments(),a.resetScrollbar(),a.$element.trigger(\"hidden.bs.modal\")})},c.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},c.prototype.backdrop=function(b){var d=this,e=this.$element.hasClass(\"fade\")?\"fade\":\"\";if(this.isShown&&this.options.backdrop){var f=a.support.transition&&e;if(this.$backdrop=a(document.createElement(\"div\")).addClass(\"modal-backdrop \"+e).appendTo(this.$body),this.$element.on(\"click.dismiss.bs.modal\",a.proxy(function(a){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(a.target===a.currentTarget&&(\"static\"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),f&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass(\"in\"),!b)return;f?this.$backdrop.one(\"bsTransitionEnd\",b).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):b()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass(\"in\");var g=function(){d.removeBackdrop(),b&&b()};a.support.transition&&this.$element.hasClass(\"fade\")?this.$backdrop.one(\"bsTransitionEnd\",g).emulateTransitionEnd(c.BACKDROP_TRANSITION_DURATION):g()}else b&&b()},c.prototype.handleUpdate=function(){this.adjustDialog()},c.prototype.adjustDialog=function(){var a=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&a?this.scrollbarWidth:\"\",paddingRight:this.bodyIsOverflowing&&!a?this.scrollbarWidth:\"\"})},c.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:\"\",paddingRight:\"\"})},c.prototype.checkScrollbar=function(){var a=window.innerWidth;if(!a){var b=document.documentElement.getBoundingClientRect();a=b.right-Math.abs(b.left)}this.bodyIsOverflowing=document.body.clientWidth<a,this.scrollbarWidth=this.measureScrollbar()},c.prototype.setScrollbar=function(){var a=parseInt(this.$body.css(\"padding-right\")||0,10);this.originalBodyPad=document.body.style.paddingRight||\"\",this.bodyIsOverflowing&&this.$body.css(\"padding-right\",a+this.scrollbarWidth)},c.prototype.resetScrollbar=function(){this.$body.css(\"padding-right\",this.originalBodyPad)},c.prototype.measureScrollbar=function(){var a=document.createElement(\"div\");a.className=\"modal-scrollbar-measure\",this.$body.append(a);var b=a.offsetWidth-a.clientWidth;return this.$body[0].removeChild(a),b};var d=a.fn.modal;a.fn.modal=b,a.fn.modal.Constructor=c,a.fn.modal.noConflict=function(){return a.fn.modal=d,this},a(document).on(\"click.bs.modal.data-api\",'[data-toggle=\"modal\"]',function(c){var d=a(this),e=d.attr(\"href\"),f=a(d.attr(\"data-target\")||e&&e.replace(/.*(?=#[^\\s]+$)/,\"\")),g=f.data(\"bs.modal\")?\"toggle\":a.extend({remote:!/#/.test(e)&&e},f.data(),d.data());d.is(\"a\")&&c.preventDefault(),f.one(\"show.bs.modal\",function(a){a.isDefaultPrevented()||f.one(\"hidden.bs.modal\",function(){d.is(\":visible\")&&d.trigger(\"focus\")})}),b.call(f,g,this)})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tooltip\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.tooltip\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init(\"tooltip\",a,b)};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=150,c.DEFAULTS={animation:!0,placement:\"top\",selector:!1,template:'<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',trigger:\"hover focus\",title:\"\",delay:0,html:!1,container:!1,viewport:{selector:\"body\",padding:0}},c.prototype.init=function(b,c,d){if(this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&a(a.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error(\"`selector` option must be specified when initializing \"+this.type+\" on the window.document object!\");for(var e=this.options.trigger.split(\" \"),f=e.length;f--;){var g=e[f];if(\"click\"==g)this.$element.on(\"click.\"+this.type,this.options.selector,a.proxy(this.toggle,this));else if(\"manual\"!=g){var h=\"hover\"==g?\"mouseenter\":\"focusin\",i=\"hover\"==g?\"mouseleave\":\"focusout\";this.$element.on(h+\".\"+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+\".\"+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:\"manual\",selector:\"\"}):this.fixTitle()},c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&\"number\"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},c.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},c.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusin\"==b.type?\"focus\":\"hover\"]=!0),c.tip().hasClass(\"in\")||\"in\"==c.hoverState?void(c.hoverState=\"in\"):(clearTimeout(c.timeout),c.hoverState=\"in\",c.options.delay&&c.options.delay.show?void(c.timeout=setTimeout(function(){\"in\"==c.hoverState&&c.show()},c.options.delay.show)):c.show())},c.prototype.isInStateTrue=function(){for(var a in this.inState)if(this.inState[a])return!0;return!1},c.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget).data(\"bs.\"+this.type);return c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c)),b instanceof a.Event&&(c.inState[\"focusout\"==b.type?\"focus\":\"hover\"]=!1),c.isInStateTrue()?void 0:(clearTimeout(c.timeout),c.hoverState=\"out\",c.options.delay&&c.options.delay.hide?void(c.timeout=setTimeout(function(){\"out\"==c.hoverState&&c.hide()},c.options.delay.hide)):c.hide())},c.prototype.show=function(){var b=a.Event(\"show.bs.\"+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(b);var d=a.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(b.isDefaultPrevented()||!d)return;var e=this,f=this.tip(),g=this.getUID(this.type);this.setContent(),f.attr(\"id\",g),this.$element.attr(\"aria-describedby\",g),this.options.animation&&f.addClass(\"fade\");var h=\"function\"==typeof this.options.placement?this.options.placement.call(this,f[0],this.$element[0]):this.options.placement,i=/\\s?auto?\\s?/i,j=i.test(h);j&&(h=h.replace(i,\"\")||\"top\"),f.detach().css({top:0,left:0,display:\"block\"}).addClass(h).data(\"bs.\"+this.type,this),this.options.container?f.appendTo(this.options.container):f.insertAfter(this.$element),this.$element.trigger(\"inserted.bs.\"+this.type);var k=this.getPosition(),l=f[0].offsetWidth,m=f[0].offsetHeight;if(j){var n=h,o=this.getPosition(this.$viewport);h=\"bottom\"==h&&k.bottom+m>o.bottom?\"top\":\"top\"==h&&k.top-m<o.top?\"bottom\":\"right\"==h&&k.right+l>o.width?\"left\":\"left\"==h&&k.left-l<o.left?\"right\":h,f.removeClass(n).addClass(h)}var p=this.getCalculatedOffset(h,k,l,m);this.applyPlacement(p,h);var q=function(){var a=e.hoverState;e.$element.trigger(\"shown.bs.\"+e.type),e.hoverState=null,\"out\"==a&&e.leave(e)};a.support.transition&&this.$tip.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",q).emulateTransitionEnd(c.TRANSITION_DURATION):q()}},c.prototype.applyPlacement=function(b,c){var d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css(\"margin-top\"),10),h=parseInt(d.css(\"margin-left\"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),b.top+=g,b.left+=h,a.offset.setOffset(d[0],a.extend({using:function(a){d.css({top:Math.round(a.top),left:Math.round(a.left)})}},b),0),d.addClass(\"in\");var i=d[0].offsetWidth,j=d[0].offsetHeight;\"top\"==c&&j!=f&&(b.top=b.top+f-j);var k=this.getViewportAdjustedDelta(c,b,i,j);k.left?b.left+=k.left:b.top+=k.top;var l=/top|bottom/.test(c),m=l?2*k.left-e+i:2*k.top-f+j,n=l?\"offsetWidth\":\"offsetHeight\";d.offset(b),this.replaceArrow(m,d[0][n],l)},c.prototype.replaceArrow=function(a,b,c){this.arrow().css(c?\"left\":\"top\",50*(1-a/b)+\"%\").css(c?\"top\":\"left\",\"\")},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(\".tooltip-inner\")[this.options.html?\"html\":\"text\"](b),a.removeClass(\"fade in top bottom left right\")},c.prototype.hide=function(b){function d(){\"in\"!=e.hoverState&&f.detach(),e.$element.removeAttr(\"aria-describedby\").trigger(\"hidden.bs.\"+e.type),b&&b()}var e=this,f=a(this.$tip),g=a.Event(\"hide.bs.\"+this.type);return this.$element.trigger(g),g.isDefaultPrevented()?void 0:(f.removeClass(\"in\"),a.support.transition&&f.hasClass(\"fade\")?f.one(\"bsTransitionEnd\",d).emulateTransitionEnd(c.TRANSITION_DURATION):d(),this.hoverState=null,this)},c.prototype.fixTitle=function(){var a=this.$element;(a.attr(\"title\")||\"string\"!=typeof a.attr(\"data-original-title\"))&&a.attr(\"data-original-title\",a.attr(\"title\")||\"\").attr(\"title\",\"\")},c.prototype.hasContent=function(){return this.getTitle()},c.prototype.getPosition=function(b){b=b||this.$element;var c=b[0],d=\"BODY\"==c.tagName,e=c.getBoundingClientRect();null==e.width&&(e=a.extend({},e,{width:e.right-e.left,height:e.bottom-e.top}));var f=d?{top:0,left:0}:b.offset(),g={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:b.scrollTop()},h=d?{width:a(window).width(),height:a(window).height()}:null;return a.extend({},e,g,h,f)},c.prototype.getCalculatedOffset=function(a,b,c,d){return\"bottom\"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:\"top\"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:\"left\"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},c.prototype.getViewportAdjustedDelta=function(a,b,c,d){var e={top:0,left:0};if(!this.$viewport)return e;var f=this.options.viewport&&this.options.viewport.padding||0,g=this.getPosition(this.$viewport);if(/right|left/.test(a)){var h=b.top-f-g.scroll,i=b.top+f-g.scroll+d;h<g.top?e.top=g.top-h:i>g.top+g.height&&(e.top=g.top+g.height-i)}else{var j=b.left-f,k=b.left+f+c;j<g.left?e.left=g.left-j:k>g.right&&(e.left=g.left+g.width-k)}return e},c.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr(\"data-original-title\")||(\"function\"==typeof c.title?c.title.call(b[0]):c.title)},c.prototype.getUID=function(a){do a+=~~(1e6*Math.random());while(document.getElementById(a));return a},c.prototype.tip=function(){if(!this.$tip&&(this.$tip=a(this.options.template),1!=this.$tip.length))throw new Error(this.type+\" `template` option must consist of exactly 1 top-level element!\");return this.$tip},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".tooltip-arrow\")},c.prototype.enable=function(){this.enabled=!0},c.prototype.disable=function(){this.enabled=!1},c.prototype.toggleEnabled=function(){this.enabled=!this.enabled},c.prototype.toggle=function(b){var c=this;b&&(c=a(b.currentTarget).data(\"bs.\"+this.type),c||(c=new this.constructor(b.currentTarget,this.getDelegateOptions()),a(b.currentTarget).data(\"bs.\"+this.type,c))),b?(c.inState.click=!c.inState.click,c.isInStateTrue()?c.enter(c):c.leave(c)):c.tip().hasClass(\"in\")?c.leave(c):c.enter(c)},c.prototype.destroy=function(){var a=this;clearTimeout(this.timeout),this.hide(function(){a.$element.off(\".\"+a.type).removeData(\"bs.\"+a.type),a.$tip&&a.$tip.detach(),a.$tip=null,a.$arrow=null,a.$viewport=null})};var d=a.fn.tooltip;a.fn.tooltip=b,a.fn.tooltip.Constructor=c,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=d,this}}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.popover\"),f=\"object\"==typeof b&&b;(e||!/destroy|hide/.test(b))&&(e||d.data(\"bs.popover\",e=new c(this,f)),\"string\"==typeof b&&e[b]())})}var c=function(a,b){this.init(\"popover\",a,b)};if(!a.fn.tooltip)throw new Error(\"Popover requires tooltip.js\");c.VERSION=\"3.3.6\",c.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:\"right\",trigger:\"click\",content:\"\",template:'<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'}),c.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),c.prototype.constructor=c,c.prototype.getDefaults=function(){return c.DEFAULTS},c.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(\".popover-title\")[this.options.html?\"html\":\"text\"](b),a.find(\".popover-content\").children().detach().end()[this.options.html?\"string\"==typeof c?\"html\":\"append\":\"text\"](c),a.removeClass(\"fade top bottom left right in\"),a.find(\".popover-title\").html()||a.find(\".popover-title\").hide()},c.prototype.hasContent=function(){return this.getTitle()||this.getContent()},c.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr(\"data-content\")||(\"function\"==typeof b.content?b.content.call(a[0]):b.content)},c.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(\".arrow\")};var d=a.fn.popover;a.fn.popover=b,a.fn.popover.Constructor=c,a.fn.popover.noConflict=function(){return a.fn.popover=d,this}}(jQuery),+function(a){\"use strict\";function b(c,d){this.$body=a(document.body),this.$scrollElement=a(a(c).is(document.body)?window:c),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||\"\")+\" .nav li > a\",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on(\"scroll.bs.scrollspy\",a.proxy(this.process,this)),this.refresh(),this.process()}function c(c){return this.each(function(){var d=a(this),e=d.data(\"bs.scrollspy\"),f=\"object\"==typeof c&&c;e||d.data(\"bs.scrollspy\",e=new b(this,f)),\"string\"==typeof c&&e[c]()})}b.VERSION=\"3.3.6\",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var b=this,c=\"offset\",d=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),a.isWindow(this.$scrollElement[0])||(c=\"position\",d=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var b=a(this),e=b.data(\"target\")||b.attr(\"href\"),f=/^#./.test(e)&&a(e);return f&&f.length&&f.is(\":visible\")&&[[f[c]().top+d,e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){b.offsets.push(this[0]),b.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.getScrollHeight(),d=this.options.offset+c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(this.scrollHeight!=c&&this.refresh(),b>=d)return g!=(a=f[f.length-1])&&this.activate(a);if(g&&b<e[0])return this.activeTarget=null,this.clear();for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(void 0===e[a+1]||b<e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,this.clear();var c=this.selector+'[data-target=\"'+b+'\"],'+this.selector+'[href=\"'+b+'\"]',d=a(c).parents(\"li\").addClass(\"active\");\nd.parent(\".dropdown-menu\").length&&(d=d.closest(\"li.dropdown\").addClass(\"active\")),d.trigger(\"activate.bs.scrollspy\")},b.prototype.clear=function(){a(this.selector).parentsUntil(this.options.target,\".active\").removeClass(\"active\")};var d=a.fn.scrollspy;a.fn.scrollspy=c,a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=d,this},a(window).on(\"load.bs.scrollspy.data-api\",function(){a('[data-spy=\"scroll\"]').each(function(){var b=a(this);c.call(b,b.data())})})}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.tab\");e||d.data(\"bs.tab\",e=new c(this)),\"string\"==typeof b&&e[b]()})}var c=function(b){this.element=a(b)};c.VERSION=\"3.3.6\",c.TRANSITION_DURATION=150,c.prototype.show=function(){var b=this.element,c=b.closest(\"ul:not(.dropdown-menu)\"),d=b.data(\"target\");if(d||(d=b.attr(\"href\"),d=d&&d.replace(/.*(?=#[^\\s]*$)/,\"\")),!b.parent(\"li\").hasClass(\"active\")){var e=c.find(\".active:last a\"),f=a.Event(\"hide.bs.tab\",{relatedTarget:b[0]}),g=a.Event(\"show.bs.tab\",{relatedTarget:e[0]});if(e.trigger(f),b.trigger(g),!g.isDefaultPrevented()&&!f.isDefaultPrevented()){var h=a(d);this.activate(b.closest(\"li\"),c),this.activate(h,h.parent(),function(){e.trigger({type:\"hidden.bs.tab\",relatedTarget:b[0]}),b.trigger({type:\"shown.bs.tab\",relatedTarget:e[0]})})}}},c.prototype.activate=function(b,d,e){function f(){g.removeClass(\"active\").find(\"> .dropdown-menu > .active\").removeClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!1),b.addClass(\"active\").find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),h?(b[0].offsetWidth,b.addClass(\"in\")):b.removeClass(\"fade\"),b.parent(\".dropdown-menu\").length&&b.closest(\"li.dropdown\").addClass(\"active\").end().find('[data-toggle=\"tab\"]').attr(\"aria-expanded\",!0),e&&e()}var g=d.find(\"> .active\"),h=e&&a.support.transition&&(g.length&&g.hasClass(\"fade\")||!!d.find(\"> .fade\").length);g.length&&h?g.one(\"bsTransitionEnd\",f).emulateTransitionEnd(c.TRANSITION_DURATION):f(),g.removeClass(\"in\")};var d=a.fn.tab;a.fn.tab=b,a.fn.tab.Constructor=c,a.fn.tab.noConflict=function(){return a.fn.tab=d,this};var e=function(c){c.preventDefault(),b.call(a(this),\"show\")};a(document).on(\"click.bs.tab.data-api\",'[data-toggle=\"tab\"]',e).on(\"click.bs.tab.data-api\",'[data-toggle=\"pill\"]',e)}(jQuery),+function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(\"bs.affix\"),f=\"object\"==typeof b&&b;e||d.data(\"bs.affix\",e=new c(this,f)),\"string\"==typeof b&&e[b]()})}var c=function(b,d){this.options=a.extend({},c.DEFAULTS,d),this.$target=a(this.options.target).on(\"scroll.bs.affix.data-api\",a.proxy(this.checkPosition,this)).on(\"click.bs.affix.data-api\",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(b),this.affixed=null,this.unpin=null,this.pinnedOffset=null,this.checkPosition()};c.VERSION=\"3.3.6\",c.RESET=\"affix affix-top affix-bottom\",c.DEFAULTS={offset:0,target:window},c.prototype.getState=function(a,b,c,d){var e=this.$target.scrollTop(),f=this.$element.offset(),g=this.$target.height();if(null!=c&&\"top\"==this.affixed)return c>e?\"top\":!1;if(\"bottom\"==this.affixed)return null!=c?e+this.unpin<=f.top?!1:\"bottom\":a-d>=e+g?!1:\"bottom\";var h=null==this.affixed,i=h?e:f.top,j=h?g:b;return null!=c&&c>=e?\"top\":null!=d&&i+j>=a-d?\"bottom\":!1},c.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(c.RESET).addClass(\"affix\");var a=this.$target.scrollTop(),b=this.$element.offset();return this.pinnedOffset=b.top-a},c.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},c.prototype.checkPosition=function(){if(this.$element.is(\":visible\")){var b=this.$element.height(),d=this.options.offset,e=d.top,f=d.bottom,g=Math.max(a(document).height(),a(document.body).height());\"object\"!=typeof d&&(f=e=d),\"function\"==typeof e&&(e=d.top(this.$element)),\"function\"==typeof f&&(f=d.bottom(this.$element));var h=this.getState(g,b,e,f);if(this.affixed!=h){null!=this.unpin&&this.$element.css(\"top\",\"\");var i=\"affix\"+(h?\"-\"+h:\"\"),j=a.Event(i+\".bs.affix\");if(this.$element.trigger(j),j.isDefaultPrevented())return;this.affixed=h,this.unpin=\"bottom\"==h?this.getPinnedOffset():null,this.$element.removeClass(c.RESET).addClass(i).trigger(i.replace(\"affix\",\"affixed\")+\".bs.affix\")}\"bottom\"==h&&this.$element.offset({top:g-b-f})}};var d=a.fn.affix;a.fn.affix=b,a.fn.affix.Constructor=c,a.fn.affix.noConflict=function(){return a.fn.affix=d,this},a(window).on(\"load\",function(){a('[data-spy=\"affix\"]').each(function(){var c=a(this),d=c.data();d.offset=d.offset||{},null!=d.offsetBottom&&(d.offset.bottom=d.offsetBottom),null!=d.offsetTop&&(d.offset.top=d.offsetTop),b.call(c,d)})})}(jQuery);","Magestore_Webpos/js/bootstrap/npm.js":"// This file is autogenerated via the `commonjs` Grunt task. You can require() this file in a CommonJS environment.\nrequire('../../js/transition.js')\nrequire('../../js/alert.js')\nrequire('../../js/button.js')\nrequire('../../js/carousel.js')\nrequire('../../js/collapse.js')\nrequire('../../js/dropdown.js')\nrequire('../../js/modal.js')\nrequire('../../js/tooltip.js')\nrequire('../../js/popover.js')\nrequire('../../js/scrollspy.js')\nrequire('../../js/tab.js')\nrequire('../../js/affix.js')","Magestore_Webpos/js/model/event-manager.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery'\n    ],\n    function ($) {\n        \"use strict\";\n\n        return {\n            dispatch: function (eventName, data, timeout) {\n                $(\"body\").eventName = '';\n                if (timeout) {\n                    setTimeout(function () {\n                        $(\"body\").trigger(eventName, data);\n                    }, 100);\n                } else $(\"body\").trigger(eventName, data);\n                return true;\n            },\n            observer: function (eventName, function_callback) {\n                $(\"body\").on(eventName, function_callback);\n                return true;\n            }\n        };\n    }\n);","Magestore_Webpos/js/model/webpos.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n        [\n            'jquery',\n            'uiElement',\n            'Magestore_Webpos/js/model/event-manager',\n        ],\n        function ($, Element, eventManager) {\n            \"use strict\";\n\n            return Element.extend({\n                data: {},\n                config: {},\n                setConfig: function (config) {\n                    this.config = config;\n                    var self = this;\n                    this.defineConstants();\n                    this.prepareCurrencyData();\n                    eventManager.dispatch('webpos_innit_config_after', {'webpos': self});\n                },\n                defineConstants: function() {\n                    this.config['general/min_decimal_value'] = 0.00005;\n                },\n                prepareCurrencyData: function () {\n                    var currencies = {};\n                    for (var i in this.config['currencies']) {\n                        var currency = this.config['currencies'][i];\n                        currencies[currency.code] = currency;\n                    }\n                    this.config['currencies'] = currencies;\n                },\n                /**\n                 * Get config data\n                 * \n                 * @param {string} path\n                 */\n                getConfig: function (path) {\n                    if (typeof this.config[path] != 'undefined') {\n                        return this.config[path];\n                    }\n                    for (var i in this.data) {\n                        if (this.data[i]['path'] == path) {\n                            this.config[path] = this.data[i]['value'];\n                            return this.config[path];\n                        }\n                    }\n                    return null;\n                }\n            });\n        }\n);","Magestore_Webpos/js/model/object-manager.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'require',\n        'Magestore_Webpos/js/model/url-builder',\n        'Magestore_Webpos/js/model/checkout/cart/items/item',\n        'Magestore_Webpos/js/model/catalog/product',\n        'Magestore_Webpos/js/model/catalog/product/type/simple',\n        'Magestore_Webpos/js/model/catalog/product/type/configurable',\n        'Magestore_Webpos/js/model/catalog/product/type/bundle',\n        'Magestore_Webpos/js/model/catalog/product/type/grouped',\n        'Magestore_Webpos/js/model/catalog/product/type/downloadable',\n        'Magestore_Webpos/js/model/catalog/category',\n        'Magestore_Webpos/js/model/customer/customer',\n        'Magestore_Webpos/js/model/customer/group',\n        'Magestore_Webpos/js/model/inventory/stock-item',\n        'Magestore_Webpos/js/model/inventory/location',\n        'Magestore_Webpos/js/model/checkout/shipping',\n        'Magestore_Webpos/js/model/checkout/payment',\n        'Magestore_Webpos/js/model/sales/order',\n        'Magestore_Webpos/js/model/directory/country',\n        'Magestore_Webpos/js/model/directory/currency',\n        'Magestore_Webpos/js/model/config/config',\n        'Magestore_Webpos/js/model/config/local-config',\n        'Magestore_Webpos/js/model/checkout/taxrate',\n        'Magestore_Webpos/js/model/checkout/cart/totals',\n        'Magestore_Webpos/js/model/checkout/cart/totals/total',\n        'Magestore_Webpos/js/model/customer/complain',\n        'Magestore_Webpos/js/model/synchronization/synchronization',\n        'Magestore_Webpos/js/model/checkout/taxclass',\n        'Magestore_Webpos/js/model/checkout/cart/customsale',\n        'Magestore_Webpos/js/model/log/action-log',\n        'Magestore_Webpos/js/model/checkout/taxrule',\n        'Magestore_Webpos/js/model/shift/shift',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/checkout/integration/store-credit',\n        'Magestore_Webpos/js/model/checkout/integration/reward-points',\n        'Magestore_Webpos/js/model/checkout/integration/gift-card',\n        'Magestore_Webpos/js/model/checkout/integration/rewardpoints/rate',\n        'Magestore_Webpos/js/model/catalog/product/swatch',\n        'Magestore_Webpos/js/model/checkout/cart/editpopup',\n        'Magestore_Webpos/js/model/checkout/taxcalculator',\n        'Magestore_Webpos/js/model/catalog/product/type/storecredit',\n    ],\n    function (  require,\n                model_urlbuilder,\n                model_cart_item, \n                model_catalog_product,\n                model_catalog_product_type_simple,\n                model_catalog_product_type_configurable,\n                model_catalog_product_type_bundle,\n                model_catalog_product_type_grouped,\n                model_catalog_product_type_downloadable,\n                model_catalog_category,\n                model_customer_customer,\n                model_customer_group,\n                model_inventory_stockitem,\n                model_inventory_location,\n                model_checkout_shipping,\n                model_checkout_payment,\n                model_sales_order,\n                model_directory_country,\n                model_directory_currency,\n                model_config_config,\n                model_config_localconfig,\n                model_checkout_taxrate,\n                model_checkout_cart_totals,\n                model_cart_total,\n                model_customer_complain,\n                model_synchronization_synchronization,\n                model_checkout_taxclass,\n                model_checkout_cart_customsale,\n                model_log_actionlog,\n                model_checkout_taxrule,\n                model_shift_shift,\n                model_abstract,\n                model_checkout_integration_storecredit,\n                model_checkout_integration_rewardpoints,\n                model_checkout_integration_giftcard,\n                model_checkout_integration_rewardpoints_rate,\n                model_catalog_product_swatch,\n                model_checkout_cart_editpopup,\n                model_checkout_taxcalculator,\n                model_catalog_product_type_storecredit\n        ) {\n        \"use strict\";\n\n        return {\n            \n            /**\n             * get object singleton\n             * \n             * @param string modelName\n             * @returns {object}\n             */            \n            get: function(modelName) {\n                var model = this._convertModelPath(modelName);\n                \n                if(!window.webposObjects) {\n                    window.webposObjects = {};\n                } \n                if(!window.webposObjects[model]) {\n                     var modelClass = require('Magestore_Webpos/js/'+modelName);\n                     window.webposObjects[model] = modelClass();\n                }\n\n                return window.webposObjects[model];\n            },\n            \n            /**\n             * create new object\n             * \n             * @param string modelName\n             * @returns {object}\n             */\n            create: function(modelName) {\n                var modelClass = require('Magestore_Webpos/js/'+modelName);\n                return modelClass();\n            },\n            \n            /**\n             * convert model name to key\n             * \n             * @param string modelName\n             * @returns string\n             */\n            _convertModelPath: function(modelName) {\n                for(var i=0; i<5; i++) {\n                    modelName = modelName.replace('/', '_');\n                    modelName = modelName.replace('-', '');\n                }      \n                return modelName;\n            }\n        };\n    }\n);","Magestore_Webpos/js/model/error-processor.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\ndefine(\n    [\n        'mage/url',\n        'Magento_Ui/js/model/messageList'\n    ],\n    function (url, globalMessageList) {\n        'use strict';\n\n        return {\n            process: function (response, messageContainer) {\n                messageContainer = messageContainer || globalMessageList;\n                if (response.status == 401) {\n                    /* unauthorized */\n                    //window.location.replace(url.build('customer/account/login/'));\n                } else {\n                    var error = JSON.parse(response.responseText);\n                    messageContainer.addErrorMessage(error);\n                }\n            }\n        };\n    }\n);\n","Magestore_Webpos/js/model/sync-action-log.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/log/action-log',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/lib/cookie'\n    ],\n    function ($, actionLog, onlineAbstract, eventManager,Cookies) {\n        return {\n            items: [],\n            is_running: false,\n            processActionLog: function () {\n                var self = this;\n                window.setInterval(\n                    function () {\n                        if (!self.is_running && !reloading) {\n                            self.is_running = true;\n                            var actions = actionLog().getCollection().reset().addFieldToFilter('number', '5', 'lt').setOrder('order', 'DESC').load();\n                            actions.done(function (data) {\n                                self.items = data.items;\n                                self.callRestApi();\n                            });\n                        }\n                    },\n                    5000);\n            },\n            callRestApi: function () {\n                var self = this;\n                var item = self.items.pop();\n                if (typeof item == 'undefined' || !item.api_url) {\n                    self.is_running = false;\n                    return self;\n                }\n                var deferred = $.Deferred();\n                if (item.api_url && item.method) {\n                    onlineAbstract().setPush(true).setLog(false).callRestApi(\n                        item.api_url, item.method, item.params, item.payload, deferred, item.callBack\n                    );\n                } else {\n                    deferred.resolve(false);\n                }\n                deferred.done(function (response) {\n                    checkNetWork = true;\n                    /** call function. **/\n                    var changeRequireAction = actionLog().getCollection().reset().addFieldToFilter('require_action_id', item.action_id, 'eq').setOrder('order', 'DESC').load();\n                    changeRequireAction.done(function (dataLog) {\n                        if (dataLog.total_count) {\n                            $.each(dataLog.items, function (index, value) {\n                                value.require_action_id = response[item.key_path];\n                                if (value.requireActionIdPath) {\n                                    if (value.interfaceName) {\n                                        value.payload.interfaceName[value.requireActionIdPath] = response[item.key_path];\n                                    } else {\n                                        value.payload[value.requireActionIdPath] = response[item.key_path];\n                                    }\n                                }\n                                var changeLog = actionLog().setData(value).save();\n                                changeLog.done(function () {\n                                    var deleteLog = actionLog().delete(item.action_id);\n                                    // self.callRestApi();\n                                    self.is_running = false;\n                                    return self;\n                                });\n                            });\n                            /** end function. **/\n                        } else {\n                            var deleteLog = actionLog().delete(item.action_id);\n                            // self.callRestApi();\n                            self.is_running = false;\n                            return self;\n                        }\n                    });\n                });\n                deferred.fail(function (response) {\n                    /** lost internet -> stop proccess **/\n                    if (response.statusText == 'error' && response.status == 0) {\n                        self.is_running = false;\n                        checkNetWork = false;\n                        return self;\n                    }\n                    checkNetWork = true;\n                    var error = {};\n                    if (response.responseText) {\n                        try {\n                            error = JSON.parse(response.responseText);\n                        } catch (err) {\n                            error = response.responseText\n                            console.log(err);\n                        }\n                    }\n                    if (typeof error != 'undefined' && error.message) {\n                        var message = String(error.message).substr(0, 150);\n                    } else {\n                        var message = String(error).substr(0, 150);\n                    }\n                    /** duplicate data -> continue proccess **/\n                    if ((response.status == 500 && error.code == 1)) {\n                        // self.callRestApi();\n                        eventManager.dispatch(item.callBack + '_duplicate', [{'action': item, 'response': response}]);\n                        self.is_running = false;\n                        return self;\n                    }\n                    /** error -> stop proccess **/\n                    //var removeStatusArray = ['400','403','404','405','406','500'];\n                    if (!item.number) {\n                        item.number = 1;\n                    } else {\n                        item.number = 1 + parseInt(item.number);\n                    }\n                    item.error = message;\n                    var actionLogDefered = actionLog().setData(item).save();\n                    if (item.number >= 5) {\n                        actionLogDefered.done(function () {\n                            eventManager.dispatch('reload_action_error', []);\n                            eventManager.dispatch(item.callBack + '_error', [{'action': item, 'response': response}]);\n                        });\n                    }\n                    self.is_running = false;\n                    return self;\n                });\n            }\n        };\n    }\n);\n","Magestore_Webpos/js/model/factory.js":"/* \n * To change this license header, choose License Headers in Project Properties.\n * To change this template file, choose Tools | Templates\n * and open the template in the editor.\n */\n\n\ndefine(\n    [\n    ],\n    function(){\n         \"use strict\";\n        return {\n            getSingleton: function(key, Class){\n                if(!window.webposObjects) {\n                    window.webposObjects = {};\n                } \n                if(!window.webposObjects[key]) {\n                     window.webposObjects[key] = Class();\n                }\n\n                return window.webposObjects[key];                \n            },\n            \n            createObject: function(Class){\n                return Class();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/observer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/observer/inventory/catalog-product-collection-load-after',\n        'Magestore_Webpos/js/observer/inventory/sales-order-cancel-after',\n        'Magestore_Webpos/js/observer/inventory/sales-order-creditmemo-save-after',\n        'Magestore_Webpos/js/observer/synchronization/model-save-after',\n        'Magestore_Webpos/js/observer/synchronization/model-massupdate-after',\n        'Magestore_Webpos/js/observer/checkout/place-order-before',\n        'Magestore_Webpos/js/observer/checkout/place-order-after',\n        'Magestore_Webpos/js/observer/checkout/sync-offline-order-after',\n        'Magestore_Webpos/js/observer/customer/sync-offline-customer-after',\n        'Magestore_Webpos/js/observer/shift/sync-offline-shift-after',\n        'Magestore_Webpos/js/observer/shift/refresh-shift-listing',\n        'Magestore_Webpos/js/observer/shift/after-closed-shift',\n        'Magestore_Webpos/js/observer/catalog/stock-item-save-after',\n        'Magestore_Webpos/js/observer/catalog/stock-item-massupdate-after',\n        'Magestore_Webpos/js/observer/catalog/stock-item-page-massupdate-after',\n        'Magestore_Webpos/js/observer/catalog/stock-item-pull-after',\n        'Magestore_Webpos/js/observer/shift/update-shift-after-create-order',\n        'Magestore_Webpos/js/observer/shift/open-shift-after',\n        'Magestore_Webpos/js/observer/checkout/cart-item-remove-after',\n        'Magestore_Webpos/js/observer/sales/after-take-payment',\n        'Magestore_Webpos/js/observer/customer/customer-pull-duplicate',\n        'Magestore_Webpos/js/observer/shift/update-shift-after-take-payment',\n        'Magestore_Webpos/js/observer/checkout/tax-calculation-finish-pull-after',\n        'Magestore_Webpos/js/observer/catalog/category/load-product-by-category',\n        'Magestore_Webpos/js/observer/integration/rewardpoints/sync-prepare-maps',\n        'Magestore_Webpos/js/observer/integration/storecredit/sync-prepare-maps'\n    ],\n    function ($, \n              catalogProductCollectionLoadAfter,\n              inventorySalesOrderCancelAfter,\n              inventorySalesOrderCreditmemoSaveAfter,\n              modelSaveAfter,\n              modelMassUpdateAfter,\n              placeOrderBefore,\n              placeOrderAfter,\n              syncOrderAfter,\n              customerAfter,\n              syncOfflineShiftAfter,\n              refreshShiftListing,\n              afterClosedShift,\n              catalogStockItemSaveAfter,\n              catalogStockItemMassupdateAfter,\n              catalogStockItemPageMassupdateAfter,\n              catalogStockItemPullAfter,\n              updateShiftAfterCreateOrder,\n              openShiftAfter,\n              cartItemRemoveAfter,\n              orderTakePaymentAfter,\n              customerPullDuplicate,\n              updateShiftAfterTakePayment,\n              finishPullTaxCalculation,\n              loadProductByCategory,\n              rewardpointsSyncPrepareMaps,\n              storecreditSyncPrepareMaps\n    ) {\n        \"use strict\";\n\n        return {\n            processEvent: function() {\n                catalogProductCollectionLoadAfter.execute();\n                inventorySalesOrderCancelAfter.execute();\n                inventorySalesOrderCreditmemoSaveAfter.execute();\n                modelSaveAfter.execute();\n                modelMassUpdateAfter.execute();\n                placeOrderBefore.execute();                   \n                placeOrderAfter.execute();\n                syncOrderAfter.execute();                \n                customerAfter.execute();\n                syncOfflineShiftAfter.execute();\n                refreshShiftListing.execute();\n                afterClosedShift.execute();\n                catalogStockItemSaveAfter.execute();\n                catalogStockItemMassupdateAfter.execute();\n                catalogStockItemPageMassupdateAfter.execute();\n                catalogStockItemPullAfter.execute();\n                updateShiftAfterCreateOrder.execute();\n                openShiftAfter.execute();\n                cartItemRemoveAfter.execute();\n                orderTakePaymentAfter.execute();\n                customerPullDuplicate.execute();\n                updateShiftAfterTakePayment.execute();\n                finishPullTaxCalculation.execute();\n                loadProductByCategory.execute();\n                rewardpointsSyncPrepareMaps.execute();\n                storecreditSyncPrepareMaps.execute();\n            },\n        };\n    }\n);","Magestore_Webpos/js/model/url-builder.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    ['jquery'],\n    function($) {\n        return {\n            method: \"rest\",\n            storeCode: window.webposConfig.storeCode,\n            version: 'V1',\n            serviceUrl: ':method/:storeCode/:version',\n\n            createUrl: function(url, params) {\n                var completeUrl = this.serviceUrl + url;\n                return this.bindParams(completeUrl, params);\n            },\n            bindParams: function(url, params) {\n                params.method = this.method;\n                params.storeCode = this.storeCode;\n                params.version = this.version;\n\n                var urlParts = url.split(\"/\");\n                urlParts = urlParts.filter(Boolean);\n\n                $.each(urlParts, function(key, part) {\n                    part = part.replace(':', '');\n                    if (params[part] != undefined) {\n                        urlParts[key] = params[part];\n                    }\n                });\n                return urlParts.join('/');\n            }\n        };\n    }\n);\n","Magestore_Webpos/js/model/synchronization.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/object-manager',\n        'Magestore_Webpos/js/view/layout',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'mage/translate',\n        'Magestore_Webpos/js/model/synchronization/synchronization-factory',\n        'Magestore_Webpos/js/model/config/config-factory',\n    ],\n    function ($, ko, ObjectManager, ViewManager, eventManager, addNotification, Translate, SynchronizationFactory, ConfigFactory) {\n        \"use strict\";\n        var MODE_INSTALL = 'install';\n        var MODE_UPDATE = 'update';\n        var MODE_FINISH = 'finish';\n        return function (model) {\n            this.label = model.label,\n                this.actionText = ko.observable(''),\n                this.model = ObjectManager.get(model.model),\n                this.id = this.model.sync_id,\n                this.config = ConfigFactory.get(),\n                this.synchronization = SynchronizationFactory.get(),\n                this.mode = '',\n                this.curPage = 1,\n                this.timeAuto = 0,\n                this.updated = 0,\n                this.total = 0,\n                this.interval = '',\n                this.limitPageInstall = model.limitPage;\n            this.pageSize = 200;\n            this.percent = ko.observable(0),\n                this.isVisibility = ko.observable(''),\n                this.running = ko.observable(false),\n                this.finishedUpdate = ko.observable(false),\n                this.updated_date = ko.observable('N/A'),\n                this.next_date = ko.observable('N/A'),\n                this.doneDeferred = '',\n                this.setMode = function (mode) {\n                    this.mode = mode;\n                    return this;\n                },\n                this.initialize = function (endDeferred) {\n                    var self = this;\n                    if (model.pageSize) {\n                        self.pageSize = model.pageSize;\n                    }\n                    self.doneDeferred = endDeferred;\n                    eventManager.observer('synchronization_show_container_after', function () {\n                        self.finishedUpdate(false);\n                    });\n                    if (self.id == 'stock_item') {\n                        eventManager.observer('product_proccess_update', function () {\n                            self.processUpdate($.Deferred());\n                        });\n                    }\n                    if (self.id == 'product') {\n                        eventManager.observer('stock_item_proccess_update', function () {\n                            self.processUpdate($.Deferred());\n                        });\n                    }\n\n                    /** auto update data **/\n                    var idTimeAuto = 'webpos/offline/' + self.id + '_time';\n                    var timeAutoDeferred = self.config.load(idTimeAuto);\n                    timeAutoDeferred.done(function (data) {\n                        if (data.value && parseInt(data.value) > 0) {\n                            self.timeAuto = parseInt(data.value);\n                            self.interval = window.setInterval(self.checkUpdate.bind(self), parseInt(self.timeAuto) * 60000);\n                        }\n                    });\n                },\n\n                this.install = function () {\n                    var self = this;\n                    /** check data and install **/\n                    var id = 'webpos/install/' + self.id;\n                    var deferred = self.synchronization.load(id);\n                    deferred.fail(function (err) {\n                        self.doneDeferred.reject(err);\n                    });\n                    deferred.done(function (data) {\n                        if (!data.value) {\n                            if (!self.running()) {\n                                self.mode = MODE_INSTALL;\n                                self.processUpdate(self.doneDeferred);\n                            }\n                        } else {\n                            self.doneDeferred.resolve(true);\n                        }\n                    });\n                },\n                this.update = function () {\n                    var self = this;\n                    /** check data and update **/\n                    var id = 'webpos/install/' + self.id;\n                    var deferred = self.synchronization.load(id);\n                    deferred.fail(function (err) {\n                        self.doneDeferred.reject(err);\n                    });\n                    deferred.done(function (data) {\n                        if (data.value == MODE_FINISH) {\n                            self.isVisibility('hidden');\n                            self.mode = data.value;\n                            self.doneDeferred.resolve(true);\n                            /** get updated time **/\n                            var id = 'webpos/updated/' + self.id;\n                            var updatedDeferred = self.synchronization.load(id);\n                            updatedDeferred.done(function (updated) {\n                                if (updated.value) {\n                                    self.updated_date(updated.value);\n                                    var now = new Date();\n                                    var updatedTime = new Date(updated.value);\n                                    updatedTime.setDate(updatedTime.getDate() + 1);\n                                    if (updatedTime <= now) {\n                                        self.processUpdate($.Deferred());\n                                    }\n                                }\n                            });\n                        } else if (data.value == MODE_UPDATE) {\n                            self.doneDeferred.resolve(true);\n                            if (!self.running()) {\n                                self.mode = MODE_UPDATE;\n                                var curpageDeferred = self.synchronization.load('webpos/curpage/' + self.id);\n                                curpageDeferred.done(function (data) {\n                                    if (data.value) {\n                                        self.curPage = data.value + 1;\n                                        self.updated = data.value * self.pageSize;\n                                    }\n                                    self.pullData();\n                                });\n                                curpageDeferred.fail(function () {\n                                    self.pullData();\n                                });\n                            }\n                        } else if (!data.value) {\n                            if (!self.running()) {\n                                self.mode = MODE_INSTALL;\n                                self.processUpdate(self.doneDeferred);\n                            }\n                        } else {\n                            self.doneDeferred.resolve(true);\n                        }\n                    });\n                },\n                this.checkUpdate = function () {\n                    var self = this;\n                    if (self.mode == MODE_FINISH) {\n                        var id = 'webpos/next/' + self.id;\n                        var deferred = self.synchronization.load(id);\n                        var time = '';\n                        deferred.done(function (data) {\n                            if (data.value) {\n                                self.next_date(data.value);\n                                time = data.value;\n                            }\n                            var now = new Date();\n                            var next = new Date(time);\n                            if (!time || next <= now) {\n                                self.processUpdate($.Deferred());\n                            }\n                        });\n                    }\n                },\n                this.processUpdate = function (processUpdateDeferred) {\n                    var self = this;\n                    if (!processUpdateDeferred || typeof processUpdateDeferred.resolve != 'function') {\n                        processUpdateDeferred = $.Deferred();\n                        if (self.id == 'product') {\n                            eventManager.dispatch('product_proccess_update', []);\n                        }\n                        if (self.id == 'stock_item') {\n                            eventManager.dispatch('stock_item_proccess_update', []);\n                        }\n                        self.actionText('Updating...');\n                        if (!checkNetWork) {\n                            addNotification(Translate('Cannot connect to your server!'), true, 'danger', 'Error');\n                        }\n                    }\n                    if (self.running() || !checkNetWork) {\n                        processUpdateDeferred.reject({});\n                        return processUpdateDeferred;\n                    }\n                    self.percent(0);\n                    self.isVisibility('');\n                    self.finishedUpdate(false);\n                    self.running(true);\n                    clearInterval(self.interval);\n                    var curpageDeferred = self.synchronization.load('webpos/curpage/' + self.id);\n                    curpageDeferred.done(function (data) {\n                        if (data.value) {\n                            self.curPage = data.value + 1;\n                            self.updated = data.value * self.pageSize;\n                        }\n                        self.pullData(processUpdateDeferred);\n                    });\n                    curpageDeferred.fail(function (err) {\n                        self.pullData(processUpdateDeferred);\n                    });\n                    return processUpdateDeferred;\n                },\n                this.pullData = function (pullDataDeferred) {\n                    var self = this;\n                    if (!pullDataDeferred) {\n                        pullDataDeferred = $.Deferred();\n                    }\n                    if (self.curPage == 1) {\n                        self.updated = 1;\n                        self.total = 100;\n                        self.percent(1);\n                        // self.increasePecent();\n                    }\n                    var pulldeferred = $.Deferred();\n                    /** put filter value to get data from server **/\n                    if (model.filter && (!model.filter.mode || self.mode == model.filter.mode)) {\n                        var id = model.filter.config;\n                        var dateFilter = {\n                            field: '',\n                            value: '',\n                            condition: 'gteq'\n                        };\n                        if (model.filter.is_config) {\n                            var updatedeferred = self.config.load(id);\n                        } else {\n                            var updatedeferred = self.synchronization.load(id);\n                        }\n                        updatedeferred.fail(function (err) {\n                            self.running(false);\n                            self.isVisibility('hidden');\n                            self.doneDeferred.reject(err);\n                            pullDataDeferred.reject(err);\n                        });\n                        updatedeferred.done(function (data) {\n                            if (data.value && model.filter.datetime === true) {\n                                dateFilter.value = self.formatDate(new Date(data.value));\n                            } else if (data.value && data.value > 0) {\n                                var timePeriod = new Date();\n                                timePeriod.setDate(timePeriod.getDate() - parseInt(data.value));\n                                dateFilter.value = timePeriod.toDateString() + ' ' + timePeriod.toLocaleTimeString();\n                                dateFilter.value = self.formatDate(new Date(dateFilter.value));\n                            }\n                            if (model.filter.field) {\n                                dateFilter.field = model.filter.field;\n                            }\n                            if (model.filter.condition) {\n                                dateFilter.condition = model.filter.condition;\n                            }\n                            self.model.pullData(pulldeferred, self.pageSize, self.curPage, dateFilter);\n                        });\n                    } else {\n                        self.model.pullData(pulldeferred, self.pageSize, self.curPage);\n                    }\n                    pulldeferred.done(function (data) {\n                        self.total = data.total;\n                        checkNetWork = true;\n                        self.updated = self.updated + data.updated;\n                        if (self.id == 'product' && self.mode == MODE_UPDATE && ViewManager.getSingleton('view/catalog/product-list').syncPercent() != 100) {\n                            ViewManager.getSingleton('view/catalog/product-list').setSyncPercent(parseInt(self.updated * 100 / self.total));\n                        }\n                        self.increasePecent();\n                        /** finish when:\n                         * There is no item to update\n                         * Update full item\n                         * install with limit page\n                         * **/\n                        if (self.total <= 0 || parseInt(self.updated * 100 / self.total) >= 100) {\n                            self.mode = MODE_FINISH;\n                            self.synchronization.setData({\n                                id: 'webpos/curpage/' + self.id,\n                                value: 0\n                            }).save();\n                            if (self.total > 0) {\n                                eventManager.dispatch(self.id + '_finish_pull_after', []);\n                            }\n                            self.finishPullData(pullDataDeferred);\n                        } else if ((self.mode == MODE_INSTALL && self.limitPageInstall && self.limitPageInstall <= self.curPage)) {\n                            self.mode = MODE_UPDATE;\n                            self.synchronization.setData({\n                                id: 'webpos/curpage/' + self.id,\n                                value: self.curPage\n                            }).save();\n                            eventManager.observer('finish_install', function () {\n                                if (self.mode == MODE_UPDATE) {\n                                    self.curPage = self.limitPageInstall + 1;\n                                    self.updated = self.limitPageInstall * self.pageSize;\n                                    self.pullData(pullDataDeferred);\n                                }\n                            });\n                            self.finishPullData(pullDataDeferred);\n                        } else {\n                            self.synchronization.setData({\n                                id: 'webpos/curpage/' + self.id,\n                                value: self.curPage\n                            }).save();\n                            self.curPage = self.curPage + 1;\n                            self.pullData(pullDataDeferred);\n                        }\n                    });\n                    pulldeferred.fail(function (err) {\n                        self.running(false);\n                        self.isVisibility('hidden');\n                        if (err.statusText == 'error' && err.status == 0) {\n                            checkNetWork = false;\n                        }\n                        self.doneDeferred.reject(err);\n                    });\n                    return pullDataDeferred;\n                },\n                this.finishPullData = function (finishPullDataDeferred) {\n                    var self = this;\n                    if (!finishPullDataDeferred) {\n                        finishPullDataDeferred = $.Deferred();\n                    }\n                    /** save current mode **/\n                    var modedeferred = self.synchronization.setData({\n                        id: 'webpos/install/' + self.id,\n                        value: self.mode\n                    }).save();\n\n                    /** save updated time **/\n                    modedeferred.fail(function (err) {\n                        self.doneDeferred.resolve(err);\n                    });\n                    modedeferred.done(function (data) {\n                        /** set update time **/\n                        var now = new Date();\n                        var nowdeferred = self.synchronization.setData({\n                            id: 'webpos/updated/' + self.id,\n                            value: now.toDateString() + ' ' + now.toLocaleTimeString()\n                        }).save(nowdeferred);\n                        nowdeferred.done(function (data) {\n                            if (data.value) {\n                                self.updated_date(data.value);\n                            }\n                            if (self.doneDeferred && typeof self.doneDeferred.resolve == 'function') {\n                                self.doneDeferred.resolve(true);\n                            }\n                            if (self.timeAuto && self.mode == MODE_FINISH) {\n                                var next = now;\n                                next.setMinutes(next.getMinutes() + parseInt(self.timeAuto));\n                                /** set next update time **/\n                                var nextdeferred = self.synchronization.setData({\n                                    id: 'webpos/next/' + self.id,\n                                    value: next.toDateString() + ' ' + next.toLocaleTimeString()\n                                }).save(nextdeferred);\n                                nextdeferred.done(function (data) {\n                                    if (data.value) {\n                                        self.next_date(data.value);\n                                        self.interval = window.setInterval(self.checkUpdate.bind(self), parseInt(self.timeAuto) * 60000);\n                                    }\n                                });\n                            }\n                            finishPullDataDeferred.resolve(true);\n                        });\n                    });\n                    return finishPullDataDeferred;\n                },\n                this.clearData = function (clearDataDeferred) {\n                    var self = this;\n                    if (!clearDataDeferred || typeof clearDataDeferred.resolve != 'function') {\n                        clearDataDeferred = $.Deferred();\n                        if (self.id == 'product') {\n                            eventManager.dispatch('product_proccess_update', []);\n                        }\n                        if (self.id == 'stock_item') {\n                            eventManager.dispatch('stock_item_proccess_update', []);\n                        }\n                        if (!checkNetWork) {\n                            addNotification(Translate('Cannot connect to your server!'), true, 'danger', 'Error');\n                        }\n                    }\n                    if (self.running() || !checkNetWork) {\n                        clearDataDeferred.reject({});\n                        return clearDataDeferred;\n                    }\n                    self.actionText('Reloading...');\n                    var deferred = self.model.clear();\n                    deferred.done(function () {\n                        var id = 'webpos/install/' + self.id;\n                        var cleardeferred = self.synchronization.delete(id);\n                        cleardeferred.done(function (data) {\n                            self.mode = MODE_UPDATE,\n                                self.curPage = 1;\n                            self.updated = 0;\n                            self.total = 0;\n                            self.percent(0);\n                            var deleteDeferred = self.synchronization.delete('webpos/curpage/' + self.id);\n                            deleteDeferred.always(function () {\n                                self.processUpdate(clearDataDeferred);\n                            });\n                        });\n                    });\n                    return clearDataDeferred;\n                },\n                this.formatDate = function (dateTime) {\n                    var self = this;\n                    return dateTime.getUTCFullYear() + \"-\" + self.twoDigits(1 + dateTime.getUTCMonth()) + \"-\" + self.twoDigits(dateTime.getUTCDate()) + \" \" + self.twoDigits(dateTime.getUTCHours()) + \":\" + self.twoDigits(dateTime.getUTCMinutes()) + \":\" + self.twoDigits(dateTime.getUTCSeconds());\n                },\n                this.twoDigits = function (n) {\n                    return n > 9 ? \"\" + n : \"0\" + n;\n                },\n                this.increasePecent = function () {\n                    var self = this;\n                    var from = parseInt(self.percent());\n                    var to = 0;\n                    if (self.total) {\n                        to = parseInt(self.updated * 100 / self.total);\n                    } else {\n                        to = 100;\n                    }\n                    if (to) {\n                        var increase = window.setInterval(\n                            function () {\n                                if ((from + 5) < to && from < 100) {\n                                    from = from + 5;\n                                    self.percent(from);\n                                } else {\n                                    if (to < 100) {\n                                        self.percent(to);\n                                    } else {\n                                        self.percent(100);\n                                    }\n                                    clearInterval(increase);\n                                }\n                                if (self.percent() >= 100) {\n                                    self.finishedUpdate(true);\n                                    self.synchronization.setData({\n                                        id: 'webpos/curpage/' + self.id,\n                                        value: 0\n                                    }).save();\n                                    setTimeout(function () {\n                                        self.isVisibility('hidden');\n                                        self.curPage = 1;\n                                        self.running(false);\n                                    }, 5000);\n                                }\n                            },\n                            100\n                        );\n                    }\n                }\n        }\n    }\n);","Magestore_Webpos/js/model/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiElement',\n        'Magestore_Webpos/js/model/collection/abstract',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function ($, ko, Element, resourceCollection, eventmanager) {\n        \"use strict\";\n\n        return Element.extend({\n            /* Declare mode*/\n            mode: \"offline\",\n            log: true,\n            push: false,\n            event_prefix: \"\",\n            sync_id:'',\n            removeFuncBeforeMassUpdate: false,\n            /* Declare data*/\n            data: '',\n            /* Get current mode*/\n            getMode: function() {\n                return this.mode;\n            },\n            /* Set mode for model*/\n            setMode: function (mode) {\n                this.mode = mode;\n                return this;\n            },\n            setPush: function (mode) {\n                this.push = mode;\n                return this;\n            },\n            setLog: function (mode) {\n                this.log = mode;\n                return this;\n            },\n            /* Set resource*/\n            setResource : function(onlineResource, offlineResource){\n                this.onlineResource = onlineResource;\n                this.offlineResource = offlineResource;\n                return this;\n            },\n            /* Get current resource*/\n            getResource : function () {\n                if (this.getMode() == 'offline') {\n                    return this.offlineResource;\n                } else {\n                    try {\n                        this.onlineResource.setPush(this.push).setLog(this.log);\n                    }catch(err) {\n                    }\n                    return this.onlineResource;\n                }\n            },\n            /* Get resource online*/\n            getResourceOnline : function(){\n                try {\n                    this.onlineResource.setPush(this.push).setLog(this.log);\n                }catch(err) {\n                }\n                return this.onlineResource;\n            },\n            /* Get resource offline*/\n            getResourceOffline : function(){\n                return this.offlineResource;\n            },\n            /* Set resource collection*/\n            setResourceCollection : function(resourceCollection){\n                this.resourceCollection = resourceCollection;\n                return this;\n            },\n            /* Get resource collection*/\n            getResourceCollection : function(){\n                return this.resourceCollection;\n            },\n            /* Get collection*/\n            getCollection : function () {\n                return this.resourceCollection.setMode(this.getMode()).setModel(this);\n            },\n            /* Get event prefix */\n            getEventPrefix: function() {\n                return this.event_prefix;\n            },\n            /* Load model by id*/\n            load : function(id, deferred){\n                if(!deferred)\n                    deferred = $.Deferred();  \n\n                this.getResource().load(id, deferred);\n                return deferred;\n            },\n            /* Save model by id*/\n            save : function (deferred) {\n                var self = this;\n                if(!deferred)\n                    deferred = $.Deferred();\n                self._saveBefore();\n                self.getResource().save(self, deferred);\n                /* after saved */\n                deferred.always(function (response) {\n                    self._saveAfter(response);\n                });\n                return deferred;\n            },\n            update : function (deferred) {\n                var self = this;\n                if(!deferred)\n                    deferred = $.Deferred();\n                self._saveBefore();\n                self.getResource().update(self, deferred);\n                /* after saved */\n                deferred.always(function (response) {\n                    self._saveAfter(response);\n                });\n                return deferred;\n            },\n            _saveBefore: function(){\n                var eventData = {'model' : this};\n                eventmanager.dispatch('model_save_before', eventData);\n                if(this.event_prefix){\n                    eventmanager.dispatch(this.event_prefix + '_save_before', eventData);\n                }\n            },            \n            _saveAfter: function(response){\n                var eventData = {'model' : this, 'response': response};\n                eventmanager.dispatch('model_save_after', eventData);\n                if(this.event_prefix){\n                    eventmanager.dispatch(this.event_prefix + '_save_after', eventData);\n                }\n            },\n            /*\n             * Mass update stock items\n             */\n            massUpdate: function(items, deferred) {\n                if(!deferred)\n                    deferred = $.Deferred();  \n                var self = this;\n                self._massUpdateBefore(items);\n                this.getResource().massUpdate(items, deferred, this.removeFuncBeforeMassUpdate);\n                /* after updated */\n                deferred.always(function (response) {\n                    self._massUpdateAfter(items, response);\n                });             \n                return deferred;\n            },   \n            _massUpdateBefore: function(items) {\n                var eventData = {'model' : this, 'items': items};\n                eventmanager.dispatch('model_massupdate_before', eventData);\n                if(this.event_prefix){\n                    eventmanager.dispatch(this.event_prefix + '_massupdate_before', eventData);\n                }                \n            },\n            _massUpdateAfter: function(items, response) {\n                var eventData = {'model' : this, 'items': items, 'response': response};\n                eventmanager.dispatch('model_massupdate_after', eventData);\n                if(this.event_prefix){\n                    eventmanager.dispatch(this.event_prefix + '_massupdate_after', eventData);\n                }                    \n            },            \n            /* Get data*/\n            getData: function () {\n                return this.data;\n            },\n            /* Set data*/\n            setData: function (data) {\n                this.data = data;\n                return this;\n            },\n            /* Delete by id*/\n            delete: function (id, deferred) {\n                if(!deferred)\n                    deferred = $.Deferred();\n                var self = this;\n                self._deleteBefore(id);\n                this.getResource().delete(id, deferred);\n                /* after deleted */\n                deferred.always(function (response) {\n                    self._deleteAfter(id, response);\n                    self.cleanData();\n                    self.destroy();\n                });\n                return deferred;\n            },\n            _deleteBefore: function(id) {\n                var eventData = {'model' : this, 'id': id};\n                eventmanager.dispatch('model_delete_before', eventData);\n                if(this.event_prefix){\n                    eventmanager.dispatch(this.event_prefix + '_delete_before', eventData);\n                }                \n            },\n            _deleteAfter: function(id, response) {\n                var eventData = {'model' : this, 'id': id, 'response': response};\n                eventmanager.dispatch('model_delete_after', eventData);\n                if(this.event_prefix){\n                    eventmanager.dispatch(this.event_prefix + '_delete_after', eventData);\n                }                    \n            },             \n            /* Clear*/\n            clear: function () {\n                var self = this;\n                var deferred = self.getResourceOffline().clear(deferred);\n                return deferred;\n            },\n            /* Update data*/\n            pullData: function (deferredParent,pageSize,curPage,Filter) {\n                var deferred = $.Deferred();\n                var self = this;\n                var dataCollection = this.resourceCollection.reset().setMode('online').setPageSize(pageSize).setCurPage(curPage);\n                if(typeof Filter != 'undefined' && Filter.field && Filter.value && Filter.condition ){\n                    dataCollection.addFieldToFilter(Filter.field,Filter.value,Filter.condition);\n                }\n                dataCollection.load(deferred);\n                deferred.fail(function (error) {\n                    deferredParent.reject(error);\n                });\n                deferred.done(function(data) {\n                    if(data.items && data.items.length) {\n                        self.getResourceOffline().massUpdate(data, deferredParent);\n                        deferredParent.done(function(){\n                            if(self.sync_id) {\n                                eventmanager.dispatch(self.sync_id + '_pull_after', {'items': data.items});\n                            }\n                        });\n                    }else {\n                        deferredParent.resolve({\n                            updated:0,\n                            total:0\n                        });\n                    }\n                    self.resourceCollection.setMode('offline');\n                });\n            },\n            /* Push data*/\n            pushData: function (deferredParent) {\n                var deferred = $.Deferred();\n                var self = this;\n                var dataCollection = this.resourceCollection.setMode('offline').addFieldToFilter('need_push','1','eq');\n                dataCollection.load(deferred);\n                deferred.done(function(data) {\n                    if(data.total_count) {\n                        self.getResourceOnline().pushData(data, deferredParent);\n                    }else {\n                        deferredParent.resolve(true);\n                    }\n                });\n            },\n\n            prepareBeforeSave: function () {\n                return this;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/online-abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/abstract'\n    ],\n    function ($, resourceAbstract) {\n        \"use strict\";\n\n        return resourceAbstract.extend({\n\n\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/offline-abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/abstract'\n    ],\n    function ($, resourceAbstract) {\n        \"use strict\";\n\n        return resourceAbstract.extend({\n\n\n        });\n    }\n);\n","Magestore_Webpos/js/model/resource-model/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'uiElement'\n    ],\n    function ($, Element) {\n        \"use strict\";\n\n        return Element.extend({\n            off_id_auto:'off_id_auto_',\n            prepareSaveData: function(data) {\n                var self = this;\n                var saveData = {};\n                for(var i in data) {\n                    if(typeof data[i] !== 'function') {\n                        saveData[i] = this._prepareChildData(data[i]);\n                    }\n                    if(typeof data[i] == 'string' && data[i].indexOf(self.off_id_auto) >= 0) {\n                        saveData['indexeddb_id'] = data[i];\n                    }\n                }\n                return saveData;            \n            },\n            _prepareChildData: function(data) {\n                if(data === null) {\n                    return data;\n                }\n                if(typeof data === 'undefined') {\n                    return data;\n                }\n                var saveData = data;\n                if(data.constructor.toString().indexOf(\"Array\") > -1) {\n                    saveData = [];\n                    for(var i in data) {\n                        if(typeof data[i] !== 'function') {\n                            saveData.push(this._prepareChildData(data[i]));\n                        }                   \n                    }                  \n                } else if(data.constructor.toString().indexOf(\"Object\") > -1) {\n                    saveData = {};\n                    for(var i in data) {\n                        if(typeof data[i] !== 'function') {\n                            saveData[i] = this._prepareChildData(data[i]);\n                        }                   \n                    }\n                }\n\n                return saveData;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/indexer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/offline-abstract'\n    ],\n    function ($, Element) {\n        \"use strict\";\n        return Element.extend({\n            mainTable: '',\n            dataTable: '',\n            keyPath: 'id',\n            indexes: [],\n            orderBy: false,\n            paging: 90000,\n            initialize: function () {\n                this._super();\n            },\n            search: function(filter, pageSize, currentPage, cacheKey) {\n                var self = this,\n                    result = [],\n                    total = 0,\n                    deferred = $.Deferred();\n                currentPage = currentPage ? currentPage : 1;\n                var resolveResult = function() {\n                    result.cacheKey = cacheKey;\n                    $[self.mainTable] = result;\n                    // Resolve Result\n                    if (pageSize) {\n                        var from = (currentPage - 1) * pageSize,\n                            to = currentPage * pageSize - 1;\n                        if (result.length - 1 < to) {\n                            to = result.length - 1;\n                        }\n                        if (from == to) {\n                            result = result.slice(from);\n                        } else {\n                            result = result.slice(from, to + 1);\n                        }\n                    }\n                    deferred.resolve({\n                        result: result,\n                        total: total,\n                    });\n                };\n                if ((self.mainTable in $) && (cacheKey === $[self.mainTable].cacheKey)) {\n                    result = $[self.mainTable];\n                    total = result.length;\n                    resolveResult();\n                    return deferred;\n                }\n                self.indexData().always(function() {\n                    // Start search\n                    server[self.mainTable].query().all()\n                        .success(function(cursor) {\n                            if (!cursor) {\n                                return;\n                            }\n                            // Process search\n                            var res = cursor.value.value;\n                            for (var i = 0, n = res.length; i < n; i++) {\n                                var item = res[i];\n                                if (filter(item)) {\n                                    total++;\n                                    result.push(item.id);\n                                }\n                            }\n                            // Next item\n                            cursor['continue']();\n                        }).execute()\n                        .catch(function(err) {\n                            deferred.reject(err);\n                        }).then(resolveResult);\n                });\n                return deferred;\n            },\n            reindex: function() {\n                var self = this,\n                    deferred = $.Deferred();\n                // Clear Index Data\n                server[self.mainTable].clear()\n                    .catch(function(err) {\n                        deferred.reject(err);\n                    }).then(function() {\n                        if (self.mainTable in $) {\n                             $[self.mainTable] = [];\n                        }\n                        self.indexData().always(function() {\n                            deferred.resolve();\n                        });\n                    });\n                return deferred;\n            },\n            /**\n             * -------------------\n             * Private Methods\n             */\n            indexData: function() {\n                var self = this,\n                    deferred = $.Deferred();\n                // Check data is indexed\n                server[self.mainTable].query().all()\n                    .count()\n                    .execute()\n                    .catch(function(err) {\n                        deferred.reject(err);\n                    }).then(function(count) {\n                        if (count > 0) {\n                            // Indexed\n                            deferred.resolve(count);\n                        } else {\n                            // Start indexing\n                            self.indexingData().always(function(res) {\n                                deferred.resolve(res);\n                            });\n                        }\n                    });\n                return deferred;\n            },\n            indexingData: function() {\n                var self = this,\n                    id = 1,\n                    data = [],\n                    deferred = $.Deferred();\n                // Read original data\n                server[self.dataTable].query(self.orderBy).all()\n                    .success(function(cursor) {\n                        if (!cursor) {\n                            return;\n                        }\n                        // Process index\n                        var item = {},\n                            i, field, n = self.indexes.length,\n                            result = 'value' in cursor ? cursor.value : cursor.key;\n                        item.id = result[self.keyPath];\n                        for (i = 0; i < n; i++) {\n                            field = self.indexes[i];\n                            item[field] = result[field];\n                        }\n                        data.push(item);\n                        if (data.length >= self.paging) {\n                            self.importDataIndex(id++, data);\n                            data = [];\n                        }\n                        // Next item\n                        cursor['continue']();\n                    }).execute()\n                    .catch(function(err) {\n                        deferred.reject(err);\n                    }).then(function() {\n                        if (data.length) {\n                            // Import last\n                            self.importDataIndex(id, data).then(function() {\n                                deferred.resolve();\n                            });\n                        } else {\n                            // All done\n                            deferred.resolve();\n                        }\n                    });\n                return deferred;\n            },\n            importDataIndex: function(id, data) {\n                return server[this.mainTable].update({\n                    id: id,\n                    value: data,\n                });\n            },\n        });\n    }\n);\n","Magestore_Webpos/js/model/resource-model/indexed-db/db.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n(function ( window , undefined ) {\n    'use strict';\n\n    var indexedDB,\n        IDBKeyRange = window.IDBKeyRange || window.webkitIDBKeyRange,\n        transactionModes = {\n            readonly: 'readonly',\n            readwrite: 'readwrite'\n        };\n\n    var hasOwn = Object.prototype.hasOwnProperty;\n\n    var getIndexedDB = function() {\n      if ( !indexedDB ) {\n        indexedDB = window.indexedDB || window.webkitIndexedDB || window.mozIndexedDB || window.oIndexedDB || window.msIndexedDB || ((window.indexedDB === null && window.shimIndexedDB) ? window.shimIndexedDB : undefined);\n\n        if ( !indexedDB ) {\n          throw 'IndexedDB required';\n        }\n      }\n      return indexedDB;\n    };\n\n    var defaultMapper = function (value) {\n        return value;\n    };\n\n    var CallbackList = function () {\n        var state,\n            list = [];\n\n        var exec = function ( context , args ) {\n            if ( list ) {\n                args = args || [];\n                state = state || [ context , args ];\n\n                for ( var i = 0 , il = list.length ; i < il ; i++ ) {\n                    list[ i ].apply( state[ 0 ] , state[ 1 ] );\n                }\n\n                list = [];\n            }\n        };\n\n        this.add = function () {\n            for ( var i = 0 , il = arguments.length ; i < il ; i ++ ) {\n                list.push( arguments[ i ] );\n            }\n\n            if ( state ) {\n                exec();\n            }\n\n            return this;\n        };\n\n        this.execute = function () {\n            exec( this , arguments );\n            return this;\n        };\n    };\n\n    var Server = function ( db , name ) {\n        var that = this,\n            closed = false;\n\n\t\tthis.getIndexedDB = function () {\n\t\t\treturn db;\n\t\t};\n\n        this.add = function( table ) {\n            if ( closed ) {\n                throw 'Database has been closed';\n            }\n\n            var records = [];\n            var counter = 0;\n\n            for (var i = 0; i < arguments.length - 1; i++) {\n                if (Array.isArray(arguments[i + 1])) {\n                    for (var j = 0; j < (arguments[i + 1]).length; j++) {\n                        records[counter] = (arguments[i + 1])[j];\n                        counter++;\n                    }\n                } else {\n                    records[counter] = arguments[i + 1];\n                    counter++;\n                }\n            }\n\n            var transaction = db.transaction( table , transactionModes.readwrite ),\n                store = transaction.objectStore( table );\n\n            return new Promise(function(resolve, reject){\n              records.forEach( function ( record ) {\n                  var req;\n                  if ( record.item && record.key ) {\n                      var key = record.key;\n                      record = record.item;\n                      req = store.add( record , key );\n                  } else {\n                      req = store.add( record );\n                  }\n\n                  req.onsuccess = function ( e ) {\n                      var target = e.target;\n                      var keyPath = target.source.keyPath;\n                      if ( keyPath === null ) {\n                          keyPath = '__id__';\n                      }\n                      Object.defineProperty( record , keyPath , {\n                          value: target.result,\n                          enumerable: true\n                      });\n                  };\n              } );\n\n              transaction.oncomplete = function () {\n                  resolve( records , that );\n              };\n              transaction.onerror = function ( e ) {\n                  // prevent Firefox from throwing a ConstraintError and aborting (hard)\n                  // https://bugzilla.mozilla.org/show_bug.cgi?id=872873\n                  e.preventDefault();\n                  reject( e );\n              };\n              transaction.onabort = function ( e ) {\n                  reject( e );\n              };\n\n            });\n        };\n\n        this.update = function( table ) {\n            if ( closed ) {\n                throw 'Database has been closed';\n            }\n\n            var records = [];\n            for ( var i = 0 ; i < arguments.length - 1 ; i++ ) {\n                records[ i ] = arguments[ i + 1 ];\n            }\n\n            var transaction = db.transaction( table , transactionModes.readwrite ),\n                store = transaction.objectStore( table ),\n                keyPath = store.keyPath;\n\n            return new Promise(function(resolve, reject){\n              records.forEach( function ( record ) {\n                  var req;\n                  var count;\n                  if ( record.item && record.key ) {\n                      var key = record.key;\n                      record = record.item;\n                      req = store.put( record , key );\n                  } else {\n                      req = store.put( record );\n                  }\n\n                  req.onsuccess = function ( e ) {\n                      // deferred.notify(); es6 promise can't notify\n                  };\n              } );\n\n              transaction.oncomplete = function () {\n                  resolve( records , that );\n              };\n              transaction.onerror = function ( e ) {\n                  reject( e );\n              };\n              transaction.onabort = function ( e ) {\n                  reject( e );\n              };\n            });\n\n        };\n\n        this.remove = function ( table , key ) {\n            if ( closed ) {\n                throw 'Database has been closed';\n            }\n            var transaction = db.transaction( table , transactionModes.readwrite ),\n                store = transaction.objectStore( table );\n\n            return new Promise(function(resolve, reject){\n              var req = store['delete']( key );\n              transaction.oncomplete = function ( ) {\n                  resolve( key );\n              };\n              transaction.onerror = function ( e ) {\n                  reject( e );\n              };\n            });\n        };\n\n        this.clear = function ( table ) {\n            if ( closed ) {\n                throw 'Database has been closed';\n            }\n            var transaction = db.transaction( table , transactionModes.readwrite ),\n                store = transaction.objectStore( table );\n\n            var req = store.clear();\n            return new Promise(function(resolve, reject){\n              transaction.oncomplete = function ( ) {\n                  resolve( );\n              };\n              transaction.onerror = function ( e ) {\n                  reject( e );\n              };\n            });\n        };\n\n        this.close = function ( ) {\n            if ( closed ) {\n                throw 'Database has been closed';\n            }\n            db.close();\n            closed = true;\n            delete dbCache[ name ];\n        };\n\n        this.get = function ( table , id ) {\n            if ( closed ) {\n                throw 'Database has been closed';\n            }\n            var transaction = db.transaction( table ),\n                store = transaction.objectStore( table );\n\n            var req = store.get( id );\n            return new Promise(function(resolve, reject){\n              req.onsuccess = function ( e ) {\n                  resolve( e.target.result );\n              };\n              transaction.onerror = function ( e ) {\n                  reject( e );\n              };\n            });\n        };\n\n        this.query = function ( table , index ) {\n            if ( closed ) {\n                throw 'Database has been closed';\n            }\n            return new IndexQuery( table , db , index );\n        };\n\n        this.count = function (table , key) {\n            if ( closed ) {\n                throw 'Database has been closed';\n            }\n            var transaction = db.transaction( table ),\n                store = transaction.objectStore( table );\n        }\n\n        for ( var i = 0 , il = db.objectStoreNames.length ; i < il ; i++ ) {\n            (function ( storeName ) {\n                that[ storeName ] = { };\n                for ( var i in that ) {\n                    if ( !hasOwn.call( that , i ) || i === 'close' ) {\n                        continue;\n                    }\n                    that[ storeName ][ i ] = (function ( i ) {\n                        return function () {\n                            var args = [ storeName ].concat( [].slice.call( arguments , 0 ) );\n                            return that[ i ].apply( that , args );\n                        };\n                    })( i );\n                }\n            })( db.objectStoreNames[ i ] );\n        }\n    };\n\n    var IndexQuery = function ( table , db , indexName ) {\n        var that = this;\n        var modifyObj = false;\n\n        var runQuery = function ( type, args , cursorType , direction, limitRange, filters , mapper , successor ) {\n            var transaction = db.transaction( table, modifyObj ? transactionModes.readwrite : transactionModes.readonly ),\n                store = transaction.objectStore( table ),\n                index = indexName ? store.index( indexName ) : store,\n                keyRange = type ? IDBKeyRange[ type ].apply( null, args ) : null,\n                results = [],\n                indexArgs = [ keyRange ],\n                limitRange = limitRange ? limitRange : null,\n                filters = filters ? filters : [],\n                counter = 0;\n\n            if ( cursorType !== 'count' ) {\n                indexArgs.push( direction || 'next' );\n            };\n\n            // create a function that will set in the modifyObj properties into\n            // the passed record.\n            var modifyKeys = modifyObj ? Object.keys(modifyObj) : false;\n            var modifyRecord = function(record) {\n                for(var i = 0; i < modifyKeys.length; i++) {\n                    var key = modifyKeys[i];\n                    var val = modifyObj[key];\n                    if(val instanceof Function) val = val(record);\n                    record[key] = val;\n                }\n                return record;\n            };\n\n            index[cursorType].apply( index , indexArgs ).onsuccess = function ( e ) {\n                var cursor = e.target.result;\n                if (successor) {\n                    return successor(cursor, results);\n                }\n                if ( typeof cursor === typeof 0 ) {\n                    results = cursor;\n                } else if ( cursor ) {\n                \tif ( limitRange !== null && limitRange[0] > counter) {\n                    \tcounter = limitRange[0];\n                    \tcursor.advance(limitRange[0]);\n                    } else if ( limitRange !== null && counter >= (limitRange[0] + limitRange[1]) ) {\n                        //out of limit range... skip\n                    } else {\n                        var matchFilter = true;\n                        var result = 'value' in cursor ? cursor.value : cursor.key;\n\n                        filters.forEach( function ( filter ) {\n                            if ( !filter || !filter.length ) {\n                                //Invalid filter do nothing\n                            } else if ( filter.length === 2 ) {\n                                matchFilter = matchFilter && (result[filter[0]] === filter[1])\n                            } else {\n                                matchFilter = matchFilter && filter[0].apply(undefined,[result]);\n                            }\n                        });\n\n                        if (matchFilter) {\n                            counter++;\n                            results.push( mapper(result) );\n                            // if we're doing a modify, run it now\n                            if(modifyObj) {\n                                result = modifyRecord(result);\n                                try {\n                                    cursor.update(result);\n                                }catch(err) {\n                                }\n                            }\n                        }\n                        cursor['continue']();\n                    }\n                }\n            };\n\n            return new Promise(function(resolve, reject){\n              transaction.oncomplete = function () {\n                  resolve( results );\n              };\n              transaction.onerror = function ( e ) {\n                  reject( e );\n              };\n              transaction.onabort = function ( e ) {\n                  reject( e );\n              };\n            });\n        };\n\n        var Query = function ( type , args ) {\n            var direction = 'next',\n                cursorType = 'openCursor',\n                filters = [],\n                successor = false,\n                limitRange = null,\n                mapper = defaultMapper,\n                unique = false;\n\n            var execute = function () {\n                return runQuery( type , args , cursorType , unique ? direction + 'unique' : direction, limitRange, filters , mapper , successor );\n            };\n\n            var success = function(fn) {\n                successor = fn;\n                return {\n                    execute: execute,\n                    count: count,\n                    keys: keys,\n                    filter: filter,\n                    desc: desc,\n                    distinct: distinct,\n                    modify: modify,\n                    limit: limit,\n                    map: map\n                };\n            };\n\n            var limit = function () {\n                limitRange = Array.prototype.slice.call( arguments , 0 , 2 )\n                if (limitRange.length == 1) {\n                    limitRange.unshift(0)\n                }\n\n                return {\n                    execute: execute\n                };\n            };\n            var count = function () {\n                direction = null;\n                cursorType = 'count';\n\n                return {\n                    execute: execute\n                };\n            };\n            var keys = function () {\n                cursorType = 'openKeyCursor';\n\n                return {\n                    desc: desc,\n                    execute: execute,\n                    filter: filter,\n                    distinct: distinct,\n                    map: map\n                };\n            };\n            var filter = function ( ) {\n                filters.push( Array.prototype.slice.call( arguments , 0 , 2 ) );\n\n                return {\n                    keys: keys,\n                    count: count,\n                    success: success,\n                    execute: execute,\n                    filter: filter,\n                    desc: desc,\n                    distinct: distinct,\n                    modify: modify,\n                    limit: limit,\n                    map: map\n                };\n            };\n            var desc = function () {\n                direction = 'prev';\n\n                return {\n                    keys: keys,\n                    execute: execute,\n                    filter: filter,\n                    distinct: distinct,\n                    modify: modify,\n                    map: map\n                };\n            };\n            var distinct = function () {\n                unique = true;\n                return {\n                    keys: keys,\n                    count: count,\n                    execute: execute,\n                    filter: filter,\n                    desc: desc,\n                    modify: modify,\n                    map: map\n                };\n            };\n            var modify = function(update) {\n                modifyObj = update;\n                return {\n                    execute: execute\n                };\n            };\n            var map = function (fn) {\n                mapper = fn;\n\n                return {\n                    execute: execute,\n                    count: count,\n                    keys: keys,\n                    filter: filter,\n                    desc: desc,\n                    distinct: distinct,\n                    modify: modify,\n                    limit: limit,\n                    map: map\n                };\n            };\n\n            return {\n                success: success,\n                execute: execute,\n                count: count,\n                keys: keys,\n                filter: filter,\n                desc: desc,\n                distinct: distinct,\n                modify: modify,\n                limit: limit,\n                map: map\n            };\n        };\n\n        'only bound upperBound lowerBound'.split(' ').forEach(function (name) {\n            that[name] = function () {\n                return new Query( name , arguments );\n            };\n        });\n\n        this.filter = function () {\n            var query = new Query( null , null );\n            return query.filter.apply( query , arguments );\n        };\n\n        this.all = function () {\n            return this.filter();\n        };\n    };\n\n    var createSchema = function ( e , schema , db ) {\n        if ( typeof schema === 'function' ) {\n            schema = schema();\n        }\n\n        for ( var tableName in schema ) {\n            var table = schema[ tableName ];\n            var store;\n            if (!hasOwn.call(schema, tableName) || db.objectStoreNames.contains(tableName)) {\n                store = e.currentTarget.transaction.objectStore(tableName);\n            } else {\n                store = db.createObjectStore(tableName, table.key);\n            }\n\n            for ( var indexKey in table.indexes ) {\n                var index = table.indexes[ indexKey ];\n                try {\n                    store.index(indexKey)\n                } catch (e) {\n                    store.createIndex( indexKey , index.key || indexKey , Object.keys(index).length ? index : { unique: false } );\n                }\n            }\n        }\n    };\n\n    var open = function ( e , server , version , schema ) {\n        var dbn = e.target.result;\n        var s = new Server( dbn , server );\n        var upgrade;\n\n        dbCache[ server ] = dbn;\n\n        return Promise.resolve(s)\n    };\n\n    var dbCache = {};\n\n    var db = {\n        version: '0.10.2',\n        open: function ( options ) {\n            var request;\n\n            return new Promise(function(resolve, reject){\n              if ( dbCache[ options.server ] ) {\n                  open( {\n                      target: {\n                          result: dbCache[ options.server ]\n                      }\n                  } , options.server , options.version , options.schema )\n                  .then(resolve, reject)\n              } else {\n                  request = getIndexedDB().open( options.server , options.version );\n\n                  request.onsuccess = function ( e ) {\n                      open( e , options.server , options.version , options.schema )\n                          .then(resolve, reject)\n                  };\n\n                  request.onupgradeneeded = function ( e ) {\n                      createSchema( e , options.schema , e.target.result );\n                  };\n                  request.onerror = function ( e ) {\n                      reject( e );\n                  };\n              }\n            });\n        }\n    };\n\n    if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n        module.exports = db;\n    } else if ( typeof define === 'function' && define.amd ) {\n        define( function() {\n            window.db = db;\n            return window.db;\n        } );\n    } else {\n        window.db = db;\n    }\n})( window );\n","Magestore_Webpos/js/model/resource-model/indexed-db/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/offline-abstract',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function ($, Element, eventManager) {\n        \"use strict\";\n        return Element.extend({\n            mainTable: '',\n            keyPath: '',\n            indexes: {},\n            initialize: function () {\n                this._super();\n            },\n            save: function (model, deferred) {\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                var self = this;\n                if (typeof model.getData() == 'undefined' || model.getData() == '' || model.getData() == null)\n                    return;\n                try {\n                    var data = self.prepareSaveData(model.getData());\n                    var id = data[self.keyPath];\n                    if (!id) {\n                        id = self.off_id_auto + self.mainTable + '_' + new Date().getTime();\n                        data[self.keyPath] = id;\n                        model.setData(data);\n                    }\n                    server[self.mainTable].update(data)\n                        .catch(function (err) {\n                            deferred.reject(err);\n                            return deferred;\n                        })\n                        .then(function (e) {\n                            if (self.indexer) {\n                                self.indexer().reindex();\n                            }\n                            deferred.resolve(e[0]);\n                        });\n                } catch (err) {\n                    deferred.reject(err);\n                }\n                //return model;\n                return deferred;\n            },\n            update: function (model, deferred) {\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                var self = this;\n                if (typeof model.getData() == 'undefined' || model.getData() == '' || model.getData() == null)\n                    return;\n                try {\n                    var data = self.prepareSaveData(model.getData());\n                    var id = data[self.keyPath];\n                    if (!id) {\n                        id = self.off_id_auto + self.mainTable + '_' + new Date().getTime();\n                        data[self.keyPath] = id;\n                        model.setData(data);\n                    }\n                    server[self.mainTable].add(data)\n                        .catch(function () {\n                            server[self.mainTable].query().filter(self.keyPath, id).modify(data).execute()\n                                .catch(function (err) {\n                                    deferred.reject(err);\n                                    return deferred;\n                                })\n                                .then(function (e) {\n                                    if (self.indexer) {\n                                        self.indexer().reindex();\n                                    }\n                                    deferred.resolve(e[0]);\n                                });\n                            return deferred;\n                        })\n                        .then(function (e) {\n                            deferred.resolve(e[0]);\n                        });\n                } catch (err) {\n                    deferred.reject(err);\n                }\n                //return model;\n                return deferred;\n            },\n            load: function (id, deferred) {\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                var self = this;\n\n                if (typeof server == 'undefined') {\n                    if (!self.loop) {\n                        self.loop = 1;\n                    } else {\n                        self.loop++;\n                    }\n                    if (self.loop < 4) {\n                        setTimeout(function () {\n                            self.load(id, deferred)\n                        }, 1000);\n                    }\n                    return deferred;\n                }\n\n                if (typeof id == 'undefined' || id == '' || id == null) {\n                    deferred.resolve({});\n                }\n                try {\n                    server[self.mainTable].query(self.keyPath).only(id).execute()\n                        .catch(function (err) {\n                            deferred.reject(err);\n                            return deferred;\n                        })\n                        .then(function (p) {\n                            if (typeof p[0] != 'undefined' && p[0][self.keyPath] == id) {\n                                deferred.resolve(p[0]);\n                            } else {\n                                deferred.resolve({});\n                            }\n                        });\n                } catch (err) {\n                    deferred.reject(err);\n                }\n                return deferred;\n            },\n\n            delete: function (id, deferred) {\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                var self = this;\n                if (typeof id == 'undefined' || id == '' || id == null) {\n                    deferred.resolve(0);\n                }\n                try {\n                    server[self.mainTable].remove(id)\n                        .catch(function (err) {\n                            deferred.reject(err);\n                            return deferred;\n                        })\n                        .then(function (key) {\n                            if (self.indexer) {\n                                self.indexer().reindex();\n                            }\n                            deferred.resolve(key);\n                        });\n                } catch (err) {\n                    deferred.reject(err);\n                }\n                //return true;\n                return deferred;\n            },\n\n            clear: function (deferred) {\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                var self = this;\n                try {\n                    server[self.mainTable].clear()\n                        .catch(function (err) {\n                            deferred.reject(err);\n                            return deferred;\n                        })\n                        .then(function (key) {\n                            if (self.indexer) {\n                                self.indexer().reindex();\n                            }\n                            deferred.resolve(key);\n                        });\n                } catch (err) {\n                    deferred.reject(err);\n                }\n                //return true;\n                return deferred;\n            },\n\n            massUpdate: function (datas, deferred, removeFuncBeforeMassUpdate) {\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                var self = this;\n                if (typeof datas == 'undefined' || datas == '' || datas == null || datas.length <= 0) {\n                    deferred.resolve({\n                        updated: 0,\n                        total: 0\n                    });\n                }\n                if (datas.items && datas.items.length) {\n                    var index = datas.items.length;\n                    var check = 0;\n                    datas.items.forEach(function (data) {\n                        if (removeFuncBeforeMassUpdate) {\n                            data = self.prepareSaveData(data);\n                        }\n                        try {\n                            server[self.mainTable].update(data)\n                                .catch(function (err) {\n                                    deferred.reject(err);\n                                    check = check + 1;\n                                    eventManager.dispatch(self.mainTable + 'pull_duplicate', {\n                                        'data': data,\n                                        'error': err\n                                    });\n                                    return deferred;\n                                })\n                                .then(function () {\n                                    check = check + 1;\n                                    if (index == check) {\n                                        if (self.indexer) {\n                                            self.indexer().reindex();\n                                        }\n                                        deferred.resolve({\n                                            updated: index,\n                                            total: datas.total_count\n                                        });\n                                    }\n                                });\n                        } catch (err) {\n                            deferred.reject(err);\n                            return deferred;\n                        }\n                    });\n                } else {\n                    deferred.resolve({\n                        updated: 0,\n                        total: 0\n                    });\n                }\n                return deferred;\n            },\n\n            filterProccess: function (data) {\n                var self = this;\n                var check = true;\n                if (data.columns) {\n                    data.columns = '';\n                }\n                if (self.filterParams) {\n                    $.each(self.filterParams, function (index, value) {\n                        self.filterParams[index]['condition'] = value.condition.toLowerCase();\n                        if (value.condition == 'like' && typeof value.value === 'string' && typeof value.value.indexOf == 'function' && value.value.indexOf('%') >= 0) {\n                            self.filterParams[index]['value'] = String(value.value).toLowerCase().replace('%', '').replace('%', '');\n                        }\n                        if (value.condition == 'like') {\n                            if ((String(data[value.field]).toLowerCase().indexOf(String(value.value))) < 0) {\n                                check = false;\n                            }\n                        } else if (value.condition.toLowerCase() == 'eq') {\n                            if (data[value.field] != value.value) {\n                                check = false;\n                            }\n                        } else if (value.condition.toLowerCase() == 'neq') {\n                            if (data[value.field] == value.value) {\n                                check = false;\n                            }\n                        } else if (value.condition.toLowerCase() == 'gt') {\n                            if (data[value.field] <= value.value) {\n                                check = false;\n                            }\n                        } else if (value.condition.toLowerCase() == 'lt') {\n                            if (data[value.field] >= value.value) {\n                                check = false;\n                            }\n                        } else if (value.condition.toLowerCase() == 'gteq') {\n                            if (data[value.field] < value.value) {\n                                check = false;\n                            }\n                        } else if (value.condition.toLowerCase() == 'lteq') {\n                            if (data[value.field] > value.value) {\n                                check = false;\n                            }\n                        } else if (value.condition.toLowerCase() == 'in') {\n                            if ($.isArray(value.value) && value.value.indexOf(data[value.field]) < 0) {\n                                check = false;\n                            } else {\n                            }\n                        } else if (value.condition.toLowerCase() == 'nin') {\n                            if ($.isArray(value.value) && value.value.indexOf(data[value.field]) >= 0) {\n                                check = false;\n                            } else {\n                            }\n                        } else {\n                            console.log('donnot support this filter: ' + value.condition.toLowerCase());\n                        }\n                        if (!check) {\n                            return check;\n                        }\n                    });\n                }\n                if (!check) {\n                    return check;\n                }\n                if (self.paramOrFilter) {\n                    $.each(self.paramOrFilter, function (index, value) {\n                        var checkOr = false;\n                        $.each(value, function (indexFiled, valueField) {\n                            self.paramOrFilter[index][indexFiled]['condition'] = valueField.condition.toLowerCase();\n                            if (valueField.condition == 'like' && typeof valueField.value === 'string' && typeof valueField.value.indexOf == 'function' && valueField.value.indexOf('%') >= 0) {\n                                self.paramOrFilter[index][indexFiled]['value'] = String(valueField.value).toLowerCase().replace('%', '').replace('%', '');\n                            }\n                        });\n                        $.each(value, function (indexFiled, valueField) {\n                            if (valueField.condition == 'like') {\n                                if ((String(data[valueField.field]).toLowerCase().indexOf(String(valueField.value))) >= 0) {\n                                    checkOr = true;\n                                }\n                            } else if (valueField.condition.toLowerCase() == 'eq') {\n                                if (data[valueField.field] == valueField.value) {\n                                    checkOr = true;\n                                }\n                            } else if (valueField.condition.toLowerCase() == 'neq') {\n                                if (data[valueField.field] != valueField.value) {\n                                    checkOr = true;\n                                }\n                            } else if (valueField.condition.toLowerCase() == 'gt') {\n                                if (data[valueField.field] > valueField.value) {\n                                    checkOr = true;\n                                }\n                            } else if (valueField.condition.toLowerCase() == 'lt') {\n                                if (data[valueField.field] < valueField.value) {\n                                    checkOr = true;\n                                }\n                            } else if (valueField.condition.toLowerCase() == 'gteq') {\n                                if (data[value.field] >= valueField.value) {\n                                    checkOr = true;\n                                }\n                            } else if (valueField.condition.toLowerCase() == 'lteq') {\n                                if (data[valueField.field] <= valueField.value) {\n                                    checkOr = true;\n                                }\n                            } else if (valueField.condition.toLowerCase() == 'in') {\n                                if ($.isArray(value.value) && value.value.indexOf(data[value.field]) >= 0) {\n                                    checkOr = true;\n                                }\n                            } else if (valueField.condition.toLowerCase() == 'nin') {\n                                if ($.isArray(value.value) && value.value.indexOf(data[value.field]) < 0) {\n                                    checkOr = true;\n                                }\n                            } else {\n                                console.log('donnot support this filter: ' + value.condition.toLowerCase());\n                            }\n                        });\n                        if (!checkOr) {\n                            check = false;\n                        }\n                    });\n                }\n                return check;\n            },\n\n            queryCollectionData: function (collection, deferred) {\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                var self = this;\n\n                if (typeof server == 'undefined') {\n                    if (!self.loop) {\n                        self.loop = 1;\n                    } else {\n                        self.loop++;\n                    }\n                    if (self.loop < 4) {\n                        setTimeout(function () {\n                            self.queryCollectionData(collection, deferred)\n                        }, 1000);\n                    }\n                    return deferred;\n                }\n\n                self.queryParams = collection.queryParams;\n                self.filterParams = self.queryParams.filterParams;\n                self.paramOrFilter = self.queryParams.paramOrFilter;\n                self.orderParams = self.queryParams.orderParams;\n                self.pageSize = self.queryParams.pageSize;\n                self.currentPage = self.queryParams.currentPage;\n                if (!self.currentPage) {\n                    self.currentPage = 1;\n                }\n\n                if (self.indexer) {\n                    var cacheKey = JSON.stringify(self.filterParams) + JSON.stringify(self.paramOrFilter);\n                    self.indexer().search(function(item) {\n                        return self.filterProccess(item);\n                    }, self.pageSize, self.currentPage, cacheKey)\n                        .done(function(data) {\n                            if (0 === data.result.length) {\n                                return deferred.resolve({\n                                    items: [],\n                                    search_criteria: self.queryParams,\n                                    total_count: data.total\n                                });\n                            }\n                            // Load Real Data\n                            var ordered = data.result,\n                                result = new Array(ordered.length),\n                                range = ordered.slice(0).sort(function(a, b) {return a - b;}),\n                                first = range[0],\n                                last = range[range.length - 1];\n                            server[self.mainTable].query().bound(first, last)\n                                .success(function(cursor, results) {\n                                    if (!cursor) {\n                                        return;\n                                    }\n                                    var res = 'value' in cursor ? cursor.value : cursor.key;\n                                    result[ordered.indexOf(res[self.keyPath])] = res;\n                                    if (res[self.keyPath] === range[0]) {\n                                        range.shift();\n                                    }\n                                    if (range.length) {\n                                        cursor['continue'](range[0]);\n                                    } else {\n                                        cursor['continue']();\n                                    }\n                                }).execute()\n                                .catch(function (err) {\n                                    deferred.reject(err);\n                                }).then(function () {\n                                    deferred.resolve({\n                                        items: result,\n                                        search_criteria: self.queryParams,\n                                        total_count: data.total\n                                    });\n                                });\n                        }).always(function() {\n                            deferred.always(function() {\n                                self.cleanData();\n                                self.destroy();\n                            });\n                        });\n                    return deferred;\n                }\n\n                if (typeof server != 'undefined' && typeof server[self.mainTable] != 'undefined') {\n                    server[self.mainTable].query()\n                        .filter(function (item) {\n                            return self.filterProccess(item);\n                        })\n                        .execute()\n                        .catch(function (err) {\n                            deferred.reject(err);\n                            return deferred;\n                        })\n                        .then(function (data) {\n                            if(self.orderParams) {\n                                $.each(self.orderParams, function (index, value) {\n                                    if (value.direction == 'DESC') {\n                                        data.sort(function (a, b) {\n                                            var x = a[value.field];\n                                            var y = b[value.field];\n                                            if (typeof x == \"string\") {\n                                                x = x.toLowerCase();\n                                            }\n                                            if (typeof y == \"string\") {\n                                                y = y.toLowerCase();\n                                            }\n                                            return ((x > y) ? -1 : ((x < y) ? 1 : 0));\n                                        });\n                                    } else {\n                                        data.sort(function (a, b) {\n                                            var x = a[value.field];\n                                            var y = b[value.field];\n                                            if (typeof x == \"string\") {\n                                                x = x.toLowerCase();\n                                            }\n                                            if (typeof y == \"string\") {\n                                                y = y.toLowerCase();\n                                            }\n                                            return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n                                        });\n                                    }\n                                });\n                            }\n                            var result = data;\n                            if (self.pageSize) {\n                                var from = (self.currentPage - 1) * self.pageSize;\n                                var to = self.currentPage * self.pageSize - 1;\n                                if (data.length - 1 < to) {\n                                    to = data.length - 1;\n                                }\n                                if (from == to) {\n                                    result = data.slice(from);\n                                } else {\n                                    result = data.slice(from, to + 1);\n                                }\n                            }\n                            deferred.resolve({\n                                items: result,\n                                search_criteria: self.queryParams,\n                                total_count: (data.length)\n                            });\n                            deferred.always(function (response) {\n                                self.cleanData();\n                                self.destroy();\n                            });\n                        });\n                } else {\n                    deferred.resolve({\n                        items: [],\n                        search_criteria: {},\n                        total_count: 0\n                    });\n                }\n                return deferred;\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/model/resource-model/indexed-db/sales/order.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'order',\n            keyPath: 'entity_id',\n            indexes: {\n                entity_id: {unique: true},\n                increment_id: {unique: true},\n                customer_email: {},\n                customer_firstname: {},\n                customer_lastname: {},\n                customer_fullname: {},\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/sales/order/invoice.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/sales/order/creditmemo.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/sales/order/shipment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/sales/order/payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/shift/shift.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'shift',\n            keyPath: 'shift_id',\n            indexes: {\n                shift_id: {unique: true}\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/shift/cash-transaction.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'cash_transaction',\n            keyPath: 'transaction_id',\n            indexes: {\n                transaction_id: {unique: true},\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/checkout/taxrate.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'taxrate',\n            keyPath: 'id',\n            indexes: {\n                id: {unique: true},\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/checkout/taxrule.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'taxrule',\n            keyPath: 'id',\n            indexes: {\n                id: {unique: true},\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/checkout/shipping.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'shipping',\n            keyPath: 'code',\n            indexes: {\n                code: {unique: true},\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/checkout/payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'payment',\n            keyPath: 'code',\n            indexes: {\n                code: {unique: true},\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/checkout/taxclass.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'taxclass',\n            keyPath: 'class_id',\n            indexes: {\n                class_id: {unique: true},\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/synchronization/synchronization.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function ($,Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'synchronization',\n            keyPath: 'id',\n            indexes: {\n                id: {unique: true},\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/integration/storecredit/store-credit.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'customer_credit',\n            keyPath: 'credit_id',\n            indexes: {\n                credit_id: {unique: true}\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/integration/rewardpoints/reward-points.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'customer_point',\n            keyPath: 'reward_id',\n            indexes: {\n                reward_id: {unique: true}\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/integration/rewardpoints/rate.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'rewardpoint_rate',\n            keyPath: 'rate_id',\n            indexes: {\n                rate_id: {unique: true},\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/log/action-log.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'action_logs',\n            keyPath: 'action_id',\n            indexes: {\n                action_id: {unique: true}\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/directory/currency.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'currency',\n            keyPath: 'code',\n            indexes: {\n                code: {unique: true},\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/directory/country.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'country',\n            keyPath: 'country_id',\n            indexes: {\n                code: {unique: true},\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/config/config.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function ($,Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'core_config_data',\n            keyPath: 'path',\n            indexes: {\n                path: {unique: true},\n                scope: {},\n                scope_id: {}\n            },\n            queryCollectionData: function (collection, deferred) {\n                if(!deferred) {\n                    deferred = $.Deferred();\n                }      \n \n                var self = this;   \n                \n                console.log(server);\n\n                if(typeof server == 'undefined') {\n                    if(!self.loop) {\n                        self.loop = 1;\n                    } else {\n                        self.loop++;\n                    }\n                    if(self.loop < 15) {\n                        setTimeout(function() {self.queryCollectionData(collection, deferred)}, 1000);\n                    }\n                    return deferred;\n                }\n\n                self.queryParams = collection.queryParams;\n                self.filterParams = self.queryParams.filterParams;\n                self.paramOrFilter = self.queryParams.paramOrFilter;\n                self.orderParams = self.queryParams.orderParams;\n                self.pageSize = self.queryParams.pageSize;\n                self.currentPage = self.queryParams.currentPage;\n                if(!self.currentPage){\n                    self.currentPage = 1;\n                }\n\n                $.each(self.filterParams, function( index, value ){\n                    self.filterParams[index]['condition'] = value.condition.toLowerCase();\n                    if(value.condition == 'like' && typeof value.value === 'string' && typeof value.value.indexOf == 'function' && value.value.indexOf('%') >= 0) {\n                        self.filterParams[index]['value'] = String(value.value).toLowerCase().replace('%', '').replace('%', '');\n                    }\n                });\n                if(self.paramOrFilter){\n                    $.each(self.paramOrFilter, function( index, value ) {\n                        $.each(value, function (indexFiled, valueField) {\n                            self.paramOrFilter[index][indexFiled]['condition'] = valueField.condition.toLowerCase();\n                            if(valueField.condition == 'like' && typeof valueField.value === 'string' && typeof valueField.value.indexOf == 'function' && valueField.value.indexOf('%') >= 0) {\n                                self.paramOrFilter[index][indexFiled]['value'] = String(valueField.value).toLowerCase().replace('%', '').replace('%', '');\n                            }\n                        });\n                    });\n                }\n                \n                if(typeof server != 'undefined' && typeof server[self.mainTable] != 'undefined') {\n                    server[self.mainTable].query()\n                        .filter(function (item) {\n                            return self.filterProccess(item);\n                        })\n                        .execute().then(function (data) {\n                        $.each(self.orderParams, function (index, value) {\n                            if (value.direction == 'DESC') {\n                                data.sort(function (a, b) {\n                                    var x = a[value.field];\n                                    var y = b[value.field];\n                                    if (typeof x == \"string\"){\n                                        x = x.toLowerCase();\n                                    }\n                                    if (typeof y == \"string\"){\n                                        y = y.toLowerCase();\n                                    }\n                                    return ((x > y) ? -1 : ((x < y) ? 1 : 0));\n                                });\n                            } else {\n                                data.sort(function (a, b) {\n                                    var x = a[value.field];\n                                    var y = b[value.field];\n                                    if (typeof x == \"string\"){\n                                        x = x.toLowerCase();\n                                    }\n                                    if (typeof y == \"string\"){\n                                        y = y.toLowerCase();\n                                    }\n                                    return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n                                });\n                            }\n                        });\n\n                        var result = data;\n                        if (self.pageSize) {\n                            var from = (self.currentPage - 1) * self.pageSize;\n                            var to = self.currentPage * self.pageSize - 1;\n                            if (data.length - 1 < to) {\n                                to = data.length - 1;\n                            }\n                            if (from == to) {\n                                result = data.slice(from);\n                            } else {\n                                result = data.slice(from, to + 1);\n                            }\n                        }\n                        deferred.resolve({\n                            items: result,\n                            search_criteria: self.queryParams,\n                            total_count: (data.length)\n                        });\n                    });\n                }else {\n                    deferred.resolve({\n                        items: {},\n                        search_criteria: {},\n                        total_count: 0\n                    });\n                }\n                return deferred;\n            },           \n            getValue: function (deferredParent, path, scopeType , scopeCode){\n                var collection = {\n                    queryParams: {\n                        filterParams: [{\n                            \"field\" : 'path',\n                            \"value\" : path,\n                            \"condition\" : 'eq'\n                        }],\n                        orderParams: [],\n                        pageSize: '',\n                        currentPage: ''\n                    }\n                };\n                var deferred = $.Deferred();\n                var self = this;\n                this.queryCollectionData(collection, deferred);\n                deferred.done(function(data) {\n                    if(!data.total_count){\n                        deferredParent.resolve(null);\n                    }\n                    if(data.total_count >= 1){\n                        deferredParent.resolve(data.items[0].value);\n                    }\n                });\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/catalog/category.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'category',\n            keyPath: 'id',\n            indexes: {\n                id: {unique: true},\n                name: {},\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/catalog/product.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/catalog/product-indexer',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (indexer , Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'product',\n            keyPath: 'id',\n            indexes: {\n                id: {unique: true},\n                sku: {unique: true},\n                name: {},\n            },\n            indexer: indexer,\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/catalog/product-indexer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/indexer'\n    ],\n    function (Indexer) {\n        \"use strict\";\n        return Indexer.extend({\n            mainTable: 'product_index',\n            dataTable: 'product',\n            indexes: [\n                'barcode_string',\n                'search_string',\n                'category_ids',\n            ],\n        });\n    }\n);\n","Magestore_Webpos/js/model/resource-model/indexed-db/catalog/product/swatch.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'swatch',\n            keyPath: 'attribute_id',\n            indexes: {\n                attribute_id: {unique: true}\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/inventory/location.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'location',\n            keyPath: 'location_id',\n            indexes: {\n                location_id: {unique: true},\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/inventory/stock-item.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/inventory/stock-item-indexer',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function ($ , indexer , Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'stock_item',\n            keyPath: 'item_id',\n            indexes: {\n                item_id: {unique: true},\n                sku: {unique: true},\n                name: {},\n            },\n            indexer: indexer,\n            queryCollectionData: function (collection, deferred) {\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                var self = this,\n                    filterParams = collection.queryParams.filterParams;\n                if (1 === filterParams.length && 'product_id' === filterParams[0].field && 'in' === filterParams[0].condition) {\n                    var range = filterParams[0].value.sort(function(a, b) {return a - b;}),\n                        first = range[0],\n                        last = range[range.length - 1],\n                        result = [];\n                    server[self.mainTable].query('product_id').bound(first, last)\n                        .success(function(cursor, results) {\n                            if (!cursor) {\n                                return;\n                            }\n                            var res = 'value' in cursor ? cursor.value : cursor.key;\n                            result.push(res);\n                            if (res[self.keyPath] === range[0]) {\n                                range.shift();\n                            }\n                            if (range.length && range[0] > cursor.key) {\n                                cursor['continue'](range[0]);\n                            } else {\n                                cursor['continue']();\n                            }\n                        }).execute()\n                        .catch(function (err) {\n                            deferred.reject(err);\n                        }).then(function () {\n                            deferred.resolve({\n                                items: result,\n                                search_criteria: collection.queryParams,\n                                total_count: result.length,\n                            });\n                        });\n                    return deferred;\n                }\n                return Abstract.prototype.queryCollectionData.call(self, collection, deferred);\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/inventory/stock-item-indexer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/indexer'\n    ],\n    function (Indexer) {\n        \"use strict\";\n        return Indexer.extend({\n            mainTable: 'stock_item_index',\n            dataTable: 'stock_item',\n            keyPath: 'item_id',\n            indexes: [\n                'product_id',\n                'name',\n                'sku',\n            ],\n        });\n    }\n);\n","Magestore_Webpos/js/model/resource-model/indexed-db/customer/complain.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'customer_complain',\n            keyPath: 'complain_id',\n            indexes: {\n                complain_id: {unique: true}\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/customer/group.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'customer_group',\n            keyPath: 'id',\n            indexes: {\n                id: {unique: true}\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/indexed-db/customer/customer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/customer/customer-indexer',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/abstract'\n    ],\n    function (indexer , Abstract) {\n        \"use strict\";\n        return Abstract.extend({\n            mainTable: 'customer',\n            keyPath: 'id',\n            indexes: {\n                id: {unique: true},\n                email: {unique: true},\n                name: {},\n            },\n            indexer: indexer,\n        });\n    }\n);\n","Magestore_Webpos/js/model/resource-model/indexed-db/customer/customer-indexer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/indexed-db/indexer'\n    ],\n    function (Indexer) {\n        \"use strict\";\n        return Indexer.extend({\n            mainTable: 'customer_index',\n            dataTable: 'customer',\n            indexes: [\n                'email',\n                'telephone',\n                'full_name',\n                'group_id',\n            ],\n            orderBy: 'full_name',\n        });\n    }\n);\n","Magestore_Webpos/js/model/resource-model/magento-rest/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/online-abstract',\n        'Magestore_Webpos/js/model/log/action-log',\n        'Magestore_Webpos/js/model/url-builder',\n        'mage/storage',\n        'Magestore_Webpos/js/lib/cookie',\n        'Magestore_Webpos/js/model/event-manager'\n\n    ],\n    function ($, onlineAbstract, actionLog, urlBuilder, storage, Cookies,eventManager) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            data: [],\n            /* Declare key path*/\n            keyPath: '',\n            requireActionIdPath: '',\n            /* interface name of param in API */\n            interfaceName:'',\n            type:'',\n            /* interface name of param in massUpdate, pushData */\n            interfaceNames:'',\n            /* Declare delete api url*/\n            deleteApiUrl: '',\n            /* Declare create api url*/\n            createApiUrl: '',\n            /* Declare update api url*/\n            updateApiUrl: '',\n            /* Declare load api url*/\n            loadApiUrl: '',\n            /* Declare search api url*/\n            searchApiUrl: '',\n            actionId: '',\n            requireActionId: '',\n            log: true,\n            push: false,\n            setType: function (type) {\n                this.type = type;\n                return this;\n            },\n            setPush: function (mode) {\n                this.push = mode;\n                return this;\n            },\n            setLog: function (mode) {\n                this.log = mode;\n                return this;\n            },\n            setActionId: function (actionId) {\n                this.actionId = actionId;\n                return this;\n            },\n            setRequireActionId: function (requireActionId) {\n                this.requireActionId = requireActionId;\n                return this;\n            },\n            /* Get Data*/\n            getData: function () {\n                return this.data;\n            },\n            /* Set Data*/\n            setData: function (data) {\n                this.data = data;\n                return this;\n            },\n            /* Set Delete Api Url*/\n            setDeleteApiUrl: function (deleteApiUrl) {\n                this.deleteApiUrl = deleteApiUrl;\n            },\n            /* Set Create Api Url*/\n            setCreateApiUrl: function (createApiUrl) {\n                this.createApiUrl = createApiUrl;\n            },\n            /* Set Update Api Url*/\n            setUpdateApiUrl: function (updateApiUrl) {\n                this.updateApiUrl = updateApiUrl;\n            },\n            /* Set Load Api Url*/\n            setLoadApi: function (loadApiUrl) {\n                this.loadApiUrl = loadApiUrl;\n            },\n            /* Set Search Api Url*/\n            setSearchApiUrl: function (searchApiUrl) {\n                this.searchApiUrl = searchApiUrl;\n            },\n            /* Set Mass Update Api Url*/\n            setMassUpdateApiUrl: function (massUpdateApiUrl) {\n                this.massUpdateApiUrl = massUpdateApiUrl;\n            },\n            /* Set Mass Update Api Url*/\n            setPushDataApiUrl: function (pushDataApiUrl) {\n                this.pushDataApiUrl = pushDataApiUrl;\n            },\n            /* load by id*/\n            load: function (id, deferred) {\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                this.callRestApi(\n                    this.loadApiUrl + id,\n                    'get',\n                    {},\n                    {},\n                    deferred\n                );\n                return deferred;\n            },\n            update: function (model, deferred) {\n                return this.save(model, deferred);\n            },\n            /* save*/\n            save: function (model, deferred) {\n                var self = this;\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                var postData = {};\n                if (this.interfaceName) {\n                    postData[this.interfaceName] = this.prepareSaveData(model.getData());\n                }\n                else {\n                    postData = this.prepareSaveData(model.getData());\n                }\n                if (model.getData()[this.keyPath] == '' || typeof model.getData()[this.keyPath] == 'undefined') {\n                    this.callRestApi(\n                        this.createApiUrl,\n                        'post',\n                        {},\n                        postData,\n                        deferred,\n                        this.interfaceName + '_afterSave'\n                    );\n                } else {\n                    this.callRestApi(\n                        this.updateApiUrl + model.getData()[this.keyPath],\n                        'put',\n                        {},\n                        postData,\n                        deferred,\n                        this.interfaceName + '_afterSave'\n                    );\n                }\n                return deferred;\n            },\n            /**\n             * Mass Update items\n             *\n             * @param object items\n             * @param object deferred\n             */\n            massUpdate: function (data, deferred) {\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                var items = [];\n                for (var i in data.items) {\n                    items.push(this.prepareSaveData(data.items[i]));\n                }\n                if (this.massUpdateApiUrl) {\n                    var postData = {}\n                    if (this.interfaceNames) {\n                        postData[this.interfaceNames] = items;\n                    } else {\n                        postData = items;\n                    }\n                    this.callRestApi(\n                        this.massUpdateApiUrl,\n                        'put',\n                        {},\n                        postData,\n                        deferred,\n                        this.interfaceName + '_afterMassUpdate'\n                    );\n                }\n                return deferred;\n            },\n            /* Delete by id*/\n            delete: function (id, deferred) {\n                var self = this;\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                this.callRestApi(\n                    this.deleteApiUrl + id,\n                    'delete',\n                    {},\n                    {},\n                    deferred,\n                    this.interfaceName + '_afterDelete'\n                );\n                return deferred;\n            },\n            /* Query to search collection*/\n            queryCollectionData: function (collection, deferred) {\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                var queryParams = collection.queryParams;\n                var filterParams = queryParams.filterParams;\n                var paramOrFilter = queryParams.paramOrFilter;\n                var orderParams = queryParams.orderParams;\n                var pageSize = queryParams.pageSize;\n                var currentPage = queryParams.currentPage;\n                var paramToFilter = queryParams.paramToFilter;\n                var querySearchString = '';\n                var querySearchStringArray = [];\n                var numerGroup = 0;\n                $.each(filterParams, function (index, value) {\n                    querySearchStringArray.push('searchCriteria[filter_groups][' + index + '][filters][' + index + '][field]=' + value.field);\n                    querySearchStringArray.push('searchCriteria[filter_groups][' + index + '][filters][' + index + '][value]=' + value.value);\n                    querySearchStringArray.push('searchCriteria[filter_groups][' + index + '][filters][' + index + '][condition_type]=' + value.condition);\n                    numerGroup++;\n                });\n                $.each(paramOrFilter, function (index, orValue) {\n                    $.each(orValue, function (index, value) {\n                        querySearchStringArray.push('searchCriteria[filter_groups][' + numerGroup + '][filters][' + index + '][field]=' + value.field);\n                        querySearchStringArray.push('searchCriteria[filter_groups][' + numerGroup + '][filters][' + index + '][value]=' + value.value);\n                        querySearchStringArray.push('searchCriteria[filter_groups][' + numerGroup + '][filters][' + index + '][condition_type]=' + value.condition);\n                    });\n                    numerGroup++;\n                });\n\n                $.each(orderParams, function (index, value) {\n                    querySearchStringArray.push('searchCriteria[sortOrders][' + index + '][field]=' + value.field);\n                    querySearchStringArray.push('searchCriteria[sortOrders][' + index + '][direction]=' + value.direction);\n                });\n\n                $.each(paramToFilter, function (index, value) {\n                    querySearchStringArray.push(value.field + '=' + value.value);\n                });\n\n                if (pageSize) {\n                    querySearchStringArray.push('searchCriteria[pageSize]=' + pageSize);\n                }\n\n                if (currentPage) {\n                    querySearchStringArray.push('searchCriteria[currentPage]=' + currentPage);\n                }\n\n                querySearchString = querySearchString + querySearchStringArray.join('&');\n\n                if (querySearchString == '') {\n                    querySearchString = 'searchCriteria';\n                }\n\n                var url = '';\n                if(this.searchApiUrl.indexOf('?') >= 0){\n                    url = this.searchApiUrl+ '&' + encodeURI(querySearchString);\n                }else{\n                    url = this.searchApiUrl + '?' + encodeURI(querySearchString);\n                }\n                this.callRestApi(\n                    url,\n                    'get',\n                    {},\n                    {},\n                    deferred\n                );\n                return deferred.promise();\n            },\n            pushData: function (items, deferred) {\n                if (!deferred) {\n                    deferred = $.Deferred();\n                }\n                if (this.pushDataApiUrl) {\n                    var postData = {};\n                    if (this.interfaceNames) {\n                        postData[this.interfaceNames] = items;\n                    } else {\n                        postData = items;\n                    }\n                    this.callRestApi(\n                        this.pushDataApiUrl,\n                        'post',\n                        {},\n                        postData,\n                        deferred,\n                        this.interfaceName + '_afterPush'\n                    );\n                }\n                return deferred;\n            },\n\n            /* Call Magento Rest Api*/\n            callRestApi: function (apiUrl, method, params, payload, deferred, callBack) {\n                var self = this;\n                var serviceUrl = urlBuilder.createUrl(apiUrl, params);\n                if (apiUrl != '/webpos/staff/login' && apiUrl.indexOf('/webpos/staff/logout') == -1) {\n                    var sessionId = Cookies.get('WEBPOSSESSION');\n                    serviceUrl = self.addParamsToUrl(serviceUrl, {'session':sessionId});\n                }\n\n                switch (method) {\n                    case 'post':\n                        if (self.push) {\n                            storage.post(\n                                serviceUrl, JSON.stringify(payload)\n                            ).done(\n                                function (response) {\n\n                                    deferred.resolve(response);\n                                    if(callBack) {\n                                        eventManager.dispatch(callBack, {'response': response});\n                                    }\n\n\n                                }\n                            ).fail(\n                                function (response) {\n                                    if (self.log) {\n                                        var defer = self.saveLog(apiUrl, method, params, payload, callBack, self.interfaceName);\n                                        defer.done(function () {\n                                            //log save\n                                        });\n                                    }\n                                    if (response.status == 401) {\n                                        window.location.reload();\n                                    } else {\n                                        deferred.reject(response);\n                                    }\n                                }\n                            ).always(\n                                function (response) {\n                                    if (apiUrl != '/webpos/staff/login' &&  apiUrl != '/webpos/staff/logout') {\n                                        Cookies.set('WEBPOSSESSION', sessionId, {expires: parseInt(window.webposConfig.timeoutSession)});\n                                    }\n                                    var checkNetWork = !(response.statusText == 'error' && response.status == 0);\n                                }\n                            );\n                        } else {\n                            var defer = self.saveLog(apiUrl, method, params, payload, callBack, self.interfaceName);\n                            defer.done(function () {\n                                //log save\n                            });\n                        }\n                        break;\n                    case 'get':\n\n                        storage.get(\n                            serviceUrl, JSON.stringify(payload)\n                        ).done(\n                            function (response) {\n                                deferred.resolve(response);\n                            }\n                        ).fail(\n                            function (response) {\n                                if (response.status == 401) {\n                                    window.location.reload();\n                                } else {\n                                    deferred.reject(response);\n                                    //var defer = self.saveLog(apiUrl, method, params, payload);\n                                    //defer.done(function () {\n                                    //    //log save\n                                    //});\n                                }\n                            }\n                        ).always(\n                            function (response) {\n                                Cookies.set('WEBPOSSESSION', sessionId, {expires: 1});\n                                var checkNetWork = !(response.statusText == 'error' && response.status == 0);\n                            }\n                        );\n\n                        /*.error(\n                         function (response) {\n                         var error = JSON.parse(response.responseText);\n                         error.status = response.status;\n                         deferred.reject(error);\n                         }\n\n                         )*/\n\n                        break;\n                    case 'put':\n\n                        if (self.push) {\n                            storage.put(\n                                serviceUrl, JSON.stringify(payload)\n                            ).done(\n                                function (response) {\n                                    deferred.resolve(response);\n                                    if (callBack) {\n                                        eventManager.dispatch(callBack, {'response': response});\n                                    }\n                                }\n                            ).fail(\n                                function (response) {\n                                    if (self.log) {\n                                        var defer = self.saveLog(apiUrl, method, params, payload, callBack, self.interfaceName);\n                                        defer.done(function () {\n                                            //log save\n                                        });\n                                    }\n                                    if (response.status == 401) {\n                                        window.location.reload();\n                                    } else {\n                                        deferred.reject(response);\n                                    }\n                                }\n                            ).always(\n                                function (response) {\n                                    Cookies.set('WEBPOSSESSION', sessionId, {expires: 1});\n                                    var checkNetWork = !(response.statusText == 'error' && response.status == 0);\n                                }\n                            );\n                        } else {\n                            var defer = self.saveLog(apiUrl, method, params, payload, callBack, self.interfaceName);\n                            defer.done(function () {\n                                //log save\n                            });\n                        }\n                        break;\n                    case 'delete':\n                        serviceUrl = self.addParamsToUrl(serviceUrl, payload);\n                        if (self.push) {\n                            storage.delete(\n                                serviceUrl, JSON.stringify(payload)\n                            ).done(\n                                function (response) {\n                                    deferred.resolve(response);\n                                    if (callBack) {\n                                        eventManager.dispatch(callBack, {'response': response});\n                                    }\n                                }\n                            ).fail(\n                                function (response) {\n                                    if (self.log) {\n                                        var defer = self.saveLog(apiUrl, method, params, payload, callBack, self.interfaceName);\n                                        defer.done(function () {\n                                            //log save done\n                                        });\n                                    }\n                                    if (response.status == 401) {\n                                        window.location.reload();\n                                    } else {\n                                        deferred.reject(response);\n                                    }\n                                }\n                            ).always(\n                                function (response) {\n                                    Cookies.set('WEBPOSSESSION', sessionId, {expires: 1});\n                                    var checkNetWork = !(response.statusText == 'error' && response.status == 0);\n                                }\n                            );\n                        } else {\n                            var defer = self.saveLog(apiUrl, method, params, payload, callBack, self.interfaceName);\n                            defer.done(function () {\n                                //log save\n                            });\n                        }\n                        break;\n                    default:\n                        break;\n                }\n            },\n\n            saveLog: function (apiUrl, method, params, payload, callBack, interfaceName) {\n                var self = this;\n                if (!self.actionId && self.keyPath && payload[self.keyPath]) {\n                    self.setActionId(payload[self.keyPath]);\n                }\n                if (!self.actionId && self.interfaceName && self.keyPath && payload[interfaceName][self.keyPath]) {\n                    self.setActionId(payload[interfaceName][self.keyPath]);\n                }\n                if (!self.requireActionId && self.requireActionIdPath && payload[self.requireActionIdPath]) {\n                    self.setRequireActionId(payload[self.requireActionIdPath]);\n                }\n                if (!self.requireActionId && self.interfaceName && self.requireActionIdPath && payload[interfaceName][self.requireActionIdPath]) {\n                    self.setRequireActionId(payload[interfaceName][self.requireActionIdPath]);\n                }\n                if(!self.type){\n                    self.type = self.interfaceName;\n                }\n                var log = actionLog().setData({\n                    'api_url': apiUrl,\n                    'method': method,\n                    'params': params,\n                    'payload': payload,\n                    'callBack' : callBack,\n                    'key_path' : self.keyPath,\n                    'action_id' : self.actionId,\n                    'requireActionIdPath' : self.requireActionIdPath,\n                    'require_action_id' : self.requireActionId,\n                    'order' : new Date().getTime(),\n                    'interfaceName': interfaceName,\n                    'type': self.type,\n                    'number': 0\n                });\n\n                return (apiUrl)?log.save():$.Deferred();\n            },\n\n            addParamsToUrl: function(url, params){\n                $.each(params, function(key, value){\n                    if(key){\n                        if (url.indexOf(\"?\") != -1) {\n                            url = url + '&'+key+'=' + value;\n                        }\n                        else {\n                            url = url + '?'+key+'=' + value;\n                        }\n                    }\n                });\n                return url;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/sales/order.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/sales/order',\n        'Magestore_Webpos/js/model/event-manager',\n    ],\n    function ($, onlineAbstract, offlineResource, eventmanager) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            interfaceName: 'sales_order',\n            \n            initialize: function () {\n                this._super();\n                this.setLoadApi('/webpos/orders/');\n                this.setSearchApiUrl('/webpos/orders')\n            },\n\n            cancelOrder: function(orderData, comment, model, deferred){\n                var self = this;\n                if(comment){\n                    if(!orderData.status_histories)\n                        orderData.status_histories = [];\n                    orderData.status_histories.push(comment);\n                }\n                var deferredCancel = $.Deferred();\n                this.callRestApi('/webpos/orders/:id/cancel', 'post', {id: orderData.entity_id}, {comment: comment}, deferredCancel, this.interfaceName + '_afterSave');\n                \n                eventmanager.dispatch('sales_order_cancel_after', {'response': orderData});\n                eventmanager.dispatch(this.interfaceName + '_afterSave', {'response': orderData});\n            },\n\n            sendEmail: function(jsObject, email, model, deferred){\n                var self = this;\n                var id = model.getData().entity_id;\n                var url = '/webpos/orders/:id/emails';\n                this.callRestApi(url, 'post', {id: id}, {email: email}, deferred);\n            },\n            \n            addComment: function(orderData, comment, model, deferred){\n                var self = this;\n                if(comment && comment.statusHistory){\n                    if(!orderData.status_histories)\n                        orderData.status_histories = [];\n                    orderData.status_histories.push(comment.statusHistory);\n                }\n                var id = model.getData().entity_id;\n                var url = '/webpos/orders/:id/comments';\n                this.callRestApi(url, 'post', {id: id}, comment, deferred, this.interfaceName + '_afterSave');\n                eventmanager.dispatch('sales_order_add_comment_after', {'response': orderData});\n                eventmanager.dispatch(this.interfaceName + '_afterSave', {'response': orderData});\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/sales/order/invoice.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract',\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            createApiUrl: '/webpos/invoices/create',\n            interfaceName: 'sales_order_invoice',\n            initialize: function () {\n                this._super();\n            },\n            \n            save: function(model, deferred){\n                if(!deferred) {\n                    deferred = $.Deferred();\n                }\n                this.callRestApi(this.createApiUrl, 'post', {}, model.getPostData(), deferred, this.interfaceName + '_afterSave');\n                return deferred;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/sales/order/creditmemo.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract',\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            createApiUrl: '/webpos/creditmemo/create',\n            interfaceName: 'sales_order_creditmemo',\n            \n            initialize: function () {\n                this._super();\n            },\n            \n            save: function(model, deferred){\n                if(!deferred) {\n                    deferred = $.Deferred();\n                }\n                this.callRestApi(this.createApiUrl, 'post', {}, model.getPostData(), deferred, this.interfaceName + '_afterSave');\n                return deferred;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/sales/order/shipment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract',\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            createUrl: '/webpos/shipment/create',\n            interfaceName: 'sales_order_shipment',\n            \n            initialize: function () {\n                this._super();\n            },\n            \n            save: function(model, deferred){\n                if(!deferred) {\n                    deferred = $.Deferred();\n                }\n                this.callRestApi(this.createUrl, 'post', {}, model.getPostData(), deferred, this.interfaceName + '_afterSave');\n                return deferred;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/sales/order/payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract',\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            createApiUrl: '/webpos/orders/:id/payments',\n            interfaceName: 'sales_order_take_payment',\n            initialize: function () {\n                this._super();\n            },\n            \n            save: function(model, deferred){\n                if(!deferred) {\n                    deferred = $.Deferred();\n                }\n                this.callRestApi(this.createApiUrl, 'post', {'id': model.getData().entity_id},\n                    model.getPostData(), deferred, this.interfaceName + '_afterSave');\n                return deferred;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/shift/shift.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            \n            interfaceName:'shift',\n            initialize: function () {\n                this._super();\n                this.setCreateApiUrl('/webpos/shifts/save');\n                this.setUpdateApiUrl('/webpos/shifts/save/');\n                this.setSearchApiUrl('/webpos/shifts/getlist');\n            },\n            createShift: function(params,deferred, callback){\n                var apiUrl =  \"/webpos/shifts/save\";\n                var urlParams = {};\n                var postData = {};\n                postData.shift = params;\n\n                if(callback){\n                    this.callRestApi(apiUrl, \"post\", urlParams, postData, deferred, callback);\n                }\n                else{\n                    this.callRestApi(apiUrl, \"post\", urlParams, postData, deferred);\n                }\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/shift/cash-transaction.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            interfaceName:'cashTransaction',\n            initialize: function () {\n                this._super();\n                //this.setLoadApi('/webpos/shifts/detail');\n                this.setCreateApiUrl('/webpos/cash_transaction/save');\n                //this.setUpdateApiUrl('/webpos/customers/');\n                //this.setDeleteApiUrl('/webpos/customers/:customerId?customerId=');\n                this.setSearchApiUrl('/webpos/shifts/getlist')\n            },\n            createTransaction: function(params,deferred, callback){\n                var apiUrl =  \"/webpos/cash_transaction/save\";\n                var urlParams = {};\n                var postData = {};\n                postData.cashTransaction = params;\n                if(callback){\n                    this.callRestApi(apiUrl, \"post\", urlParams, postData, deferred, callback);\n                }\n                else{\n                    this.callRestApi(apiUrl, \"post\", urlParams, postData, deferred);\n                }\n\n            },\n\n\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/checkout/checkout.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/abstract'\n    ],\n    function (onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.apiGetShippingRateUrl = \"/webpos/checkout/getShippingRates\";\n                this.apiCheckPromotionUrl = \"/webpos/checkout/checkPromotion\";\n                this.apiCreateOrderUrl = \"/webpos/checkout/create\";\n                this.apiSubmitOnlineOrderUrl = \"/webpos/checkout/submitonline\";\n                this.apiSubmitQuoteOnlineUrl = \"/webpos/checkout/submitquote\";\n                this.apiSendEmailUrl = \"/webpos/checkout/sendEmail\";\n                this.apiUnholdUrl = \"/webpos/checkout/unhold\";\n                this.apiSaveQuoteDataUrl = \"/webpos/checkout/saveQuoteData\";\n                this.apiSelectCustomerUrl = \"/webpos/checkout/saveCart\";\n                this.apiApplyCouponUrl = \"/webpos/checkout/applyCoupon\";\n                this.apiCancelCouponUrl = \"/webpos/checkout/applyCoupon\";\n                this.apiPlaceOrderUrl = \"/webpos/checkout/placeOrder\";\n                this.apiSavePaymentMethodUrl = \"/webpos/checkout/savePaymentMethod\";\n                this.apiSaveShippingMethodUrl = \"/webpos/checkout/saveShippingMethod\";\n                this.apiGetCartDataUrl = \"/webpos/checkout/getCartData\";\n                this.apiGetShippingUrl = \"/webpos/checkout/getShipping\";\n                this.apiGetPaymentUrl = \"/webpos/checkout/getPayment\";\n                this.apiGetPaymentRequestUrl = \"/webpos/checkout/getPaymentRequest\";\n            },\n            getCallBackEvent: function(key){\n                switch(key){\n                    case \"saveQuoteData\":\n                        return \"save_quote_data_online_after\";\n                    case \"selectCustomer\":\n                        return \"select_customer_online_after\";\n                    case \"applyCoupon\":\n                        return \"apply_coupon_online_after\";\n                    case \"cancelCoupon\":\n                        return \"cancel_coupon_online_after\";\n                    case \"placeOrder\":\n                        return \"place_order_online_after\";\n                    case \"saveShippingMethod\":\n                        return \"save_shipping_method_online_after\";\n                    case \"savePaymentMethod\":\n                        return \"save_payment_method_online_after\";\n                    case \"getCartData\":\n                        return \"get_cart_data_online_after\";\n                    case \"getShipping\":\n                        return \"get_shipping_online_after\";\n                    case \"getPayment\":\n                        return \"get_payment_online_after\";\n                    case \"createOrder\":\n                        return \"sync_offline_order_after\";\n                    case \"getPaymentRequest\":\n                        return \"get_payment_request_after\";\n                }\n            },\n            setApiUrl: function(key,value){\n                switch(key){\n                    case \"apiSaveQuoteDataUrl\":\n                        this.apiSaveQuoteDataUrl = value;\n                        break;\n                    case \"apiSelectCustomerUrl\":\n                        this.apiSelectCustomerUrl = value;\n                        break;\n                    case \"apiApplyCouponUrl\":\n                        this.apiApplyCouponUrl = value;\n                        break;\n                    case \"apiCancelCouponUrl\":\n                        this.apiCancelCouponUrl = value;\n                        break;\n                    case \"apiPlaceOrderUrl\":\n                        this.apiPlaceOrderUrl = value;\n                        break;\n                    case \"apiSavePaymentMethodUrl\":\n                        this.apiSavePaymentMethodUrl = value;\n                        break;\n                    case \"apiSaveShippingMethodUrl\":\n                        this.apiSaveShippingMethodUrl = value;\n                        break;\n                    case \"apiGetShippingUrl\":\n                        this.apiGetShippingUrl = value;\n                        break;\n                    case \"apiGetCartDataUrl\":\n                        this.apiGetCartDataUrl = value;\n                        break;\n                    case \"apiGetPaymentUrl\":\n                        this.apiGetPaymentUrl = value;\n                        break;\n                    case \"apiGetShippingRateUrl\":\n                        this.apiGetShippingRateUrl = value;\n                        break;\n                    case \"apiCheckPromotionUrl\":\n                        this.apiCheckPromotionUrl = value;\n                        break;\n                    case \"apiCreateOrderUrl\":\n                        this.apiCreateOrderUrl = value;\n                        break;\n                    case \"apiSubmitOnlineOrderUrl\":\n                        this.apiSubmitOnlineOrderUrl = value;\n                        break;\n                    case \"apiSubmitQuoteOnlineUrl\":\n                        this.apiSubmitQuoteOnlineUrl = value;\n                        break;\n                    case \"apiSendEmailUrl\":\n                        this.apiSendEmailUrl = value;\n                        break;\n                    case \"apiUnholdUrl\":\n                        this.apiUnholdUrl = value;\n                        break;\n                    case \"apiGetPaymentRequestUrl\":\n                        this.apiGetPaymentRequestUrl = value;\n                        break;\n                }\n            },\n            getApiUrl: function(key){\n                switch(key){\n                    case \"apiSaveQuoteDataUrl\":\n                        return this.apiSaveQuoteDataUrl;\n                    case \"apiSelectCustomerUrl\":\n                        return this.apiSelectCustomerUrl;\n                    case \"apiApplyCouponUrl\":\n                        return this.apiApplyCouponUrl;\n                    case \"apiCancelCouponUrl\":\n                        return this.apiCancelCouponUrl;\n                    case \"apiPlaceOrderUrl\":\n                        return this.apiPlaceOrderUrl;\n                    case \"apiGetPaymentRequestUrl\":\n                        return this.apiGetPaymentRequestUrl;\n                    case \"apiSavePaymentMethodUrl\":\n                        return this.apiSavePaymentMethodUrl;\n                    case \"apiSaveShippingMethodUrl\":\n                        return this.apiSaveShippingMethodUrl;\n                    case \"apiGetCartDataUrl\":\n                        return this.apiGetCartDataUrl;\n                    case \"apiGetShippingUrl\":\n                        return this.apiGetShippingUrl;\n                    case \"apiGetPaymentUrl\":\n                        return this.apiGetPaymentUrl;\n                    case \"apiGetShippingRateUrl\":\n                        return this.apiGetShippingRateUrl;\n                    case \"apiCheckPromotionUrl\":\n                        return this.apiCheckPromotionUrl;\n                    case \"apiCreateOrderUrl\":\n                        return this.apiCreateOrderUrl;\n                    case \"apiSubmitOnlineOrderUrl\":\n                        return this.apiSubmitOnlineOrderUrl;\n                    case \"apiSubmitQuoteOnlineUrl\":\n                        return this.apiSubmitQuoteOnlineUrl;\n                    case \"apiSendEmailUrl\":\n                        return this.apiSendEmailUrl;\n                    case \"apiUnholdUrl\":\n                        return this.apiUnholdUrl;\n                }\n            },\n            getShippingRates: function(params,deferred){\n                var apiUrl,\n                    urlParams;\n                apiUrl = this.getApiUrl(\"apiGetShippingRateUrl\");\n                urlParams = {};\n                this.callRestApi(apiUrl, \"post\", urlParams, params, deferred);\n            },\n            submitOnlineOrder: function(params,deferred){\n                var apiUrl,\n                    urlParams;\n                apiUrl = this.getApiUrl(\"apiSubmitOnlineOrderUrl\");\n                urlParams = {};\n                this.callRestApi(apiUrl, \"post\", urlParams, params, deferred);\n            },\n            submitQuoteOnline: function(params,deferred){\n                var apiUrl,\n                    urlParams,\n                    callBackEvent;\n                apiUrl = this.getApiUrl(\"apiSubmitQuoteOnlineUrl\");\n                callBackEvent = this.getCallBackEvent(\"createOrder\");\n                urlParams = {};\n                this.callRestApi(apiUrl, \"post\", urlParams, params, deferred, callBackEvent);\n            },\n            sendEmail: function(params,deferred){\n                var apiUrl,\n                    urlParams;\n                apiUrl = this.getApiUrl(\"apiSendEmailUrl\");\n                urlParams = {};\n                this.callRestApi(apiUrl, \"post\", urlParams, params, deferred);\n            },\n            unholdOrder: function(params,deferred){\n                var apiUrl,\n                    urlParams;\n                apiUrl = this.getApiUrl(\"apiUnholdUrl\");\n                urlParams = {};\n                this.callRestApi(apiUrl, \"post\", urlParams, params, deferred);\n            },\n            /**\n             * API to get cart information\n             * @param params\n             * @param deferred\n             */\n            getCartData: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiGetCartDataUrl\");\n                var callBackEvent = this.getCallBackEvent(\"getCartData\");\n                this.callApi(apiUrl, params, deferred, callBackEvent);\n            },\n            /**\n             * API to get list shipping method\n             * @param params\n             * @param deferred\n             */\n            getShipping: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiGetShippingUrl\");\n                var callBackEvent = this.getCallBackEvent(\"getShipping\");\n                this.callApi(apiUrl, params, deferred, callBackEvent);\n            },\n            /**\n             * API to get list payment method\n             * @param params\n             * @param deferred\n             */\n            getPayment: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiGetPaymentUrl\");\n                var callBackEvent = this.getCallBackEvent(\"getPayment\");\n                this.callApi(apiUrl, params, deferred, callBackEvent);\n            },\n            /**\n             * API to check promotion discount - offline checkout\n             * @param params\n             * @param deferred\n             */\n            checkPromotion: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiCheckPromotionUrl\");\n                this.callApi(apiUrl, params, deferred);\n            },\n            /**\n             * API to set customer for online quote\n             * @param params\n             * @param deferred\n             */\n            selectCustomer: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiSelectCustomerUrl\");\n                var callBackEvent = this.getCallBackEvent(\"selectCustomer\");\n                this.callApi(apiUrl, params, deferred, callBackEvent);\n            },\n            /**\n             * API to sync order - offline checkout\n             * @param params\n             * @param deferred\n             */\n            createOrder: function(params,deferred){\n                var apiUrl,\n                    urlParams,\n                    callBackEvent;\n                apiUrl = this.getApiUrl(\"apiCreateOrderUrl\");\n                callBackEvent = this.getCallBackEvent(\"createOrder\");\n                urlParams = {};\n                this.callRestApi(apiUrl, \"post\", urlParams, params, deferred, callBackEvent);\n            },\n            /**\n             * API to save shipping method\n             * @param params\n             * @param deferred\n             */\n            saveShippingMethod: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiSaveShippingMethodUrl\");\n                var callBackEvent = this.getCallBackEvent(\"saveShippingMethod\");\n                this.callApi(apiUrl, params, deferred, callBackEvent);\n            },\n            /**\n             * API to save payment method\n             * @param params\n             * @param deferred\n             */\n            savePaymentMethod: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiSavePaymentMethodUrl\");\n                var callBackEvent = this.getCallBackEvent(\"savePaymentMethod\");\n                this.callApi(apiUrl, params, deferred, callBackEvent);\n            },\n            /**\n             * API place order\n             * @param params\n             * @param deferred\n             */\n            placeOrder: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiPlaceOrderUrl\");\n                var callBackEvent = this.getCallBackEvent(\"placeOrder\");\n                this.callApi(apiUrl, params, deferred, callBackEvent);\n            },\n            /**\n             * API get payment request\n             * @param params\n             * @param deferred\n             */\n            getPaymentRequest: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiGetPaymentRequestUrl\");\n                var callBackEvent = this.getCallBackEvent(\"getPaymentRequest\");\n                this.callApi(apiUrl, params, deferred, callBackEvent);\n            },\n            /**\n             * API apply coupon\n             * @param params\n             * @param deferred\n             */\n            applyCoupon: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiApplyCouponUrl\");\n                var callBackEvent = this.getCallBackEvent(\"applyCoupon\");\n                this.callApi(apiUrl, params, deferred, callBackEvent);\n            },\n            /**\n             * API cancel coupon\n             * @param params\n             * @param deferred\n             */\n            cancelCoupon: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiCancelCouponUrl\");\n                var callBackEvent = this.getCallBackEvent(\"cancelCoupon\");\n                this.callApi(apiUrl, params, deferred, callBackEvent);\n            },\n            /**\n             * API save quote data\n             * @param params\n             * @param deferred\n             */\n            saveQuoteData: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiSaveQuoteDataUrl\");\n                var callBackEvent = this.getCallBackEvent(\"apiSaveQuoteDataUrl\");\n                this.callApi(apiUrl, params, deferred, callBackEvent);\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/checkout/taxrate.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setSearchApiUrl('/webpos/taxrate/list/');\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/checkout/cart.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/abstract'\n    ],\n    function (onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.apiSaveCartUrl = \"/webpos/checkout/saveCart\";\n                this.apiRemoveCartUrl = \"/webpos/checkout/removeCart\";\n                this.apiRemoveItemUrl = \"/webpos/checkout/removeItem\";\n            },\n            getCallBackEvent: function(key){\n                switch(key){\n                    case \"saveCart\":\n                        return \"save_cart_online_after\";\n                    case \"removeCart\":\n                        return \"remove_cart_online_after\";\n                    case \"removeItem\":\n                        return \"remove_item_online_after\";\n                }\n            },\n            setApiUrl: function(key,value){\n                switch(key){\n                    case \"apiSaveCartUrl\":\n                        this.apiSaveCartUrl = value;\n                        break;\n                    case \"apiRemoveCartUrl\":\n                        this.apiRemoveCartUrl = value;\n                        break;\n                    case \"apiRemoveItemUrl\":\n                        this.apiRemoveItemUrl = value;\n                        break;\n                }\n            },\n            getApiUrl: function(key){\n                switch(key){\n                    case \"apiSaveCartUrl\":\n                        return this.apiSaveCartUrl;\n                    case \"apiRemoveCartUrl\":\n                        return this.apiRemoveCartUrl;\n                    case \"apiRemoveItemUrl\":\n                        return this.apiRemoveItemUrl;\n                }\n            },\n            saveCartBeforeCheckout: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiSaveCartUrl\");\n                var callBackEvent = this.getCallBackEvent(\"saveCart\");\n                this.callApi(apiUrl, params, deferred, callBackEvent);\n            },\n            saveCart: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiSaveCartUrl\");\n                this.callApi(apiUrl, params, deferred);\n            },\n            removeCart: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiRemoveCartUrl\");\n                var callBackEvent = this.getCallBackEvent(\"removeCart\");\n                this.callApi(apiUrl, params, deferred, callBackEvent, 'post');\n            },\n            removeItem: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiRemoveItemUrl\");\n                var callBackEvent = this.getCallBackEvent(\"removeItem\");\n                this.callApi(apiUrl, params, deferred, callBackEvent, 'post');\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/checkout/taxrule.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setSearchApiUrl('/webpos/taxrule/list/');\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/checkout/shipping.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setSearchApiUrl('/webpos/shippings/');\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/checkout/abstract.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, Helper, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n            },\n            getCallBackEvent: function(key){\n            },\n            setApiUrl: function(key,value){\n            },\n            getApiUrl: function(key){\n            },\n            /**\n             * Function to send API request and control respose\n             * @param apiUrl\n             * @param params\n             * @param deferred\n             * @param callBackEvent\n             * @param method\n             */\n            callApi: function(apiUrl, params, deferred, callBackEvent, method){\n                var self = this;\n                method = (method)?method:'post';\n                self.callRestApi(apiUrl, method, {}, params, deferred, callBackEvent);\n                deferred.done(function (response) {\n                    if(typeof response == 'string'){\n                        response = JSON.parse(response);\n                    }\n                    self.processResponseData(response);\n                }).fail(function (response) {\n                    if(typeof response == 'string'){\n                        response = JSON.parse(response);\n                    }\n                    if(response.responseText){\n                        var error = JSON.parse(response.responseText);\n                        if(error.message != undefined){\n                            Helper.alert({priority:\"danger\",title: Helper.__(\"Error\"),message: error.message});\n                        }\n                    }else{\n                        Helper.alert({priority:\"danger\",title: Helper.__(\"Error\"),message: Helper.__('Please check your network connection. Or disable checkout online to continue.')});\n                    }\n                }).always(function(response){\n                    if(typeof response == 'string'){\n                        response = JSON.parse(response);\n                    }\n                    response = (response.responseText)?JSON.parse(response.responseText):response;\n                    if(response.messages){\n                        self.processResponseMessages(response.messages, response.status);\n                    }\n                });\n            },\n            /**\n             * Function to process response data - update sections - online checkout\n             * @param data\n             */\n            processResponseData: function(data){\n                var self = this;\n                if(data){\n                    Helper.dispatchEvent('checkout_call_api_after', {\n                        data: data\n                    });\n                    if (typeof data.quote_id != 'undefined' && !data.quote_id) {\n                        data.quote_init = {quote_id: \"\", customer_id: \"\"};\n                    }\n                    if (data.quote_init && !data.quote_init.customer_id) {\n                        data.quote_init.customer_id = \"\";\n                    }\n                    Helper.dispatchEvent('init_quote_online_after', {\n                        data: data.quote_init\n                    });\n                    if(!data.increment_id) {\n                        if (data.shipping) {\n                            Helper.dispatchEvent('load_shipping_online_after', {\n                                items: data.shipping\n                            });\n                        }\n                        if (data.totals) {\n                            Helper.dispatchEvent('load_totals_online_after', {\n                                items: data.totals\n                            });\n                        }\n                        if (data.payment) {\n                            Helper.dispatchEvent('load_payment_online_after', {\n                                items: data.payment\n                            });\n                        }\n                        if (data.items) {\n                            Helper.dispatchEvent('load_items_online_after', {\n                                items: data.items\n                            });\n                            Helper.dispatchEvent('collect_totals', '');\n                        }\n                    }\n                }\n\n            },\n            /**\n             * Function to process API response messages\n             * @param messages\n             */\n            processResponseMessages: function(messages, status){\n                if(messages && messages.error){\n                    $.each(messages.error, function(index, message){\n                        if(message.message){\n                            Helper.alert({\n                                priority: 'danger',\n                                title: Helper.__('Error'),\n                                message: message.message\n                            });\n                        }\n                    });\n                }\n                if(messages && messages.success){\n                    $.each(messages.success, function(index, message){\n                        if(message.message){\n                            Helper.alert({\n                                priority: 'success',\n                                title: Helper.__('Message'),\n                                message: message.message\n                            });\n                        }\n                    });\n                }\n                if($.isArray(messages)){\n                    var priority = (status == '1')?'success':'danger';\n                    var title = (status == '1')?'Message':'Error';\n                    $.each(messages, function(index, message){\n                        Helper.alert({\n                            priority: priority,\n                            title: Helper.__(title),\n                            message: message\n                        });\n                    });\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/checkout/payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setSearchApiUrl('/webpos/payments/');\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/checkout/taxclass.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setSearchApiUrl('/webpos/taxclass/list');\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/staff/staff.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($,onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();;\n                this.setChangePassWordApiUrlApiUrl('/webpos/staff/changepassword');\n            },\n            /* Set changePassWord Api Url*/\n            setChangePassWordApiUrlApiUrl: function (changePassWord) {\n                this.changePassWordApiUrl = changePassWord;\n            },\n            changePassWord: function(postData, deferred){\n                if(!deferred) {\n                    deferred = $.Deferred();\n                }\n                if(this.changePassWordApiUrl) {\n                    this.callRestApi(\n                        this.changePassWordApiUrl,\n                        'post',\n                        {},\n                        postData,\n                        deferred\n                    );\n                }\n                return deferred;\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/integration/giftcard/gift-card.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/abstract'\n    ],\n    function (onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.apiRemoveGiftcardUrl = \"/webpos/integration/removeGiftcard\";\n                this.apiApplyGiftcardUrl = \"/webpos/integration/applyGiftcard\";\n                this.apiGetGiftcardBalanceUrl = \"/webpos/integration/getGiftcardBalance\";\n                this.apiRefundGiftcardBalanceUrl = \"/webpos/integration/refundGiftcardBalance\";\n            },\n            getCallBackEvent: function(key){\n                switch(key){\n\n                }\n            },\n            setApiUrl: function(key,value){\n                switch(key){\n                    case \"apiRemoveGiftcardUrl\":\n                        this.apiRemoveGiftcardUrl = value;\n                        break;\n                    case \"apiApplyGiftcardUrl\":\n                        this.apiApplyGiftcardUrl = value;\n                        break;\n                    case \"apiGetGiftcardBalanceUrl\":\n                        this.apiGetGiftcardBalanceUrl = value;\n                        break;\n                    case \"apiRefundGiftcardBalanceUrl\":\n                        this.apiRefundGiftcardBalanceUrl = value;\n                        break;\n                }\n            },\n            getApiUrl: function(key){\n                switch(key){\n                    case \"apiRemoveGiftcardUrl\":\n                        return this.apiRemoveGiftcardUrl;\n                    case \"apiApplyGiftcardUrl\":\n                        return this.apiApplyGiftcardUrl;\n                    case \"apiGetGiftcardBalanceUrl\":\n                        return this.apiGetGiftcardBalanceUrl;\n                    case \"apiRefundGiftcardBalanceUrl\":\n                        return this.apiRefundGiftcardBalanceUrl;\n                }\n            },\n            removeGiftcard: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiRemoveGiftcardUrl\");\n                this.callApi(apiUrl, params, deferred);\n            },\n            applyGiftcard: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiApplyGiftcardUrl\");\n                this.callApi(apiUrl, params, deferred);\n            },\n            getBalance: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiGetGiftcardBalanceUrl\");\n                this.callApi(apiUrl, params, deferred);\n            },\n            refundToBalance: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiRefundGiftcardBalanceUrl\");\n                this.callApi(apiUrl, params, deferred);\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/integration/storecredit/store-credit.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/abstract'\n    ],\n    function (onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setSearchApiUrl('/webpos/integration/getCreditList');\n                this.apiGetCreditBalanceUrl = \"/webpos/integration/getCreditBalance\";\n                this.apiRefundByCreditUrl = \"/webpos/integration/refundByCredit\";\n            },\n            getCallBackEvent: function(key){\n                switch(key){\n\n                }\n            },\n            setApiUrl: function(key,value){\n                switch(key){\n                    case \"apiGetCreditBalanceUrl\":\n                        this.apiGetCreditBalanceUrl = value;\n                        break;\n                    case \"apiRefundByCreditUrl\":\n                        this.apiRefundByCreditUrl = value;\n                        break;\n                }\n            },\n            getApiUrl: function(key){\n                switch(key){\n                    case \"apiGetCreditBalanceUrl\":\n                        return this.apiGetCreditBalanceUrl;\n                    case \"apiRefundByCreditUrl\":\n                        return this.apiRefundByCreditUrl;\n                }\n            },\n            getBalance: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiGetCreditBalanceUrl\");\n                this.callApi(apiUrl, params, deferred);\n            },\n            refund: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiRefundByCreditUrl\");\n                this.callApi(apiUrl, params, deferred);\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/integration/rewardpoints/reward-points.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/abstract'\n    ],\n    function (onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setSearchApiUrl('/webpos/integration/getCustomerPoints');\n                this.apiGetPointBalanceUrl = \"/webpos/integration/getPointBalance\";\n                this.apiSpendPointUrl = \"/webpos/integration/spendPoint\";\n            },\n            getCallBackEvent: function(key){\n                switch(key){\n\n                }\n            },\n            setApiUrl: function(key,value){\n                switch(key){\n                    case \"apiGetPointBalanceUrl\":\n                        this.apiGetPointBalanceUrl = value;\n                        break;\n                    case \"apiSpendPointUrl\":\n                        this.apiSpendPointUrl = value;\n                        break;\n                }\n            },\n            getApiUrl: function(key){\n                switch(key){\n                    case \"apiGetPointBalanceUrl\":\n                        return this.apiGetPointBalanceUrl;\n                    case \"apiSpendPointUrl\":\n                        return this.apiSpendPointUrl;\n                }\n            },\n            getBalance: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiGetPointBalanceUrl\");\n                this.callApi(apiUrl, params, deferred);\n            },\n            spendPoint: function(params,deferred){\n                var apiUrl = this.getApiUrl(\"apiSpendPointUrl\");\n                this.callApi(apiUrl, params, deferred);\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/integration/rewardpoints/rate.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this.keyPath = 'rate_id';\n                this.interfaceName = 'rate';\n                this.interfaceNames = 'rates';\n                this._super();\n                this.setSearchApiUrl('/webpos/integration/getPointRates/')\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/directory/currency.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setSearchApiUrl('/webpos/currencies/');\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/directory/country.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setSearchApiUrl('/webpos/countries/');\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/config/config.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function (onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setLoadApi('/webpos/configurations/:id?path=');\n                this.setSearchApiUrl('/webpos/configurations')\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/catalog/category.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setLoadApi('/webpos/categories/:categoryId?categoryId=');\n                //this.setCreateApiUrl('/webpos/products');\n                //this.setUpdateApiUrl('/webpos/customers/');\n                //this.setDeleteApiUrl('/webpos/customers/:customerId?customerId=');\n                this.setSearchApiUrl('/webpos/categories')\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/catalog/product.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract',\n        'Magestore_Webpos/js/model/config/local-config',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function ($, onlineAbstract, localConfig, Event) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setLoadApi('/webpos/products/:productId?productId=');\n                //this.setCreateApiUrl('/webpos/products');\n                //this.setUpdateApiUrl('/webpos/customers/');\n                //this.setDeleteApiUrl('/webpos/customers/:customerId?customerId=');\n                this.initSearchApiUrl();\n                this.initEvents();\n            },\n            initEvents: function(){\n                var self = this;\n                Event.observer('webpos_config_change_after', function(event, data){\n                    if(data.config && (data.config.configPath == 'catalog/outstock-display')){\n                        self.initSearchApiUrl();\n                    }\n                });\n            },\n            initSearchApiUrl: function(){\n                var searchApiUrl = \"/webpos/products\";\n                if(localConfig.get('catalog/outstock-display') == 1){\n                    searchApiUrl += \"?show_out_stock=1\";\n                }else{\n                    searchApiUrl += \"?show_out_stock=0\";\n                }\n                this.setSearchApiUrl(searchApiUrl);\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/catalog/product/swatch.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function (onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setSearchApiUrl('/webpos/products/swatch/search')\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/inventory/location.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this.keyPath = 'location_id';\n                this.interfaceName = 'location';\n                this.interfaceNames = 'locations';\n                this._super();\n                this.setLoadApi('/webpos/locations/');\n                //this.setCreateApiUrl('/webpos/locations');\n                //this.setUpdateApiUrl('/webpos/locations/');\n                //this.setMassUpdateApiUrl('/webpos/locations/');\n                //this.setDeleteApiUrl('/webpos/locations/');\n                this.setSearchApiUrl('/webpos/locations')\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/inventory/stock-item.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this.keyPath = 'item_id';\n                this.interfaceName = 'stockItem';\n                this.interfaceNames = 'stockItems';\n                this._super();\n                //this.setLoadApi('/webpos/stockItems/');\n                //this.setCreateApiUrl('/webpos/products');\n                this.setUpdateApiUrl('/webpos/stockItems/');\n                this.setMassUpdateApiUrl('/webpos/stockItems/');\n                //this.setDeleteApiUrl('/webpos/customers/:customerId?customerId=');\n                this.setSearchApiUrl('/webpos/stockItems')\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/customer/complain.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            interfaceName:'complain',\n            initialize: function () {\n                this._super();\n                this.setSearchApiUrl('/webpos/customers/complain/search');\n                this.setCreateApiUrl('/webpos/customers/complain');\n                this.setUpdateApiUrl('/webpos/customers/complain/');\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/customer/group.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setSearchApiUrl('/webpos/customerGroups/search')\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/resource-model/magento-rest/customer/customer.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/abstract'\n    ],\n    function ($, onlineAbstract) {\n        \"use strict\";\n\n        return onlineAbstract.extend({\n            interfaceName:'customer',\n            type:'customer',\n            keyPath: 'id',\n            initialize: function () {\n                this._super();\n                this.setLoadApi('/webpos/customers/:id?customerId=');\n                this.setCreateApiUrl('/webpos/customers');\n                this.setUpdateApiUrl('/webpos/customers/');\n                this.setDeleteApiUrl('/webpos/customers/:customerId?customerId=');\n                this.setSearchApiUrl('/webpos/customers/search');\n            },\n            /* save*/\n            save : function(model, deferred){\n                if(!deferred) {\n                    deferred = $.Deferred();\n                }\n                var postData = {};\n                var customer = model.getData();\n                var addressData = customer.addresses;\n                var newAddressData = [];\n\n                if (addressData instanceof Array) {\n                    $.each(addressData, function (index, value) {\n                        var addressId = value.id.toString();\n\n                        if (addressId.indexOf('nsync') !== -1) {\n                            delete value['id'];\n                        }\n\n                        if (value['region_id'] == '') {\n                            value['region_id'] = 0;\n                        }\n                        newAddressData.push(value);\n\n                    });\n                }\n\n                customer.addresses = newAddressData;\n\n                if(this.interfaceName){\n                    postData[this.interfaceName] = this.prepareSaveData(customer);\n                }\n                else{\n                    postData =  this.prepareSaveData(customer);\n                }\n\n\n                this.callRestApi(\n                    this.createApiUrl,\n                    'post',\n                    {},\n                    postData,\n                    deferred,\n                    this.interfaceName + '_afterSave'\n                );\n                return deferred;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/sales/order.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/sales/order',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/sales/order',\n        'Magestore_Webpos/js/model/collection/sales/order'\n    ],\n    function ($, modelAbstract, orderRest, orderIndexedDb, orderCollection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'order',\n            initialize: function () {\n                this._super();\n                this.setResource(orderRest(), orderIndexedDb());\n                this.setResourceCollection(orderCollection());\n            },\n\n            canSync: function(){\n                return this.data.state === 'notsync' && this.data.error;\n            },\n            \n            isOnHold: function(){\n                return ((this.data.state === 'onhold') || (this.data.state === 'holded'));\n            },\n            \n            isCanceled: function(){\n                return this.data.state === 'canceled';\n            },\n            \n            isNotSync: function(){\n                return this.data.state === 'notsync';\n            },\n\n            isNew: function(){\n                return this.data.state === 'new';\n            },\n            \n            isPaymentReview: function () {\n                return this.data.state === 'payment_review';\n            },\n\n            getIsVirtual: function () {\n                return this.data.is_virtual;\n            },\n\n            canCancel: function(){\n                if (this.canUnhold()) {\n                    return false;\n                }\n                if(this.isCanceled() || this.data.state === 'complete' || this.data.state === 'closed')\n                    return false;\n                var allInvoiced = true;\n                $.each(this.data.items, function(index, value){\n                    if(parseFloat(value.qty_ordered) - parseFloat(value.qty_invoiced) - parseFloat(value.qty_canceled) > 0) {\n                        allInvoiced = false;\n                    }\n                });\n                if (allInvoiced) {\n                    return false;\n                }\n                return true;\n            },\n\n            canInvoice: function(){\n                if(this.canUnhold() || this.isPaymentReview())\n                    return false;\n                if(this.isCanceled() || this.data.state === 'complete' || this.data.state === 'closed')\n                    return false;\n                var allInvoiced = true;\n                $.each(this.data.items, function(index, value){\n                    if(parseFloat(value.qty_ordered) - parseFloat(value.qty_invoiced) - parseFloat(value.qty_canceled) > 0)\n                        allInvoiced = false;\n                });\n                if (!allInvoiced) \n                    return true;\n                return false;\n            },\n\n            canShip: function () {\n                if(this.canUnhold() || this.isPaymentReview())\n                    return false;\n                if (this.getIsVirtual() == 1 || this.isCanceled() == 1) {\n                    return false;\n                }\n                var allShip = true;\n                $.each(this.data.items, function(index, value){\n                    if (value.product_type == 'customsale' && value.is_virtual == 1) {\n                        return true;\n                    }\n                    if (value.product_type == 'simple' && value.parent_item_id) {\n                        return true;\n                    }\n                    if(parseFloat(value.qty_ordered) - parseFloat(value.qty_shipped) - parseFloat(value.qty_refunded) - parseFloat(value.qty_canceled)>0)\n                        allShip = false;\n                });\n                if (!allShip)\n                    return true;\n                return false;\n            },\n\n            canCreditmemo: function(){\n                if (this.canUnhold() || this.isPaymentReview())\n                    return false;\n                if (this.isNew() || this.isCanceled() || this.data.state === 'closed' || this.data.grand_total == 0)\n                    return false;\n                if(typeof this.data.total_refunded != 'undefined'){\n                    if(parseFloat(this.data.total_paid) - parseFloat(this.data.total_refunded) < 0.0001)\n                        return false;\n                }\n                return true;\n            },\n\n            canUnhold: function () {\n                if(this.isPaymentReview())\n                    return false;\n                return this.data.state === 'holded';\n            },\n\n            canTakePayment: function(){\n                if(this.isCanceled() || this.isNotSync() || this.canUnhold() || this.data.webpos_paypal_invoice_id)\n                    return false;\n                var allInvoicedAndCanceled = true;\n                if(this.data.items.length>0){\n                    $.each(this.data.items, function(index, value){\n                        if(value.qty_ordered > value.qty_canceled)\n                            allInvoicedAndCanceled = false;\n                    });\n                }\n                if(allInvoicedAndCanceled)\n                    return false;\n\n                if(this.data.base_total_due && this.data.base_total_due > 0)\n                    return true;\n                if(this.data.base_total_paid)\n                    return (this.data.base_grand_total - this.data.base_total_paid) > 0\n                return false;\n            },\n            \n            cancel: function(orderData, comment, deferred) {\n                this.getResource().cancelOrder(orderData, comment, this, deferred);\n            },\n            \n            sendEmail: function(jsObject, email, deferred){\n                this.getResource().sendEmail(jsObject, email, this, deferred);\n            },\n            \n            addComment: function(jsObject, comment, deferred){\n                this.getResource().addComment(jsObject, comment, this, deferred);\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/sales/order-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/sales/order',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/sales/order';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/sales/order/invoice.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/sales/order/invoice',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/sales/order/invoice',\n        'Magestore_Webpos/js/model/collection/sales/order/invoice',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function ($, modelAbstract, invoiceRest, invoiceIndexedDb, invoiceCollection, eventmanager) {\n        \"use strict\";\n        return modelAbstract.extend({\n            postData: {},\n            event_prefix: 'sales_order_invoice',\n            initialize: function () {\n                this._super();\n                this.setResource(invoiceRest(), invoiceIndexedDb());\n                this.setResourceCollection(invoiceCollection());\n            },\n            \n            setPostData: function(data){\n                this.postData = data;\n                return this;\n            },\n            \n            getPostData: function(){\n                return this.postData;   \n            },\n        });\n    }\n);","Magestore_Webpos/js/model/sales/order/creditmemo.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/sales/order/creditmemo',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/sales/order/creditmemo',\n        'Magestore_Webpos/js/model/collection/sales/order/creditmemo'\n    ],\n    function ($, modelAbstract, creditmemoRest, creditmemoIndexedDb, creditmemoCollection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            postData: {},\n            event_prefix: 'sales_order_creditmemo',\n            \n            initialize: function () {\n                this._super();\n                this.setResource(creditmemoRest(), creditmemoIndexedDb());\n                this.setResourceCollection(creditmemoCollection());\n            },\n            \n            setPostData: function(data){\n                this.postData = data;\n                return this;\n            },\n            \n            getPostData: function(){\n                return this.postData;   \n            },\n        });\n    }\n);","Magestore_Webpos/js/model/sales/order/total.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine([\n    'mage/translate'\n], function (__) {\n    'use strict';\n    return {\n        getTotalOrderView: function(){\n            return [\n                {totalName: 'base_subtotal_incl_tax', totalLabel: 'Subtotal', required: true, isPrice:true},\n                {totalName: 'rewardpoints_earn', totalLabel: 'Earned Points', required: false, isPrice:false, valueLabel:__('Points') },\n                {totalName: 'rewardpoints_spent', totalLabel: 'Spent Points', required: false, isPrice:false, valueLabel:__('Points')},\n                {totalName: 'base_shipping_amount', totalLabel: 'Shipping', required: true, isPrice:true},\n                {totalName: 'base_tax_amount', totalLabel: 'Tax', required: false, isPrice:true},\n                {totalName: 'base_discount_amount', totalLabel: 'Discount', required: false, isPrice:true},\n                {totalName: 'base_gift_voucher_discount', totalLabel: 'Gift Voucher', required: false, isPrice:true},\n                {totalName: 'rewardpoints_base_discount', totalLabel: 'Points Discount', required: false, isPrice:true},\n                {totalName: 'base_grand_total', totalLabel: 'Grand Total', required: true, isPrice:true},\n                {totalName: 'base_total_paid', totalLabel: 'Total Paid', required: true, isPrice:true},\n                {totalName: 'base_total_refunded', totalLabel: 'Total Refunded', required: false, isPrice:true},\n                {totalName: 'webpos_base_change', totalLabel: 'Change', required: false, isPrice:true},\n            ]\n        },\n\n        getTotalOrderHold: function(){\n            return [\n                {totalName: 'base_subtotal_incl_tax', totalLabel: 'Subtotal', required: true},\n                {totalName: 'base_shipping_amount', totalLabel: 'Shipping', required: true},\n                {totalName: 'base_tax_amount', totalLabel: 'Tax', required: false},\n                {totalName: 'base_discount_amount', totalLabel: 'Discount', required: false},\n                {totalName: 'base_grand_total', totalLabel: 'Grand Total', required: true}\n            ]\n        },\n\n        getTotalOrderPrint: function(){\n            return this.getTotalOrderView();\n        }\n    }\n});\n","Magestore_Webpos/js/model/sales/order/status.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n    'ko'\n    ], function (ko) {\n    'use strict';\n\n    return {\n        getStatusObject: function(){\n            return [\n                {statusClass: 'pending', statusTitle: 'Pending', statusLabel: 'Pending'},\n                {statusClass: 'processing', statusTitle: 'Processing', statusLabel: 'Processing'},\n                {statusClass: 'complete', statusTitle: 'Complete', statusLabel: 'Complete'},\n                {statusClass: 'canceled', statusTitle: 'Canceled', statusLabel: 'Cancelled'},\n                {statusClass: 'closed', statusTitle: 'Closed', statusLabel: 'Closed'},\n                {statusClass: 'notsync', statusTitle: 'Not Sync', statusLabel: 'Not Sync'}\n            ]\n        },\n\n        getStatusObjectView: function(){\n            return [\n                {statusClass: 'pending', statusTitle: 'Pending', statusLabel: 'Pending'},\n                {statusClass: 'processing', statusTitle: 'Processing', statusLabel: 'Processing'},\n                {statusClass: 'complete', statusTitle: 'Complete', statusLabel: 'Complete'},\n                {statusClass: 'canceled', statusTitle: 'Canceled', statusLabel: 'Cancelled'},\n                {statusClass: 'closed', statusTitle: 'Closed', statusLabel: 'Closed'},\n                {statusClass: 'notsync', statusTitle: 'Not Sync', statusLabel: 'Not Sync'},\n                {statusClass: 'holded', statusTitle: 'On Hold', statusLabel: 'On Hold'},\n                {statusClass: 'onhold', statusTitle: 'On Hold', statusLabel: 'On Hold'}\n            ];\n        },\n\n        getStatusArray: function(){\n            return ['pending','processing','complete','canceled','closed','notsync'];\n        }\n    }\n});\n","Magestore_Webpos/js/model/sales/order/shipment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/sales/order/shipment',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/sales/order/shipment',\n        'Magestore_Webpos/js/model/collection/sales/order/shipment'\n    ],\n    function ($, modelAbstract, shipmentRest, shipmentIndexedDb, shipmentCollection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            postData: {},\n            event_prefix: 'sales_order_shipment',\n            \n            initialize: function () {\n                this._super();\n                this.setResource(shipmentRest(), shipmentIndexedDb());\n                this.setResourceCollection(shipmentCollection());\n            },\n            \n            setPostData: function(data){\n                this.postData = data;\n                return this;\n            },\n            \n            getPostData: function(){\n                return this.postData;   \n            },\n        });\n    }\n);","Magestore_Webpos/js/model/sales/order/payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/sales/order/payment',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/sales/order/payment',\n        'Magestore_Webpos/js/model/collection/sales/order/payment',\n        'Magestore_Webpos/js/model/event-manager'\n    ],\n    function ($, modelAbstract, paymentRest, paymentIndexedDb, paymentCollection, eventmanager) {\n        \"use strict\";\n        return modelAbstract.extend({\n            postData: {},\n            data: '',\n            event_prefix: 'sales_order_take_payment',\n            initialize: function () {\n                this._super();\n                this.setResource(paymentRest(), paymentIndexedDb());\n                this.setResourceCollection(paymentCollection());\n            },\n            \n            setPostData: function(data){\n                this.postData = data;\n                return this;\n            },\n            \n            getPostData: function(){\n                return this.postData;   \n            },\n        });\n    }\n);","Magestore_Webpos/js/model/shift/current-shift.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'ko'\n    ],\n    function (ko) {\n        'use strict';\n\n        var shiftId = ko.observable(window.webposConfig.shiftId);\n\n\n        return {\n            shiftId: shiftId,\n\n            setShiftId: function(shift) {\n                shiftId(shift);\n            },\n\n            getShiftId: function () {\n                return shiftId;\n            },\n\n            getShiftIdWhenCreateOrder: function () {\n                if(!shiftId) {\n                    \n                }\n                return shiftId;\n            },\n        };\n    }\n);\n","Magestore_Webpos/js/model/shift/shift.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/shift/shift',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/shift/shift',\n        'Magestore_Webpos/js/model/collection/shift/shift',\n\n    ],\n    function ($,ko, modelAbstract, restResource, indexedDbResource, collection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            \n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n                this.setResourceCollection(collection());\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/shift/cash-transaction.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/shift/cash-transaction',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/shift/cash-transaction',\n        'Magestore_Webpos/js/model/event-manager',\n\n    ],\n    function ($,ko, modelAbstract, onlineResource, indexedDbResource, Event) {\n        \"use strict\";\n        return modelAbstract.extend({\n            push:true,\n            initialize: function () {\n                this._super();\n                this.setResource(onlineResource(), indexedDbResource());\n                //this.setResourceCollection(collection());\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/payment-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/payment',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/payment';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/checkout.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/checkout',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/cart/discountpopup',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/config/config',\n        'Magestore_Webpos/js/helper/staff',\n        'Magestore_Webpos/js/helper/order',\n        'mage/translate',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'Magestore_Webpos/js/model/checkout/payment/authorizenet_directpost',\n        'Magestore_Webpos/js/model/checkout/payment/cryozonic_stripe',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/cart/totals-factory',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/model/checkout/payment/paypal_payflowpro',\n        'Magestore_Webpos/js/model/checkout/payment/creditcard',\n        'Magestore_Webpos/js/model/checkout/cart/data/cart'\n    ],\n    function ($, ko, CheckoutResource, CartModel, DiscountModel, DateTime, HelperPrice, Event,\n              Config, Staff, OrderHelper, Translate, AddNoti, Directpost, Stripe, Helper, TotalsFactory, OrderFactory, PaypalPayflowpro, CreditCard, CartData) {\n        \"use strict\";\n        var storeAddress = {};\n        var addressConfig = [\n            {key:\"country_id\",path:\"webpos/guest_checkout/country_id\"},\n            {key:\"postcode\",path:\"webpos/guest_checkout/zip\"},\n            {key:\"region_id\",path:\"webpos/guest_checkout/region_id\"},\n            {key:\"customer_id\",path:\"webpos/guest_checkout/customer_id\"},\n            {key:\"city\",path:\"webpos/guest_checkout/city\"},\n            {key:\"email\",path:\"webpos/guest_checkout/email\"},\n            {key:\"firstname\",path:\"webpos/guest_checkout/first_name\"},\n            {key:\"lastname\",path:\"webpos/guest_checkout/last_name\"},\n            {key:\"street\",path:\"webpos/guest_checkout/street\"},\n            {key:\"telephone\",path:\"webpos/guest_checkout/telephone\"}\n        ];\n        if(addressConfig && addressConfig.length > 0){\n            $.each(addressConfig,function(){\n                var value = window.webposConfig[this.path];\n                if (!$.isNumeric(value)) {\n                    var region_id_value = 0;\n                } else {\n                    var region_id_value = parseInt(value);\n                }\n                if(this.key != \"customer_id\" && value){\n                    var value = (this.key == 'street')?[value]:value;\n                    if(this.key == 'region_id'){\n                        var region = {\n                            region:window.webposConfig.defaultRegionLabel,\n                            region_id:region_id_value,\n                            region_code: window.webposConfig.defaultRegionCode\n                        }\n                        storeAddress.region = region;\n                        storeAddress.region_id = region_id_value;\n                    }else{\n                        storeAddress[this.key] = value;\n                    }\n                }\n            });\n        }\n        /**\n         * Checkout model\n         * @type {{ccMethods: *, selectedPayments: *, selectedShippingTitle: *, selectedShippingCode: *, selectedShippingPrice: *, selectedShippingPriceType: *, paymentCode: *, orderComment: *, createShipment: *, createInvoice: *, isOnhold: *, billingAddress: *, shippingAddress: *, storeAddress: *, createOrderResult: *, loading: *, addedDefaultData: boolean, remainTotal: *, baseRemainTotal: *, placingOrder: *, autoCheckingPromotion: *, ADDRESS_TYPE: {BILLING: string, SHIPPING: string}, couponCode: *, cartDiscountAmount: *, cartBaseDiscountAmount: *, cartDiscountName: *, isCreatedOrder: isCreatedOrder, initDefaultData: initDefaultData, initObservable: initObservable, resetCheckoutData: resetCheckoutData, useWebposShipping: useWebposShipping, createOrder: createOrder, placeOrder: placeOrder, checkPromotion: checkPromotion, getShippingRates: getShippingRates, sendEmail: sendEmail, syncOrder: syncOrder, saveShipping: saveShipping, saveBillingAddress: saveBillingAddress, updateBillingAddress: updateBillingAddress, updateStoreAddress: updateStoreAddress, updateShippingAddress: updateShippingAddress, saveShippingAddress: saveShippingAddress, getHoldOrderParams: getHoldOrderParams, getOrderParams: getOrderParams, submitOrderOnline: submitOrderOnline, getAllDiscountName: getAllDiscountName, getOfflineOrderData: getOfflineOrderData, getHoldOrderData: getHoldOrderData, getCheckPromotionParams: getCheckPromotionParams, getCheckShippingParams: getCheckShippingParams, getDeliverytime: getDeliverytime, resetDeliveryTime: resetDeliveryTime, getPaymentsData: getPaymentsData, getCreditCardInfo: getCreditCardInfo, getPaymentsDataForOrder: getPaymentsDataForOrder, getTotalPaid: getTotalPaid, getTotalDue: getTotalDue, getBaseTotalPaid: getBaseTotalPaid, getBaseTotalDue: getBaseTotalDue, useDefaultAddress: useDefaultAddress, getBillingAddressForOrder: getBillingAddressForOrder, getShippingAddressForOrder: getShippingAddressForOrder, autoCheckPromotion: autoCheckPromotion, applyPromotionDiscount: applyPromotionDiscount, unholdOrder: unholdOrder, isAuthorizeNetDirectpost: isAuthorizeNetDirectpost, isPaypalPro: isPaypalPro, isAllowToCreateInvoice: isAllowToCreateInvoice, isAuthorizeNet: isAuthorizeNet, isCryozonicStripe: isCryozonicStripe, startAuthorizeNetPayment: startAuthorizeNetPayment, processCatalogRules: processCatalogRules, startAuthorizePopup: startAuthorizePopup, getPaymentJsModel: getPaymentJsModel, processOnlinePayment: processOnlinePayment, submitQuoteOnline: submitQuoteOnline, loadShippingOnline: loadShippingOnline, loadPaymentOnline: loadPaymentOnline, loadCartDataOnline: loadCartDataOnline, saveShippingMethodOnline: saveShippingMethodOnline, savePaymentMethodOnline: savePaymentMethodOnline, placeOrderOnline: placeOrderOnline, placeOrderSuccess: placeOrderSuccess, getSaveOnlineQuoteDataParams: getSaveOnlineQuoteDataParams, applyCouponOnline: applyCouponOnline, _applyCouponOnline: _applyCouponOnline, cancelCouponOnline: cancelCouponOnline, selectCustomerOnline: selectCustomerOnline, applyCartDiscountOnline: applyCartDiscountOnline, _applyCartDiscountOnline: _applyCartDiscountOnline, _afterSaveCart: _afterSaveCart, saveCustomerNote: saveCustomerNote, _saveCustomerNote: _saveCustomerNote, loadCurrentQuote: loadCurrentQuote, getPaymentDataToPlaceOrder: getPaymentDataToPlaceOrder, getQuoteDataToPlaceOrder: getQuoteDataToPlaceOrder, isPrepaid: isPrepaid, getPaymentRequestOnline: getPaymentRequestOnline}}\n         */\n        var CheckoutModel = {\n            ccMethods: ko.observableArray(),\n            selectedPayments: ko.observableArray(),\n            selectedShippingTitle: ko.observable(),\n            selectedShippingCode: ko.observable(),\n            selectedShippingPrice: ko.observable(0),\n            selectedShippingPriceType: ko.observable(\"O\"),\n            paymentCode: ko.observable(),\n            orderComment: ko.observable(),\n            createShipment: ko.observable(),\n            createInvoice: ko.observable(),\n            isOnhold: ko.observable(false),\n            billingAddress: ko.observable(),\n            shippingAddress: ko.observable(),\n            storeAddress: ko.observable(storeAddress),\n            createOrderResult: ko.observable({}),\n            loading: ko.observable(),\n            addedDefaultData: false,\n            remainTotal: ko.observable(),\n            baseRemainTotal: ko.observable(),\n            placingOrder: ko.observable(false),\n            autoCheckingPromotion: ko.observable(false),\n            ADDRESS_TYPE: {\n                BILLING:\"billing\",\n                SHIPPING:\"shipping\"\n            },\n            couponCode: ko.pureComputed(function() {\n                return DiscountModel.couponCode();\n            }),\n\n            cartDiscountAmount: ko.pureComputed(function() {\n                return TotalsFactory.get().discountAmount();\n            }),\n\n            cartBaseDiscountAmount: ko.pureComputed(function() {\n                return TotalsFactory.get().baseDiscountAmount();\n            }),\n\n            cartDiscountName: ko.pureComputed(function() {\n                return DiscountModel.cartDiscountName();\n            }),\n            /**\n             * Check if is in order success page\n             * @returns {boolean}\n             */\n            isCreatedOrder: function(){\n                return (this.createOrderResult() && this.createOrderResult().increment_id)?true:false;\n            },\n            /**\n             * Init default data\n             */\n            initDefaultData: function(){\n                var self = this;\n                if(self.addedDefaultData == true){\n                    return;\n                }\n                self.isCreditCardPayment = ko.pureComputed(function(){\n                    return (self.ccMethods().length > 0 && self.selectedPayments().length > 0)?true:false;\n                });\n                if(!self.selectedShippingTitle()){\n                    self.selectedShippingTitle(\"\");\n                }\n                if(!self.selectedShippingCode()){\n                    self.selectedShippingCode(\"\");\n                }\n                if(!self.selectedShippingPrice()){\n                    self.selectedShippingPrice(0);\n                }\n                if(!self.orderComment()){\n                    self.orderComment(\"\");\n                }\n                if(!self.paymentCode()){\n                    self.paymentCode(\"multipaymentforpos\");\n                }\n                if(!self.createOrderResult()){\n                    self.createOrderResult({});\n                }\n\n                if(!self.billingAddress()){\n                    self.useDefaultAddress(self.ADDRESS_TYPE.BILLING);\n                }\n                if(!self.shippingAddress()){\n                    self.useDefaultAddress(self.ADDRESS_TYPE.SHIPPING);\n                }\n                if(!CartModel.CheckoutModel()){\n                    CartModel.CheckoutModel(self);\n                }\n                var enableShipment = Helper.getBrowserConfig('webpos/shipping/enable_mark_as_shipped_default');\n                enableShipment = (enableShipment == '1')?true:false;\n                self.createShipment(enableShipment);\n                self.placingOrder(false);\n                self.initObservable();\n                self.addedDefaultData = true;\n\n            },\n            /**\n             * Init events and variables\n             */\n            initObservable: function(){\n                var self = this;\n                Event.observer('cart_empty_after', function(){\n                    self.resetCheckoutData();\n                });\n                Event.observer('update_shipping_price', function(event, data){\n                    var price = (data && data.price)?data.price:0;\n                    self.saveShipping({\n                        price:price\n                    });\n                });\n                Event.observer('load_shipping_online', function(){\n                    if(Helper.isUseOnline('checkout')){\n                        self.loadShippingOnline();\n                    }\n                });\n                Event.observer('load_payment_online', function(){\n                    if(Helper.isUseOnline('checkout')) {\n                        self.loadPaymentOnline();\n                    }\n                });\n                Event.observer('load_cart_data_online', function(event, data){\n                    if(Helper.isUseOnline('checkout')) {\n                        self.loadCartDataOnline(data.section?data.section:false);\n                    }\n                });\n                Event.observer('checkout_select_customer_after', function(event, data){\n                    if(Helper.isUseOnline('checkout') && CartModel.isOnCheckoutPage()) {\n                        self.selectCustomerOnline();\n                    }\n                });\n            },\n            /**\n             * Reset checkout data\n             */\n            resetCheckoutData: function(){\n                var self = this;\n                self.selectedShippingPrice(0);\n                DiscountModel.cartDiscountAmount(0);\n                DiscountModel.cartBaseDiscountAmount(0);\n                DiscountModel.cartDiscountName(\"\");\n                self.orderComment(\"\");\n                $(\"#form-note-order\").find(\"textarea\").val(\"\");\n                DiscountModel.couponCode();\n                self.createOrderResult({});\n                CartModel.removeCustomer();\n                var guestCustomter = {\n                    'id': 0,\n                    'firstname': window.webposConfig['webpos/guest_checkout/first_name'],\n                    'lastname': window.webposConfig['webpos/guest_checkout/last_name']\n                };\n                self.saveBillingAddress(guestCustomter);\n                self.saveShippingAddress(guestCustomter);\n                TotalsFactory.get().updateDiscountTotal();\n                self.resetDeliveryTime();\n                self.placingOrder(false);\n            },\n            /**\n             * Use Web POS shipping\n             */\n            useWebposShipping: function(){\n                var self = this;\n                self.selectedShippingCode(\"webpos_shipping_storepickup\");\n                self.selectedShippingPrice(0);\n            },\n            /**\n             * Create order offline\n             */\n            createOrder: function(){\n                var self = this;\n                self.isOnhold(false);\n                self.placingOrder(true);\n                var data = self.getOfflineOrderData();\n                Event.dispatch('webpos_place_order_before',data);\n                if(data.validate && data.validate == true){\n                    delete data.validate;\n                    OrderFactory.get().setData(data).setMode('offline').save().done(function (response) {\n                        if(response){\n                            self.placeOrder(response);\n                            self.syncOrder(response,\"checkout\");\n                        }\n                    });\n                }\n            },\n            /**\n             * Dispatch events and show order success page\n             * @param response\n             */\n            placeOrder: function (response) {\n                var self = this;\n                Event.dispatch('webpos_place_order_after',response);\n                self.createOrderResult(response);\n                Event.dispatch('webpos_order_save_after',response,true);\n            },\n            /**\n             * Check promotion rules\n             */\n            checkPromotion: function(){\n                var self = this;\n                var deferred = $.Deferred();\n                var params = this.getCheckPromotionParams();\n                CheckoutResource().setPush(true).setLog(false).checkPromotion(params,deferred);\n\n                DiscountModel.loading(true);\n                deferred.done(function (response) {\n                    var data =  JSON.parse(response);\n                    if(data.items){\n                        self.processCatalogRules(data.items);\n                    }\n                    if(data.discount_amount){\n                        DiscountModel.promotionDiscountAmount(HelperPrice.toBasePrice(data.discount_amount));\n                    }else{\n                        DiscountModel.promotionDiscountAmount(0);\n                    }\n                    DiscountModel.appliedRuleIds(data.applied_rule_ids);\n                    DiscountModel.loading(false);\n                }).fail(function (response) {\n                    DiscountModel.loading(false);\n                }).always(function () {\n                    DiscountModel.loading(false);\n                });\n            },\n            /**\n             * Get shipping rates\n             */\n            getShippingRates: function(){\n                var deferred = $.Deferred();\n                var params = this.getCheckShippingParams();\n                CheckoutResource().setPush(true).setLog(false).getShippingRates(params,deferred);\n                deferred.done(function (response) {\n                    var data = JSON.parse(response);\n                });\n            },\n            /**\n             * Send order email to customer email\n             * @param email\n             * @param increment_id\n             */\n            sendEmail: function(email,increment_id){\n                var deferred = $.Deferred();\n                var params = {increment_id:increment_id,email:email};\n                CheckoutResource().sendEmail(params,deferred);\n            },\n            /**\n             * Sync offline order to server\n             * @param orderData\n             * @param page\n             */\n            syncOrder: function(orderData,page){\n                if(orderData && orderData.sync_params){\n                    var params = orderData.sync_params;\n                    params.extension_data.push({\n                        key:\"webpos_order_id\",\n                        value:orderData.entity_id\n                    });\n                    params.extension_data.push({\n                        key:\"customer_fullname\",\n                        value:orderData.customer_fullname\n                    });\n                    if(page == \"orderlist\"){\n\n                    }\n                    CheckoutResource().setActionId(orderData.entity_id).setPush(true).createOrder(params,$.Deferred());\n                }\n            },\n            /**\n             * Save shipping method to cart\n             * @param data\n             */\n            saveShipping: function(data){\n                if(typeof data.code != \"undefined\"){\n                    this.selectedShippingCode(data.code);\n                }\n                if(typeof data.title != \"undefined\"){\n                    this.selectedShippingTitle(data.title);\n                }\n                if(typeof data.price != \"undefined\"){\n                    this.selectedShippingPrice(data.price);\n                    var shippingData = {\n                        price:data.price\n                    }\n                    if(typeof data.price_type != \"undefined\"){\n                        this.selectedShippingPriceType(data.price_type);\n                        shippingData.price_type = data.price_type;\n                    }\n                    TotalsFactory.get().shippingData(shippingData);\n                    TotalsFactory.get().collectShippingTotal();\n                }else{\n                    this.selectedShippingPrice(0);\n                    TotalsFactory.get().updateShippingAmount(0);\n                }\n                if(Helper.isUseOnline('checkout') && data.code){\n                    this.saveShippingMethodOnline(data.code);\n                }\n            },\n            /**\n             * Save billing address to cart\n             * @param data\n             */\n            saveBillingAddress: function(data){\n                if(data.id == 0){\n                    if (data.firstname && data.lastname) {\n                        this.useDefaultAddress(this.ADDRESS_TYPE.BILLING, data.firstname, data.lastname);\n                    } else {\n                        this.useDefaultAddress(this.ADDRESS_TYPE.BILLING);\n                    }\n                    var newAddress = this.billingAddress();\n                    newAddress.firstname = data.firstname;\n                    newAddress.lastname = data.lastname;\n                    this.billingAddress(newAddress);\n                }else{\n                    this.billingAddress(data);\n                }\n                CartModel.reCollectTaxRate();\n            },\n            /**\n             * Update billing address in cart\n             * @param data\n             */\n            updateBillingAddress: function(data){\n                var address = this.billingAddress();\n                if(typeof address == \"undefined\"){\n                    address = {};\n                }\n                if(data && data.length > 0){\n                    $.each(data,function(key, value){\n                        address[key] = value;\n                    });\n                }\n                this.billingAddress(address);\n                var calculateTaxBaseOn = window.webposConfig[\"tax/calculation/based_on\"];\n                if(calculateTaxBaseOn == 'billing'){\n                    CartModel.reCollectTaxRate();\n                }\n            },\n            /**\n             * Update store address\n             * @param key\n             * @param value\n             */\n            updateStoreAddress: function(key,value){\n                var address = this.storeAddress();\n                if(typeof address == \"undefined\"){\n                    address = {};\n                }\n                address[key] = value;\n                this.storeAddress(address);\n            },\n            /**\n             * Update shipping address in cart\n             * @param data\n             */\n            updateShippingAddress: function(data){\n                var address = this.shippingAddress();\n                if(typeof address == \"undefined\"){\n                    address = {};\n                }\n                if(data && data.length > 0){\n                    $.each(data,function(key, value){\n                        address[key] = value;\n                    });\n                }\n                this.shippingAddress(address);\n                var calculateTaxBaseOn = window.webposConfig[\"tax/calculation/based_on\"];\n                if(calculateTaxBaseOn == 'shipping'){\n                    CartModel.reCollectTaxRate();\n                }\n            },\n            /**\n             * Save shipping address to cart\n             * @param data\n             */\n            saveShippingAddress: function(data){\n                if(data.id == 0){\n                    if (data.firstname && data.lastname) {\n                        this.useDefaultAddress(this.ADDRESS_TYPE.SHIPPING, data.firstname, data.lastname);\n                    } else {\n                        this.useDefaultAddress(this.ADDRESS_TYPE.SHIPPING);\n                    }\n                    var newAddress = this.shippingAddress();\n                    newAddress.firstname = data.firstname;\n                    newAddress.lastname = data.lastname;\n                    this.shippingAddress(newAddress);\n\n                }else{\n                    this.shippingAddress(data);\n                }\n                CartModel.reCollectTaxRate();\n            },\n            /**\n             * Get params to hold orders\n             * @returns {{quote_init: *, customer_id: *, customer_group: *, customerData: *, items: *, config: {apply_promotion: *, cart_base_discount_amount: *, cart_discount_amount: *, cart_discount_name: *, cart_applied_discount: *, cart_applied_promotion: *, cart_discount_type: *, cart_discount_percent: *, currency_code: *}, coupon_code: *, billing_address: *, shipping_address: *}}\n             */\n            getHoldOrderParams: function(){\n                var self = this;\n                var orderParams = {\n                    quote_init:CartModel.getQuoteInitParams(),\n                    customer_id:CartModel.customerId(),\n                    customer_group:CartModel.customerGroup(),\n                    customerData: CartModel.customerData(),\n                    items:CartModel.getItemsInitData(),\n                    config:{\n                        apply_promotion:DiscountModel.applyPromotion(),\n                        cart_base_discount_amount:DiscountModel.cartBaseDiscountAmount(),\n                        cart_discount_amount:DiscountModel.cartDiscountAmount(),\n                        cart_discount_name:DiscountModel.cartDiscountName(),\n                        cart_applied_discount:DiscountModel.appliedDiscount(),\n                        cart_applied_promotion:DiscountModel.appliedPromotion(),\n                        cart_discount_type:DiscountModel.cartDiscountType(),\n                        cart_discount_percent:DiscountModel.cartDiscountPercent(),\n                        currency_code:window.webposConfig.currentCurrencyCode\n                    },\n                    coupon_code: self.couponCode(),\n                    billing_address: self.billingAddress(),\n                    shipping_address: self.shippingAddress()\n                };\n                return orderParams;\n            },\n            /**\n             * Get params for sync order request\n             * @returns {{customer_id: string, items: *, payment: {method: *, method_data: *, address: *}, shipping: {method: *, tracks: Array, address: *, datetime: *}, config: {applied_rule_ids: string, apply_promotion: *, note: *, create_invoice: *, create_shipment: *, is_onhold: *, init_data, cart_base_discount_amount: *, cart_discount_amount: *, cart_discount_name: *, currency_code: *, discount_apply: (string|string)}, coupon_code: *, extension_data: [*,*,*,*,*,*,*,*,*,*], session_data: Array, integration: Array}}\n             */\n            getOrderParams: function(){\n                var self = this;\n                var TotalsModel = TotalsFactory.create();\n                var billingAddress = self.billingAddress();\n                var shippingAddress = self.shippingAddress();\n                delete billingAddress['id'];\n                delete shippingAddress['id'];\n\n                var baseSubtotalInclTax = TotalsModel.getBaseTotalValue(TotalsModel.SUBTOTAL_TOTAL_CODE) + ((Helper.isShowTaxFinal())?TotalsModel.getBaseTotalFinalValue(TotalsModel.TAX_TOTAL_CODE):TotalsModel.getBaseTotalValue(TotalsModel.TAX_TOTAL_CODE));\n                var subtotalInclTax = TotalsModel.getTotalValue(TotalsModel.SUBTOTAL_TOTAL_CODE) + ((Helper.isShowTaxFinal())?TotalsModel.getTotalFinalValue(TotalsModel.TAX_TOTAL_CODE):TotalsModel.getTotalValue(TotalsModel.TAX_TOTAL_CODE));\n\n                if(Helper.isEnableCrossBorderTrade()){\n                    baseSubtotalInclTax = TotalsModel.getBaseTotalValue(TotalsModel.SUBTOTAL_TOTAL_CODE);\n                    subtotalInclTax = TotalsModel.getTotalValue(TotalsModel.SUBTOTAL_TOTAL_CODE);\n                }\n\n                var orderParams = {\n                    //store:Helper.getOnlineConfig('default_store_code'),\n                    customer_id:String(CartModel.customerId()),\n                    items:CartModel.getItemsInfo(),\n                    payment:{\n                        method:self.paymentCode(),\n                        method_data:self.getPaymentsData(),\n                        address:self.billingAddress()\n                    },\n                    shipping:{\n                        method:self.selectedShippingCode(),\n                        tracks:[],\n                        address:self.shippingAddress(),\n                        datetime:self.getDeliverytime()\n                    },\n                    config:{\n                        applied_rule_ids:(self.cartBaseDiscountAmount() > 0)?DiscountModel.appliedRuleIds():'',\n                        apply_promotion:DiscountModel.applyPromotion(),\n                        note:self.orderComment(),\n                        create_invoice:self.createInvoice(),\n                        create_shipment:self.createShipment(),\n                        is_onhold:self.isOnhold(),\n                        init_data:JSON.stringify(self.getHoldOrderParams()),\n                        cart_base_discount_amount:self.cartBaseDiscountAmount(),\n                        cart_discount_amount:self.cartDiscountAmount(),\n                        cart_discount_name:self.cartDiscountName(),\n                        currency_code:window.webposConfig.currentCurrencyCode,\n                        discount_apply: window.webposConfig.discountApply\n                    },\n                    coupon_code: self.couponCode(),\n                    extension_data:[\n                        {\n                            key:\"grand_total\",\n                            value: TotalsModel.getTotalValue('grand_total')\n                        },\n                        {\n                            key:\"base_grand_total\",\n                            value: TotalsModel.getBaseTotalValue('grand_total')\n                        },\n                        {\n                            key:\"tax_amount\",\n                            value: TotalsModel.tax()\n                        },\n                        {\n                            key:\"base_tax_amount\",\n                            value: TotalsModel.baseTax()\n                        },\n                        {\n                            key:\"shipping_amount\",\n                            value: HelperPrice.currencyConvert(TotalsModel.shippingFee())\n                        },\n                        {\n                            key:\"base_shipping_amount\",\n                            value: TotalsModel.shippingFee()\n                        },\n                        {\n                            key:\"subtotal\",\n                            value: TotalsModel.subtotal()\n                        },\n                        {\n                            key:\"base_subtotal\",\n                            value: TotalsModel.baseSubtotal()\n                        },\n                        {\n                            key:\"subtotal_incl_tax\",\n                            value: subtotalInclTax\n                        },\n                        {\n                            key:\"base_subtotal_incl_tax\",\n                            value: baseSubtotalInclTax\n                        }\n                    ],\n                    session_data:[\n                    ],\n                    integration:[\n                    ]\n                };\n\n                orderParams.extension_data.push({\n                    key:\"webpos_staff_id\",\n                    value: Staff.getStaffId()\n                });\n                orderParams.extension_data.push({\n                    key:\"webpos_staff_name\",\n                    value: Staff.getStaffName()\n                });\n                orderParams.extension_data.push({\n                    key:\"webpos_shift_id\",\n                    value: window.webposConfig.shiftId\n                });\n                orderParams.extension_data.push({\n                    key:\"location_id\",\n                    value: window.webposConfig.locationId\n                });\n                if(self.couponCode()){\n                    orderParams.extension_data.push({\n                        key:\"discount_description\",\n                        value: self.couponCode()\n                    });\n                }\n                if(self.remainTotal() && self.remainTotal() < 0){\n                    orderParams.extension_data.push({\n                        key:\"webpos_change\",\n                        value: -self.remainTotal()\n                    });\n                    orderParams.extension_data.push({\n                        key:\"webpos_base_change\",\n                        value: -self.baseRemainTotal()\n                    });\n                }\n                return orderParams;\n            },\n            /**\n             * Submit order online - use when place order with online payment in offline mode\n             */\n            submitOrderOnline: function(){\n                var self = this;\n                self.isOnhold(false);\n                if(self.isAuthorizeNetDirectpost()){\n                    self.createInvoice(false);\n                }\n                var params = self.getOrderParams();\n                var createdTime = DateTime.getBaseSqlDatetime();\n                params.extension_data.push({\n                    key:\"webpos_order_id\",\n                    value: OrderHelper.generateId()\n                });\n                params.extension_data.push({\n                    key:\"created_at\",\n                    value:createdTime\n                });\n                var deferred = $.Deferred();\n                self.loading(true);\n                var methodCode = params.payment.method_data[0];\n                self.paymentCode(methodCode.code);\n                params.payment.method = methodCode.code;\n                CheckoutResource().setPush(true).setLog(false).submitOnlineOrder(params,deferred);\n\n                deferred.done(function (response) {\n                    if(response) {\n                        var result = JSON.parse(response);\n                        var orderId = result.order_id;\n                        var paymentInfo = result.payment_infomation;\n                        self.processOnlinePayment(result);\n                        if (self.isAuthorizeNetDirectpost()) {\n                            if (!Directpost().CheckoutModel()) {\n                                Directpost().CheckoutModel(self);\n                            }\n                            if (orderId) {\n                                Directpost().processPayment(orderId, paymentInfo);\n                            } else {\n\n                            }\n                        }\n                        if (self.isCryozonicStripe()) {\n                            if (!Stripe().CheckoutModel()) {\n                                Stripe().CheckoutModel(self);\n                            }\n                            if (orderId) {\n                                Stripe().processPayment(orderId);\n                            } else {\n\n                            }\n                        }\n                    }else{\n                        var error = Translate('Cannot connect to your server!');\n                        AddNoti(error, true, 'danger', 'Error');\n                        self.loading(false);\n                    }\n                });\n                deferred.fail(function (response){\n                    if(response != undefined && response.responseText) {\n                        var error = JSON.parse(response.responseText);\n                        if (error.message != undefined) {\n                            AddNoti(error.message, true, 'danger', 'Error');\n                        }\n                    }else{\n                        var error = Translate('Cannot connect to your server!');\n                        AddNoti(error, true, 'danger', 'Error');\n                    }\n                    self.loading(false);\n                });\n            },\n            /**\n             * Get discount name\n             * @returns {string}\n             */\n            getAllDiscountName: function () {\n                var coupon = '';\n                var self = this;\n                if (self.couponCode())\n                    coupon = self.couponCode();\n                if (self.cartDiscountName())\n                    coupon = self.cartDiscountName();\n                if (self.couponCode() && self.cartDiscountName())\n                    coupon = self.couponCode() + ',' + self.cartDiscountName();\n                return coupon;\n            },\n            /**\n             * Get offline order data for current cart\n             * @returns {{entity_id: *, increment_id: *, status: string, state: string, is_virtual: number, created_at: string, updated_at: string, order_currency_code: *, webpos_staff_id: *, webpos_shift_id: (string|*), location_id: *, webpos_staff_name: *, customer_email: (*|boolean|exports.indexes.email|{unique}|Document.email), customer_firstname, customer_id: *, customer_lastname, customer_telephone: (*|string), customer_fullname: *, customer_note: *, total_item_count: *, items: *, payment: {method: *, additional_information: Array}, extension_attributes: {shipping_assignments: [*]}, shipping_description: *, billing_address: *, status_histories: [*], webpos_base_change: number, webpos_change: number, base_subtotal: *, subtotal: *, base_subtotal_incl_tax: *, subtotal_incl_tax: *, base_tax_amount: *, tax_amount: *, base_total_due: *, total_due: *, base_total_paid: *, total_paid: *, base_shipping_amount: *, shipping_amount: *, base_discount_amount: *, discount_amount: *, discount_description: *, base_grand_total: *, grand_total: *, sync_params: *, base_currency_code: *, initData: *, webpos_order_payments: *}}\n             */\n            getOfflineOrderData: function(){\n                var self = this;\n                var customerFullname;\n                var discountCode = self.getAllDiscountName();\n                var createdTime = DateTime.getSqlDatetime();\n                var baseCreatedTime = DateTime.getBaseSqlDatetime();\n                var customerData = CartModel.customerData();\n                var webpos_order_id = OrderHelper.generateId();\n                var TotalsModel = TotalsFactory.create();\n                var customerFirstname = (customerData.firstname)?(customerData.firstname):'';\n                var customerLastname = (customerData.lastname)?(customerData.lastname):'';\n                if (customerFirstname && customerLastname)\n                    customerFullname = customerFirstname + customerLastname;\n\n                var baseSubtotalInclTax = TotalsModel.getBaseTotalValue(TotalsModel.SUBTOTAL_TOTAL_CODE) + ((Helper.isShowTaxFinal())?TotalsModel.getBaseTotalFinalValue(TotalsModel.TAX_TOTAL_CODE):TotalsModel.getBaseTotalValue(TotalsModel.TAX_TOTAL_CODE));\n                var subtotalInclTax = TotalsModel.getTotalValue(TotalsModel.SUBTOTAL_TOTAL_CODE) + ((Helper.isShowTaxFinal())?TotalsModel.getTotalFinalValue(TotalsModel.TAX_TOTAL_CODE):TotalsModel.getTotalValue(TotalsModel.TAX_TOTAL_CODE));\n\n                if(Helper.isEnableCrossBorderTrade()){\n                    baseSubtotalInclTax = TotalsModel.getBaseTotalValue(TotalsModel.SUBTOTAL_TOTAL_CODE);\n                    subtotalInclTax = TotalsModel.getTotalValue(TotalsModel.SUBTOTAL_TOTAL_CODE);\n                }\n\n                var data = {\n                    entity_id: webpos_order_id,\n                    increment_id: webpos_order_id,\n                    status: \"notsync\",\n                    state: \"notsync\",\n                    is_virtual: CartModel.isVirtual()?1:0,\n                    created_at: baseCreatedTime,\n                    updated_at: baseCreatedTime,\n                    order_currency_code:window.webposConfig.currentCurrencyCode,\n                    webpos_staff_id:Staff.getStaffId(),\n                    webpos_shift_id:window.webposConfig.shiftId,\n                    location_id:window.webposConfig.locationId,\n                    webpos_staff_name:Staff.getStaffName(),\n                    customer_email:customerData.email,\n                    customer_firstname:customerData.firstname,\n                    customer_id:CartModel.customerId(),\n                    customer_lastname:customerData.lastname,\n                    customer_telephone:customerData.telephone,\n                    customer_fullname:customerFullname,\n                    customer_note:self.orderComment(),\n                    total_item_count:CartModel.totalItems(),\n                    items:CartModel.getItemsDataForOrder(),\n                    payment:{\n                        method:self.paymentCode(),\n                        additional_information:[]\n                    },\n                    extension_attributes:{\n                        shipping_assignments:[\n                            {\n                                items:\"\",\n                                shipping:{\n                                    address:self.getShippingAddressForOrder(),\n                                    method:self.selectedShippingCode(),\n                                }\n                            }\n                        ]\n                    },\n                    shipping_description:self.selectedShippingTitle(),\n                    billing_address:self.getBillingAddressForOrder(),\n                    status_histories:[\n                        {\n                            comment:self.orderComment(),\n                            created_at:createdTime,\n                            status:\"notsync\",\n                        }\n                    ],\n                    webpos_base_change:(self.baseRemainTotal() && self.baseRemainTotal() < 0)?-self.baseRemainTotal():0,\n                    webpos_change:(self.remainTotal() && self.remainTotal() < 0)?-self.remainTotal():0,\n                    base_subtotal:TotalsModel.getBaseTotalValue(TotalsModel.SUBTOTAL_TOTAL_CODE),\n                    subtotal: TotalsModel.getTotalValue(TotalsModel.SUBTOTAL_TOTAL_CODE),\n                    base_subtotal_incl_tax:baseSubtotalInclTax,\n                    subtotal_incl_tax: subtotalInclTax,\n                    base_tax_amount:TotalsModel.getBaseTotalValue(TotalsModel.TAX_TOTAL_CODE),\n                    tax_amount:TotalsModel.getTotalValue(TotalsModel.TAX_TOTAL_CODE),\n                    base_total_due:self.getBaseTotalDue(),\n                    total_due:self.getTotalDue(),\n                    base_total_paid:self.getBaseTotalPaid(),\n                    total_paid:self.getTotalPaid(),\n                    base_shipping_amount:TotalsModel.getBaseTotalValue(TotalsModel.SHIPPING_TOTAL_CODE),\n                    shipping_amount:TotalsModel.getTotalValue(TotalsModel.SHIPPING_TOTAL_CODE),\n                    base_discount_amount:TotalsModel.getBaseTotalValue(TotalsModel.DISCOUNT_TOTAL_CODE),\n                    discount_amount:TotalsModel.getTotalValue(TotalsModel.DISCOUNT_TOTAL_CODE),\n                    discount_description:discountCode,\n                    base_grand_total:TotalsModel.getBaseTotalValue(TotalsModel.GRANDTOTAL_TOTAL_CODE),\n                    grand_total:TotalsModel.getTotalValue(TotalsModel.GRANDTOTAL_TOTAL_CODE),\n                    sync_params: self.getOrderParams(),\n                    base_currency_code: window.webposConfig.baseCurrencyCode,\n                    initData:self.getHoldOrderParams(),\n                    webpos_order_payments:self.getPaymentsDataForOrder()\n                };\n                data.sync_params.extension_data.push({\n                    key:\"created_at\",\n                    value: baseCreatedTime\n                });\n                return data;\n            },\n            /**\n             * Get offline order data for on hold\n             * @returns {*}\n             */\n            getHoldOrderData: function(){\n                var currentTime = $.now();\n                var self = this;\n                self.isOnhold(true);\n                if(!self.selectedShippingCode()){\n                    self.useWebposShipping();\n                }\n                self.createInvoice(false);\n                self.createShipment(false);\n                var data = self.getOfflineOrderData();\n                // delete data.sync_params;\n                data.entity_id = currentTime.toString(),\n                data.increment_id = currentTime.toString(),\n                data.status = \"onhold\";\n                data.state = \"onhold\";\n                data.initData = self.getHoldOrderParams();\n                return data;\n            },\n            /**\n             * Get check promotion params\n             * @returns {*}\n             */\n            getCheckPromotionParams: function(){\n                var params = this.getOrderParams();\n                return params;\n            },\n            /**\n             * Get check shipping params\n             * @returns {*}\n             */\n            getCheckShippingParams: function(){\n                var params = this.getOrderParams();\n                delete params.config;\n                delete params.coupon_code;\n                delete params.payment;\n                delete params.shipping_method;\n                params.zipcode = (this.shippingAddress() && this.shippingAddress().postcode)?this.shippingAddress().postcode:\"\";\n                params.country = (this.shippingAddress() && this.shippingAddress().country_id)?this.shippingAddress().country_id:\"\";\n                return params;\n            },\n            /**\n             * Get delivery time\n             * @returns {*}\n             */\n            getDeliverytime: function () {\n                if($('#delivery_date') && $('#delivery_date').val() != ''){\n                    var date = '';\n                    date = $('#delivery_date').val();\n                    var datetime= DateTime.getBaseSqlDatetime(date);\n                    return datetime;\n                }\n                return '';\n\n            },\n            /**\n             * Reset delivery time\n             */\n            resetDeliveryTime: function () {\n                $('#delivery_date').val('');\n            },\n            /**\n             * Get selected payment data\n             * @returns {Array}\n             */\n            getPaymentsData: function(){\n                var self = this;\n                var paymentsData = [];\n                if(self.selectedPayments().length > 0){\n                    $.each(self.selectedPayments(),function(){\n                        var data = {};\n                        data.code = this.code;\n                        data.title = this.title;\n                        data.base_amount = this.base_cart_total;\n                        data.amount = this.cart_total;\n                        data.base_real_amount = this.base_paid_amount;\n                        data.real_amount = this.paid_amount;\n                        data.reference_number = this.reference_number;\n                        data.is_pay_later = this.is_pay_later;\n                        data.shift_id = window.webposConfig.shiftId;\n                        self.getCreditCardInfo(data);\n                        paymentsData.push(data);\n                    });\n                }\n                return paymentsData;\n            },\n            /**\n             * Get credit cart information from form\n             * @param data\n             */\n            getCreditCardInfo: function (data) {\n                var additionalData = {};\n                additionalData.cc_owner = '';\n                if($('#webpos_cc_owner') && $('#webpos_cc_owner').val() != ''){\n                    additionalData.cc_owner = $('#webpos_cc_owner').val();\n                }\n                if($('#webpos_cc_type') && $('#webpos_cc_type').val() != ''){\n                    additionalData.cc_type = $('#webpos_cc_type').val();\n                }\n                if($('#webpos_cc_number') && $('#webpos_cc_number').val() != ''){\n                    additionalData.cc_number = $('#webpos_cc_number').val();\n                }\n                if($('#webpos_cc_exp_month') && $('#webpos_cc_exp_month').val() != ''){\n                    additionalData.cc_exp_month = $('#webpos_cc_exp_month').val();\n                }\n                if($('#webpos_cc_exp_year') && $('#webpos_cc_exp_year').val() != ''){\n                    additionalData.cc_exp_year = $('#webpos_cc_exp_year').val();\n                }\n                if($('#webpos_cc_cid') && $('#webpos_cc_cid').val() != ''){\n                    additionalData.cc_cid = $('#webpos_cc_cid').val();\n                }\n                data.additional_data = additionalData;\n                Event.dispatch('prepare_payment_additional_data',data);\n            },\n            /**\n             * Get payment data for order\n             * @returns {Array}\n             */\n            getPaymentsDataForOrder: function(){\n                var self = this;\n                var payments = [];\n                ko.utils.arrayForEach(self.getPaymentsData(), function(payment) {\n                    var data = {\n                        base_payment_amount:(payment.is_pay_later)?0:payment.base_amount,\n                        payment_amount:(payment.is_pay_later)?0:payment.amount,\n                        base_display_amount: (payment.is_pay_later)?0:payment.base_real_amount,\n                        display_amount: (payment.is_pay_later)?0:payment.real_amount,\n                        method:payment.code,\n                        method_title:payment.title,\n                    }\n                    payments.push(data);\n                });\n                return payments;\n            },\n            /**\n             * Get total paid by selected payments\n             * @returns {number}\n             */\n            getTotalPaid: function(){\n                var self = this;\n                var totalPaid = 0;\n                if(self.getPaymentsData().length > 0){\n                    $.each(self.getPaymentsData(),function(){\n                        if(!this.is_pay_later){\n                            totalPaid += HelperPrice.toNumber(this.amount);\n                        }\n                    });\n                }\n                return totalPaid;\n            },\n            /**\n             * Get remaining value\n             * @returns {number}\n             */\n            getTotalDue: function(){\n                var self = this;\n                var totalPaid = 0;\n                var baseGrandTotal = HelperPrice.toNumber(TotalsFactory.get().getTotalValue(TotalsFactory.get().GRANDTOTAL_TOTAL_CODE));\n                if(self.getPaymentsData().length > 0){\n                    $.each(self.getPaymentsData(),function(){\n                        if(!this.is_pay_later){\n                            totalPaid += HelperPrice.toNumber(this.amount);\n                        }\n                    });\n                }\n                var totalDue = HelperPrice.toNumber(baseGrandTotal - totalPaid);\n                return (totalDue > 0)?totalDue:0;\n            },\n            /**\n             * Get base total paid\n             * @returns {number}\n             */\n            getBaseTotalPaid: function(){\n                var self = this;\n                var totalPaid = 0;\n                if(self.getPaymentsData().length > 0){\n                    $.each(self.getPaymentsData(),function(){\n                        if(!this.is_pay_later){\n                            totalPaid += HelperPrice.toNumber(this.base_amount);\n                        }\n                    });\n                }\n                return totalPaid;\n            },\n            /**\n             * Get base remaining amount\n             * @returns {number}\n             */\n            getBaseTotalDue: function(){\n                var self = this;\n                var totalPaid = 0;\n                var baseGrandTotal = HelperPrice.toNumber(TotalsFactory.get().getBaseTotalValue(TotalsFactory.get().GRANDTOTAL_TOTAL_CODE));\n                if(self.getPaymentsData().length > 0){\n                    $.each(self.getPaymentsData(),function(){\n                        if(!this.is_pay_later){\n                            totalPaid += HelperPrice.toNumber(this.base_amount);\n                        }\n                    });\n                }\n                var totalDue = HelperPrice.toNumber(baseGrandTotal - totalPaid);\n                return (totalDue > 0)?totalDue:0;\n            },\n            /**\n             * Use store address for billing/shipping address\n             * @param type\n             * @param firstname\n             * @param lastname\n             */\n            useDefaultAddress: function(type, firstname, lastname){\n                var self = this;\n                var address = self.storeAddress();\n                if(address){\n                    if(type == self.ADDRESS_TYPE.SHIPPING){\n                        self.shippingAddress(address);\n                        self.updateShippingAddress({\n                            'firstname':firstname,\n                            'lastname':lastname\n                        });\n                    }else{\n                        self.billingAddress(address);\n                        self.updateBillingAddress({\n                            'firstname':firstname,\n                            'lastname':lastname\n                        });\n                    }\n                }\n            },\n            /**\n             * Get billing address for order\n             * @returns {{}}\n             */\n            getBillingAddressForOrder: function(){\n                var billing = this.billingAddress()?this.billingAddress():{};\n                var data = {};\n                data.address_type = this.ADDRESS_TYPE.BILLING;\n                $.each(billing,function(key, value){\n                    if(key == \"region\" && value.region){\n                        var regions = JSON.parse(window.webposConfig.regionJson);\n                        if(regions && billing.country_id && regions[billing.country_id]){\n                            if(regions[billing.country_id][value.region_id]){\n                                value.region = regions[billing.country_id][value.region_id].name;\n                                value.region_code = regions[billing.country_id][value.region_id].code;\n                            }\n                        }\n                        value = value.region;\n                    }\n                    data[key] = value;\n                });\n                return data;\n            },\n            /**\n             * Get shipping adddress for order\n             * @returns {{}}\n             */\n            getShippingAddressForOrder: function(){\n                var shipping = this.shippingAddress()?this.shippingAddress():{};\n                var data = {};\n                data.address_type = this.ADDRESS_TYPE.SHIPPING;\n                $.each(shipping,function(key, value){\n                    if(key == \"region\" && value.region){\n                        var regions = JSON.parse(window.webposConfig.regionJson);\n                        if(regions && shipping.country_id && regions[shipping.country_id]){\n                            if(regions[shipping.country_id][value.region_id]){\n                                value.region = regions[shipping.country_id][value.region_id].name;\n                                value.region_code = regions[shipping.country_id][value.region_id].code;\n                            }\n                        }\n                        value = value.region;\n                    }\n                    data[key] = value;\n                });\n                return data;\n            },\n            /**\n             * Auto check promotion rules\n             */\n            autoCheckPromotion: function(){\n                var self = this;\n                if(self.autoCheckingPromotion() == false) {\n                    var deferred = $.Deferred();\n                    var params = this.getCheckPromotionParams();\n                    CheckoutResource().setPush(true).setLog(false).checkPromotion(params, deferred);\n\n                    self.autoCheckingPromotion(true);\n                    deferred.done(function (response) {\n                        var data = JSON.parse(response);\n                        if(data.items){\n                            self.processCatalogRules(data.items);\n                        }\n                        if (data.discount_amount) {\n                            self.applyPromotionDiscount(HelperPrice.toBasePrice(data.discount_amount));\n                        } else {\n                            self.applyPromotionDiscount(0);\n                        }\n                        DiscountModel.appliedRuleIds(data.applied_rule_ids);\n                    }).fail(function (response) {\n                        self.autoCheckingPromotion(false);\n                    }).always(function () {\n                        self.autoCheckingPromotion(false);\n                    });\n                }\n            },\n            /**\n             * Apply promotion discount\n             * @param amount\n             */\n            applyPromotionDiscount: function(amount){\n                amount = (amount)?Helper.correctPrice(amount):0;\n                if(amount > 0){\n                    if(DiscountModel.cartBaseDiscountAmount() != amount){\n                        var TotalsModel = TotalsFactory.get();\n                        DiscountModel.appliedPromotion(true);\n                        DiscountModel.appliedDiscount(false);\n                        DiscountModel.cartDiscountType(DiscountModel.DISCOUNT_TYPES.FIXED);\n                        DiscountModel.promotionDiscountAmount(amount);\n                        DiscountModel.cartBaseDiscountAmount(amount);\n                        DiscountModel.cartDiscountAmount(Helper.convertPrice(amount));\n                        TotalsModel.updateDiscountTotal();\n                        DiscountModel.process(TotalsModel.baseDiscountAmount());\n                        Helper.dispatchEvent('reset_payments_data', '');\n                    }\n                }else{\n                    if(DiscountModel.cartBaseDiscountAmount() != amount && DiscountModel.appliedPromotion()){\n                        var TotalsModel = TotalsFactory.get();\n                        DiscountModel.reset();\n                        TotalsModel.updateDiscountTotal();\n                        DiscountModel.process(TotalsModel.baseDiscountAmount());\n                        Helper.dispatchEvent('reset_payments_data', '');\n                    }\n                }\n            },\n            /**\n             * Unhold order\n             * @param order_increment_id\n             */\n            unholdOrder: function(order_increment_id){\n                var deferred = $.Deferred();\n                var params = {order_increment_id:order_increment_id};\n                CheckoutResource().unholdOrder(params,deferred);\n                deferred.done(function (response) {\n                    var data = JSON.parse(response);\n                    var alertData = {priority:\"\",title: \"\",message: \"\"}\n                    if(data.error){\n                        alertData.priority = \"warning\";\n                        alertData.title = Translate(\"Warning\");\n                    }else{\n                        alertData.priority = \"success\";\n                        alertData.title = Translate(\"Message\");\n                    }\n                    if(data.message){\n                        alertData.message = data.message;\n                        Alert(alertData);\n                    }\n                });\n            },\n            /**\n             * Check if using authorize.net directpost\n             * @returns {boolean}\n             */\n            isAuthorizeNetDirectpost: function(){\n                var self = this;\n                return (self.paymentCode() == 'authorizenet_directpost')?true:false;\n            },\n            /**\n             * Check if using paypal payflow pro\n             * @returns {boolean}\n             */\n            isPaypalPro: function(){\n                var self = this;\n                return (self.paymentCode() == 'payflowpro')?true:false;\n            },\n            /**\n             * Is allow create invoice\n             * @returns {boolean}\n             */\n            isAllowToCreateInvoice: function() {\n                var self = this;\n                return (\n                    !self.isAuthorizeNetDirectpost() && !self.isPaypalPro() && !self.isAuthorizeNet()\n                );\n            },\n            /**\n             * Check if using authorize.net\n             * @returns {boolean}\n             */\n            isAuthorizeNet: function(){\n                var self = this;\n                return (self.paymentCode() == 'authorizenet')?true:false;\n            },\n            /**\n             * Check if using Cryozonic Stripe\n             * @returns {boolean}\n             */\n            isCryozonicStripe: function(){\n                var self = this;\n                return (self.paymentCode() == 'cryozonic_stripe')?true:false;\n            },\n            /**\n             * Open authorize.net directpost popup\n             */\n            startAuthorizeNetPayment: function(){\n                window.directPostModel.openAuthorizePopup();\n            },\n            /**\n             * Process catalog rules after check promotion\n             * @param itemsData\n             */\n            processCatalogRules: function(itemsData){\n                if(itemsData){\n                    CartModel.applyCatalogRules(itemsData);\n                }\n            },\n            /**\n             * Start authorize popup\n             */\n            startAuthorizePopup: function(){\n                var self = this;\n                var model = self.getPaymentJsModel();\n                if(model){\n                    model.openAuthorizePopup();\n                }\n            },\n            /**\n             * Get payment model for selected payment\n             * @returns {boolean}\n             */\n            getPaymentJsModel: function(){\n                var self = this;\n                var model = false;\n                if(self.isAuthorizeNetDirectpost()){\n                    model = window.directPostModel;\n                }\n                if(self.isPaypalPro()){\n                    model = window.payflowproModel;\n                }\n                return model;\n            },\n            /**\n             * Start process payment after get data from server\n             * @param response\n             */\n            processOnlinePayment: function(response){\n                var self = this;\n                if (self.isPaypalPro()) {\n                    if (!PaypalPayflowpro.CheckoutModel()) {\n                        PaypalPayflowpro.CheckoutModel(self);\n                    }\n                    var quoteId = response.quote_id;\n                    var paymentInfo = response.payment_infomation;\n                    if (paymentInfo) {\n                        PaypalPayflowpro.processPayment(quoteId, paymentInfo);\n                    }\n                }\n            },\n            /**\n             * Submit quote online\n             * @param quoteId\n             */\n            submitQuoteOnline: function(quoteId){\n                var self = this;\n                if(quoteId){\n                    self.isOnhold(false);\n                    self.createInvoice(false);\n                    var params = self.getOrderParams();\n                    params.quote_id = quoteId;\n                    delete params.customer_id;\n                    delete params.items;\n                    var createdTime = DateTime.getBaseSqlDatetime();\n                    params.extension_data.push({\n                        key:\"webpos_order_id\",\n                        value: OrderHelper.generateId()\n                    });\n                    params.extension_data.push({\n                        key:\"created_at\",\n                        value:createdTime\n                    });\n                    var deferred = $.Deferred();\n                    self.loading(true);\n                    var methodCode = params.payment.method_data[0];\n                    self.paymentCode(methodCode.code);\n                    params.payment.method = methodCode.code;\n                    CheckoutResource().setPush(true).setLog(false).submitQuoteOnline(params,deferred);\n                    deferred.done(function(response){\n                        if(response && response.increment_id){\n                            self.placeOrder(response);\n                        }\n                    });\n                    deferred.always(function(response){\n                        self.loading(false);\n                    });\n                }\n            },\n            /**\n             * Load shipping methods for quote\n             * @returns {*}\n             */\n            loadShippingOnline: function(){\n                var self = this;\n                var deferred = $.Deferred();\n                var params = CartModel.getQuoteInitParams();\n                self.loading(true);\n                CheckoutResource().setPush(true).setLog(false).getShipping(params,deferred);\n                deferred.always(function(){\n                    self.loading(false);\n                });\n                return deferred;\n            },\n            /**\n             * Load payment method for quote\n             * @returns {*}\n             */\n            loadPaymentOnline: function(){\n                var self = this;\n                var deferred = $.Deferred();\n                var params = CartModel.getQuoteInitParams();\n                self.loading(true);\n                CheckoutResource().setPush(true).setLog(false).getPayment(params,deferred);\n                deferred.always(function(){\n                    self.loading(false);\n                });\n                return deferred;\n            },\n            /**\n             * Load all cart data for quote\n             * @param section\n             * @returns {*}\n             */\n            loadCartDataOnline: function(section){\n                var self = this;\n                var deferred = $.Deferred();\n                var params = CartModel.getQuoteInitParams();\n                params.section = (section)?section:[];\n                self.loading(true);\n                CheckoutResource().setPush(true).setLog(false).getCartData(params,deferred);\n                deferred.done(function(response){\n                    // if(response.status == CartModel.DATA.STATUS.ERROR && response.messages){\n                    //     CartData.hasErrors(true);\n                    //     CartData.errorMessages(response.messages);\n                    // }else{\n                    //     CartData.hasErrors(false);\n                    //     CartData.errorMessages('');\n                    // }\n                }).always(function(){\n                    self.loading(false);\n                });\n                return deferred;\n            },\n            /**\n             * Save shipping method - online mode\n             * @param code\n             * @returns {*}\n             */\n            saveShippingMethodOnline: function(code){\n                var deferred = $.Deferred();\n                if(code){\n                    var self = this;\n                    var params = CartModel.getQuoteInitParams();\n                    params.shipping_method = code;\n                    self.loading(true);\n                    CheckoutResource().setPush(true).setLog(false).saveShippingMethod(params,deferred);\n                    deferred.always(function(){\n                        self.loading(false);\n                    });\n\n                }\n                return deferred;\n            },\n            /**\n             * Save payment method - online mode\n             * @param code\n             * @returns {*}\n             */\n            savePaymentMethodOnline: function(code){\n                var self = this;\n                var deferred = $.Deferred();\n                if(code && (self.loadingPayment != code)){\n                    var initParams = CartModel.getQuoteInitParams();\n                    var params = {quote_id: initParams.quote_id};\n                    params.payment_method = code;\n                    self.loading(true);\n                    self.loadingPayment = code;\n                    CheckoutResource().setPush(true).setLog(false).savePaymentMethod(params,deferred);\n                    deferred.done(function(){\n                        self.paymentCode(code);\n                    }).always(function(){\n                        self.loadingPayment = '';\n                        self.loading(false);\n                    });\n                }\n                return deferred;\n            },\n            /**\n             * Place order - online mode\n             * @returns {*}\n             */\n            placeOrderOnline: function(){\n                var self = this;\n                var deferred = $.Deferred();\n                if(CartData.hasErrors() && CartData.errorMessages()){\n                    CheckoutResource().processResponseMessages(CartModel.errorMessages(), 0);\n                }else {\n                    var initParams = CartModel.getQuoteInitParams();\n                    var params = {quote_id: initParams.quote_id};\n                    params.payment = self.getPaymentDataToPlaceOrder();\n                    params.shipping_method = self.selectedShippingCode();\n                    params.quote_data = DiscountModel.getApplyOnlineParams();\n                    params.quote_data.customer_note = '';\n                    params.quote_data.is_web_version = 1;\n                    params.actions = {\n                        create_invoice: self.createInvoice(),\n                        create_shipment: self.createShipment(),\n                        delivery_time: self.getDeliverytime()\n                    };\n                    params.integration = [];\n                    params.extension_data = [];\n                    if(Helper.getOnlineConfig('use_custom_order_id') == '1'){\n                        params.extension_data.push({\n                            key:\"webpos_order_id\",\n                            value: OrderHelper.generateId()\n                        });\n                    }\n                    params.extension_data.push({\n                        key:\"webpos_staff_id\",\n                        value: Staff.getStaffId()\n                    });\n                    params.extension_data.push({\n                        key:\"webpos_staff_name\",\n                        value: Staff.getStaffName()\n                    });\n                    params.extension_data.push({\n                        key:\"webpos_shift_id\",\n                        value: window.webposConfig.shiftId\n                    });\n                    params.extension_data.push({\n                        key:\"location_id\",\n                        value: window.webposConfig.locationId\n                    });\n                    if(self.remainTotal() && self.remainTotal() < 0){\n                        params.extension_data.push({\n                            key:\"webpos_change\",\n                            value: -self.remainTotal()\n                        });\n                        params.extension_data.push({\n                            key:\"webpos_base_change\",\n                            value: -self.baseRemainTotal()\n                        });\n                    }\n                    Event.dispatch('webpos_place_order_online_before', params);\n                    self.loading(true);\n                    CheckoutResource().setPush(true).setLog(false).placeOrder(params, deferred);\n                    deferred.done(function (response) {\n                        if (response && response.increment_id) {\n                            self.placeOrderSuccess(response);\n                        }else{\n                            response = JSON.parse(response);\n                            var order = response.order;\n                            var paymentInfo = response.payment_infomation;\n                            if(order && order.entity_id){\n                                var orderId = order.entity_id;\n                                if (self.isAuthorizeNetDirectpost()) {\n                                    if (!Directpost().CheckoutModel()) {\n                                        Directpost().CheckoutModel(self);\n                                    }\n                                    if (orderId) {\n                                        Directpost().processPayment(orderId, paymentInfo);\n                                    }\n                                }\n                                if (self.isCryozonicStripe()) {\n                                    if (!Stripe().CheckoutModel()) {\n                                        Stripe().CheckoutModel(self);\n                                    }\n                                    if (orderId) {\n                                        Stripe().processPayment(orderId);\n                                    } else {\n\n                                    }\n                                }\n                            }\n                        }\n                    }).always(function () {\n                        if(!self.isAuthorizeNetDirectpost()){\n                            self.loading(false);\n                        }\n                    });\n                }\n                return deferred;\n            },\n            /**\n             * Process data after place order success - online mode\n             * @param orderData\n             */\n            placeOrderSuccess: function(orderData){\n                if(orderData){\n                    var self = this;\n                    if (orderData.increment_id) {\n                        var message = Helper.__('Order has been created successfully ') + \"#\" + orderData.increment_id;\n                        AddNoti(message, true, \"success\", Helper.__('Message'));\n                    }\n                    self.createOrderResult(orderData);\n                    Event.dispatch('webpos_place_order_online_after', orderData);\n                }\n\n            },\n            /**\n             * Get params to save quote data\n             * @param comment\n             * @returns {{quote_id: *, quote_data: (*|{cart_discount_name: *, cart_discount_type: *, cart_discount_value: *})}}\n             */\n            getSaveOnlineQuoteDataParams: function(comment){\n                var self = this;\n                var params = {\n                    quote_id: Helper.getOnlineConfig(CartData.KEY.QUOTE_ID),\n                    quote_data: DiscountModel.getApplyOnlineParams()\n                };\n                params.quote_data.customer_note = (comment)?comment:self.orderComment();\n                return params;\n            },\n            /**\n             * Apply coupon code - online mode\n             * @returns {*}\n             */\n            applyCouponOnline: function(){\n                var deferred = $.Deferred();\n                var self = this;\n                if(DiscountModel.couponCode()){\n                    deferred = self._afterSaveCart($.proxy(self._applyCouponOnline, self));\n                }else{\n                    deferred = self.cancelCouponOnline();\n                }\n                return deferred;\n            },\n            /**\n             * Apply coupon code - online mode\n             * @returns {*}\n             * @private\n             */\n            _applyCouponOnline: function(){\n                var self = this;\n                var deferred = $.Deferred();\n                var params = CartModel.getQuoteInitParams();\n                params.coupon_code = DiscountModel.couponCode();\n                CartModel.loading(true);\n                CheckoutResource().setPush(true).setLog(false).applyCoupon(params,deferred);\n                deferred.done(function(response){\n                    if(DiscountModel.promotionDiscountAmount()){\n                        DiscountModel.appliedPromotion(true);\n                    }\n                }).always(function(){\n                    CartModel.loading(false);\n                });\n                return deferred;\n            },\n            /**\n             * Cancel coupon code - online mode\n             * @returns {*}\n             */\n            cancelCouponOnline: function(){\n                var self = this;\n                var deferred = $.Deferred();\n                var params = CartModel.getQuoteInitParams();\n                params.coupon_code = '';\n                self.loading(true);\n                CheckoutResource().setPush(true).setLog(false).cancelCoupon(params,deferred);\n                deferred.done(function(response){\n                    DiscountModel.couponCode('');\n                    DiscountModel.appliedPromotion(false);\n                }).always(function(){\n                    self.loading(false);\n                });\n                return deferred;\n            },\n            /**\n             * Select customer - online mode\n             * @returns {*}\n             */\n            selectCustomerOnline: function(){\n                var self = this;\n                self.loading(true);\n                var deferred = CartModel.saveCartOnline();\n                deferred.always(function(){\n                    self.loading(false);\n                });\n                return deferred;\n            },\n            /**\n             * Check apply discount online\n             * @returns {*}\n             */\n            applyCartDiscountOnline: function(){\n                var self = this;\n                var deferred = self._afterSaveCart($.proxy(self._applyCartDiscountOnline, self));\n                return deferred;\n            },\n            /**\n             * Process apply discount online\n             * @returns {*}\n             */\n            _applyCartDiscountOnline: function(){\n                var self = this;\n                var deferred = $.Deferred();\n                var params = self.getSaveOnlineQuoteDataParams()\n                CartModel.loading(true);\n                CheckoutResource().setPush(true).setLog(false).saveQuoteData(params,deferred);\n                deferred.always(function(){\n                    CartModel.loading(false);\n                });\n                return deferred;\n            },\n            /**\n             * Call function after save cart\n             * @param callback\n             * @returns {*}\n             * @private\n             */\n            _afterSaveCart: function(callback, args, saveBeforeRemove){\n                var deferred = $.Deferred();\n                var self = this;\n                if(CartModel.currentPage() == CartData.PAGE.CHECKOUT){\n                    deferred = callback(args);\n                }else{\n                    CartModel.saveCartOnline(saveBeforeRemove).done(function(){\n                        deferred = callback(args);\n                    });\n                }\n                return deferred;\n            },\n            /**\n             * Save cart and save note to quote\n             * @returns {*}\n             */\n            saveCustomerNote: function(){\n                var self = this;\n                var deferred = self._afterSaveCart($.proxy(self._saveCustomerNote, self), self.orderComment());\n                return deferred;\n            },\n            /**\n             * Call api to save\n             * @returns {*}\n             * @private\n             */\n            _saveCustomerNote: function(comment){\n                var self = this;\n                var deferred = $.Deferred();\n                var params = self.getSaveOnlineQuoteDataParams(comment);\n                CartModel.loading(true);\n                CheckoutResource().setPush(true).setLog(false).saveQuoteData(params,deferred);\n                deferred.always(function(){\n                    CartModel.loading(false);\n                });\n                return deferred;\n            },\n            /**\n             * Load current quote data\n             */\n            loadCurrentQuote: function(){\n                var self = this;\n                var params = CartModel.getQuoteInitParams();\n                if(params.quote_id){\n                    self.loadCartDataOnline();\n                }\n            },\n            /**\n             * Get payment data to place order\n             * @returns {{method: *, method_data: *}}\n             */\n            getPaymentDataToPlaceOrder: function(){\n                var self = this;\n                var payment = {\n                    method:self.paymentCode(),\n                    method_data:self.getPaymentsData()\n                }\n                if(self.isCreditCardPayment()){\n                    payment = CreditCard.getData();\n                    payment.method = self.paymentCode();\n                }\n                return payment;\n            },\n            /**\n             * Get quote data to place order\n             * @returns {{webpos_delivery_date: *}}\n             */\n            getQuoteDataToPlaceOrder: function(){\n                var self = this;\n                var quote_data = {\n                    webpos_delivery_date: self.getDeliverytime()\n                };\n                Event.dispatch('prepare_quote_data_to_place_order',quote_data);\n                return quote_data;\n            },\n            /**\n             * Check if payment require to paid before create order\n             * @returns {boolean}\n             */\n            isPrepaid: function(){\n                var self = this;\n                if(self.isPaypalPro()){\n                    self.getPaymentRequestOnline();\n                    return true;\n                }\n                return false;\n            },\n            /**\n             * Get payment request data to process payment - online mode\n             */\n            getPaymentRequestOnline: function(){\n                var self = this;\n                var deferred = $.Deferred();\n                var initParams = CartModel.getQuoteInitParams();\n                var params = {quote_id: initParams.quote_id};\n                params.payment = self.getPaymentDataToPlaceOrder();\n                self.loading(true);\n                CheckoutResource().setPush(true).setLog(false).getPaymentRequest(params, deferred);\n                deferred.done(function (response) {\n                    var result = JSON.parse(response);\n                    self.processOnlinePayment(result);\n                }).always(function () {\n                    self.loading(false);\n                });\n            }\n        };\n        CheckoutModel.initDefaultData();\n        CheckoutModel.loadCurrentQuote();\n        return CheckoutModel;\n    }\n);","Magestore_Webpos/js/model/checkout/taxcalculator-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/taxcalculator',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/taxcalculator';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/taxclass-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/taxclass',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/taxclass';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/taxcalculator.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\nrequire([\n    'Magestore_Webpos/js/model/customer/group',\n    ]);\n    \ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/checkout/taxrule-factory',\n        'Magestore_Webpos/js/model/checkout/taxrate-factory',\n        'Magestore_Webpos/js/model/customer/group-factory',\n    ],\n    function ($, ko, modelAbstract, TaxRuleFactory, TaxRateFactory, CustomerGroupFactory) {\n        \"use strict\";\n        return modelAbstract.extend({\n            rules: ko.observableArray([]),\n            rates: ko.observableArray([]),\n            groups: ko.observableArray([]),\n            initialize: function () {\n                this._super();\n            },\n            initData: function (){\n                var self = this;\n                if(self.rules().length <= 0){\n                    self.getRules();\n                }\n                if(self.rates().length <= 0){\n                    self.getRates();\n                }\n                if(self.groups().length <= 0){\n                    self.getGroups();\n                }\n            },\n            reInitData: function(){\n                var self = this;\n                self.getRules();\n                self.getRates();\n                self.getGroups();\n            },\n            getRules: function(){\n                var self = this;\n                self.rules([]);\n                var deferred = TaxRuleFactory.get().getCollection().load();\n                deferred.done(function (response) {\n                    if(response.items && response.items.length > 0){\n                        $.each(response.items, function(){\n                            var rule = {\n                                id:this.id,\n                                customer_tc_ids:this.customer_tax_class_ids,\n                                product_tc_ids:this.product_tax_class_ids,\n                                rates_ids:this.tax_rate_ids,\n                                priority:this.priority\n                            };\n                            self.rules.push(rule);\n                        });\n                    }\n                });\n            },\n            getRates: function(){\n                var self = this;\n                self.rates([]);\n                var deferred = TaxRateFactory.get().getCollection().load();\n                deferred.done(function (response) {\n                    if(response.items && response.items.length > 0){\n                        $.each(response.items, function(){\n                            var rate = {\n                                id:this.id,\n                                country:this.tax_country_id,\n                                region_id:this.tax_region_id,\n                                postcode:this.tax_postcode,\n                                rate:this.rate\n                            };\n                            self.rates.push(rate);\n                        });\n                    }\n                });\n            },\n            getGroups: function(){\n                var self = this;\n                self.groups([]);\n                var deferred = CustomerGroupFactory.get().getCollection().load();\n                deferred.done(function (response) {\n                    if(response.items && response.items.length > 0){\n                        $.each(response.items, function(){\n                            var group = {\n                                id:this.id,\n                                tax_class_id:this.tax_class_id\n                            };\n                            self.groups.push(group);\n                        });\n                    }\n                });\n            },\n            getProductTaxRate: function(productTaxClassId, customerGroup, billingAddress){\n                var self = this;\n                var customerTaxClassId = self.getCustomerTaxClassId(customerGroup);\n                var rate = self.getRate(productTaxClassId,customerTaxClassId, billingAddress);\n                return rate;\n            },\n            getCustomerTaxClassId: function(customerGroup){\n                var customerTaxClassId = \"\";\n                if(this.groups() && this.groups().length > 0){\n                    $.each(this.groups(), function(){\n                        if(this.id == customerGroup){\n                            customerTaxClassId = this.tax_class_id;\n                        }\n                    });\n                }\n                return customerTaxClassId;\n            },\n            getRate: function(productTaxClassId, customerTaxClassId, address){\n                var self = this;\n                var rateIds = \"\";\n                var rates = [];\n                var tempRates = [];\n                if(customerTaxClassId != \"\"){\n                    if(this.rules() && this.rules().length > 0){\n                        $.each(this.rules(), function(){\n                            if(\n                                $.inArray(parseInt(customerTaxClassId), this.customer_tc_ids) !== -1  \n                                && $.inArray(parseInt(productTaxClassId), this.product_tc_ids) !== -1\n                            ){\n                                rateIds = this.rates_ids;\n                                var tempRate = self.getRateValue(rateIds, address);\n                                if(tempRate > 0){\n                                    var priority = this.priority;\n                                    var isNew = true;\n                                    $.each(tempRates, function(index, rate){\n                                        if(this.priority == priority){\n                                            isNew = false;\n                                            rate.rate += parseFloat(tempRate);\n                                            tempRates[index] = rate;\n                                        }\n                                    });\n                                    if(isNew == true){\n                                        tempRates.push({priority:priority, rate: parseFloat(tempRate)});\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }else{\n                    if(this.rules() && this.rules().length > 0){\n                        rateIds = [];\n                        $.each(this.rules(), function(){\n                            if(\n                                $.inArray(parseInt(productTaxClassId), this.product_tc_ids) !== -1\n                            ){\n                                rateIds = this.rates_ids;\n                                var tempRate = self.getRateValue(rateIds, address);\n                                if(tempRate > 0){\n                                    var priority = this.priority;\n                                    var isNew = true;\n                                    $.each(tempRates, function(index, rate){\n                                        if(this.priority == priority){\n                                            isNew = false;\n                                            rate.rate += parseFloat(tempRate);\n                                            tempRates[index] = rate;\n                                        }\n                                    });\n                                    if(isNew == true){\n                                        tempRates.push({priority:priority, rate: parseFloat(tempRate)});\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n                tempRates.sort(self.sortRulesRate);\n                $.each(tempRates, function(){\n                    rates.push(this.rate);\n                });\n                return rates;\n            },\n            getRateValue: function(rateIds, address){\n                var self = this;\n                var rate = 0;\n                if(rateIds != \"\"){\n                    if(rateIds && rateIds.length > 0){\n                        $.each(rateIds, function(){\n                            var rateId = this;\n                            if(self.rates() && self.rates().length > 0){\n                                $.each(self.rates(), function(){\n                                    if(this.id == rateId){\n                                        if(\n                                            (this.country == \"*\" || this.country == address.country_id)&&\n                                            (this.region_id == \"*\" || this.region_id == \"0\" || this.region_id == 0 || this.region_id == address.region_id)&&\n                                            (this.postcode == \"*\" || this.postcode == address.postcode)\n                                        ){\n                                            if(this.rate > rate){\n                                                rate = this.rate;\n                                            }\n                                        }\n                                    }\n                                });\n                            }\n                        });\n                    }\n                }\n                return rate;\n            },\n            getOriginRate: function(productTaxClassId, customerGroup){\n                var self = this;\n                var customerTaxClassId = self.getCustomerTaxClassId(customerGroup);\n                var address = {\n                    country_id:window.webposConfig['shipping/origin/country_id'],\n                    postcode:window.webposConfig['shipping/origin/postcode'],\n                    region_id:(window.webposConfig['shipping/origin/region_id'])?window.webposConfig['shipping/origin/region_id']:0\n                };\n                var rateIds = \"\";\n                var rates = [];\n                var tempRates = [];\n                if(customerTaxClassId != \"\"){\n                    if(this.rules() && this.rules().length > 0){\n                        $.each(this.rules(), function(){\n                            if(\n                                $.inArray(parseInt(customerTaxClassId), this.customer_tc_ids) !== -1\n                                && $.inArray(parseInt(productTaxClassId), this.product_tc_ids) !== -1\n                            ){\n                                rateIds = this.rates_ids;\n                                var tempRate = self.getRateValue(rateIds, address);\n                                if(tempRate > 0){\n                                    var priority = this.priority;\n                                    var isNew = true;\n                                    $.each(tempRates, function(index, rate){\n                                        if(this.priority == priority){\n                                            isNew = false;\n                                            rate.rate += parseFloat(tempRate);\n                                            tempRates[index] = rate;\n                                        }\n                                    });\n                                    if(isNew == true){\n                                        tempRates.push({priority:priority, rate: parseFloat(tempRate)});\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }else{\n                    if(this.rules() && this.rules().length > 0){\n                        rateIds = [];\n                        $.each(this.rules(), function(){\n                            if(\n                                $.inArray(parseInt(productTaxClassId), this.product_tc_ids) !== -1\n                            ){\n                                rateIds = this.rates_ids;\n                                var tempRate = self.getRateValue(rateIds, address);\n                                if(tempRate > 0){\n                                    var priority = this.priority;\n                                    var isNew = true;\n                                    $.each(tempRates, function(index, rate){\n                                        if(this.priority == priority){\n                                            isNew = false;\n                                            rate.rate += parseFloat(tempRate);\n                                            tempRates[index] = rate;\n                                        }\n                                    });\n                                    if(isNew == true){\n                                        tempRates.push({priority:priority, rate: parseFloat(tempRate)});\n                                    }\n                                }\n                            }\n                        });\n                    }\n                }\n                tempRates.sort(self.sortRulesRate);\n                $.each(tempRates, function(){\n                    rates.push(this.rate);\n                });\n                return rates;\n            },\n            sortRulesRate: function(ruleA, ruleB){\n                var aPriority = parseFloat(ruleA.priority);\n                var bPriority = parseFloat(ruleB.priority);\n                return ((aPriority < bPriority) ? -1 : ((aPriority > bPriority) ? 1 : 0));\n            }\n\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/taxrule-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/taxrule',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/taxrule';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/taxrate.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/taxrate',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/checkout/taxrate',\n        'Magestore_Webpos/js/model/collection/checkout/taxrate'\n    ],\n    function ($,ko, modelAbstract, restResource, localResource, collection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'taxrate',\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), localResource());\n                this.setResourceCollection(collection());\n            },\n            getTaxRate: function(billingData,deferred){\n                if(billingData && billingData.country_id){\n                    this.getCollection().addFieldToFilter('tax_country_id',billingData.country_id,'eq');\n                }\n                if(billingData && billingData.postcode){\n                    this.getCollection().addFieldToFilter(\n                        [\n                            ['tax_postcode', billingData.postcode, 'eq'],\n                            ['tax_postcode', \"*\", 'eq']\n                        ]\n                    );\n                }\n                if(billingData && billingData.region_id){\n                    this.getCollection().addFieldToFilter('tax_region_id',billingData.region_id,'eq');\n                }\n                this.getCollection().load(deferred);\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/shipping-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/shipping',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/shipping';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/cart.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/checkout/cart/items',\n        'Magestore_Webpos/js/model/checkout/taxcalculator',\n        'mage/translate',\n        'Magestore_Webpos/js/model/event-manager',\n        'Magestore_Webpos/js/model/checkout/cart/totals-factory',\n        'Magestore_Webpos/js/model/catalog/product-factory',\n        'Magestore_Webpos/js/helper/pole',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/cart/data/cart',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/cart'\n    ],\n    function ($, ko, Items, TaxCalculator, __, Event, TotalsFactory, ProductFactory, poleHelper, priceHelper, Helper, CartData, CartResource) {\n        \"use strict\";\n\n        /**\n         * Cart Model\n         * @type {{loading: *, customerId: *, customerGroup: *, customerData: *, currentPage: *, GUEST_CUSTOMER_NAME: *, BACK_CART_BUTTON_CODE: string, CHECKOUT_BUTTON_CODE: string, HOLD_BUTTON_CODE: string, CheckoutModel: *, CartCustomerModel: *, initialize: initialize, initObserver: initObserver, emptyCart: emptyCart, addCustomer: addCustomer, removeCustomer: removeCustomer, removeItem: removeItem, addProduct: addProduct, updateItem: updateItem, getItemData: getItemData, getItemsInfo: getItemsInfo, getItemsDataForOrder: getItemsDataForOrder, getItemsInitData: getItemsInitData, isVirtual: true, totalItems: totalItems, totalShipableItems: totalShipableItems, collectTaxRate: collectTaxRate, reCollectTaxRate: reCollectTaxRate, collectTierPrice: collectTierPrice, validateItemsQty: validateItemsQty, getItemChildsQty: getItemChildsQty, getQtyInCart: getQtyInCart, hasStorecredit: hasStorecredit, canCheckoutStorecredit: canCheckoutStorecredit, applyCatalogRules: applyCatalogRules, getQuoteCustomerParams: getQuoteCustomerParams, resetQuoteInitData: resetQuoteInitData, getCustomerInitParams: getCustomerInitParams, getQuoteInitParams: getQuoteInitParams, saveCartOnline: saveCartOnline, saveCartBeforeCheckoutOnline: saveCartBeforeCheckoutOnline, removeCartOnline: removeCartOnline, removeItemOnline: removeItemOnline, hasOnlineQuote: hasOnlineQuote, saveQuoteData: saveQuoteData}}\n         */\n        var CartModel = {\n            loading: ko.observable(),\n            customerId: ko.observable(''),\n            customerGroup: ko.observable(''),\n            customerData: ko.observable({}),\n            currentPage: ko.observable(),\n            GUEST_CUSTOMER_NAME: __(\"Guest\"),\n            BACK_CART_BUTTON_CODE: \"back_to_cart\",\n            CHECKOUT_BUTTON_CODE: \"checkout\",\n            HOLD_BUTTON_CODE: \"hold\",\n            CheckoutModel:ko.observable(),\n            CartCustomerModel:ko.observable(),\n            /**\n             * Initialize\n             * @returns {CartModel}\n             */\n            initialize: function(){\n                var self = this;\n                self.initObserver();\n                return self;\n            },\n            /**\n             * Init events and variables\n             */\n            initObserver: function(){\n                var self = this;\n                self.isOnCheckoutPage = ko.pureComputed(function(){\n                    return (self.currentPage() == CartData.PAGE.CHECKOUT)?true:false;\n                });\n                self.isOnCheckoutPage.subscribe(function(value){\n                    Helper.isOnCheckoutPage(value);\n                });\n                Event.observer('init_quote_online_after', function(event, response){\n                    if(response && response.data){\n                        self.saveQuoteData(response.data);\n                    }\n                });\n            },\n            /**\n             * Clear cart\n             */\n            emptyCart: function(){\n                Items.items.removeAll();\n                this.removeCustomer();\n                this.CheckoutModel().useDefaultAddress(this.CheckoutModel().ADDRESS_TYPE.BILLING);\n                this.CheckoutModel().useDefaultAddress(this.CheckoutModel().ADDRESS_TYPE.SHIPPING);\n                this.CheckoutModel().selectedShippingCode(\"\");\n                this.CheckoutModel().selectedShippingPrice(0);\n                TotalsFactory.get().shippingData(\"\");\n                TotalsFactory.get().shippingFee(0);\n                TotalsFactory.get().updateShippingAmount(0);\n                Event.dispatch('cart_empty_after','');\n                poleHelper('', 'Total: ' +\n                    priceHelper.convertAndFormat(TotalsFactory.get().getTotalValue('grand_total')));\n            },\n            /**\n             * Add customer to cart\n             * @param data\n             */\n            addCustomer: function(data){\n                this.customerData(data);\n                this.customerId(data.id);\n                this.customerGroup(data.group_id);\n                this.collectTierPrice();\n                poleHelper('', 'Total: ' +\n                    priceHelper.convertAndFormat(TotalsFactory.get().getTotalValue('grand_total')));\n            },\n            /**\n             * Remove customer\n             */\n            removeCustomer: function(){\n                this.CartCustomerModel().setCustomerId(\"\");\n                this.CartCustomerModel().setFullName(this.GUEST_CUSTOMER_NAME);\n                this.customerId(\"\");\n                this.customerGroup(\"\");\n                this.customerData({});\n                this.collectTierPrice();\n                Event.dispatch('cart_remove_customer_after',{guest_customer_name:this.GUEST_CUSTOMER_NAME});\n                poleHelper('', 'Total: ' +\n                    priceHelper.convertAndFormat(TotalsFactory.get().getTotalValue('grand_total')));\n            },\n            /**\n             * Remove cart item\n             * @param itemId\n             */\n            removeItem: function(itemId){\n                Items.removeItem(itemId);\n                if(Items.items().length == 0){\n                    TotalsFactory.get().updateShippingAmount(0);\n                }\n                TotalsFactory.get().collectShippingTotal();\n                TotalsFactory.get().collectTaxTotal();\n                Event.dispatch('cart_item_remove_after',Items.items());\n                poleHelper('', 'Total: ' +\n                    priceHelper.convertAndFormat(TotalsFactory.get().getTotalValue('grand_total')));\n            },\n            /**\n             * Add product to cart\n             * @param data\n             */\n            addProduct: function(data){\n                var validate = true;\n                var item = Items.getAddedItem(data);\n                if(item !== false){\n                    var dataToValidate = item.getData();\n                    if(dataToValidate.product_id != \"customsale\" && data.product_type != \"bundle\"){\n                        dataToValidate.qty += data.qty;\n                        dataToValidate.customer_group = this.customerGroup();\n                        validate = ProductFactory.get().validateQtyInCart(dataToValidate);\n                    }\n                }else{\n                    if(data.product_id != \"customsale\" && data.product_type != \"bundle\"){\n                        data.customer_group = this.customerGroup();\n                        if(data.minimum_qty && data.qty < data.minimum_qty){\n                            data.qty = data.minimum_qty;\n                        }\n                        if(data.maximum_qty && data.maximum_qty > 0 && data.qty > data.maximum_qty){\n                            data.qty = data.maximum_qty;\n                        }\n                        validate = ProductFactory.get().validateQtyInCart(data);\n                    }\n                }\n                if(validate){\n                    data = this.collectTaxRate(data);\n                    Items.addItem(data);\n                    TotalsFactory.get().collectShippingTotal();\n                    TotalsFactory.get().collectTaxTotal();\n                    this.collectTierPrice();\n                }\n                poleHelper(data.sku + ' +' + priceHelper.convertAndFormat(parseFloat(data.unit_price) * parseFloat(data.qty)), 'Total: ' +\n                    priceHelper.convertAndFormat(TotalsFactory.get().getTotalValue('grand_total')));\n            },\n            /**\n             * Update cart item data\n             * @param itemId\n             * @param key\n             * @param value\n             */\n            updateItem: function(itemId, key, value){\n                var validate = true;\n                var item = Items.getItem(itemId);\n                if(item){\n                    if(key == \"qty\"){\n                        var data = item.getData();\n                        data.qty = value;\n                        if(data.product_id != \"customsale\" && data.product_type != \"bundle\"){\n                            data.customer_group = this.customerGroup();\n                            validate = ProductFactory.get().validateQtyInCart(data);\n                        }\n                        if(data.product_id == \"customsale\"){\n                            value = (value > 0)?value:1;\n                        }\n                    }\n                    if(validate){\n                        Items.setItemData(itemId, key, value);\n                        TotalsFactory.get().collectShippingTotal();\n                        TotalsFactory.get().collectTaxTotal();\n                    }\n                }\n            },\n            /**\n             * Get cart item data\n             * @param itemId\n             * @param key\n             * @returns {*}\n             */\n            getItemData: function(itemId, key){\n                return Items.getItemData(itemId, key);\n            },\n            /**\n             * Get cart item\n             * @param itemId\n             * @returns {*}\n             */\n            getItem: function(itemId){\n                return Items.getItem(itemId);\n            },            \n            /**\n             * Get items info buy request\n             * @returns {Array}\n             */\n            getItemsInfo: function(){\n                var itemsInfo = [];\n                if(Items.items().length > 0){\n                    ko.utils.arrayForEach(Items.items(), function(item) {\n                        itemsInfo.push(item.getInfoBuyRequest());\n                    });\n                }\n                return itemsInfo;\n            },\n            /**\n             * Get items data for offline order\n             * @returns {Array}\n             */\n            getItemsDataForOrder: function(){\n                var itemsData = [];\n                if(Items.items().length > 0){\n                    ko.utils.arrayForEach(Items.items(), function(item) {\n                        itemsData.push(item.getDataForOrder());\n                    });\n                }\n                return itemsData;\n            },\n            /**\n             * Get items init data\n             * @returns {Array}\n             */\n            getItemsInitData: function(){\n                var itemsData = [];\n                if(Items.items().length > 0){\n                    ko.utils.arrayForEach(Items.items(), function(item) {\n                        itemsData.push(item.getData());\n                    });\n                }\n                return itemsData;\n            },\n            /**\n             * Is cart virtual\n             * @returns {boolean}\n             */\n            isVirtual: function(){\n                var isVirtual = true;\n                if(Items.items().length > 0){\n                    var notVirtualItem = ko.utils.arrayFilter(Items.items(), function(item) {\n                        return item.is_virtual() == false;\n                    });\n                    isVirtual = (notVirtualItem.length > 0)?false:true;\n                }\n                return isVirtual;\n            },\n            /**\n             * Get total number items\n             * @returns {*}\n             */\n            totalItems: function(){\n                return Items.totalItems();\n            },\n            /**\n             * Get total shipable items\n             * @returns {*}\n             */\n            totalShipableItems: function(){\n                return Items.totalShipableItems();\n            },\n            /**\n             * Collect tax rates for cart item before add\n             * @param data\n             * @returns {*}\n             */\n            collectTaxRate: function(data){\n                var self = this;\n                var calculateTaxBaseOn = window.webposConfig[\"tax/calculation/based_on\"];\n                var address = (calculateTaxBaseOn == 'shipping')?self.CheckoutModel().shippingAddress():self.CheckoutModel().billingAddress();\n                data.tax_rates = TaxCalculator().getProductTaxRate(data.tax_class_id, this.customerGroup(), address);\n                data.tax_origin_rates = TaxCalculator().getOriginRate(data.tax_class_id, this.customerGroup());\n                return data;\n            },\n            /**\n             * Re collect tax rates for all cart items\n             */\n            reCollectTaxRate: function(){\n                var self = this;\n                if(Items.items().length > 0){\n                    var calculateTaxBaseOn = window.webposConfig[\"tax/calculation/based_on\"];\n                    var address = (calculateTaxBaseOn == 'shipping')?self.CheckoutModel().shippingAddress():self.CheckoutModel().billingAddress();\n                    ko.utils.arrayForEach(Items.items(), function(item) {\n                        var taxrate = TaxCalculator().getProductTaxRate(item.tax_class_id(), self.customerGroup(), address);\n                        var taxOriginRate = TaxCalculator().getOriginRate(item.tax_class_id(), self.customerGroup());\n                        self.updateItem(item.item_id(),'tax_rates',taxrate);\n                        self.updateItem(item.item_id(),'tax_origin_rates',taxOriginRate);\n                    });\n                }\n            },\n            /**\n             * Calculate tier price, group price for cart items\n             */\n            collectTierPrice: function(){\n                var self = this;\n                if(Items.items().length > 0){\n                    var hasTierPriceItems = ko.utils.arrayFilter(Items.items(), function(item) {\n                        return (item.tier_prices() && item.tier_prices().length > 0)?true:false;\n                    });\n                    ko.utils.arrayForEach(hasTierPriceItems, function(item) {\n                        var tier_prices = item.tier_prices();\n                        var itemQty = item.qty();\n                        var tier_price = false;\n                        if(tier_prices){\n                            var validTierPrice = ko.utils.arrayFirst(tier_prices, function(data) {\n                                return (((self.customerGroup() == data.customer_group_id ) || (data.customer_group_id  == 32000))  && itemQty >= data.qty);\n                            });\n                            if(validTierPrice){\n                                tier_price = validTierPrice.value;\n                            }\n                        }\n                        self.updateItem(item.item_id(),'tier_price',tier_price);\n                    });\n\n                    var hasNoTierPriceItems = ko.utils.arrayFilter(Items.items(), function(item) {\n                        return (item.tier_prices() && item.tier_prices().length > 0)?false:true;\n                    });\n                    ko.utils.arrayForEach(hasNoTierPriceItems, function(item) {\n                        var child_id = item.child_id();\n                        var itemQty = item.qty();\n                        var collection = ProductFactory.get(); // .getCollection();\n                        // collection.reset();\n                        // collection.addFieldToFilter('id', child_id, 'eq');\n                        var cdeferred = collection.load(child_id);\n                        cdeferred.done(function (data) {\n                            if (data) {\n                                var child = data;\n                                var tier_price = false;\n                                if(child && child.tier_prices){\n                                    item.tier_prices(child.tier_prices);\n                                    var validTierPrice = ko.utils.arrayFirst(child.tier_prices, function(data) {\n                                        return (((self.customerGroup() == data.customer_group_id ) || (data.customer_group_id  == 32000))  && itemQty >= data.qty);\n                                    });\n                                    if(validTierPrice){\n                                        tier_price = validTierPrice.value;\n                                    }\n                                }\n                                self.updateItem(item.item_id(),'tier_price',tier_price);\n                            }\n                        });\n                    });\n                }\n            },\n            /**\n             * Validate qty\n             * @returns {*}\n             */\n            validateItemsQty: function(){\n                var self = this;\n                var error = [];\n                if(Items.items().length > 0){\n                    ko.utils.arrayForEach(Items.items(), function(item) {\n                        var data = item.getData();\n                        if(data.product_id != \"customsale\" && data.product_type != \"bundle\"){\n                            data.customer_group = self.customerGroup();\n                            var validate = ProductFactory.get().checkStockItemsInCart(data);\n                            if(validate !== true){\n                                error.push(validate);\n                            }\n                        }\n                    });\n                }\n                return (error.length > 0)?error:true;\n            },\n            /**\n             * Get items qty in cart\n             * @returns {Array}\n             */\n            getItemChildsQty: function(){\n                var qtys = [];\n                if(Items.items().length > 0){\n                    ko.utils.arrayForEach(Items.items(), function(item) {\n                        var data = item.getData();\n                        if(data.product_id != \"customsale\"){\n                            if(data.product_type == \"bundle\"){\n                                if(data.bundle_childs_qty){\n                                    ko.utils.arrayForEach(data.bundle_childs_qty, function(option) {\n                                        qtys.push({id:option.code,qty:option.value});\n                                    });\n                                }\n                            }else{\n                                if(data.child_id){\n                                    qtys.push({id:data.child_id,qty:data.qty});\n                                }else{\n                                    qtys.push({id:data.product_id,qty:data.qty});\n                                }\n                            }\n                        }\n                    });\n                }\n                return qtys;\n            },\n            /**\n             * Get total qty in cart\n             * @param productId\n             * @returns {number}\n             */\n            getQtyInCart: function(productId){\n                var qty = 0;\n                if(productId && Items.items().length > 0){\n                    ko.utils.arrayForEach(Items.items(), function(item) {\n                        if(item.getData('product_id') == productId){\n                            qty += item.getData('qty');\n                        }\n                    });\n                }\n                return qty;\n            },\n            /**\n             * Check if cart has store credit product\n             * @returns {boolean}\n             */\n            hasStorecredit: function(){\n                if(Items.items().length > 0){\n                    var storecreditItem = ko.utils.arrayFirst(Items.items(), function(item) {\n                        return (item.product_type() == \"customercredit\");\n                    });\n                    if(storecreditItem){\n                        return true;\n                    }\n                }\n                return false;\n            },\n            /**\n             * Check if cart can buy store credit\n             * @returns {boolean}\n             */\n            canCheckoutStorecredit: function(){\n                var hasStorecredit = this.hasStorecredit();\n                if(hasStorecredit && this.customerId() == ''){\n                    return false;\n                }\n                return true;\n            },\n            /**\n             * Apply catalog rules\n             * @param itemsData\n             */\n            applyCatalogRules: function(itemsData){\n                var self = this;\n                if(itemsData && Items.items().length > 0){\n                    $.each(itemsData, function(itemId, itemData) {\n                        var item = ko.utils.arrayFirst(Items.items(), function(item) {\n                            return ((item.type_id() == 'simple') && (item.item_id() == itemId));\n                        });\n                        if(item){\n                            var base_original_price = parseFloat(itemData.base_original_price);\n                            var base_calculation_price = parseFloat(itemData.base_calculation_price);\n                            var custom_price = parseFloat(itemData.custom_price);\n                            if(((base_original_price != base_calculation_price) && !custom_price) || item.applied_catalog_rules()){\n                                item.applied_catalog_rules(true);\n                                item.base_original_price(itemData.base_original_price);\n                                item.tax_rates([itemData.tax_percent]);\n                                item.unit_price((Helper.isProductPriceIncludesTax())?itemData.base_calculation_price:itemData.base_price);\n                            }\n                            item.qty(itemData.qty);\n                        }\n                    });\n                }\n            },\n            /**\n             * Get quote customer params\n             * @returns {{customer_id: *, billing_address: *, shipping_address: *}}\n             */\n            getQuoteCustomerParams: function(){\n                var self = this;\n                return {\n                    customer_id: self.customerId(),\n                    billing_address: self.CheckoutModel().billingAddress(),\n                    shipping_address: self.CheckoutModel().shippingAddress()\n                };\n            },\n            /**\n             * Reset quote data\n             */\n            resetQuoteInitData: function(){\n                var self = this;\n                var data = {\n                    quote_id: '',\n                    customer_id: self.customerId()\n                };\n                self.saveQuoteData(data);\n            },\n            /**\n             * Get customer params\n             * @returns {{customer_id: *, billing_address: *, shipping_address: *, data: *}}\n             */\n            getCustomerInitParams: function(){\n                var self = this;\n                return {\n                    customer_id: Helper.getOnlineConfig(CartData.KEY.CUSTOMER_ID),\n                    billing_address: Helper.getOnlineConfig(CartData.KEY.BILLING_ADDRESS),\n                    shipping_address: Helper.getOnlineConfig(CartData.KEY.SHIPPING_ADDRESS),\n                    data: Helper.getOnlineConfig(CartData.KEY.CUSTOMER_DATA)\n                };\n            },\n            /**\n             * Get quote init params\n             * @returns {{quote_id: *, store_id: *, customer_id: *, currency_id: *, till_id: *}}\n             */\n            getQuoteInitParams: function(){\n                var self = this;\n                var params = {\n                    quote_id: Helper.getOnlineConfig(CartData.KEY.QUOTE_ID),\n                    store_id: Helper.getOnlineConfig(CartData.KEY.STORE_ID),\n                    customer_id: Helper.getOnlineConfig(CartData.KEY.CUSTOMER_ID),\n                    currency_id: Helper.getOnlineConfig(CartData.KEY.CURRENCY_ID),\n                    till_id: Helper.getOnlineConfig(CartData.KEY.TILL_ID)\n                };\n                var customer = self.getQuoteCustomerParams();\n                if(customer.customer_id){\n                    params.customer_id = customer.customer_id;\n                }\n                return params;\n            },\n            /**\n             * Save cart only - not distch events\n             * @returns {*}\n             */\n            saveCartOnline: function(){\n                var self = this;\n                var params = self.getQuoteInitParams();\n                params.items = self.getItemsInfo();\n                params.customer = self.getQuoteCustomerParams();\n                params.section = CartData.KEY.QUOTE_INIT;\n                self.loading(true);\n                var apiRequest = $.Deferred();\n                CartResource().setPush(true).setLog(false).saveCart(params, apiRequest);\n                apiRequest.done(function(response){\n                    // if(response.status == CartData.DATA.STATUS.ERROR && response.messages){\n                    //     CartData.errorMessages(response.messages);\n                    // }else{\n                    //     CartData.hasErrors(false);\n                    //     CartData.errorMessages('');\n                    // }\n                }).always(function(){\n                    self.loading(false);\n\n                });\n                return apiRequest;\n            },\n            /**\n             * Save cart and dispatch events\n             * @param saveBeforeRemove\n             * @returns {*}\n             */\n            saveCartBeforeCheckoutOnline: function(saveBeforeRemove){\n                var self = this;\n                var params = self.getQuoteInitParams();\n                params.items = self.getItemsInfo();\n                params.customer = self.getQuoteCustomerParams();\n                if(saveBeforeRemove == true){\n                    params.section = CartData.KEY.QUOTE_INIT;\n                }\n                self.loading(true);\n                var apiRequest = $.Deferred();\n                CartResource().setPush(true).setLog(false).saveCartBeforeCheckout(params, apiRequest);\n\n                apiRequest.done(function(response){\n                    // if(response.status == CartData.DATA.STATUS.ERROR && response.messages && saveBeforeRemove != true){\n                    //     CartData.errorMessages(response.messages);\n                    // }else{\n                    //     CartData.hasErrors(false);\n                    //     CartData.errorMessages('');\n                    // }\n                }).always(function(){\n                    self.loading(false);\n                    poleHelper('', 'Total: ' + Helper.convertAndFormatPrice(TotalsFactory.get().grandTotal()));\n                });\n                return apiRequest;\n            },\n            /**\n             * Call API to empty cart - remove quote\n             * @returns {*}\n             */\n            removeCartOnline: function(){\n                var self = this;\n                var initParams = self.getQuoteInitParams();\n                var params = {quote_id: initParams.quote_id};\n                self.loading(true);\n                var apiRequest = $.Deferred();\n                CartResource().setPush(true).setLog(false).removeCart(params, apiRequest);\n\n                apiRequest.done(\n                    function (response) {\n                        if(typeof response.quote_init != undefined){\n                            self.emptyCart();\n                        }\n                    }\n                ).always(function(){\n                    self.loading(false);\n                    poleHelper('', 'Total: ' + Helper.convertAndFormatPrice(TotalsFactory.get().grandTotal()));\n                });\n                return apiRequest;\n            },\n            /**\n             * Call API to remove cart item online\n             * @param itemId\n             * @returns {*}\n             */\n            removeItemOnline: function(itemId){\n                var self = this;\n                if(Items.items().length == 1){\n                    return self.removeCartOnline();\n                }\n\n                var params = self.getQuoteInitParams();\n                params.item_id = itemId;\n\n                self.loading(true);\n                var apiRequest = $.Deferred();\n                CartResource().setPush(true).setLog(false).removeItem(params, apiRequest);\n\n                apiRequest.done(\n                    function (response) {\n                        if(typeof response.quote_init != undefined){\n                            self.removeItem(itemId);\n                        }\n                    }\n                ).always(function(){\n                    self.loading(false);\n                    poleHelper('', 'Total: ' +\n                    Helper.convertAndFormatPrice(TotalsFactory.get().grandTotal()));\n                });\n                return apiRequest;\n            },\n            /**\n             * Check if cart has been saved online or not\n             * @returns {boolean}\n             */\n            hasOnlineQuote: function(){\n                var self = this;\n                return (Helper.getOnlineConfig(CartData.KEY.QUOTE_ID))?true:false;\n            },\n            /**\n             * Save quote init data to data manager\n             * @param quoteData\n             */\n            saveQuoteData: function(quoteData){\n                if(quoteData){\n                    $.each(quoteData, function(key, value){\n                        value = (value)?value:'';\n                        Helper.saveOnlineConfig(key, value);\n                    })\n                }\n            }\n        };\n        return CartModel.initialize();\n    }\n);","Magestore_Webpos/js/model/checkout/taxrule.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/taxrule',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/checkout/taxrule',\n        'Magestore_Webpos/js/model/collection/checkout/taxrule'\n    ],\n    function ($,ko, modelAbstract, restResource, localResource, collection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'taxrule',\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), localResource());\n                this.setResourceCollection(collection());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/payment-popup.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/payment',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/checkout/payment',\n        'Magestore_Webpos/js/model/collection/checkout/payment-popup'\n    ],\n    function ($,ko, modelAbstract, restResource, indexedDbResource, collection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'payment',\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n                this.setResourceCollection(collection());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/taxrate-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/taxrate',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/taxrate';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/shipping.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/shipping',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/checkout/shipping',\n        'Magestore_Webpos/js/model/collection/checkout/shipping'\n    ],\n    function ($,ko, modelAbstract, restResource, indexedDbResource, collection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'shipping',\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n                this.setResourceCollection(collection());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/payment.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/payment',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/checkout/payment',\n        'Magestore_Webpos/js/model/collection/checkout/payment'\n    ],\n    function ($,ko, modelAbstract, restResource, indexedDbResource, collection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'payment',\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n                this.setResourceCollection(collection());\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/payment-popup-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/payment-popup',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/payment-popup';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/taxclass.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/checkout/taxclass',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/checkout/taxclass',\n        'Magestore_Webpos/js/model/collection/checkout/taxclass'\n    ],\n    function ($,ko, modelAbstract, restResource, localResource, collection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'taxclass',\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), localResource());\n                this.setResourceCollection(collection());\n            },\n            getProductTaxClasses: function(deferred){\n                this.getCollection().addFieldToFilter('class_type','PRODUCT','eq');\n                this.getCollection().load(deferred);\n            },\n            getCustomerTaxClasses: function(deferred){\n                this.getCollection().addFieldToFilter('class_type','CUSTOMER','eq');\n                this.getCollection().load(deferred);\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/integration/store-credit.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/integration/storecredit/store-credit',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/integration/storecredit/store-credit',\n        'Magestore_Webpos/js/model/collection/integration/store-credit',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/view/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/cart/data/cart',\n        'Magestore_Webpos/js/view/settings/general/storecredit/show-storecredit-balance',\n        'Magestore_Webpos/js/view/settings/general/storecredit/auto-sync-balance',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/view/checkout/checkout/payment',\n        'Magestore_Webpos/js/view/checkout/checkout/payment_selected',\n        'Magestore_Webpos/js/model/checkout/checkout'\n    ],\n    function ($, ko, modelAbstract, onlineResource, offlineResource, collection, CartModel, CartView, CartData, ShowCreditBalance, AutoSyncBalance, Helper, Payment, SelectedPayments, CheckoutModel) {\n        \"use strict\";\n        if (!window.hadObserver) {\n            window.hadObserver = [];\n        }\n        return modelAbstract.extend({\n            sync_id: 'customer_credit',\n            TOTAL_CODE: 'storecredit',\n            MODULE_CODE: 'os_store_credit',\n            balance: ko.observable(0),\n            currentAmount: ko.observable(0),\n            appliedAmount: ko.observable(0),\n            visible: ko.observable(false),\n            applied: ko.observable(false),\n            useMaxPoint: ko.observable(true),\n            updatingBalance: ko.observable(false),\n            remaining: CheckoutModel.remainTotal,\n            initialize: function () {\n                if (Helper.isStoreCreditEnable()) {\n                    this._super();\n                    this.setResource(onlineResource(), offlineResource());\n                    this.setResourceCollection(collection());\n                    this.initVariable();\n                    if ($.inArray(this.MODULE_CODE, window.hadObserver) < 0) {\n                        this.initObserver();\n                        window.hadObserver.push(this.MODULE_CODE);\n                    }\n                }\n            },\n            getConfig: function (path) {\n                var allConfig = Helper.getBrowserConfig('plugins_config');\n                if (allConfig[this.MODULE_CODE]) {\n                    var configs = allConfig[this.MODULE_CODE];\n                    if (configs[path]) {\n                        return configs[path];\n                    }\n                }\n                return false;\n            },\n            getAmountForShipping: function (items) {\n                var amount = {\n                    base: 0,\n                    amount: 0\n                };\n                if (items && items.length > 0) {\n                    var totalBase = 0;\n                    var totalAmount = 0;\n                    ko.utils.arrayForEach(items, function (item) {\n                        if (item.base_customercredit_discount) {\n                            totalBase += item.base_customercredit_discount;\n                        }\n                        if (item.customercredit_discount) {\n                            totalAmount += item.customercredit_discount;\n                        }\n                    });\n                    amount.base = Helper.toBasePrice(this.appliedAmount()) - totalBase;\n                    amount.amount = this.appliedAmount() - totalAmount;\n                }\n                return amount;\n            },\n            initObserver: function () {\n                var self = this;\n                /**\n                 *  Reset credit data after list payment reset\n                 */\n                Helper.observerEvent('payments_reset_after', function (event, data) {\n                    self.paymentResetAfter(data);\n                });\n\n                /**\n                 * Reset credit data after cart empty\n                 */\n                Helper.observerEvent('cart_empty_after', function (event, data) {\n                    self.cartEmptyAfter(data);\n                });\n\n                /**\n                 * Load customer balance when select customer to checkout\n                 */\n                Helper.observerEvent('checkout_select_customer_after', function (event, data) {\n                    self.selectCustomerToCheckoutAfter(data);\n                });\n\n                /**\n                 * Show customer credit balance on receipt\n                 */\n                Helper.observerEvent('prepare_receipt_totals', function (event, data) {\n                    self.prepareReceipt(data);\n                });\n\n                /**\n                 * Update customer credit balance on local after checkout\n                 */\n                Helper.observerEvent('webpos_order_save_after', function (event, data) {\n                    self.orderSaveAfter(data);\n                });\n\n                /**\n                 * Add params to sync credit data when syncing order\n                 */\n                Helper.observerEvent('webpos_place_order_before', function (event, data) {\n                    self.placeOrderBefore(data);\n                });\n\n                /**\n                 * Call api to update customer credit balance after refund by credit\n                 */\n                Helper.observerEvent('order_refund_after', function (event, data) {\n                    self.refundAfter(data);\n                });\n\n                /**\n                 * Add params to sync credit data when place order online\n                 */\n                Helper.observerEvent('webpos_place_order_online_before', function (event, data) {\n                    self.placeOrderOnlineBefore(data);\n                });\n\n                /**\n                 * Update customer credit balance on local after checkout\n                 */\n                Helper.observerEvent('webpos_place_order_online_after', function (event, data) {\n                    self.orderSaveAfter(data);\n                });\n            },\n            initVariable: function () {\n                var self = this;\n                self.visible = ko.pureComputed(function () {\n                    return self.canUseExtension() && self.remaining() > 0 && (!self.balance() || (self.balance() && self.balanceAfterApply() > 0));\n                });\n                self.applied(false);\n                self.balanceAfterApply = ko.pureComputed(function () {\n                    return (self.applied()) ? (self.balance() - self.appliedAmount()) : self.balance();\n                });\n                self.useMaxPoint.subscribe(function (value) {\n                    if (value == true) {\n                        self.validate(self.balance());\n                    }\n                });\n                self.balance.subscribe(function (value) {\n                    if (self.useMaxPoint() == true) {\n                        self.currentAmount(self.balance());\n                    }\n                });\n                self.currentAmount.subscribe(function (value) {\n                    self.validate(value);\n                });\n\n                self.remaining.subscribe(function (remain) {\n                    self.validate();\n                });\n            },\n            cartEmptyAfter: function (data) {\n                this.remove();\n            },\n            paymentResetAfter: function (data) {\n                this.remove();\n            },\n            selectCustomerToCheckoutAfter: function (data) {\n                var self = this;\n                if (self.updatingBalance() == false && CartModel.customerId()) {\n                    if (data.customer && data.customer.id) {\n                        self.loadBalanceByCustomerId(data.customer.id);\n                        var autoSyncBalance = Helper.getLocalConfig(AutoSyncBalance().configPath);\n                        if (autoSyncBalance == true) {\n                            self.updateBalance();\n                        }\n                    }\n                }\n            },\n            prepareReceipt: function (data) {\n                if (data.customer_id) {\n                    var self = this;\n                    var showBalance = Helper.getLocalConfig(ShowCreditBalance().configPath);\n                    if (CartModel.customerId() && showBalance == true) {\n                        var balance = self.balance() - self.appliedAmount();\n                        data.accountInfo.push({\n                            label: Helper.__('Customer credit balance'),\n                            value: Helper.convertAndFormatPrice(balance)\n                        });\n                    }\n                }\n            },\n            orderSaveAfter: function (data) {\n                var self = this;\n                if (data.customer_id && self.applied() && self.appliedAmount() > 0) {\n                    var balance = self.balance() - self.appliedAmount();\n                    self.saveBalance(data.customer_id, balance);\n                }\n            },\n            placeOrderBefore: function (data) {\n                var self = this;\n                if (data && data.increment_id && CartModel.customerId() && self.applied() && self.appliedAmount() > 0) {\n                    data.base_customercredit_discount = -Helper.toBasePrice(self.appliedAmount());\n                    data.customercredit_discount = -self.appliedAmount();\n                    var order_data = [\n                        {\n                            key: \"base_customercredit_discount\",\n                            value: -self.appliedAmount()\n                        },\n                        {\n                            key: \"customercredit_discount\",\n                            value: -Helper.convertPrice(self.appliedAmount())\n                        }\n                    ];\n                    var extension_data = [{\n                        key: 'base_customercredit_discount',\n                        value: self.appliedAmount()\n                    }];\n                    data.sync_params.integration.push({\n                        'module': 'customer_credit',\n                        'event_name': 'webpos_use_customer_credit_after',\n                        'order_data': order_data,\n                        'extension_data': extension_data\n                    });\n                }\n            },\n            placeOrderOnlineBefore: function(params){\n                var self = this;\n                if (CartModel.customerId() && self.applied() && self.appliedAmount() > 0) {\n                    var order_data = [\n                        {\n                            key: \"base_customercredit_discount\",\n                            value: -self.appliedAmount()\n                        },\n                        {\n                            key: \"customercredit_discount\",\n                            value: -Helper.convertPrice(self.appliedAmount())\n                        }\n                    ];\n                    var extension_data = [{\n                        key:'base_customercredit_discount',\n                        value: self.appliedAmount()\n                    }];\n                    params.integration.push({\n                        'module': 'customer_credit',\n                        'event_name': 'webpos_use_customer_credit_after',\n                        'order_data': order_data,\n                        'extension_data': extension_data\n                    });\n                }\n            },\n            refundAfter: function(data){\n                var self = this;\n                if (data && data.response && data.response.customer_id && data.response.credit_amount_to_refund) {\n                    var deferred = $.Deferred();\n                    var params = {\n                        order_id: data.response.entity_id,\n                        order_increment_id: data.response.increment_id,\n                        customer_id: data.response.customer_id,\n                        amount: data.response.credit_amount_to_refund\n                    };\n                    self.updateCustomerCreditBalance(data.response.customer_id, data.response.credit_amount_to_refund);\n\n                    onlineResource().setPush(true).setLog(false).refund(params, deferred);\n                    deferred.done(function (response) {\n\n                    }).fail(function (response) {\n                        if (response.responseText) {\n                            var error = JSON.parse(response.responseText);\n                            if (error.message != undefined) {\n                                Helper.addNotification(error.message, true, 'danger', 'Error');\n                            }\n                        } else {\n                            Helper.addNotification(\"Please check your network connection\", true, 'danger', 'Error');\n                        }\n                    }).always(function (response) {\n                        var data = JSON.parse(response);\n                        if (data.message != undefined) {\n                            if (data.success) {\n                                Helper.addNotification(data.message, true, 'success', 'Message');\n                            }\n                            if (data.error) {\n                                Helper.addNotification(data.message, true, 'danger', 'Error');\n                            }\n                        }\n                    });\n                }\n            },\n            /**\n             * Reset data\n             */\n            resetData: function () {\n                this.balance(0);\n                this.currentAmount(0);\n                this.applied(false);\n                this.useMaxPoint(true);\n            },\n            /**\n             * Get credit balance from server and save to local\n             * @param customerId\n             */\n            updateBalance: function (customerId) {\n                customerId = (customerId) ? customerId : CartModel.customerId();\n                if (customerId) {\n                    var self = this;\n                    var deferred = $.Deferred();\n                    var params = {\n                        customer_id: customerId\n                    };\n                    onlineResource().setPush(true).setLog(false).getBalance(params, deferred);\n                    self.updatingBalance(true);\n                    deferred.done(function (response) {\n                        var data = (typeof response == 'string')?JSON.parse(response):response;\n                        if(data && typeof data.balance != undefined){\n                            //run change event - fix issue does not update balance on UI view\n                            self.balance(0);\n                            self.balance(data.balance);\n                            self.saveBalance(customerId, data.balance);\n                        }\n                    }).always(function (response) {\n                        self.updatingBalance(false);\n                    });\n                }\n            },\n            /**\n             * Apply credit data to payment\n             * @param apply\n             */\n            apply: function (apply) {\n                var amount = (apply === false) ? 0 : this.currentAmount();\n                var visible = (amount > 0) ? true : false;\n                this.currentAmount(amount);\n                if (visible) {\n                    this.appliedAmount(amount);\n                } else {\n                    this.appliedAmount(0);\n                }\n                //this.process(amount);\n                if (amount > 0 && this.remaining() > 0) {\n                    Payment().addExtensionMethod({\n                        code: this.TOTAL_CODE,\n                        is_extension_method: true,\n                        is_default: 0,\n                        is_pay_later: 0,\n                        is_reference_number: 0,\n                        title: \"Customer Credit\",\n                        type: 0,\n                        price: Helper.convertPrice(amount),\n                        base_price: amount,\n                        paid_amount: Helper.convertPrice(amount),\n                        base_paid_amount: amount,\n                        cart_total: Helper.convertPrice(amount),\n                        base_cart_total: amount,\n                        actions: {\n                            remove: $.proxy(this.remove, this)\n                        }\n                    });\n                }\n                this.applied((apply === false || amount == 0) ? false : true);\n            },\n            /**\n             * Remove applied credit data\n             */\n            remove: function(){\n                var self = this;\n                self.appliedAmount(0);\n                self.useMaxPoint(true);\n                self.currentAmount(this.remaining());\n                if(self.applied() == true){\n                    self.applied(false);\n                }\n            },\n            /**\n             * Check module enable and some condition to use credit on checkout\n             * @returns {boolean}\n             */\n            canUseExtension: function(){\n                var self = this;\n                var customerId = CartModel.customerId();\n                var customerGroup = CartModel.customerGroup();\n                var moduleEnable = this.getConfig('customercredit/general/enable');\n                var customerGroups = this.getConfig('customercredit/general/assign_credit');\n                var hasCreditProduct = !CartModel.hasStorecredit();\n                var canuse = (\n                    moduleEnable\n                    && customerId\n                    && customerGroup\n                    && hasCreditProduct\n                    && $.inArray(customerGroup.toString(), customerGroups.split(',')) >= 0\n                ) ? true : false;\n                return canuse;\n            },\n            /**\n             * Validate input data before apply\n             * @param balance\n             * @returns {boolean}\n             */\n            validate: function (balance) {\n                if (!this.canUseExtension()) {\n                    if (this.visible() == true && this.applied() && this.applied() == true) {\n                        this.remove();\n                    }\n                    return false;\n                }\n                var amount = 0;\n                if (!balance) {\n                    amount = this.currentAmount();\n                } else {\n                    amount = balance;\n                }\n                var appliedAmount = (this.applied()) ? this.appliedAmount() : 0;\n                var max = this.remaining() + appliedAmount;\n                if (max > this.balance()) {\n                    max = this.balance();\n                }\n                amount = (amount > max || (this.useMaxPoint() == true)) ? max : amount;\n                if (this.currentAmount() > amount || balance || !this.applied()) {\n                    amount = (parseFloat(amount) > 0) ? amount : 0;\n                    this.currentAmount(parseFloat(amount));\n                }\n                return true;\n            },\n            /**\n             * Load customer credit balance from local by customer id\n             * @param customerId\n             */\n            loadBalanceByCustomerId: function (customerId) {\n                var self = this;\n                if (customerId) {\n                    self.getCollection().addFieldToFilter('customer_id', customerId, 'eq');\n                    self.getCollection().load().done(function (response) {\n                        if (response.items && response.items.length > 0) {\n                            self.balance(parseFloat(response.items[0].credit_balance));\n                        } else {\n                            self.balance(0);\n                            self.remove();\n                        }\n                    });\n                } else {\n                    if (self.visible() == true && self.applied() && self.applied() == true) {\n                        self.balance(0);\n                        self.remove();\n                    }\n                }\n            },\n            /**\n             * Load customer in cart credit balance from local\n             */\n            updateStorageBalance: function () {\n                var self = this;\n                if (CartModel.customerId()) {\n                    self.getCollection().addFieldToFilter('customer_id', CartModel.customerId(), 'eq');\n                    self.getCollection().load().done(function (response) {\n                        if (response.items && response.items.length > 0) {\n                            self.balance(parseFloat(response.items[0].credit_balance));\n                        } else {\n                            self.balance(0);\n                            self.remove();\n                        }\n                    });\n                } else {\n                    if (self.visible() == true && self.applied() && self.applied() == true) {\n                        self.balance(0);\n                        self.remove();\n                    }\n                }\n            },\n            /**\n             * load balance save on local by customer id\n             * @param customerId\n             */\n            loadStorageBalanceByCustomerId: function (customerId) {\n                var self = this;\n                if (customerId) {\n                    self.getCollection().addFieldToFilter('customer_id', customerId, 'eq');\n                    self.getCollection().load().done(function (response) {\n                        if (response.items && response.items.length > 0) {\n                            self.balance(parseFloat(response.items[0].credit_balance));\n                        } else {\n                            self.balance(0);\n                        }\n                    });\n                } else {\n                    self.balance(0);\n                }\n            },\n            /**\n             * Update blance on local for customer by id\n             * @param customerId\n             * @param balance\n             */\n            saveBalance: function (customerId, balance) {\n                if (customerId) {\n                    var self = this;\n                    self.getCollection().addFieldToFilter('customer_id', customerId, 'eq');\n                    self.getCollection().load().done(function (response) {\n                        var data = {};\n                        if (response.items && response.items.length > 0) {\n                            data = response.items[0];\n                            data.credit_balance = balance;\n                        } else {\n                            data.customer_id = customerId;\n                            data.credit_balance = balance;\n                        }\n                        self.setData(data).save();\n                    });\n                }\n            },\n            /**\n             * Update balance on local by amount\n             * @param customerId\n             * @param amount\n             */\n            updateCustomerCreditBalance: function (customerId, amount) {\n                if (customerId) {\n                    var self = this;\n                    self.getCollection().addFieldToFilter('customer_id', customerId, 'eq');\n                    self.getCollection().load().done(function (response) {\n                        var data = {};\n                        if (response.items && response.items.length > 0) {\n                            data = response.items[0];\n                            var currentBalance = parseFloat(data.credit_balance);\n                            currentBalance += parseFloat(amount);\n                            data.credit_balance = currentBalance;\n                            self.setData(data).save();\n                        }\n                    });\n                }\n            },\n            /* S: Calculate amount for each cart items - use this functionality if credit works the same as discount (not payment mode) */\n            reset: function () {\n                var self = this;\n                ko.utils.arrayForEach(CartData.items(), function (item) {\n                    item.item_credit_amount(0);\n                    item.item_base_credit_amount(0);\n                });\n            },\n            process: function (cartBaseTotalAmount) {\n                var self = this;\n                if (cartBaseTotalAmount > 0) {\n                    var maxAmount = CartData.getMaxDiscountAmount();\n                    var itemsAmountTotal = (cartBaseTotalAmount > maxAmount) ? maxAmount : cartBaseTotalAmount;\n                    var amountApplied = 0;\n                    ko.utils.arrayForEach(CartData.items(), function (item, index) {\n                        var maxAmountItem = CartData.getMaxItemDiscountAmount(item.item_id());\n                        var discountPercent = maxAmountItem / maxAmount;\n                        var item_base_amount = (index == CartData.items().length - 1) ? (itemsAmountTotal - amountApplied) : itemsAmountTotal * discountPercent;\n                        amountApplied += item_base_amount;\n                        var item_amount = Helper.convertPrice(item_base_amount);\n                        item.item_base_credit_amount(item_base_amount);\n                        item.item_credit_amount(item_amount);\n                    });\n                } else {\n                    self.reset();\n                }\n            },\n            collect: function () {\n                var amount = (this.appliedAmount()) ? this.appliedAmount() : 0;\n                this.currentAmount(amount);\n                this.apply();\n            },\n            /* E: Calculate amount for each cart items */\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/integration/gift-card.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/integration/giftcard/gift-card',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/view/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/cart/totals',\n        'Magestore_Webpos/js/model/checkout/cart/data/cart',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/checkout',\n        'Magestore_Webpos/js/model/checkout/cart/discountpopup'\n    ],\n    function ($, ko, modelAbstract, onlineResource, CartModel, CartView, Totals, CartData, Helper, CheckoutModel, DiscountModel) {\n        \"use strict\";\n        if (!window.hadObserver) {\n            window.hadObserver = [];\n        }\n        return modelAbstract.extend({\n            sync_id:'customer_giftcard',\n            TOTAL_CODE:'giftcard',\n            MODULE_CODE:'os_gift_card',\n            CAN_USE_WITH_COUPON:'1',\n            balance: ko.observable(0),\n            currentAmount: ko.observable(0),\n            appliedAmount: ko.observable(0),\n            visible: ko.observable(false),\n            applied: ko.observable(false),\n            useMaxPoint: ko.observable(true),\n            updatingBalance: ko.observable(false),\n            remaining: CheckoutModel.remainTotal,\n            giftcardCode: ko.observable(),\n            appliedCards:ko.observableArray(),\n            customerCodes:ko.observableArray(),\n            initialize: function () {\n                if(Helper.isGiftCardEnable()) {\n                    this._super();\n                    this.TotalsModel = Totals();\n                    this.initVariable();\n                    if ($.inArray(this.MODULE_CODE, window.hadObserver) < 0) {\n                        this.initObserver();\n                        window.hadObserver.push(this.MODULE_CODE);\n                    }\n                }\n            },\n            getConfig: function(path){\n                var allConfig = Helper.getBrowserConfig('plugins_config');\n                if(allConfig[this.MODULE_CODE]){\n                    var configs = allConfig[this.MODULE_CODE];\n                    if(configs[path]){\n                        return configs[path];\n                    }\n                }\n                return false;\n            },\n            getAmountForShipping: function(items){\n                var amount = {\n                    base:0,\n                    amount:0\n                };\n                if(items && items.length > 0){\n                    var totalBase = 0;\n                    var totalAmount = 0;\n                    ko.utils.arrayForEach(items, function(item) {\n                        if(item.item_base_giftcard_discount){\n                            totalBase += item.item_base_giftcard_discount;\n                        }\n                        if(item.item_giftcard_discount){\n                            totalAmount += item.item_giftcard_discount;\n                        }\n                    });\n                    amount.base = this.totalAppliedAmount() - totalBase;\n                    amount.amount = Helper.convertPrice(this.totalAppliedAmount()) - totalAmount;\n                }\n                return amount;\n            },\n            initObserver: function(){\n                var self = this;\n\n                Helper.observerEvent('cart_empty_after', function (event, data) {\n                    self.cartEmptyAfter(data);\n                });\n\n                Helper.observerEvent('prepare_receipt_totals', function (event, data) {\n                    self.prepareReceipt(data);\n                });\n\n                Helper.observerEvent('webpos_order_save_after', function (event, data) {\n                    if(!Helper.isUseOnline('checkout')) {\n                        self.orderSaveAfter(data);\n                    }\n                });\n\n                Helper.observerEvent('webpos_place_order_before', function (event, data) {\n                    if(!Helper.isUseOnline('checkout')) {\n                        self.placeOrderBefore(data);\n                    }\n                });\n\n                /**\n                 * Process data after call api\n                 */\n                Helper.observerEvent('checkout_call_api_after',function(event, data){\n                    self.checkoutCallApiAfter(data);\n                });\n                /**\n                 * Call api to update gift card balance\n                 */\n                Helper.observerEvent('order_refund_after', function (event, data) {\n                    self.refundAfter(data);\n                });\n            },\n            initVariable: function(){\n                var self = this;\n                self.visible = ko.pureComputed(function(){\n                    return self.canUseExtension();\n                });\n\n                self.applied(false);\n\n                self.balanceAfterApply = ko.pureComputed(function () {\n                    return (self.applied()) ? (self.balance() - self.appliedAmount()) : self.balance();\n                });\n\n                self.totalAppliedAmount = ko.pureComputed(function () {\n                    return self.getTotalAppliedAmount();\n                });\n\n                self.useMaxPoint.subscribe(function (value) {\n                    if (value == true) {\n                        var maxApplyAble = self.TotalsModel.positiveTotal() - self.totalAppliedAmount() + self.appliedAmount();\n                        self.validate(self.balance(),maxApplyAble);\n                    }\n                });\n                self.balance.subscribe(function (value) {\n                    if (self.useMaxPoint() == true) {\n                        self.currentAmount(self.balance());\n                    }\n                });\n                self.currentAmount.subscribe(function (value) {\n                    self.validate();\n                });\n\n                self.TotalsModel.positiveTotal.subscribe(function (value) {\n                    if(!Helper.isUseOnline('checkout')) {\n                        if (value == 0) {\n                            self.remove();\n                        } else {\n                            if (self.applied() && self.applied() == true) {\n                                var valid = self.validate(self.totalAppliedAmount(), value);\n                                if (valid) {\n                                    self.apply();\n                                }\n                            } else {\n                                self.currentAmount(value);\n                                self.useMaxPoint(true);\n                            }\n                        }\n                    }\n                });\n                self.TotalsModel.baseDiscountAmount.subscribe(function (value) {\n                    if(!Helper.isUseOnline('checkout')) {\n                        if (self.TotalsModel.positiveTotal() == 0) {\n                            self.remove();\n                        } else {\n                            if (self.applied() && self.applied() == true) {\n                                var maxAmount = self.TotalsModel.positiveTotal() - value;\n                                var valid = self.validate(self.totalAppliedAmount(), maxAmount);\n                                if (valid) {\n                                    self.apply();\n                                }\n                            } else {\n                                var maxAmount = self.TotalsModel.positiveTotal() - value;\n                                self.currentAmount(maxAmount);\n                                self.useMaxPoint(true);\n                            }\n                        }\n                    }\n                });\n            },\n            refundAfter: function(data){\n                var self = this;\n                if (data && data.response && data.response.giftcard_amount_to_refund > 0) {\n                    self.refundToBalance(data.response.increment_id, data.response.giftcard_amount_to_refund);\n                }\n            },\n            refundToBalance: function(order_id, amount){\n                if(order_id && amount) {\n                    var deferred = $.Deferred();\n                    var params = {\n                        order_id: order_id,\n                        amount: amount,\n                        base_amount: Helper.toBasePrice(amount)\n                    };\n\n                    onlineResource().setPush(true).setLog(false).refundToBalance(params, deferred);\n                }\n            },\n            /**\n             * Not allow to use coupon code when using gift card code\n             * @param data\n             */\n            modifyPermissionUseCoupon: function(){\n                var canUseWithCoupon =  Helper.getPluginConfig('os_gift_card', 'giftvoucher/general/use_with_coupon');\n                if(canUseWithCoupon != this.CAN_USE_WITH_COUPON && this.applied() && this.totalAppliedAmount() > 0){\n                    DiscountModel.modifierCanUseCoupon(false);\n                }else{\n                    DiscountModel.modifierCanUseCoupon(true);\n                }\n            },\n            /**\n             * Event cart empty after - remove applied data\n             * @param data\n             */\n            cartEmptyAfter: function(data){\n                this.remove();\n                this.resetAllData();\n            },\n            /**\n             * Event before show receipt - Add data to show on receipt\n             * @param data\n             */\n            prepareReceipt: function(data){\n                data.totals.push({\n                    code: 'gift_voucher_discount',\n                    title: 'Gift Voucher',\n                    required: false,\n                    sortOrder: 38\n                });\n            },\n            /**\n             * Event order save after - update balance on local\n             * @param data\n             */\n            orderSaveAfter: function(data){\n\n            },\n            /**\n             * Event place order before - add data to order\n             * @param data\n             */\n            placeOrderBefore: function(data){\n                var self = this;\n                if (data && data.increment_id && self.applied() && self.totalAppliedAmount() > 0) {\n                    data.gift_voucher_discount = -Helper.convertPrice(self.totalAppliedAmount());\n                    data.base_gift_voucher_discount = -self.totalAppliedAmount();\n\n                    var order_data = [\n                        {\n                            key: \"gift_voucher_discount\",\n                            value: Helper.convertPrice(self.totalAppliedAmount())\n                        },\n                        {\n                            key: \"base_gift_voucher_discount\",\n                            value: self.totalAppliedAmount()\n                        }\n                    ];\n\n                    var useForShipping = self.getConfig('giftvoucher/general/use_for_ship');\n                    if (useForShipping == '1') {\n                        order_data.push({\n                            key: \"giftvoucher_discount_for_shipping\",\n                            value: self.getAmountForShipping(data.items).amount\n                        });\n                        order_data.push({\n                            key: \"base_giftvoucher_discount_for_shipping\",\n                            value: self.getAmountForShipping(data.items).base\n                        });\n                    }\n\n                    var extension_data = self.getCardDataForOrder();\n\n                    data.sync_params.integration.push({\n                        'module': 'os_gift_card',\n                        'event_name': 'webpos_create_order_with_giftcard_after',\n                        'order_data': order_data,\n                        'extension_data': extension_data\n                    });\n                }\n            },\n            /**\n             * Reset all model data\n             */\n            resetAllData: function(){\n                this.balance(0);\n                this.currentAmount(0);\n                this.applied(false);\n                this.useMaxPoint(false);\n                this.giftcardCode('');\n                this.appliedCards([]);\n            },\n            /**\n             * Reset model data\n             */\n            resetData: function(){\n                this.currentAmount(0);\n                this.applied(false);\n                this.useMaxPoint(false);\n            },\n            /**\n             * Update balance from server\n             * @param customerId\n             */\n            updateBalance: function(giftcardCode){\n                giftcardCode = (giftcardCode)?giftcardCode:this.giftcardCode();\n                if(giftcardCode){\n                    var self = this;\n                    var deferred = $.Deferred();\n                    var params = CheckoutModel.getCheckPromotionParams();\n                    params.coupon_code = giftcardCode;\n                    self.giftcardCode(giftcardCode);\n\n                    onlineResource().setPush(true).setLog(false).getBalance(params,deferred);\n                    self.updatingBalance(true);\n                    deferred.done(function (response) {\n                        var data = (typeof response == 'string')?JSON.parse(response):response;\n                        if(data && typeof data.base_balance != 'undefined' && typeof data.base_balance != undefined && data.base_balance){\n                            self.giftcardCode(giftcardCode);\n                            self.balance(data.base_balance);\n                            console.log(data.base_balance);\n                            if(self.remaining() > 0){\n                                var maxAmount = self.remaining();\n                                var addedCard = self.getCardDataByCode(giftcardCode);\n                                if(addedCard){\n                                    maxAmount += addedCard.value();\n                                }\n                                self.validate(data.base_balance, maxAmount);\n                                self.apply();\n                            }else{\n                                self.appliedAmount(0);\n                                self.currentAmount(0);\n                            }\n                        }else{\n                            self.balance(0);\n                            self.currentAmount(0);\n                            self.appliedAmount(0);\n                        }\n                    }).always(function (response) {\n                        self.updatingBalance(false);\n                    });\n                }\n            },\n            /**\n             * get totals gift card amount\n             * @returns {number}\n             */\n            getTotalAppliedAmount: function(){\n                var amount = 0;\n                if(this.appliedCards().length > 0) {\n                    ko.utils.arrayForEach(this.appliedCards(), function (giftcard) {\n                        amount += giftcard.value();\n                    });\n                }\n                return amount\n            },\n            /**\n             * get totals gift card amount exlude one\n             * @returns {number}\n             */\n            getTotalAmountExcludeOne: function(code){\n                var amount = 0;\n                if(this.appliedCards().length > 0 && code) {\n                    ko.utils.arrayForEach(this.appliedCards(), function (giftcard) {\n                        if(giftcard.code != code){\n                            amount += giftcard.value();\n                        }\n                    });\n                }\n                return amount\n            },\n            /**\n             * get applied giftcard data by code\n             * @param giftcardCode\n             * @returns {number}\n             */\n            getCardDataByCode: function(giftcardCode){\n                var data = 0;\n                if(this.appliedCards().length > 0 && giftcardCode) {\n                    data = ko.utils.arrayFirst(this.appliedCards(), function (giftcard) {\n                        return giftcard.code == giftcardCode;\n                    });\n                }\n                return data\n            },\n            /**\n             * get applied giftcard information to sync\n             * @returns {Array}\n             */\n            getCardDataForOrder: function(){\n                var codes = [];\n                if(this.appliedCards().length > 0) {\n                    ko.utils.arrayForEach(this.appliedCards(), function (giftcard) {\n                        var data = {\n                            key: giftcard.code,\n                            value: giftcard.value()\n                        };\n                        codes.push(data);\n                    });\n                }\n                return codes;\n            },\n            /**\n             * get applied giftcard information to sync\n             * @returns {Array}\n             */\n            getAppliedGiftCodes: function(){\n                var codes = [];\n                if(this.appliedCards().length > 0) {\n                    ko.utils.arrayForEach(this.appliedCards(), function (giftcard) {\n                        codes.push(giftcard.code);\n                    });\n                }\n                return codes.toString();\n            },\n            /**\n             * Apply discount to cart\n             * @param apply\n             */\n            apply: function(apply){\n                var amount = (apply === false)?0:this.currentAmount();\n                this.currentAmount(amount);\n                if(amount > 0){\n                    this.appliedAmount(amount);\n                }else{\n                    this.appliedAmount(0);\n                }\n\n                if(apply === false){\n                    this.appliedCards([]);\n                }else{\n                    this.applied(true);\n                    var giftcardCode = this.giftcardCode();\n                    this.applyGiftCode(giftcardCode, amount);\n                }\n\n                if(this.appliedCards().length > 0){\n                    amount = this.getTotalAppliedAmount();\n                }\n                amount = Helper.correctPrice(amount);\n                var visible = (amount > 0)?true:false;\n                this.applied(visible);\n\n                this.TotalsModel.addTotal({\n                    code: this.TOTAL_CODE,\n                    cssClass: 'discount',\n                    title: Helper.__('Gift card'),\n                    value: -Helper.convertPrice(amount),\n                    baseValue: -amount,\n                    isVisible: visible,\n                    removeAble: true,\n                    actions:{\n                        remove: $.proxy(this.remove, this),\n                        collect: $.proxy(this.collect, this)\n                    }\n                });\n                this.TotalsModel.updateTotal(this.TOTAL_CODE,{isVisible: visible});\n                this.process(amount);\n                this.modifyPermissionUseCoupon();\n                Helper.dispatchEvent('reset_payments_data', '');\n            },\n            applyGiftCode: function(code, value){\n                var self = this;\n                var appliedCard = ko.utils.arrayFirst(self.appliedCards(), function(giftcard) {\n                    return (giftcard.code == code);\n                });\n                if(appliedCard){\n                    if(value >= 0) {\n                        appliedCard.value(value);\n                        appliedCard.balance(self.balance());\n                        appliedCard.remain(self.balanceAfterApply());\n                        appliedCard.usemax(self.useMaxPoint());\n                    }else{\n                        if(Helper.isUseOnline('checkout')){\n                            self.removeGiftcardOnline(appliedCard.code).done(function(){\n                                self.appliedCards.remove(appliedCard);\n                            });\n                        }else{\n                            self.appliedCards.remove(appliedCard);\n                        }\n                        if(appliedCard.code == self.giftcardCode()){\n                            self.resetEditingCard();\n                            if(self.appliedCards().length > 0){\n                                self.editCard(self.appliedCards()[self.appliedCards().length - 1]);\n                            }\n                        }\n                    }\n                }else{\n                    if(code && value >= 0){\n\n                        self.appliedCards.push({\n                            code:code,\n                            value:ko.observable(value),\n                            balance:ko.observable(self.balance()),\n                            remain:ko.observable(self.balanceAfterApply()),\n                            usemax:ko.observable(self.useMaxPoint())\n                        });\n                    }\n                }\n                if(self.appliedCards().length == 0){\n                    self.remove();\n                }else{\n                    if(!Helper.isUseOnline('checkout')){\n                        self.collect();\n                    }\n                }\n            },\n            resetEditingCard: function(){\n                this.balance(0);\n                this.useMaxPoint(true);\n                this.giftcardCode('');\n                this.appliedAmount(0);\n                this.currentAmount(0);\n            },\n            editCard: function(card){\n                this.balance(card.balance());\n                this.appliedAmount(card.value());\n                this.giftcardCode(card.code);\n                this.useMaxPoint(card.usemax());\n                this.currentAmount(-1);\n                this.currentAmount(card.value());\n            },\n            /**\n             * Remove data\n             */\n            remove: function(){\n                this.resetData();\n                this.apply(false);\n            },\n            /**\n             * Validate can use module\n             * @returns {boolean}\n             */\n            canUseExtension: function(){\n                var moduleEnable = Helper.isGiftCardEnable();\n                var moduleActive = this.getConfig('giftvoucher/general/active');\n                var canUseWithCoupon = this.getConfig('giftvoucher/general/use_with_coupon');\n                var useWithCoupon = true;\n                if(canUseWithCoupon != this.CAN_USE_WITH_COUPON && DiscountModel.appliedPromotion() && DiscountModel.couponCode() && DiscountModel.cartBaseDiscountAmount() > 0){\n                    useWithCoupon = false;\n                }\n                var canuse = (\n                    moduleEnable\n                    && moduleActive\n                    && useWithCoupon\n                )?true:false;\n                return canuse;\n            },\n            /**\n             * Validate amount before apply\n             * @param balance\n             * @param max\n             * @returns {boolean}\n             */\n            validate: function(balance, max){\n                if(!this.canUseExtension()){\n                    if(this.visible() == true && this.applied() && this.applied() == true){\n                        this.remove();\n                    }\n                    return false;\n                }\n                var amount = 0;\n                if(!balance){\n                    amount = this.currentAmount();\n                }else{\n                    amount = balance;\n                }\n                var validTotal = this.collectValidTotal();\n                var max = (max)?max:validTotal;\n                if(max > this.balance()){\n                    max = this.balance();\n                }\n                amount = (amount > max || (this.useMaxPoint() == true))?max:amount;\n                if(this.currentAmount() > amount || balance){\n                    amount = (parseFloat(amount) > 0)?amount:0;\n                    this.currentAmount(-1);\n                    this.currentAmount(parseFloat(amount));\n                }\n                return true;\n            },\n            collectValidTotal: function(){\n                var validTotal = 0;\n                var totalAppliedAmount = (this.totalAppliedAmount()) ? this.totalAppliedAmount() : 0;\n                var grandTotal = this.TotalsModel.getTotalValue('grand_total') + totalAppliedAmount;\n                if(grandTotal > 0) {\n                    var applyAfterTax = (this.getConfig('giftvoucher/general/apply_after_tax')) ? '1' : '0';\n                    validTotal = (applyAfterTax == '0') ? (this.TotalsModel.getTotalValue('grand_total') + totalAppliedAmount - this.TotalsModel.tax()) : (this.TotalsModel.getTotalValue('grand_total') + totalAppliedAmount);\n                    var useForShipping = this.getConfig('giftvoucher/general/use_for_ship');\n                    if (useForShipping == '0') {\n                        validTotal -= this.TotalsModel.shippingFee();\n                    }\n                    validTotal -= this.getTotalAmountExcludeOne(this.giftcardCode());\n                }\n                return validTotal;\n            },\n            collectMaxTotalToDiscount: function(){\n                var max = 0;\n                if(CartData.totals().length > 0){\n                    var self = this;\n                    ko.utils.arrayForEach(CartData.totals(), function (total) {\n                        if(total.code() != self.TOTAL_CODE && total.code() != self.TotalsModel.GRANDTOTAL_TOTAL_CODE && total.value()){\n                            max += Helper.toNumber(total.value());\n                        }\n                    });\n                }\n                // var applyAfterTax = (Helper.getBrowserConfig('tax/calculation/apply_after_discount'))?'0':'1';\n                var applyAfterTax = (this.getConfig('giftvoucher/general/apply_after_tax'))?'1':'0';\n                if(applyAfterTax == '0'){\n                    max -= Helper.toNumber(this.TotalsModel.tax());\n                }\n                var useForShipping = this.getConfig('giftvoucher/general/use_for_ship');\n                if(useForShipping == '0'){\n                    max -= Helper.toNumber(this.TotalsModel.shippingFee());\n                }\n                return max;\n            },\n            /**\n             * Reset discount per item\n             */\n            reset: function(){\n                var self = this;\n                ko.utils.arrayForEach(CartData.items(), function (item) {\n                    item.item_giftcard_discount(0);\n                    item.item_base_giftcard_discount(0);\n                });\n            },\n            /**\n             * Process discount per item\n             * @param cartBaseTotalAmount\n             */\n            process: function(cartBaseTotalAmount){\n                var self = this;\n                if(cartBaseTotalAmount > 0){\n                    var taxAfterDiscount = (self.getConfig('giftvoucher/general/apply_after_tax'))?false:true;\n                    var maxAmount = CartData.getMaxDiscountAmount(taxAfterDiscount);\n                    var itemsAmountTotal = (cartBaseTotalAmount > maxAmount)?maxAmount:cartBaseTotalAmount;\n                    var amountApplied = 0;\n                    ko.utils.arrayForEach(CartData.items(), function (item, index) {\n                        var maxAmountItem = CartData.getMaxItemDiscountAmount(item.item_id(), taxAfterDiscount);\n                        var discountPercent = maxAmountItem/maxAmount;\n                        var item_base_amount = (index == CartData.items().length - 1)?(itemsAmountTotal - amountApplied):itemsAmountTotal*discountPercent;\n                        amountApplied += item_base_amount;\n                        var item_amount = Helper.convertPrice(item_base_amount);\n                        item.item_base_giftcard_discount(item_base_amount);\n                        item.item_giftcard_discount(item_amount);\n                    });\n                }else{\n                    self.reset();\n                }\n            },\n            /**\n             * Collect discount per item\n             */\n            collect: function(){\n                var amount = 0;\n                if(this.appliedCards().length > 0){\n                    amount = this.getTotalAppliedAmount();\n                }\n                var visible = (amount > 0)?true:false;\n                this.applied(visible);\n\n                this.TotalsModel.addTotal({\n                    code: this.TOTAL_CODE,\n                    cssClass: 'discount',\n                    title: Helper.__('Gift card'),\n                    value: -amount,\n                    isVisible: visible,\n                    removeAble: true,\n                    actions:{\n                        remove: $.proxy(this.remove, this),\n                        collect: $.proxy(this.collect, this)\n                    }\n                });\n                this.TotalsModel.updateTotal(this.TOTAL_CODE,{isVisible: visible});\n                this.process(amount);\n                Helper.dispatchEvent('reset_payments_data', '');\n            },\n            /**\n             * Use gift card online\n             * @returns {*}\n             */\n            applyGiftcardOnline: function(code){\n                var self = this;\n                var deferred = $.Deferred();\n                var initParams = CartModel.getQuoteInitParams();\n                var params = {quote_id: initParams.quote_id};\n                params.code = code;\n                params.amount = '';\n                CheckoutModel.loading(true);\n                onlineResource().setPush(true).setLog(false).applyGiftcard(params,deferred);\n                deferred.always(function(){\n                    CheckoutModel.loading(false);\n                });\n                return deferred;\n            },\n            /**\n             * Remove gift card online\n             * @returns {*}\n             */\n            removeGiftcardOnline: function(code){\n                var self = this;\n                var deferred = $.Deferred();\n                var initParams = CartModel.getQuoteInitParams();\n                var params = {quote_id: initParams.quote_id};\n                params.code = code;\n                CheckoutModel.loading(true);\n                onlineResource().setPush(true).setLog(false).removeGiftcard(params,deferred);\n                deferred.always(function(){\n                    CheckoutModel.loading(false);\n                });\n                return deferred;\n            },\n            /**\n             * Process response data\n             * @param responseData\n             */\n            checkoutCallApiAfter: function(responseData){\n                var self = this;\n                if(Helper.isUseOnline('checkout') && responseData){\n                    var data = responseData.data;\n                    if(data && data.giftcard){\n                        if(data && data.giftcard.used_codes) {\n                            var codes = data.giftcard.used_codes;\n                            $.each(codes, function (index, code) {\n                                self.applyGiftCode(code.code, code.amount);\n                            });\n                        }\n                        if(data && data.giftcard.existed_codes) {\n                            var customerCodes = data.giftcard.existed_codes;\n                            self.customerCodes(customerCodes);\n                        }else{\n                            self.customerCodes([]);\n                        }\n                    }\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/integration/reward-points-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/integration/reward-points',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/integration/reward-points';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/integration/store-credit-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/integration/store-credit',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/integration/store-credit';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/integration/gift-card-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/integration/gift-card',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/integration/gift-card';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/integration/reward-points.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/integration/rewardpoints/reward-points',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/integration/rewardpoints/reward-points',\n        'Magestore_Webpos/js/model/collection/integration/reward-points',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/view/checkout/cart',\n        'Magestore_Webpos/js/model/checkout/cart/totals',\n        'Magestore_Webpos/js/model/checkout/cart/data/cart',\n        'Magestore_Webpos/js/view/settings/general/rewardpoints/show-rewardpoints-balance',\n        'Magestore_Webpos/js/view/settings/general/rewardpoints/auto-sync-balance',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/integration/rewardpoints/rate',\n        'Magestore_Webpos/js/model/checkout/checkout'\n    ],\n    function ($, ko, modelAbstract, onlineResource, offlineResource, collection, CartModel, CartView, Totals, CartData, ShowPointBalance, AutoSyncBalance, Helper, RateModel, CheckoutModel) {\n        \"use strict\";\n        if (!window.hadObserver) {\n            window.hadObserver = [];\n        }\n        return modelAbstract.extend({\n            sync_id:'customer_points',\n            TOTAL_CODE:'rewardpoints',\n            MODULE_CODE:'os_reward_points',\n            STATUS_INACTIVE: 0,\n            STATUS_ACTIVE: 1,\n            TYPE_POINT_TO_MONEY: '1',\n            TYPE_MONEY_TO_POINT: '2',\n            CUSTOMER_GROUP_ALL: '0',\n            EARN_WHEN_INVOICE: '1',\n            balance: ko.observable(0),\n            currentAmount: ko.observable(0),\n            appliedAmount: ko.observable(0),\n            maxPoint: ko.observable(0),\n            visible: ko.observable(false),\n            applied: ko.observable(false),\n            useMaxPoint: ko.observable(true),\n            updatingBalance: ko.observable(false),\n            loading: ko.observable(false),\n            remaining: CheckoutModel.remainTotal,\n            rates: ko.observableArray([]),\n            earningRateValue: ko.observable(0),\n            spendingRateValue: ko.observable(0),\n            earningRate: ko.observable(),\n            spendingRate: ko.observable(),\n            discountAmount: ko.observable(),\n            initialize: function () {\n                if(Helper.isRewardPointsEnable()) {\n                    this._super();\n                    this.setResource(onlineResource(), offlineResource());\n                    this.setResourceCollection(collection());\n                    this.TotalsModel = Totals();\n                    this.initVariable();\n                    if ($.inArray(this.MODULE_CODE, window.hadObserver) < 0) {\n                        this.initObserver();\n                        window.hadObserver.push(this.MODULE_CODE);\n                    }\n                }\n            },\n            getConfig: function(path){\n                var allConfig = Helper.getBrowserConfig('plugins_config');\n                if(allConfig[this.MODULE_CODE]){\n                    var configs = allConfig[this.MODULE_CODE];\n                    if(configs[path]){\n                        return configs[path];\n                    }\n                }\n                return false;\n            },\n            loadRates: function() {\n                var self = this;\n                var deferred = RateModel().getCollection().setOrder('sort_order', 'DESC').load();\n                deferred.done(function(data){\n                    self.rates(data.items);\n                });\n            },\n            getAmountForShipping: function(items){\n                var amount = {\n                    base:0,\n                    amount:0\n                };\n                if(items && items.length > 0){\n                    var totalBase = 0;\n                    var totalAmount = 0;\n                    ko.utils.arrayForEach(items, function(item) {\n                        if(item.item_base_point_discount){\n                            totalBase += item.item_base_point_discount;\n                        }\n                        if(item.item_point_discount){\n                            totalAmount += item.item_point_discount;\n                        }\n                    });\n                    amount.base = Helper.toBasePrice(this.discountAmount()) - totalBase;\n                    amount.amount = this.discountAmount() - totalAmount;\n                }\n                return amount;\n            },\n            initVariable: function () {\n                var self = this;\n                self.loadRates();\n                self.visible = ko.pureComputed(function(){\n                    return self.canUseExtension();\n                });\n\n                self.applied(false);\n\n                self.balanceAfterApply = ko.pureComputed(function () {\n                    return (self.applied()) ? (self.balance() - self.appliedAmount()) : self.balance();\n                });\n\n                self.earningPoint = ko.pureComputed(function () {\n                    var point = 0;\n                    if(self.earningRateValue() > 0 && self.canUseExtension()){\n                        point = parseFloat(self.collectTotalToEarn()) * parseFloat(self.earningRateValue());\n                        point = self.roundEarning(point);\n                    }\n                    return point;\n                });\n\n                self.earningPoint.subscribe(function (value) {\n                    if(!Helper.isUseOnline('checkout')){\n                        var visible = (value > 0)?true:false;\n                        self.TotalsModel.addAdditionalInfo({\n                            code:'rewardpoints_earning_point',\n                            title:Helper.__('Customer will earn ')+value+Helper.__(' point(s)'),\n                            value:'',\n                            visible:visible\n                        });\n                    }\n                });\n\n                self.useMaxPoint.subscribe(function (value) {\n                    if (value == true) {\n                        if(Helper.isUseOnline('checkout')){\n                            if(self.maxPoint()){\n                                self.currentAmount(self.maxPoint());\n                            }else{\n                                self.validate(self.balance(),self.convertMoneyToPoint(self.TotalsModel.positiveTotal()));\n                            }\n                            if(self.canUseExtension()){\n                                self.spendPointOnline();\n                            }\n                        }else{\n                            self.validate(self.balance(),self.convertMoneyToPoint(self.TotalsModel.positiveTotal()));\n                        }\n                    }\n                });\n                self.balance.subscribe(function (value) {\n                    if (self.useMaxPoint() == true) {\n                        self.currentAmount(self.balance());\n                    }\n                });\n                self.currentAmount.subscribe(function (value) {\n                    self.validate();\n                });\n\n                self.TotalsModel.positiveTotal.subscribe(function (value) {\n                    if(!Helper.isUseOnline('checkout')) {\n                        if (self.applied() && self.applied() == true) {\n                            if (value > 0) {\n                                var valid = self.validate(self.appliedAmount(), self.convertMoneyToPoint(value));\n                                if (valid) {\n                                    self.apply();\n                                }\n                            } else {\n                                self.remove();\n                            }\n                        } else {\n                            self.currentAmount(self.convertMoneyToPoint(value));\n                            self.useMaxPoint(true);\n                        }\n                    }\n                });\n                self.TotalsModel.baseDiscountAmount.subscribe(function (value) {\n                    if(!Helper.isUseOnline('checkout')){\n                        if (self.applied() && self.applied() == true) {\n                            var maxAmount = self.TotalsModel.positiveTotal() - value;\n                            var valid = self.validate(self.appliedAmount(), self.convertMoneyToPoint(maxAmount));\n                            if (valid) {\n                                self.apply();\n                            }\n                        }else {\n                            var maxAmount = self.TotalsModel.positiveTotal() - value;\n                            self.currentAmount(self.convertMoneyToPoint(maxAmount));\n                            self.useMaxPoint(true);\n                        }\n                    }\n                });\n            },\n            initObserver: function(){\n                var self = this;\n                /**\n                 * Reset data after cart empty\n                 */\n                Helper.observerEvent('cart_empty_after', function (event, data) {\n                    self.cartEmptyAfter(data);\n                });\n\n                /**\n                 * Load customer balance when select customer to checkout\n                 */\n                Helper.observerEvent('checkout_select_customer_after', function (event, data) {\n                    self.selectCustomerToCheckoutAfter(data);\n                });\n\n                /**\n                 * Show customer point balance on receipt\n                 */\n                Helper.observerEvent('prepare_receipt_totals', function (event, data) {\n                    self.prepareReceipt(data);\n                });\n\n                /**\n                 * Update customer point balance on local after checkout\n                 */\n                Helper.observerEvent('webpos_order_save_after', function (event, data) {\n                    self.orderSaveAfter(data);\n                });\n\n                /**\n                 * Add params to sync data when syncing order\n                 */\n                Helper.observerEvent('webpos_place_order_before', function (event, data) {\n                    if(!Helper.isUseOnline('checkout')){\n                        self.placeOrderBefore(data);\n                    }\n                });\n\n                /**\n                 * Call api to update customer credit balance after refund by credit\n                 */\n                Helper.observerEvent('sales_order_creditmemo_afterSave', function (event, data) {\n                    self.refundAfter(data);\n                });\n\n                /**\n                 * Reload rate data after sync\n                 */\n                Helper.observerEvent('rewardpoint_rates_finish_pull_after',function(event,data){\n                    self.loadRates();\n                });\n\n                /**\n                 * Collect rates\n                 */\n                Helper.observerEvent('go_to_checkout_page',function(event,data){\n                    self.collectRates();\n                    var useMaxPoint = self.getConfig('rewardpoints/spending/max_point_default');\n                    if(self.appliedAmount() <= 0){\n                        self.useMaxPoint(false);\n                        if(useMaxPoint == self.STATUS_ACTIVE){\n                            self.useMaxPoint(true);\n                        }\n                    }\n                });\n\n                /**\n                 * Process data after call api\n                 */\n                Helper.observerEvent('checkout_call_api_after',function(event, data){\n                    self.checkoutCallApiAfter(data);\n                });\n\n                /**\n                 * Update customer point balance on local after checkout\n                 */\n                Helper.observerEvent('webpos_place_order_online_after', function (event, data) {\n                    self.orderSaveAfter(data);\n                });\n            },\n            /**\n             * Event cart empty after - remove applied data\n             * @param data\n             */\n            cartEmptyAfter: function(data){\n                this.remove();\n                this.resetAllData();\n            },\n            /**\n             * Event after select customer - load balance and collect rates\n             * @param data\n             */\n            selectCustomerToCheckoutAfter: function(data){\n                var self = this;\n                if (self.updatingBalance() == false && CartModel.customerId()) {\n                    if (data.customer && data.customer.id) {\n                        self.loadBalanceByCustomerId(data.customer.id);\n                        var autoSyncBalance = Helper.getLocalConfig(AutoSyncBalance().configPath);\n                        if(autoSyncBalance == true){\n                            self.updateBalance();\n                        }\n                        self.collectRates();\n                    }\n                }\n            },\n            /**\n             * Event before show receipt - Add data to show on receipt\n             * @param data\n             */\n            prepareReceipt: function(data){\n                data.totals.push({\n                    code: 'rewardpoints_discount',\n                    title: 'Points Discount',\n                    required: false,\n                    sortOrder: 37,\n                    isPrice: true\n                });\n                data.totals.push({\n                    code: 'rewardpoints_spent',\n                    title: 'Spent',\n                    required: false,\n                    sortOrder: 6,\n                    isPrice: false,\n                    valueLabel: Helper.__('Points')\n                });\n                data.totals.push({\n                    code: 'rewardpoints_earn',\n                    title: 'Earn',\n                    required: false,\n                    sortOrder: 5,\n                    isPrice: false,\n                    valueLabel: Helper.__('Points')\n                });\n                if (data.customer_id) {\n                    var self = this;\n                    var showBalance = Helper.getLocalConfig(ShowPointBalance().configPath);\n                    if (CartModel.customerId() && showBalance == true) {\n                        var balance = self.balance() - self.appliedAmount();\n                        var earnWhenInvoice = self.getConfig('rewardpoints/earning/order_invoice');\n                        var holdDays = Helper.toNumber(self.getConfig('rewardpoints/earning/holding_days'));\n                        if(holdDays <= 0) {\n                            if (earnWhenInvoice == self.EARN_WHEN_INVOICE) {\n                                if (CheckoutModel.createInvoice()) {\n                                    balance += self.earningPoint();\n                                }\n                            } else {\n                                if (CheckoutModel.createInvoice() && CheckoutModel.createShipment()) {\n                                    balance += self.earningPoint();\n                                }\n                            }\n                        }\n                        data.accountInfo.push({\n                            label: Helper.__('Customer points balance'),\n                            value: balance\n                        });\n                    }\n                }\n            },\n            /**\n             * Event order save after - update balance on local\n             * @param data\n             */\n            orderSaveAfter: function(data){\n                var self = this;\n                var balance = self.balance();\n                if (data && data.customer_id && data.rewardpoints_spent > 0) {\n                    balance -= data.rewardpoints_spent;\n                }\n                var earnWhenInvoice = self.getConfig('rewardpoints/earning/order_invoice');\n                var holdDays = Helper.toNumber(self.getConfig('rewardpoints/earning/holding_days'));\n                if(holdDays <= 0) {\n                    if (earnWhenInvoice == self.EARN_WHEN_INVOICE) {\n                        if (CheckoutModel.createInvoice()) {\n                            if (data && data.customer_id && data.rewardpoints_earn > 0) {\n                                balance += data.rewardpoints_earn;\n                            }\n                        }\n                    } else {\n                        if (CheckoutModel.createInvoice() && CheckoutModel.createShipment()) {\n                            if (data && data.customer_id && data.rewardpoints_earn > 0) {\n                                balance += data.rewardpoints_earn;\n                            }\n                        }\n                    }\n                }\n                if(balance != self.balance()){\n                    self.saveBalance(data.customer_id, balance);\n                }\n            },\n            /**\n             * Event place order before - add data to order\n             * @param data\n             */\n            placeOrderBefore: function(data){\n                var self = this;\n                if (data && data.increment_id && CartModel.customerId()) {\n                    var order_data = [];\n                    if(self.earningPoint() > 0){\n                        data.rewardpoints_earn = self.earningPoint();\n                        order_data.push({\n                            key: \"rewardpoints_earn\",\n                            value: self.earningPoint()\n                        });\n                    }\n                    if(self.applied() && self.appliedAmount() > 0){\n                        data.rewardpoints_spent = self.appliedAmount();\n                        data.rewardpoints_discount = -self.discountAmount();\n                        data.rewardpoints_base_discount = -Helper.toBasePrice(self.discountAmount());\n\n                        order_data.push({\n                            key: \"rewardpoints_spent\",\n                            value: self.appliedAmount()\n                        });\n                        order_data.push({\n                            key: \"rewardpoints_discount\",\n                            value: self.discountAmount()\n                        });\n                        order_data.push({\n                            key: \"rewardpoints_base_discount\",\n                            value: Helper.toBasePrice(self.discountAmount())\n                        });\n                    }\n\n                    var useForShipping = self.getConfig('rewardpoints/spending/spend_for_shipping');\n                    if (useForShipping == '1') {\n                        order_data.push({\n                            key: \"rewardpoints_amount\",\n                            value: self.getAmountForShipping(data.items).amount\n                        });\n                        order_data.push({\n                            key: \"rewardpoints_base_amount\",\n                            value: self.getAmountForShipping(data.items).base\n                        });\n                    }\n\n                    data.sync_params.integration.push({\n                        'module': 'os_reward_points',\n                        'event_name': 'webpos_create_order_with_points_after',\n                        'order_data': order_data,\n                        'extension_data': []\n                    });\n                }\n            },\n            refundAfter: function(data){\n                var self = this;\n                if (data && data.response && data.response.customer_id) {\n                    if(data.response.rewardpoints_earn > 0 || data.response.rewardpoints_spent > 0){\n                        self.updateBalance(data.response.customer_id);\n                    }\n                }\n            },\n            /**\n             * Reset all model data\n             */\n            resetAllData: function(){\n                this.balance(0);\n                this.currentAmount(0);\n                this.applied(false);\n                this.useMaxPoint(false);\n                this.earningRateValue(0);\n                this.spendingRateValue(0);\n                this.earningRate({});\n                this.spendingRate({});\n            },\n            /**\n             * Reset model data\n             */\n            resetData: function(){\n                this.currentAmount(0);\n                this.applied(false);\n                this.useMaxPoint(false);\n            },\n            /**\n             * Update balance from server\n             * @param customerId\n             */\n            updateBalance: function(customerId){\n                customerId = (customerId)?customerId:CartModel.customerId();\n                if(customerId){\n                    var self = this;\n                    var deferred = $.Deferred();\n                    var params = {\n                        customer_id: customerId\n                    };\n                    onlineResource().setPush(true).setLog(false).getBalance(params,deferred);\n                    self.updatingBalance(true);\n                    deferred.done(function (response) {\n                        var data = (typeof response == 'string')?JSON.parse(response):response;\n                        if(data && typeof data.balance != undefined){\n                            self.balance(data.balance);\n                            self.saveBalance(customerId, data.balance);\n                        }\n                    }).always(function (response) {\n                        self.updatingBalance(false);\n                    });\n                }\n            },\n            /**\n             * Apply discount to cart\n             * @param apply\n             */\n            apply: function(apply){\n                var amount = (apply === false)?0:this.currentAmount();\n                var visible = (amount > 0)?true:false;\n                this.applied(visible);\n                this.currentAmount(amount);\n                if(visible){\n                    this.appliedAmount(amount);\n                }else{\n                    this.appliedAmount(0);\n                }\n                this.collectDiscountAmount();\n                this.TotalsModel.addTotal({\n                    code: this.TOTAL_CODE,\n                    cssClass: 'discount',\n                    title: Helper.__('Points Discount'),\n                    value: -this.discountAmount(),\n                    baseValue: -Helper.toBasePrice(this.discountAmount()),\n                    isVisible: visible,\n                    removeAble: true,\n                    actions:{\n                        remove: $.proxy(this.remove, this),\n                        collect: $.proxy(this.collect, this)\n                    }\n                });\n                this.TotalsModel.updateTotal('rewardpoints',{isVisible: visible});\n                this.process(Helper.toBasePrice(this.discountAmount()));\n                Helper.dispatchEvent('reset_payments_data', '');\n            },\n            /**\n             * Remove data\n             */\n            remove: function(){\n                this.resetData();\n                this.apply(false);\n            },\n            /**\n             * Validate can use module\n             * @returns {boolean}\n             */\n            canUseExtension: function(){\n                var self = this;\n                var customerId = CartModel.customerId();\n                var moduleEnable = Helper.isRewardPointsEnable();\n                var canuse = (\n                    moduleEnable\n                    && customerId\n                )?true:false;\n                return canuse;\n            },\n            /**\n             * Validate amount before apply\n             * @param balance\n             * @param max\n             * @returns {boolean}\n             */\n            validate: function(balance, max){\n                var self = this;\n                if(!self.canUseExtension()){\n                    if(self.visible() == true && self.applied() && self.applied() == true){\n                        self.remove();\n                    }\n                    return false;\n                }\n                var amount = 0;\n                if(!balance){\n                    amount = self.currentAmount();\n                }else{\n                    amount = balance;\n                }\n                var validTotal = self.collectValidTotal();\n                var max = (max)?max:self.convertMoneyToPoint(validTotal);\n                if(max > self.balance()){\n                    max = self.balance();\n                }\n                if(self.spendingRate() && self.spendingRate().rate){\n                    var point = parseFloat(self.spendingRate().rate.points);\n                    var floorAmount = Math.floor(max/point) * point;\n                    var ceilAmount = Math.ceil(max/point) * point;\n                    var validAmount = (ceilAmount <= self.balance())?ceilAmount:floorAmount;\n                    max = parseFloat(validAmount);\n                }\n                amount = (amount > max || (self.useMaxPoint() == true))?max:amount;\n                if(self.currentAmount() > amount || balance){\n                    amount = (parseFloat(amount) > 0)?amount:0;\n                    self.currentAmount(parseFloat(amount));\n                }\n\n                if(self.spendingRate() && self.spendingRate().rate) {\n                    var point = parseFloat(self.spendingRate().rate.points);\n                    var floorAmount = Math.floor(self.currentAmount() / point) * point;\n                    var ceilAmount = Math.ceil(self.currentAmount() / point) * point;\n                    var validAmount = (ceilAmount <= self.balance()) ? ceilAmount : floorAmount;\n                    self.currentAmount(parseFloat(validAmount));\n                }\n                return true;\n            },\n            collectValidTotal: function(){\n                var self = this;\n                var grandTotal = (self.TotalsModel.grandTotal() > 0)?self.TotalsModel.grandTotal():0;\n                var discountAmount = (self.discountAmount())?self.discountAmount():0;\n                var applyAfterDiscount = (Helper.getBrowserConfig('tax/calculation/apply_after_discount'))?'0':'1';\n                var validTotal = (applyAfterDiscount == '1')?(grandTotal + discountAmount - self.TotalsModel.tax()):(grandTotal + discountAmount);\n                var useForShipping = self.getConfig('rewardpoints/spending/spend_for_shipping');\n                if(useForShipping == '0'){\n                    validTotal -= self.TotalsModel.shippingFee();\n                }\n                if(Helper.isUseOnline('checkout')){\n                    validTotal -= parseFloat(self.TotalsModel.getOnlineValue(self.TOTAL_CODE));\n                }\n                return validTotal;\n            },\n            collectMaxTotalToDiscount: function(){\n                var max = 0;\n                if(CartData.totals().length > 0){\n                    var self = this;\n                    ko.utils.arrayForEach(CartData.totals(), function (total) {\n                       if(total.code() != self.TOTAL_CODE && total.code() != self.TotalsModel.GRANDTOTAL_TOTAL_CODE && total.value()){\n                           max += Helper.toNumber(total.value());\n                       }\n                    });\n                }\n                var applyAfterDiscount = (Helper.getBrowserConfig('tax/calculation/apply_after_discount'))?'0':'1';\n                if(applyAfterDiscount == '1'){\n                    max -= Helper.toNumber(this.TotalsModel.tax());\n                }\n                var useForShipping = this.getConfig('rewardpoints/spending/spend_for_shipping');\n                if(useForShipping == '0'){\n                    max -= Helper.toNumber(this.TotalsModel.shippingFee());\n                }\n                return max;\n            },\n            collectDiscountAmount: function(){\n                var discount = 0;\n                if(this.spendingRateValue() > 0 && this.applied() && this.appliedAmount() > 0){\n                    discount = this.convertPointToMoney(this.appliedAmount());\n                    var max = this.collectMaxTotalToDiscount();\n                    if(discount > max){\n                        discount = max;\n                    }\n                }\n                this.discountAmount(discount);\n            },\n            /**\n             * Load balance by customer from local\n             * @param customerId\n             */\n            loadBalanceByCustomerId: function(customerId){\n                var self = this;\n                if(customerId) {\n                    self.getCollection().addFieldToFilter('customer_id', customerId, 'eq');\n                    self.getCollection().load().done(function (response) {\n                        if (response.items && response.items.length > 0) {\n                            var balance = parseFloat(response.items[0].point_balance);\n                            self.balance(balance);\n                            if(balance <= 0){\n                                self.remove();\n                            }else{\n                                if(self.applied()){\n                                    self.collect();\n                                }\n                            }\n                        }else{\n                            self.balance(0);\n                            self.remove();\n                        }\n                    });\n                }else{\n                    if(self.visible() == true && self.applied() && self.applied() == true){\n                        self.balance(0);\n                        self.remove();\n                    }\n                }\n            },\n            /**\n             * Update balance from local\n             */\n            updateStorageBalance: function(){\n                var self = this;\n                if(CartModel.customerId()) {\n                    self.getCollection().addFieldToFilter('customer_id', CartModel.customerId(), 'eq');\n                    self.getCollection().load().done(function (response) {\n                        if (response.items && response.items.length > 0) {\n                            self.balance(parseFloat(response.items[0].point_balance));\n                        }else{\n                            self.balance(0);\n                            self.remove();\n                        }\n                    });\n                }else{\n                    if(self.visible() == true && self.applied() && self.applied() == true){\n                        self.balance(0);\n                        self.remove();\n                    }\n                }\n            },\n            /**\n             * Load point balance from local by customer id\n             * @param customerId\n             */\n            loadStorageBalanceByCustomerId: function(customerId){\n                var self = this;\n                if(customerId){\n                    self.getCollection().addFieldToFilter('customer_id', customerId, 'eq');\n                    self.getCollection().load().done(function (response) {\n                        if (response.items && response.items.length > 0) {\n                            self.balance(parseFloat(response.items[0].point_balance));\n                        }else{\n                            self.balance(0);\n                        }\n                    });\n                }else{\n                    self.balance(0);\n                }\n            },\n            /**\n             * Save point balance to local\n             * @param customerId\n             * @param balance\n             */\n            saveBalance: function(customerId, balance){\n                if(customerId) {\n                    var self = this;\n                    self.getCollection().addFieldToFilter('customer_id', customerId, 'eq');\n                    self.getCollection().load().done(function (response) {\n                        var data = {};\n                        if (response.items && response.items.length > 0) {\n                            data = response.items[0];\n                            data.point_balance = balance;\n                        }else{\n                            data.customer_id = customerId;\n                            data.point_balance = balance;\n                        }\n                        self.setData(data).save();\n                    });\n                }\n            },\n            /**\n             * add point to balance on local\n             * @param customerId\n             * @param amount\n             */\n            addPoint: function(customerId, amount){\n                if(customerId) {\n                    var self = this;\n                    self.getCollection().addFieldToFilter('customer_id', customerId, 'eq');\n                    self.getCollection().load().done(function (response) {\n                        var data = {};\n                        if (response.items && response.items.length > 0) {\n                            data = response.items[0];\n                            data.point_balance += amount;\n                            self.setData(data).save();\n                        }\n                    });\n                }\n            },\n            /**\n             * remove point from balance on local\n             * @param customerId\n             * @param amount\n             */\n            removePoint: function(customerId, amount){\n                if(customerId) {\n                    var self = this;\n                    self.getCollection().addFieldToFilter('customer_id', customerId, 'eq');\n                    self.getCollection().load().done(function (response) {\n                        var data = {};\n                        if (response.items && response.items.length > 0) {\n                            data = response.items[0];\n                            data.point_balance -= amount;\n                            self.setData(data).save();\n                        }\n                    });\n                }\n            },\n            /**\n             * Reset discount per item\n             */\n            reset: function(){\n                var self = this;\n                ko.utils.arrayForEach(CartData.items(), function (item) {\n                    item.item_point_discount(0);\n                    item.item_base_point_discount(0);\n                });\n            },\n            /**\n             * Process discount per item\n             * @param cartBaseTotalAmount\n             */\n            process: function(cartBaseTotalAmount){\n                var self = this;\n                if(cartBaseTotalAmount > 0){\n                    var maxAmount = CartData.getMaxDiscountAmount();\n                    var itemsAmountTotal = (cartBaseTotalAmount > maxAmount)?maxAmount:cartBaseTotalAmount;\n                    var amountApplied = 0;\n                    ko.utils.arrayForEach(CartData.items(), function (item, index) {\n                        var maxAmountItem = CartData.getMaxItemDiscountAmount(item.item_id());\n                        var discountPercent = maxAmountItem/maxAmount;\n                        var item_base_amount = (index == CartData.items().length - 1)?(itemsAmountTotal - amountApplied):itemsAmountTotal*discountPercent;\n                        amountApplied += item_base_amount;\n                        var item_amount = Helper.convertPrice(item_base_amount);\n                        item.item_base_point_discount(item_base_amount);\n                        item.item_point_discount(item_amount);\n                        item.item_point_spent(self.convertMoneyToPoint(item_base_amount));\n                        if(self.earningPoint() > 0){\n                            var itemEarningPoint = parseFloat(item.row_total()) * parseFloat(self.earningRateValue());\n                            item.item_point_earn(self.roundEarning(itemEarningPoint));\n                        }\n                    });\n                }else{\n                    self.reset();\n                }\n            },\n            /**\n             * Collect discount per item\n             */\n            collect: function(){\n                var amount = (this.appliedAmount())?this.appliedAmount():0;\n                this.currentAmount(amount);\n                this.apply();\n            },\n\n            /**\n             * Collect spending rate and earning rate\n             */\n            collectRates: function() {\n                var self = this;\n                self.earningRateValue(0);\n                self.spendingRateValue(0);\n                var earningRates = [];\n                var spendingRates = [];\n                ko.utils.arrayForEach(self.rates(), function (rate, index) {\n                    if(self.canApplyRate(rate, CartModel.customerGroup())) {\n                        if(rate.direction === self.TYPE_POINT_TO_MONEY) {\n                            var value = parseFloat(rate.money) / parseFloat(rate.points);\n                            spendingRates.push({\n                                rate:rate,\n                                value:value,\n                                sort_order:parseFloat(rate.sort_order),\n                            });\n                        }\n                        if(rate.direction === self.TYPE_MONEY_TO_POINT) {\n                            var value = parseFloat(rate.points) / parseFloat(rate.money);\n                            earningRates.push({\n                                rate:rate,\n                                value:value,\n                                sort_order:parseFloat(rate.sort_order),\n                            });\n                        }\n                    }\n                });\n                if(earningRates.length > 0){\n                    earningRates.sort(self.sortBy(\"sort_order\"));\n                    self.earningRateValue(earningRates[0].value);\n                    self.earningRate(earningRates[0]);\n                }\n                if(spendingRates.length > 0){\n                    spendingRates.sort(self.sortBy(\"sort_order\"));\n                    self.spendingRateValue(spendingRates[0].value);\n                    self.spendingRate(spendingRates[0]);\n                }\n            },\n            /**\n             * Validate customer group allowed to use\n             * @param rate\n             * @param customerGroupId\n             * @returns {boolean}\n             */\n            canApplyRate: function(rate, customerGroupId) {\n                if(rate && rate.customer_group_ids){\n                    var groups = rate.customer_group_ids;\n                    groups = groups.split(',');\n                    if(typeof customerGroupId == \"undefined\" || !customerGroupId) {\n                        return false;\n                    }\n                    if(groups.indexOf(this.CUSTOMER_GROUP_ALL) > -1) {\n                        return true;\n                    }\n                    if(groups.indexOf(String(customerGroupId)) > -1) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            /**\n             * Round earning point\n             * @param point\n             * @returns {*}\n             */\n            roundEarning: function(point){\n                var roundMethod = this.getConfig('rewardpoints/earning/rounding_method');\n                switch(roundMethod){\n                    case 'round':\n                        point = Math.round(point);\n                        break;\n                    case 'ceil':\n                        point = Math.ceil(point);\n                        break;\n                    case 'floor':\n                        point = Math.floor(point);\n                        break;\n                }\n                return point;\n            },\n            /**\n             * Collect total can earn point\n             * @param point\n             * @returns {*}\n             */\n            collectTotalToEarn: function(){\n                var earnByShipping = this.getConfig('rewardpoints/earning/by_shipping');\n                var earnByTax = this.getConfig('rewardpoints/earning/by_tax');\n                var earnWhenSpend = this.getConfig('rewardpoints/earning/earn_when_spend');\n                var cancelState = this.getConfig('rewardpoints/earning/order_cancel_state');\n                var earnWhenInvoice = this.getConfig('rewardpoints/earning/order_invoice');\n                var total = this.TotalsModel.getTotalValue('grand_total');\n                if(earnByShipping == '0' && this.TotalsModel.shippingFee()){\n                    total -= this.TotalsModel.shippingFee();\n                }\n                if(earnByTax == '0' && this.TotalsModel.tax()){\n                    total -= this.TotalsModel.tax()\n                }\n                if(earnWhenSpend == '0' && this.applied() && this.appliedAmount() >0){\n                    total = 0;\n                }\n                return total;\n            },\n            /**\n             * Convert point to money\n             * @param point\n             * @returns {number}\n             */\n            convertPointToMoney: function(point){\n                return parseFloat(point) * parseFloat(this.spendingRateValue())\n            },\n            /**\n             * Convert money to point\n             * @param discount\n             * @returns {number}\n             */\n            convertMoneyToPoint: function(discount){\n                return (this.spendingRateValue() > 0)?Math.ceil(parseFloat(discount) / parseFloat(this.spendingRateValue())):0;\n            },\n            /**\n             * Function use to sort json array\n             * @param prop\n             * @returns {Function}\n             */\n            sortBy: function(prop){\n                return function(a,b){\n                    if( a[prop] > b[prop]){\n                        return 1;\n                    }else if( a[prop] < b[prop] ){\n                        return -1;\n                    }\n                    return 0;\n                }\n            },\n            /**\n             * Spend reward points\n             * @returns {*}\n             */\n            spendPointOnline: function(){\n                var self = this;\n                if(self.loading()){\n                    return false;\n                }\n                self.loading(true);\n                var deferred = $.Deferred();\n                var initParams = CartModel.getQuoteInitParams();\n                var params = {quote_id: initParams.quote_id};\n                params.used_point = self.currentAmount();\n                params.rule_id = 'rate';\n                CheckoutModel.loading(true);\n                onlineResource().setPush(true).setLog(false).spendPoint(params,deferred);\n                deferred.always(function(){\n                    CheckoutModel.loading(false);\n                    self.loading(false);\n                });\n                return deferred;\n            },\n            /**\n             * Process response data\n             * @param responseData\n             */\n            checkoutCallApiAfter: function(responseData){\n                var self = this;\n                if(Helper.isUseOnline('checkout') && responseData){\n                    var data = responseData.data;\n                    if(data && data.rewardpoints && data.rewardpoints.used_point > 0){\n                        self.currentAmount(parseFloat(data.rewardpoints.used_point));\n                        self.appliedAmount(parseFloat(data.rewardpoints.used_point));\n                    }\n                    if(data && data.rewardpoints && typeof data.rewardpoints.max_points != 'undefined'){\n                        self.maxPoint(parseFloat(data.rewardpoints.max_point));\n                    }\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/integration/rewardpoints/rate.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/magento-rest/integration/rewardpoints/rate',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/integration/rewardpoints/rate',\n        'Magestore_Webpos/js/model/collection/integration/rewardpoints/rate'\n    ],\n    function ($, modelAbstract, restResource, indexedDbResource, collection) {\n        \"use strict\";\n        return modelAbstract.extend({\n            sync_id:'rewardpoint_rates',\n            initialize: function () {\n                this._super();\n                this.setResource(restResource(), indexedDbResource());\n                this.setResourceCollection(collection());\n            },\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/payment/cryozonic_stripe.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/model/sales/order-factory',\n    ],\n    function ($, ko, modelAbstract, Datetime, OrderFactory) {\n        \"use strict\";\n        return modelAbstract.extend({\n            CheckoutModel:ko.observable(),\n            processPayment: function (orderId, paymentInfo) {\n                var self = this;\n                if(orderId) {\n                    OrderFactory.get().setPush(true).setLog(false).setMode(\"online\").load(orderId).done(function (response) {\n                        response.created_at = Datetime.getBaseSqlDatetime();\n                        response.updated_at = Datetime.getBaseSqlDatetime();\n                        OrderFactory.get().setMode(\"offline\").setData(response).setPush(false).save().done(function (response) {\n                            if (response) {\n                                self.CheckoutModel().placeOrder(response);\n                            }\n                            self.CheckoutModel().loading(false);\n                        });\n                    });\n                }\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/payment/authorizenet_directpost.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'mage/translate'\n    ],\n    function ($, ko, modelAbstract, Datetime, OrderFactory, AddNoti, __) {\n        \"use strict\";\n\n        var DirectPost =  {\n            CheckoutModel:ko.observable(),\n            orderData: ko.observable(),\n            openAuthorizePopup: function(){\n                var processingHtml = $('#authorizenet-directpost-progress-html').html();\n                this.openPopupCenter('','authorizenet_directpost_popup', processingHtml, 500, 500);\n            },\n            openPopupCenter: function(url, title, content, w, h) {\n                var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;\n                var dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;\n\n                var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\n                var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\n\n                var left = ((width / 2) - (w / 2)) + dualScreenLeft;\n                var top = ((height / 2) - (h / 2)) + dualScreenTop;\n                var authorizeWindow = window.open(url, title, 'width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);\n\n                authorizeWindow.document.open();\n                authorizeWindow.document.write(content);\n            },\n            success: function(){\n                var self = this;\n                if(self.orderData()){\n                    var self = this;\n                    self.CheckoutModel().loading(true);\n                    OrderFactory.get().setPush(true).setLog(false).setMode(\"online\").load(self.orderData().entity_id).done(function (response) {\n                        self.CheckoutModel().loading(false);\n                        OrderFactory.get().setMode(\"offline\").setData(response).setPush(false).save().done(function (response) {\n                            if (response) {\n                                self.CheckoutModel().placeOrder(response);\n                            }\n                        });\n                    });\n                }\n            },\n            error: function(message){\n                var self = this;\n                AddNoti(message, true, \"danger\", __('Message'));\n            }\n        };\n        window.directPostModel = DirectPost;\n\n        return modelAbstract.extend({\n            CheckoutModel:ko.observable(),\n            orderData:ko.observable(false),\n            initialize: function () {\n                this._super();\n                this.tmpForm = false;\n                this.iframeId = '#webpos-payment-iframe';\n                this.CheckoutModel.subscribe(function(model){\n                    window.directPostModel.CheckoutModel(model);\n                });\n            },\n            processPayment: function(orderId, paymentInfo){\n                var self = this;\n                var paymentUrl = paymentInfo.url;\n                var paymentParams = paymentInfo.params;\n                $.when(\n                    self.requestOnlinePayment(orderId, paymentUrl, paymentParams)\n                ).done(function (response) {\n                    if(response == undefined){\n                        self.CheckoutModel().loading(false);\n                        return;\n                    }\n                }).fail(function () {\n                    self.CheckoutModel().loading(false);\n                });\n            },\n            requestOnlinePayment: function(orderId, apiUrl, params){\n                var self = this;\n                self.CheckoutModel().loading(true);\n                OrderFactory.get().setPush(true).setLog(false).setMode(\"online\").load(orderId).done(function (response) {\n                    response.created_at = Datetime.getBaseSqlDatetime();\n                    response.updated_at = Datetime.getBaseSqlDatetime();\n                    self.orderData(response);\n                    window.directPostModel.orderData(response);\n                    var paymentData = self.preparePaymentRequest(params);\n                    self.sendPaymentRequest(apiUrl, paymentData);\n                    self.CheckoutModel().loading(false);\n                });\n            },\n            sendPaymentRequest : function(cgiUrl, paymentData) {\n                this.tmpForm = document.createElement('form');\n                this.tmpForm.style.display = 'none';\n                this.tmpForm.enctype = 'application/x-www-form-urlencoded';\n                this.tmpForm.method = 'POST';\n                document.body.appendChild(this.tmpForm);\n                this.tmpForm.action = cgiUrl;\n                this.tmpForm.target = 'authorizenet_directpost_popup';\n                this.tmpForm.setAttribute('target', 'authorizenet_directpost_popup');\n\n                for ( var param in paymentData) {\n                    this.tmpForm.appendChild(this.createHiddenElement(param, paymentData[param]));\n                }\n                this.tmpForm.submit();\n            },\n            createHiddenElement : function(name, value) {\n                var field;\n                // if (isIE) {\n                //     field = document.createElement('input');\n                //     field.setAttribute('type', 'hidden');\n                //     field.setAttribute('name', name);\n                //     field.setAttribute('value', value);\n                // } else {\n                field = document.createElement('input');\n                field.type = 'hidden';\n                field.name = name;\n                field.value = value;\n                // }\n\n                return field;\n            },\n            preparePaymentRequest : function(data) {\n                if($('#webpos_cc_exp_month') != \"undefined\" && $('#webpos_cc_exp_month').val() != \"\" &&\n                    $('#webpos_cc_exp_year') != \"undefined\" && $('#webpos_cc_exp_year').val() != \"\") {\n                    var year = $('#webpos_cc_exp_year').val();\n                    if (year.length > 2) {\n                        year = year.substring(2);\n                    }\n                    var month = parseInt($('#webpos_cc_exp_month').val(), 10);\n                    if (month < 10) {\n                        month = '0' + month;\n                    }\n                    data.x_exp_date = month + '/' + year;\n                }\n                if($('#webpos_cc_cid') != \"undefined\" && $('#webpos_cc_cid').val() != \"\")\n                    data.x_card_code = $('#webpos_cc_cid').val();\n                if($('#webpos_cc_number') != \"undefined\" && $('#webpos_cc_number').val() != \"\")\n                    data.x_card_num = $('#webpos_cc_number').val();\n                if($('#webpos_cc_owner') != \"undefined\" && $('#webpos_cc_owner').val() != \"\")\n                    data.cc_owner = $('#webpos_cc_owner').val();\n                if($('#webpos_cc_type') != \"undefined\" && $('#webpos_cc_type').val() != \"\")\n                    data.cc_type = $('#webpos_cc_type').val();\n\n                return data;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/payment/paypal_payflowpro.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/helper/datetime',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/sales/order-factory',\n        'Magestore_Webpos/js/action/notification/add-notification',\n        'mage/translate'\n    ],\n    function ($, ko, Datetime, Helper, OrderFactory, AddNoti, __) {\n        \"use strict\";\n\n        var PaypalPayflowpro =  {\n            CODE: 'payflowpro',\n            CheckoutModel:ko.observable(),\n            quoteId:ko.observable(),\n            openAuthorizePopup: function(){\n                var processingHtml = $('#authorizenet-directpost-progress-html').html();\n                this.openPopupCenter('','paypal_payflowpro_popup', processingHtml, 500, 500);\n            },\n            openPopupCenter: function(url, title, content, w, h) {\n                var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : screen.left;\n                var dualScreenTop = window.screenTop != undefined ? window.screenTop : screen.top;\n\n                var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;\n                var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;\n\n                var left = ((width / 2) - (w / 2)) + dualScreenLeft;\n                var top = ((height / 2) - (h / 2)) + dualScreenTop;\n                var authorizeWindow = window.open(url, title, 'width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);\n\n                authorizeWindow.document.open();\n                authorizeWindow.document.write(content);\n            },\n            success: function(){\n                var self = this;\n                if(self.quoteId()){\n                    var self = this;\n                    if(Helper.isUseOnline('checkout')){\n                        self.CheckoutModel().placeOrderOnline();\n                    }else{\n                        self.CheckoutModel().submitQuoteOnline(self.quoteId());\n                    }\n                }\n            },\n            error: function(message){\n                var self = this;\n                AddNoti(message, true, \"danger\", __('Message'));\n            },\n            initialize: function () {\n                var self = this;\n                self.tmpForm = false;\n                self.iframeId = '#webpos-payment-iframe';\n                Helper.observerEvent('prepare_payment_additional_data', function(event,data){\n                    if(data.code == self.CODE){\n                        var additional_data = data.additional_data;\n                        additional_data = self.preparePaymentRequest(additional_data);\n                        data.additional_data = additional_data;\n                    }\n                });\n                return self;\n            },\n            processPayment: function(quoteId, paymentInfo){\n                var self = this;\n                window.payflowproModel.quoteId(quoteId);\n\n                if(paymentInfo.error_messages){\n                    PaypalPayflowpro.error(paymentInfo.error_messages);\n                }\n                if(paymentInfo.error){\n                    self.CheckoutModel().loading(false);\n                    return false;\n                }\n                var paymentUrl = paymentInfo.url;\n                var paymentParams = paymentInfo.params;\n                $.when(\n                    self.requestOnlinePayment(quoteId, paymentUrl, paymentParams)\n                ).done(function (response) {\n                    if(response == undefined){\n                        self.CheckoutModel().loading(false);\n                        return;\n                    }\n                }).fail(function () {\n                    self.CheckoutModel().loading(false);\n                });\n            },\n            requestOnlinePayment: function(quoteId, apiUrl, params){\n                var self = this;\n                var paymentData = self.preparePaymentRequest(params);\n                self.sendPaymentRequest(apiUrl, paymentData);\n            },\n            sendPaymentRequest : function(cgiUrl, paymentData) {\n                this.tmpForm = document.createElement('form');\n                this.tmpForm.style.display = 'none';\n                this.tmpForm.enctype = 'application/x-www-form-urlencoded';\n                this.tmpForm.method = 'POST';\n                document.body.appendChild(this.tmpForm);\n                this.tmpForm.action = cgiUrl;\n                this.tmpForm.target = 'paypal_payflowpro_popup';\n                this.tmpForm.setAttribute('target', 'paypal_payflowpro_popup');\n\n                for ( var param in paymentData) {\n                    this.tmpForm.appendChild(this.createHiddenElement(param, paymentData[param]));\n                }\n                this.tmpForm.submit();\n            },\n            createHiddenElement : function(name, value) {\n                var field;\n                // if (isIE) {\n                //     field = document.createElement('input');\n                //     field.setAttribute('type', 'hidden');\n                //     field.setAttribute('name', name);\n                //     field.setAttribute('value', value);\n                // } else {\n                field = document.createElement('input');\n                field.type = 'hidden';\n                field.name = name;\n                field.value = value;\n                // }\n\n                return field;\n            },\n            preparePaymentRequest : function(data) {\n                if($('#webpos_cc_exp_month') != \"undefined\" && $('#webpos_cc_exp_month').val() != \"\" &&\n                    $('#webpos_cc_exp_year') != \"undefined\" && $('#webpos_cc_exp_year').val() != \"\") {\n                    var year = $('#webpos_cc_exp_year').val();\n                    if (year.length > 2) {\n                        year = year.substring(2);\n                    }\n                    var month = parseInt($('#webpos_cc_exp_month').val(), 10);\n                    if (month < 10) {\n                        month = '0' + month;\n                    }\n                    data.expdate = month + year;\n                }\n                if($('#webpos_cc_cid') != \"undefined\" && $('#webpos_cc_cid').val() != \"\")\n                    data.csc = $('#webpos_cc_cid').val();\n                if($('#webpos_cc_number') != \"undefined\" && $('#webpos_cc_number').val() != \"\")\n                    data.acct = $('#webpos_cc_number').val();\n                if($('#webpos_cc_owner') != \"undefined\" && $('#webpos_cc_owner').val() != \"\")\n                    data.cc_owner = $('#webpos_cc_owner').val();\n                if($('#webpos_cc_type') != \"undefined\" && $('#webpos_cc_type').val() != \"\")\n                    data.cc_type = $('#webpos_cc_type').val();\n                return data;\n            }\n        };\n        PaypalPayflowpro.initialize();\n        window.payflowproModel = PaypalPayflowpro;\n        return PaypalPayflowpro;\n    }\n);","Magestore_Webpos/js/model/checkout/payment/creditcard.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\ndefine(\n    [\n        'ko'\n    ],\n    function (ko) {\n        \"use strict\";\n        return {\n            DATA: {\n                CC_OWNER: 'cc_owner',\n                CC_TYPE: 'cc_type',\n                CC_NUMBER: 'cc_number',\n                CC_EXP_MONTH: 'cc_exp_month',\n                CC_EXP_YEAR: 'cc_exp_year',\n                CC_CID: 'cc_cid'\n            },\n            info: {\n                cc_owner: ko.observable(''),\n                cc_type: ko.observable(''),\n                cc_number: ko.observable(''),\n                cc_exp_month: ko.observable(0),\n                cc_exp_year: ko.observable(0),\n                cc_cid: ko.observable('')\n            },\n            getData: function(){\n                var self = this;\n                return {\n                    cc_owner: self.info.cc_owner(),\n                    cc_type: self.info.cc_type(),\n                    cc_number: self.info.cc_number(),\n                    cc_exp_month: self.info.cc_exp_month(),\n                    cc_exp_year: self.info.cc_exp_year(),\n                    cc_cid: self.info.cc_cid()\n                }\n            },\n            setData: function(key, value){\n                var self = this;\n                if(self.info[key]){\n                    self.info[key](value);\n                }\n            },\n            resetData: function(){\n                this.info.cc_owner('');\n                this.info.cc_type('');\n                this.info.cc_number('');\n                this.info.cc_exp_month(0);\n                this.info.cc_exp_year(0);\n                this.info.cc_cid('');\n            }\n        };\n    }\n);","Magestore_Webpos/js/model/checkout/cart/totals.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/checkout/cart/items',\n        'Magestore_Webpos/js/model/checkout/cart/totals/total',\n        'Magestore_Webpos/js/model/checkout/taxcalculator',\n        'Magestore_Webpos/js/model/checkout/cart/discountpopup',\n        'Magestore_Webpos/js/helper/staff',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/cart/data/cart'\n    ],\n    function ($, ko, modelAbstract, Items, Total, TaxCalculator, DiscountModel, Staff, Helper, CartData) {\n        \"use strict\";\n\n        Helper.observerEvent('recollect_totals', function(event, data){\n            if(data.code){\n                ko.utils.arrayForEach(CartData.totals(), function (total) {\n                    if(total.code() !== data.code) {\n                        if(total.actions() && total.actions().collect){\n                            if(typeof total.actions().collect == 'function'){\n                                total.actions().collect();\n                            }\n                        }\n                    }\n                });\n            }\n        });\n\n        return modelAbstract.extend({\n            totals: CartData.totals,\n            extraTotals: CartData.extraTotals,\n            quoteTotals: CartData.quoteTotals,\n            buttons: ko.observableArray(),\n            shippingData: ko.observable(),\n            shippingFee: ko.observable(0),\n            loadedTaxData: ko.observable(false),\n            subtotal: ko.pureComputed(function () {\n                var subtotal = 0;\n                ko.utils.arrayForEach(CartData.items(), function (item) {\n                    // var convertedAmount = Helper.convertPrice(item.row_total());\n                    subtotal += item.row_total();\n                });\n                return subtotal;\n                // return Helper.toBasePrice(subtotal);\n            }),\n            baseSubtotal: ko.pureComputed(function () {\n                var subtotal = 0;\n                ko.utils.arrayForEach(CartData.items(), function (item) {\n                    // var convertedAmount = Helper.convertPrice(item.row_total());\n                    subtotal += item.base_row_total();\n                });\n                return subtotal;\n                // return Helper.toBasePrice(subtotal);\n            }),\n            subtotalIncludeTax: ko.pureComputed(function () {\n                var subtotal = 0;\n                ko.utils.arrayForEach(CartData.items(), function (item) {\n                    subtotal += item.row_total_include_tax();\n                });\n                return subtotal;\n            }),\n            additionalInfo: ko.observableArray(),\n            SUBTOTAL_TOTAL_CODE: \"subtotal\",\n            TAX_TOTAL_CODE: \"tax\",\n            ADD_DISCOUNT_TOTAL_CODE: \"add-discount\",\n            DISCOUNT_TOTAL_CODE: \"discount\",\n            SHIPPING_TOTAL_CODE: \"shipping\",\n            GRANDTOTAL_TOTAL_CODE: \"grand_total\",\n            BASE_TOTALS: [\n                \"subtotal\",\n                'tax',\n                \"add-discount\",\n                \"discount\",\n                \"shipping\",\n                \"grand_total\"\n            ],\n            HOLD_BUTTON_CODE: \"hold\",\n            CHECKOUT_BUTTON_CODE: \"checkout\",\n            HOLD_BUTTON_TITLE: Helper.__(\"Hold\"),\n            CHECKOUT_BUTTON_TITLE: Helper.__(\"Checkout\"),\n            initialize: function () {\n                this._super();\n                var self = this;\n\n                self.initObservables();\n                self.initButtons();\n                self.initTotals();\n\n                if (self.loadedTaxData() == false) {\n                    self.initTaxData();\n                    self.loadedTaxData(true);\n                }\n                if(!this.reinitObserver){\n                    this.initObserver();\n                }\n                return this;\n            },\n            initObservables: function(){\n                var self = this;\n                self.grandTotalBeforeDiscount = ko.pureComputed(function(){\n                    var grandTotal = self.getBasePositiveTotal();\n                    var negativeAmount = self.getBaseNegativeTotal();\n                    if (negativeAmount < 0) {\n                        grandTotal += negativeAmount;\n                    }\n                    if(DiscountModel.appliedDiscount() == true || DiscountModel.appliedPromotion() == true || Helper.isUseOnline('checkout')) {\n                        grandTotal += DiscountModel.calculateBaseAmount(grandTotal);\n                    }\n                    return grandTotal;\n                });\n                self.tax = ko.pureComputed(function () {\n                    var tax = 0;\n                    if(Helper.isUseOnline('checkout') && Helper.getOnlineConfig('quote_id') && Helper.isOnCheckoutPage()){\n                        tax = self.getOnlineValue(self.TAX_TOTAL_CODE);\n                    }else {\n                        ko.utils.arrayForEach(CartData.items(), function (item) {\n                            tax += item.tax_amount();\n                        });\n                    }\n                    return tax;\n                });\n                self.baseTax = ko.pureComputed(function () {\n                    var tax = 0;\n                    if(Helper.isUseOnline('checkout') && Helper.getOnlineConfig('quote_id' ) && Helper.isOnCheckoutPage()){\n                        tax = self.getOnlineValue(self.TAX_TOTAL_CODE);\n                        tax = Helper.toBasePrice(tax);\n                    }else {\n                        ko.utils.arrayForEach(CartData.items(), function (item) {\n                            tax += item.base_tax_amount();\n                        });\n                    }\n                    return tax;\n                });\n                self.tax_before_discount = ko.pureComputed(function () {\n                    var tax = 0;\n                    ko.utils.arrayForEach(CartData.items(), function (item) {\n                        tax += item.tax_amount_before_discount();\n                    });\n                    return tax;\n                });\n                self.base_tax_before_discount = ko.pureComputed(function () {\n                    var tax = 0;\n                    ko.utils.arrayForEach(CartData.items(), function (item) {\n                        tax += item.base_tax_amount_before_discount();\n                    });\n                    return tax;\n                });\n                self.discountAmount = ko.pureComputed(function () {\n                    var discountAmount = 0;\n                    var grandTotal = 0;\n                    if(Helper.isUseOnline('checkout') && Helper.getOnlineConfig('quote_id')){\n                        discountAmount -= self.getOnlineValue(self.DISCOUNT_TOTAL_CODE);\n                    }else {\n                        if ((DiscountModel.appliedDiscount() == true || DiscountModel.appliedPromotion() == true) && DiscountModel.cartBaseDiscountAmount() > 0 && self.positiveTotal() > 0) {\n                            ko.utils.arrayForEach(self.getTotals(), function (total) {\n                                if (\n                                    total.code() !== self.DISCOUNT_TOTAL_CODE\n                                    && total.code() !== self.GRANDTOTAL_TOTAL_CODE\n                                    && total.value()\n                                    && total.value() > 0\n                                ) {\n                                    var apply_after_discount = window.webposConfig['tax/calculation/apply_after_discount'];\n                                    if (total.code() !== self.TAX_TOTAL_CODE) {\n                                        grandTotal += parseFloat(total.value());\n                                    } else {\n                                        if (apply_after_discount != 1) {\n                                            grandTotal += parseFloat(total.value());\n                                        }\n                                    }\n                                }\n                            });\n                            discountAmount = DiscountModel.calculateAmount(grandTotal);\n                        }\n                    }\n                    return discountAmount;\n                });\n                self.baseDiscountAmount = ko.pureComputed(function(){\n                    var discountAmount = 0;\n                    var baseGrandTotal = 0;\n                    if(Helper.isUseOnline('checkout') && Helper.getOnlineConfig('quote_id')){\n                        discountAmount -= Helper.toBasePrice(self.getOnlineValue(self.DISCOUNT_TOTAL_CODE));\n                    }else {\n                        if ((DiscountModel.appliedDiscount() == true || DiscountModel.appliedPromotion() == true) && DiscountModel.cartBaseDiscountAmount() > 0 && self.positiveTotal() > 0) {\n                            ko.utils.arrayForEach(self.getTotals(), function (total) {\n                                if (\n                                    total.code() !== self.DISCOUNT_TOTAL_CODE\n                                    && total.code() !== self.GRANDTOTAL_TOTAL_CODE\n                                    && total.value()\n                                    && total.value() > 0\n                                ) {\n                                    var apply_after_discount = window.webposConfig['tax/calculation/apply_after_discount'];\n                                    if (total.code() !== self.TAX_TOTAL_CODE) {\n                                        baseGrandTotal += parseFloat(total.baseValue());\n                                    } else {\n                                        if (apply_after_discount != 1) {\n                                            baseGrandTotal += parseFloat(total.baseValue());\n                                        }\n                                    }\n                                }\n                            });\n                            discountAmount = DiscountModel.calculateBaseAmount(baseGrandTotal);\n                        }\n                    }\n                    return discountAmount;\n                });\n                self.negativeTotal = ko.pureComputed(function () {\n                    return self.getNegativeTotal();\n                });\n                self.positiveTotal = ko.pureComputed(function () {\n                    return self.getPositiveTotal();\n                });\n                self.grandTotal = ko.pureComputed(function () {\n                    return self.getGrandTotal();\n                });\n                self.baseNegativeTotal = ko.pureComputed(function () {\n                    return self.getBaseNegativeTotal();\n                });\n                self.basePositiveTotal = ko.pureComputed(function () {\n                    return self.getBasePositiveTotal();\n                });\n                self.baseGrandTotal = ko.pureComputed(function () {\n                    return self.getBaseGrandTotal();\n                });\n            },\n            initObserver: function(){\n                var self = this;\n                self.reinitObserver = false;\n                Helper.observerEvent('cart_empty_after', function(event, data){\n                    self.extraTotals([]);\n                    self.quoteTotals([]);\n                });\n                Helper.observerEvent('load_totals_online_after', function(event, data){\n                    if(data && data.items){\n                        self.updateTotalsFromQuote(data.items);\n                    }\n                });\n                Helper.observerEvent('collect_totals', function(event, data){\n                    self.collectShippingTotal();\n                    self.collectTaxTotal();\n                });\n                self.baseDiscountAmount.subscribe(function(amount){\n                    self.updateDiscountTotal(amount);\n                    if(Helper.isUseOnline('checkout')){\n                        var onlineBaseAmount = Helper.toBasePrice(self.getOnlineValue(self.DISCOUNT_TOTAL_CODE));\n                        DiscountModel.promotionDiscountAmount(-onlineBaseAmount);\n                    }\n                });\n                self.quoteTotals.subscribe(function(totals){\n                    if(Helper.isUseOnline('checkout')){\n                        var shippingAmount = self.getOnlineValue(self.SHIPPING_TOTAL_CODE);\n                        shippingAmount = Helper.toBasePrice(shippingAmount);\n                        self.updateShippingAmount(shippingAmount);\n                        self.updateDiscountTotal();\n                        self.getDisplayTotals();\n                    }\n                });\n                self.extraTotals.subscribe(function(totals){\n                    self.getDisplayTotals();\n                });\n                self.totals.subscribe(function(totals){\n                    self.getDisplayTotals();\n                });\n                self.getDisplayTotals();\n            },\n            getGrandTotal: function(){\n                if(Helper.isUseOnline('checkout') && Helper.getOnlineConfig('quote_id') && Helper.isOnCheckoutPage()){\n                    var grandTotal = this.getOnlineValue(this.GRANDTOTAL_TOTAL_CODE);\n                }else {\n                    var grandTotal = this.positiveTotal();\n                    if (this.negativeTotal() < 0) {\n                        grandTotal += this.negativeTotal();\n                    }\n                }\n                return grandTotal;\n            },\n            getPositiveTotal: function(){\n                var self = this;\n                var grandTotal = 0;\n                ko.utils.arrayForEach(self.getTotals(), function (total) {\n                    if(total.code() !== self.GRANDTOTAL_TOTAL_CODE && total.value() && total.value() > 0) {\n                        if(total.code() == self.TAX_TOTAL_CODE){\n                            // if(!Helper.isEnableCrossBorderTrade()){\n                                grandTotal += (Helper.isShowTaxFinal())?parseFloat(total.finalValue()):parseFloat(total.value());\n                            // }\n                        }else{\n                            grandTotal += parseFloat(total.value());\n                        }\n                    }\n                });\n                if(Helper.isUseOnline('checkout')){\n                    ko.utils.arrayForEach(self.extraTotals(), function (total) {\n                        if(total.isPrice() && total.value() && total.value() > 0) {\n                            var value = parseFloat(total.value());\n                            grandTotal += parseFloat(value);\n                        }\n                    });\n                }\n                grandTotal = Helper.correctPrice(grandTotal);\n                return grandTotal;\n            },\n            getNegativeTotal: function(){\n                var self = this;\n                var grandTotal = 0;\n                ko.utils.arrayForEach(self.getTotals(), function (total) {\n                    if(total.code() !== self.GRANDTOTAL_TOTAL_CODE && total.value() && total.value() < 0) {\n                        grandTotal += parseFloat(total.value());\n                    }\n                });\n                if(Helper.isUseOnline('checkout')){\n                    ko.utils.arrayForEach(self.extraTotals(), function (total) {\n                        if(total.isPrice() && total.value() && total.value() < 0) {\n                            grandTotal += parseFloat(total.value());\n                        }\n                    });\n                }\n                grandTotal = Helper.correctPrice(grandTotal);\n                return grandTotal;\n            },\n            getBaseGrandTotal: function(){\n                if(Helper.isUseOnline('checkout') && Helper.getOnlineConfig('quote_id') && Helper.isOnCheckoutPage()){\n                    var grandTotal = this.getOnlineValue(this.GRANDTOTAL_TOTAL_CODE);\n                    grandTotal = Helper.toBasePrice(grandTotal);\n                }else {\n                    var grandTotal = this.basePositiveTotal();\n                    if (this.baseNegativeTotal() < 0) {\n                        grandTotal += this.baseNegativeTotal();\n                    }\n                }\n                return grandTotal;\n            },\n            getBasePositiveTotal: function(){\n                var self = this;\n                var grandTotal = 0;\n                ko.utils.arrayForEach(self.getTotals(), function (total) {\n                    if(total.code() !== self.GRANDTOTAL_TOTAL_CODE && total.baseValue() && total.baseValue() > 0) {\n                        if(total.code() == self.TAX_TOTAL_CODE){\n                            // if(!Helper.isEnableCrossBorderTrade()){\n                                grandTotal += (Helper.isShowTaxFinal())?parseFloat(total.baseFinalValue()):parseFloat(total.baseValue());\n                            // }\n                        }else{\n                            grandTotal += parseFloat(total.baseValue());\n                        }\n                    }\n                });\n                if(Helper.isUseOnline('checkout')){\n                    ko.utils.arrayForEach(self.extraTotals(), function (total) {\n                        if(total.isPrice() && total.value() && total.value() > 0) {\n                            var value = parseFloat(total.value());\n                            var baseValue = Helper.toBasePrice(value);\n                            grandTotal += parseFloat(baseValue);\n                        }\n                    });\n                }\n                grandTotal = Helper.correctPrice(grandTotal);\n                return grandTotal;\n            },\n            getBaseNegativeTotal: function(){\n                var self = this;\n                var grandTotal = 0;\n                ko.utils.arrayForEach(self.getTotals(), function (total) {\n                    if(total.code() !== self.GRANDTOTAL_TOTAL_CODE && total.baseValue() && total.baseValue() < 0) {\n                        grandTotal += parseFloat(total.baseValue());\n                    }\n                });\n                if(Helper.isUseOnline('checkout')){\n                    ko.utils.arrayForEach(self.extraTotals(), function (total) {\n                        if(total.isPrice() && total.value() && total.value() < 0) {\n                            var value = parseFloat(total.value());\n                            var baseValue = Helper.toBasePrice(value);\n                            grandTotal += parseFloat(baseValue);\n                        }\n                    });\n                }\n                grandTotal = Helper.correctPrice(grandTotal);\n                return grandTotal;\n            },\n            initTaxData: function () {\n                TaxCalculator().initData();\n            },\n            getButtons: function () {\n                return this.buttons();\n            },\n            initButtons: function () {\n                var self = this;\n                if (self.isNewButton(self.HOLD_BUTTON_CODE)) {\n                    var hold = {\n                        code: self.HOLD_BUTTON_CODE,\n                        cssClass: \"hold btn-cl-cfg-other\",\n                        title: self.HOLD_BUTTON_TITLE\n                    };\n                    self.buttons.push(hold);\n                }\n                if (self.isNewButton(self.CHECKOUT_BUTTON_CODE)) {\n                    var checkout = {\n                        code: self.CHECKOUT_BUTTON_CODE,\n                        cssClass: \"checkout btn-cl-cfg-active\",\n                        title: self.CHECKOUT_BUTTON_TITLE\n                    };\n                    self.buttons.push(checkout);\n                }\n            },\n            isNewButton: function (buttonCode) {\n                var button = ko.utils.arrayFirst(this.buttons(), function (button) {\n                    return button.code == buttonCode;\n                });\n                return (button) ? false : true;\n            },\n            getTotals: function () {\n                return CartData.totals();\n            },\n            addTotal: function (data) {\n                if (this.isNewTotal(data.code)) {\n                    var total = new Total();\n                    total.init(data);\n                    CartData.totals.push(total);\n                } else {\n                    this.setTotalData(data.code, \"value\", data.value);\n                    this.setTotalData(data.code, \"baseValue\", data.baseValue);\n                    this.setTotalData(data.code, \"finalValue\", data.finalValue);\n                    this.setTotalData(data.code, \"baseFinalValue\", data.baseFinalValue);\n                    if(data.includeTaxValue){\n                        this.setTotalData(data.code, \"includeTaxValue\", data.includeTaxValue);\n                    }\n                }\n            },\n            setTotalData: function (totalCode, key, value) {\n                var total = this.getTotal(totalCode);\n                if (total != false) {\n                    total.setData(key, value);\n                }\n            },\n            isNewTotal: function (totalCode) {\n                var total = ko.utils.arrayFirst(CartData.totals(), function (total) {\n                    return total.code() == totalCode;\n                });\n                return (total) ? false : true;\n            },\n            getTotalValue: function (totalCode) {\n                var self = this;\n                var value = \"\";\n                var total = this.getTotal(totalCode);\n                if (total !== false) {\n                    value = total.value();\n                }\n                return value;\n            },\n            getBaseTotalValue: function (totalCode) {\n                var self = this;\n                var value = \"\";\n                var total = this.getTotal(totalCode);\n                if (total !== false) {\n                    value = total.baseValue();\n                }\n                return value;\n            },\n            getTotalFinalValue: function (totalCode) {\n                var self = this;\n                var value = \"\";\n                var total = this.getTotal(totalCode);\n                if (total !== false) {\n                    value = total.finalValue();\n                }\n                return value;\n            },\n            getBaseTotalFinalValue: function (totalCode) {\n                var self = this;\n                var value = \"\";\n                var total = this.getTotal(totalCode);\n                if (total !== false) {\n                    value = total.baseFinalValue();\n                }\n                return value;\n            },\n            getTotal: function (totalCode) {\n                var totalFound = ko.utils.arrayFirst(CartData.totals(), function (total) {\n                    return total.code() == totalCode;\n                });\n                return (totalFound) ? totalFound : false;\n            },\n            updateTotal: function (totalCode, data) {\n                var totals = ko.utils.arrayMap(CartData.totals(), function (total) {\n                    if (total.code() == totalCode) {\n                        if (typeof data.isVisible != \"undefined\") {\n                            total.isVisible(data.isVisible);\n                        }\n                        if (typeof data.value != \"undefined\") {\n                            total.value(data.value);\n                        }\n                        if (typeof data.baseValue != \"undefined\") {\n                            total.baseValue(data.baseValue);\n                        }\n                        if (typeof data.finalValue != \"undefined\") {\n                            total.finalValue(data.finalValue);\n                        }\n                        if (typeof data.baseFinalValue != \"undefined\") {\n                            total.baseFinalValue(data.baseFinalValue);\n                        }\n                        if (typeof data.title != \"undefined\") {\n                            total.title(data.title);\n                        }\n                    }\n                    return total;\n                });\n                CartData.totals(totals);\n            },\n            initTotals: function () {\n                var self = this;\n                this.addTotal({\n                    code: self.SUBTOTAL_TOTAL_CODE,\n                    cssClass: \"subtotal\",\n                    title: Helper.__(\"Subtotal\"),\n                    value: this.subtotal(),\n                    baseValue: this.baseSubtotal(),\n                    includeTaxValue: this.subtotalIncludeTax(),\n                    displayIncludeTax: Helper.isCartDisplayIncludeTax('subtotal'),\n                    isVisible: true,\n                    removeAble: false\n                });\n                var canUseDiscount = false;\n                if(\n                    Staff.isHavePermission(\"Magestore_Webpos::all_discount\") ||\n                    Staff.isHavePermission(\"Magestore_Webpos::apply_coupon\") ||\n                    Staff.isHavePermission(\"Magestore_Webpos::apply_discount_per_cart\")\n                ){\n                    canUseDiscount = true;\n                }\n                this.addTotal({\n                    code: self.ADD_DISCOUNT_TOTAL_CODE,\n                    cssClass: \"add-discount\",\n                    title: Helper.__(\"Add Discount\"),\n                    value: \"\",\n                    isVisible: ((this.baseDiscountAmount() > 0 && canUseDiscount) || !canUseDiscount) ? false : true,\n                    removeAble: false\n                });\n                this.addTotal({\n                    code: self.DISCOUNT_TOTAL_CODE,\n                    cssClass: \"discount\",\n                    title: Helper.__(\"Discount\"),\n                    value: -this.discountAmount(),\n                    baseValue: -this.baseDiscountAmount(),\n                    isVisible: (this.baseDiscountAmount() > 0 && canUseDiscount) ? true : false,\n                    removeAble: ko.pureComputed(function(){\n                        var isOnline = Helper.isUseOnline('checkout');\n                        var baseAmount = -self.baseDiscountAmount();\n                        var onlineBaseAmount = Helper.toBasePrice(self.getOnlineValue(self.DISCOUNT_TOTAL_CODE));\n                        var removeAble = (!isOnline || (isOnline && (baseAmount != onlineBaseAmount)));\n                        return removeAble?true:false;\n                    }),\n                    actions: {\n                        remove: 'removeDiscount',\n                        collect: $.proxy(DiscountModel.collect, DiscountModel)\n                    }\n                });\n                this.addTotal({\n                    code: self.SHIPPING_TOTAL_CODE,\n                    cssClass: \"shipping\",\n                    title: Helper.__(\"Shipping\"),\n                    value: Helper.convertPrice(this.shippingFee()),\n                    baseValue: this.shippingFee(),\n                    isVisible: (this.shippingFee() > 0) ? true : false,\n                    removeAble: false\n                });\n                this.addTotal({\n                    code: self.TAX_TOTAL_CODE,\n                    cssClass: \"tax\",\n                    title: Helper.__(\"Tax\"),\n                    value: this.tax(),\n                    baseValue: this.baseTax(),\n                    finalValue: this.tax_before_discount(),\n                    baseFinalValue: this.base_tax_before_discount(),\n                    isVisible: true,\n                    removeAble: false\n                });\n                this.addTotal({\n                    code: self.GRANDTOTAL_TOTAL_CODE,\n                    cssClass: \"total\",\n                    title: Helper.__(\"Total\"),\n                    value: this.grandTotal(),\n                    baseValue: this.baseGrandTotal(),\n                    isVisible: true,\n                    removeAble: false\n                });\n            },\n            updateShippingAmount: function (shippingAmount) {\n                var hasShipping = (shippingAmount > 0 || this.shippingData()) ? true : false;\n                this.updateTotal(this.SHIPPING_TOTAL_CODE, {\n                    isVisible: hasShipping,\n                    value: Helper.convertPrice(shippingAmount),\n                    baseValue: shippingAmount\n                });\n                this.shippingFee(shippingAmount);\n            },\n            updateDiscountTotal: function () {\n                var canUseDiscount = false;\n                if(\n                    Staff.isHavePermission(\"Magestore_Webpos::all_discount\") ||\n                    Staff.isHavePermission(\"Magestore_Webpos::apply_coupon\") ||\n                    Staff.isHavePermission(\"Magestore_Webpos::apply_discount_per_cart\")\n                ){\n                    canUseDiscount = true;\n                }\n                var name = (DiscountModel.appliedPromotion() == true)?DiscountModel.couponCode():DiscountModel.cartDiscountName();\n                var hasDiscount = (this.baseDiscountAmount() > 0 && canUseDiscount) ? true : false;\n                var title = (name != \"\")?Helper.__(\"Discount \")+\"( \"+name+\" )\":Helper.__(\"Discount\");\n                this.updateTotal(this.DISCOUNT_TOTAL_CODE, {\n                    title: title,\n                    isVisible: hasDiscount,\n                    value: -this.discountAmount(),\n                    baseValue: -this.baseDiscountAmount()\n                });\n                this.updateTotal(this.ADD_DISCOUNT_TOTAL_CODE, {\n                    isVisible: (!hasDiscount && canUseDiscount)\n                });\n            },\n            collectShippingTotal: function () {\n                var shippingFee = 0;\n                var shippingBaseFee = 0;\n                var shippingData = this.shippingData();\n                if (shippingData && typeof shippingData.price != \"undefined\") {\n                    shippingFee = parseFloat(shippingData.price);\n                    if (typeof shippingData.price_type != \"undefined\") {\n                        shippingFee = (shippingData.price_type == \"I\") ? (shippingFee * Items.totalShipableItems()) : shippingFee;\n                    }\n                }\n                shippingFee = parseFloat(shippingFee);\n                shippingBaseFee = shippingFee;\n                var hasShipping = (shippingFee > 0 || this.shippingData()) ? true : false;\n\n                if(Helper.isUseOnline('checkout')){\n                    shippingBaseFee = Helper.toBasePrice(shippingBaseFee);\n                }else{\n                    shippingFee = Helper.convertPrice(shippingFee);\n                }\n                this.updateTotal(this.SHIPPING_TOTAL_CODE, {\n                    isVisible: hasShipping,\n                    value: shippingFee,\n                    baseValue: shippingBaseFee\n                });\n                this.shippingFee(shippingBaseFee);\n            },\n            collectTaxTotal: function () {\n                var tax = 0;\n                var baseTax = 0;\n                var finalValue = 0;\n                var baseFinalValue = 0;\n                if (CartData.items().length > 0) {\n                    $.each(CartData.items(), function () {\n                        tax += this.tax_amount();\n                        baseTax += this.base_tax_amount();\n                        finalValue += this.tax_amount_before_discount();\n                        baseFinalValue += this.base_tax_amount_before_discount();\n                    });\n                }\n                this.updateTotal(this.TAX_TOTAL_CODE, {\n                    isVisible: true,\n                    value: tax,\n                    baseValue: baseTax,\n                    finalValue: finalValue,\n                    baseFinalValue: baseFinalValue,\n                });\n            },\n            getDisplayTotals: function() {\n                var displayTotals = ko.observableArray();\n                var self = this;\n                self.initObservables();\n                self.initTotals();\n                /**\n                 * Add subtotal first\n                 */\n                displayTotals.push(self.getTotal(self.SUBTOTAL_TOTAL_CODE));\n\n                /**\n                 * Add extra totals from online quote\n                 */\n                $.each(self.extraTotals(), function () {\n                    displayTotals.push(this);\n                });\n\n                /**\n                 * Add another totals\n                 */\n                $.each(this.getTotals(), function () {\n                    if(this.code() == self.DISCOUNT_TOTAL_CODE){\n                        if(Helper.isUseOnline('checkout') ){\n                            var title = self.getOnlineValue(this.code(), 'title');\n                            if(title.length > 50){\n                                title = title.substring(0, 50)+'...';\n                            }\n                            this.title(title);\n                        }else{\n                            this.title(Helper.__(\"Discount\"));\n                        }\n                    }\n                    if(\n                        this.code() !== self.GRANDTOTAL_TOTAL_CODE\n                        && this.code() !== self.TAX_TOTAL_CODE\n                        && this.code() !== self.SUBTOTAL_TOTAL_CODE\n                    ) {\n                        displayTotals.push(this);\n                    }\n                });\n                displayTotals.push(this.getTotal(self.TAX_TOTAL_CODE));\n                displayTotals.push(this.getTotal(self.GRANDTOTAL_TOTAL_CODE));\n                return displayTotals;\n            },\n            getGrandTotalWithoutCustomTotal: function(totalCode) {\n                var grandTotal = this.getTotalValue('grand_total');\n                $.each(this.getTotals(), function () {\n                    if(this.code() == totalCode) {\n                        grandTotal -= this.value();\n                    }\n                });\n                return grandTotal;\n            },\n            getAdditionalInfo: function () {\n                return this.additionalInfo();\n            },\n            addAdditionalInfo: function (data) {\n                var infoFound = ko.utils.arrayFirst(this.additionalInfo(), function (info) {\n                    return info.code() == data.code;\n                });\n\n                if (infoFound) {\n                    infoFound.title(data.title);\n                    infoFound.value(data.value);\n                    infoFound.visible(data.visible);\n                } else {\n                    var info = {};\n                    info.code = ko.observable(data.code);\n                    info.title = ko.observable(data.title);\n                    info.value = ko.observable(data.value);\n                    info.visible = ko.observable(data.visible);\n                    this.additionalInfo().push(info);\n                }\n            },\n            getMaxDiscountAbleAmount: function(){\n                var self = this;\n                return (CartData.apply_tax_after_discount == true)?(self.grandTotalBeforeDiscount() - self.baseTax()):self.grandTotalBeforeDiscount();\n            },\n            hasSpecialDiscount: function(){\n                var self = this;\n                var hasSpecialDiscount = false;\n                $.each(this.getTotals(), function () {\n                    if($.inArray(this.code(),self.BASE_TOTALS) < 0 && this.value() < 0) {\n                        hasSpecialDiscount = true;\n                    }\n                });\n                if(Helper.isUseOnline('checkout')){\n                    ko.utils.arrayForEach(self.extraTotals(), function (total) {\n                        if(total.isPrice() && total.value() && total.value() < 0) {\n                            hasSpecialDiscount = true;\n                        }\n                    });\n                }\n                return hasSpecialDiscount;\n            },\n            /**\n             * Use totals from online quote\n             * @param totals\n             */\n            updateTotalsFromQuote: function(totals){\n                if(totals && totals.length > 0){\n                    var self = this;\n                    var extraTotals = [];\n                    var quoteTotals = [];\n                    $.each(totals, function(index, total){\n                        if($.inArray(total.code, self.BASE_TOTALS) < 0){\n                            extraTotals.push(self.processExtraTotals(total));\n                        }else{\n                            total.value = parseFloat(total.value);\n                            quoteTotals.push(total);\n                        }\n                    });\n                    self.quoteTotals(quoteTotals);\n                    self.extraTotals(extraTotals);\n                }\n            },\n            /**\n             * Get online total value\n             * @param code\n             * @param key\n             * @returns {number}\n             */\n            getOnlineValue: function(code, key){\n                var self = this;\n                var totalValue = (key)?'':0;\n                if(self.quoteTotals().length > 0 && code && Helper.isUseOnline('checkout')){\n                    var totalValid = ko.utils.arrayFirst(self.quoteTotals(), function(total){\n                        return total.code == code;\n                    });\n                    if(totalValid){\n                        totalValue = (key)?totalValid[key]:totalValid.value;\n                    }\n                }\n                if(self.extraTotals().length > 0 && code && Helper.isUseOnline('checkout')){\n                    var totalValid = ko.utils.arrayFirst(self.extraTotals(), function(total){\n                        return total.code() == code;\n                    });\n                    if(totalValid){\n                        totalValue = (key)?totalValid[key]():totalValid.value();\n                    }\n                }\n                return totalValue;\n            },\n            /**\n             * Init online total to offline model\n             * @param data\n             * @returns {*}\n             */\n            processExtraTotals: function(data){\n                var self = this;\n                var total = new Total();\n                var nonPriceTotals = ['rewardpoints_label'];\n                var isPrice = ($.inArray(data.code, nonPriceTotals) < 0)?true:false;\n                total.init({\n                    code: data.code,\n                    title: data.title,\n                    value: (Helper.isUseOnline('checkout'))?parseFloat(data.value):parseFloat(data.value),\n                    baseValue: (Helper.isUseOnline('checkout'))?Helper.toBasePrice(parseFloat(data.value)):parseFloat(data.value),\n                    isPrice: isPrice\n                });\n                if(data.code == 'rewardpoints_label'){\n                    total.setData('formated', data.value + ' ' + Helper.__('Point(s)'));\n                }\n                return total;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/cart/totals-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/cart/totals',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/cart/totals';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/cart/discountpopup.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/cart/data/cart'\n    ],\n    function ($,ko, Helper, CartData) {\n        \"use strict\";\n\n        return {\n            loading: ko.observable(),\n            cartDiscountName: ko.observable(),\n            cartDiscountAmount: ko.observable(0),\n            cartBaseDiscountAmount: ko.observable(0),\n            cartDiscountPercent: ko.observable(),\n            cartDiscountType: ko.observable(),\n            promotionDiscountAmount: ko.observable(),\n            couponCode: ko.observable(),\n            appliedRuleIds: ko.observable(),\n            maximumPercent: ko.observable(window.webposConfig.maximum_discount_percent),\n            appliedDiscount: ko.observable(false),\n            appliedPromotion: ko.observable(false),\n            applyPromotion: ko.observable('0'),\n            modifierCanUseCoupon: ko.observable(true),\n            TOTAL_CODE: \"discount\",\n            STAGES: {\n                DISCOUNT:\"discount\",\n                PROMOTION:\"promotion\"\n            },\n            DISCOUNT_TYPES: {\n                FIXED:\"fixed\",\n                PERCENT:\"percent\"\n            },\n            calculateAmount: function(grandTotal){\n                var self = this;\n                var discountAmount = 0;\n                grandTotal = (grandTotal)?grandTotal:0;\n                if (self.appliedDiscount() == true || self.appliedPromotion() == true) {\n                    discountAmount = self.cartDiscountAmount();\n                    var maximumPercent = parseFloat(self.maximumPercent());\n                    if (self.cartDiscountType() == self.DISCOUNT_TYPES.FIXED) {\n                        var percent = discountAmount / grandTotal * 100;\n                        if (percent > maximumPercent) {\n                            discountAmount = grandTotal * maximumPercent / 100;\n                        } else {\n                            discountAmount = discountAmount;\n                        }\n                    } else {\n                        if (discountAmount > maximumPercent) {\n                            discountAmount = parseFloat(maximumPercent);\n                        }\n                        discountAmount = discountAmount * grandTotal / 100;\n                    }\n                }\n                return Helper.correctPrice(discountAmount);\n            },\n            calculateBaseAmount: function(baseGrandTotal){\n                var self = this;\n                var discountAmount = 0;\n                baseGrandTotal = (baseGrandTotal)?baseGrandTotal:0;\n                if (self.appliedDiscount() == true || self.appliedPromotion() == true) {\n                    discountAmount = self.cartBaseDiscountAmount();\n                    var maximumPercent = parseFloat(self.maximumPercent());\n                    if (self.cartDiscountType() == self.DISCOUNT_TYPES.FIXED) {\n                        var percent = discountAmount / baseGrandTotal * 100;\n                        if (percent > maximumPercent) {\n                            discountAmount = baseGrandTotal * maximumPercent / 100;\n                        } else {\n                            discountAmount = discountAmount;\n                        }\n                    } else {\n                        if (discountAmount > maximumPercent) {\n                            discountAmount = parseFloat(maximumPercent);\n                        }\n                        discountAmount = discountAmount * baseGrandTotal / 100;\n                    }\n                }\n                return Helper.correctPrice(discountAmount);\n            },\n\n            /* Start: Cart discount per item */\n            reset: function(){\n                var self = this;\n                ko.utils.arrayForEach(CartData.items(), function (item) {\n                    item.item_discount_amount(0);\n                    item.item_base_discount_amount(0);\n                });\n                self.cartDiscountType(self.DISCOUNT_TYPES.FIXED);\n                self.cartDiscountAmount(0);\n                self.cartBaseDiscountAmount(0);\n                self.cartDiscountName(\"\");\n                self.cartDiscountPercent(0);\n                self.promotionDiscountAmount(0);\n                self.couponCode(\"\");\n                self.appliedRuleIds(\"\");\n                self.appliedDiscount(false);\n                self.appliedPromotion(false);\n            },\n            process: function(cartBaseTotalAmount){\n                var self = this;\n                var maxAmount = CartData.getMaxDiscountAmount();\n                var itemsAmountTotal = (cartBaseTotalAmount > maxAmount)?maxAmount:cartBaseTotalAmount;\n                var amountApplied = 0;\n                ko.utils.arrayForEach(CartData.items(), function (item, index) {\n                    var maxAmountItem = CartData.getMaxItemDiscountAmount(item.item_id());\n                    var discountPercent = maxAmountItem/maxAmount;\n                    var item_base_amount = (index == CartData.items().length - 1)?(itemsAmountTotal - amountApplied):itemsAmountTotal*discountPercent;\n                    amountApplied += item_base_amount;\n                    var item_amount = Helper.convertPrice(item_base_amount);\n                    item.item_base_discount_amount(item_base_amount);\n                    item.item_discount_amount(item_amount);\n                });\n                //Helper.dispatchEvent('recollect_totals', {code:this.TOTAL_CODE});\n            },\n            collect: function(){\n\n            },\n            /* End: Cart discount per item */\n\n            /**\n             * Get params to apply discount online api\n             * @returns {{cart_discount_name: *, cart_discount_type: *, cart_discount_value: *}}\n             */\n            getApplyOnlineParams: function(){\n                var self = this;\n                var params = {\n                    webpos_cart_discount_name: self.cartDiscountName(),\n                    webpos_cart_discount_type: (self.cartDiscountType() == self.DISCOUNT_TYPES.PERCENT)?'%':'$',\n                    webpos_cart_discount_value: (self.cartDiscountType() == self.DISCOUNT_TYPES.PERCENT)?self.cartDiscountPercent():self.cartDiscountAmount()\n                };\n                return params;\n            }\n        };\n    }\n);","Magestore_Webpos/js/model/checkout/cart/customsale.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/checkout/taxclass',\n        'mage/translate',\n        'Magestore_Webpos/js/model/checkout/cart',\n        'Magestore_Webpos/js/helper/price',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function ($,ko, modelAbstract, TaxClass, Translate, CartModel, PriceHelper, Helper) {\n        \"use strict\";\n        return modelAbstract.extend({\n            productName: ko.observable(),\n            productPrice: ko.observable(),\n            taxClassId: ko.observable(Helper.getBrowserConfig('webpos/general/custom_sale_default_tax_class')),\n            shipAble: ko.observable(false),\n            taxClasses: ko.observableArray(),\n            initialize: function () {\n                this._super();\n\t\t\t\tvar self = this;\n\t\t\t\tself.taxClassId.subscribe(function(value){\n\t\t\t\t\tif(typeof value == 'undefined' || (value === '')){\n\t\t\t\t\t\tself.taxClassId(Helper.getBrowserConfig('webpos/general/custom_sale_default_tax_class'));\n\t\t\t\t\t}\n\t\t\t\t});\n            },\n            resetData: function(){\n                this.productName(\"\");\n                this.productPrice(0);\n                this.taxClassId(Helper.getBrowserConfig('webpos/general/custom_sale_default_tax_class'));\n            },\n            addToCart: function(){\n                var price = PriceHelper.toNumber(this.productPrice());\n                var data = {\n                    product_id:\"customsale\",\n                    qty:1,\n                    product_name:this.productName()?this.productName():Translate(\"Custom Product\"),\n                    unit_price:PriceHelper.toBasePrice(price),\n                    tax_class_id:this.taxClassId(),\n                    is_virtual:this.shipAble()?false:true\n                };\n                CartModel.addProduct(data);\n                this.resetData();\n            },\n            initTaxClasses: function(){\n                var self = this;\n                self.taxClasses([]);\n                var deferred = $.Deferred();\n                TaxClass().getProductTaxClasses(deferred);\n                deferred.done(function(response){\n                    if(response.items && response.items.length > 0){\n                        var taxClasses = [{\n                            tax_class_id: '',\n                            tax_class_name: ''\n                        },{\n                            tax_class_id: 0,\n                            tax_class_name: Translate(\"None\")   \n                        }];\n                        $.each(response.items, function(){\n                            var taxclass = {\n                                tax_class_id: this.class_id,\n                                tax_class_name: this.class_name\n                            };\n                            taxClasses.push(taxclass);\n                        });\n                        self.taxClasses(taxClasses);\n                    }\n                });\n\t\t\t\tself.resetData();\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/cart/items.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/checkout/cart/items/item',\n        'Magestore_Webpos/js/helper/general',\n        'Magestore_Webpos/js/model/checkout/cart/data/cart'\n    ],\n    function ($, ko, Item, Helper, CartData) {\n        \"use strict\";\n        var Items = {\n            apply_tax_after_discount: CartData.apply_tax_after_discount,\n            items: CartData.items,\n            isEmpty: ko.pureComputed(function(){\n                return (CartData.items().length > 0)?false:true;\n            }),\n            initialize: function () {\n                var self = this;\n                Helper.observerEvent('load_items_online_after', function(event, data){\n                    if(data && data.items){\n                        self.updateItemsFromQuote(data.items);\n                    }\n                });\n                return self;\n            },\n            getItems: function(){\n                return this.items();\n            },\n            getAddedItem: function(data){\n                var isNew = false;\n                if(typeof data.item_id != \"undefined\"){\n                    var foundItem = ko.utils.arrayFirst(this.items(), function(item) {\n                        return (item.item_id() == data.item_id);\n                    });\n                    if(foundItem){\n                        return foundItem;\n                    }\n                }else{\n                    if(typeof data.hasOption !== \"undefined\"){\n                        var foundItem = ko.utils.arrayFirst(this.items(), function(item) {\n                            return (\n                                    (data.hasOption === false && item.product_id() == data.product_id) || \n                                    (data.hasOption === true && item.product_id() == data.product_id && item.options_label() == data.options_label )\n                                   );\n                        });\n                        if(foundItem){\n                            return foundItem;\n                        }\n                    }\n                }\n                return isNew;\n            },\n            addItem: function(data){\n                var item = this.getAddedItem(data);\n                if(item === false){\n                    data.item_id = (data.item_id)?data.item_id:$.now();\n                    data.qty = (data.qty)?data.qty:1;\n                    var item = new Item();\n                    item.init(data);\n                    this.items.push(item);\n                }else{\n                    var qty = item.qty();\n                    qty += data.qty;\n                    this.setItemData(item.item_id(), \"qty\", qty);\n                }\n            },\n            getItem: function(itemId){\n                var item = false;\n                var foundItem = ko.utils.arrayFirst(this.items(), function(item) {\n                    return (item.item_id() == itemId);\n                });\n                if(foundItem){\n                    item = foundItem;\n                }\n                return item;\n            },\n            getItemData: function(itemId, key){\n                var item = this.getItem(itemId);\n                if(item != false && typeof item[key] != \"undefined\"){\n                    return item[key]();\n                }\n                return \"\";\n            },\n            setItemData: function(itemId, key, value){\n                var item = this.getItem(itemId);\n                if(item != false){\n                    item.setData(key,value);\n                }\n            },\n            removeItem: function(itemId){\n                this.items.remove(function (item) {\n                    return item.item_id() == itemId; \n                });\n            },\n            totalItems: function(){\n                var total = 0;\n                if(this.items().length > 0){\n                    ko.utils.arrayForEach(this.items(), function(item) {\n                        total += item.qty();\n                    });\n                }\n                return total;\n            },\n            totalShipableItems: function(){\n                var total = 0;\n                if(this.items().length > 0){\n                    var shipItems = ko.utils.arrayFilter(this.items(), function(item) {\n                        return (item.is_virtual() == false);\n                    });\n                    if(shipItems.length > 0){\n                        ko.utils.arrayForEach(shipItems, function(item) {\n                            total += item.qty();\n                        });\n                    }\n                }\n                return total;\n            },\n            updateItemsFromQuote: function(quoteItems){\n                if(quoteItems){\n                    var self = this;\n                    $.each(quoteItems, function(index, itemData){\n                        if(itemData.offline_item_id){\n                            var itemId = itemData.item_id;\n                            // var unitPrice = (Helper.isProductPriceIncludesTax())?itemData.base_price_incl_tax:itemData.base_price;\n                            var unitPrice = (itemData.base_calculation_price)?itemData.base_calculation_price:((Helper.isProductPriceIncludesTax())?itemData.base_calculation_price:itemData.base_price);\n                            //unitPrice = (itemData.base_original_price)?parseFloat(itemData.base_original_price):unitPrice;\n                            // var unitPrice = itemData.base_price;\n                            var elementItemId = itemData.offline_item_id;\n                            var data = {};\n                            data.item_id = itemId;\n                            data.unit_price = parseFloat(unitPrice);\n                            data.item_discount_amount = itemData.discount_amount;\n                            data.item_base_discount_amount = itemData.base_discount_amount;\n                            data.product_name = itemData.name;\n                            data.qty = parseFloat(itemData.qty);\n                            data.online_base_tax_amount = parseFloat(itemData.base_tax_amount);\n                            data.online_tax_amount = parseFloat(itemData.tax_amount);\n                            data.tax_class_id = parseFloat(itemData.tax_class_id);\n                            data.tax_rates = [parseFloat(itemData.tax_percent)];\n                            data.is_virtual = itemData.is_virtual;\n                            data.has_error = itemData.has_error;\n                            data.qty_increment = parseFloat(itemData.qty_increment);\n                            data.maximum_qty = parseFloat(itemData.maximum_qty);\n                            data.minimum_qty = parseFloat(itemData.minimum_qty);\n                            data.saved_online_item = true;\n                            if(itemData.product_type !== \"customsale\") {\n                                data.image_url = itemData.image_url;\n                            }\n                            var added = self.getAddedItem({item_id: itemData.offline_item_id}) || self.getAddedItem({item_id: itemId});\n                            if(added === false){\n                                data.item_id = itemId;\n                                self.addItem(data);\n                            }else{\n                                data.item_id = itemId;\n                                self.setItemData(elementItemId, data);\n                                self.setItemData(itemId, data);\n                            }\n                        }\n                    });\n                }\n            }\n        };\n        return Items.initialize();\n    }\n);","Magestore_Webpos/js/model/checkout/cart/editpopup-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/cart/editpopup',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/cart/editpopup';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/cart/discountpopup-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/cart/discountpopup',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/cart/discountpopup';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/cart/editpopup.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/checkout/cart'\n    ],\n    function ($,ko, modelAbstract, CartModel) {\n        \"use strict\";\n        return modelAbstract.extend({\n            itemId: ko.observable(),\n            initialize: function () {\n                this._super();\n            },\n            setItem: function(item){\n                this.itemId(item.item_id());\n            },\n            getItemId: function(){\n                return this.itemId();\n            },\n            getEditingItemId: function(){\n                return this.getItemId();\n            },\n            getData: function(key){\n                return CartModel.getItemData(this.getItemId(), key);\n            },\n            getCartItem: function() {\n                return CartModel.getItem(this.getItemId());\n            },\n            setData: function(key,value){\n                CartModel.updateItem(this.getItemId(), key, value);\n                if(key == 'qty'){\n                    CartModel.collectTierPrice();\n                }\n            },\n            showPopup: function(event){\n                var ptop = event.pageY - 30;\n                var heightvp = $(window).height();\n                var subheight = heightvp - ptop;\n                if (subheight > 442) {\n                    $(\"#popup-edit-product\").css({display: \"block\", position: \"absolute\", top: ptop + 'px'});\n                    $(\"#popup-edit-product .arrow\").css({top: '24px'});\n                } else {\n                    var disheight = 442 - subheight;\n                    var lasttop = ptop - disheight;\n                    var aftertop = 24 + disheight;\n                    $(\"#popup-edit-product\").css({display: \"block\", position: \"absolute\", top: lasttop + 'px'});\n                    $(\"#popup-edit-product .arrow\").css({top: aftertop + 'px'});\n                }\n                if($('#editpopup_product_qty').length > 0){\n                    $('#editpopup_product_qty').focus();\n                }\n                $(\".wrap-backover\").show();\n                $('.notification-bell').hide();\n                $('#c-button--push-left').hide();\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/cart/customsale-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/cart/customsale',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/cart/customsale';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/checkout/cart/totals/total.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/helper/price'\n    ],\n    function ($,ko, modelAbstract, PriceHelper) {\n        \"use strict\";\n        return modelAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.itemFields = [\n                    'isVisible','cssClass','title','value','baseValue','finalValue','baseFinalValue','code','valueFormated'\n                ];\n                this.initFields = [\n                    'isVisible', 'cssClass', 'title', 'value','baseValue','finalValue','baseFinalValue','code', 'displayIncludeTax', 'includeTaxValue', 'removeAble', 'isPrice', 'formated'\n                ];\n            },\n            init: function(data){\n                var self = this;\n                self.isVisible = (typeof data.isVisible != \"undefined\")?ko.observable(data.isVisible):ko.observable(true);\n                self.cssClass = (typeof data.cssClass != \"undefined\")?ko.observable(data.cssClass):ko.observable();\n                self.title = (typeof data.title != \"undefined\")?ko.observable(data.title):ko.observable();\n                self.value = (typeof data.value != \"undefined\")?ko.observable(data.value):ko.observable();\n                self.finalValue = (typeof data.finalValue != \"undefined\")?ko.observable(data.finalValue):ko.observable();\n                self.baseFinalValue = (typeof data.baseFinalValue != \"undefined\")?ko.observable(data.baseFinalValue):ko.observable();\n                self.baseValue = (typeof data.baseValue != \"undefined\")?ko.observable(data.baseValue):ko.observable();\n                self.code = (typeof data.code != \"undefined\")?ko.observable(data.code):ko.observable();\n                self.includeTaxValue = (typeof data.includeTaxValue != \"undefined\")?ko.observable(data.includeTaxValue):ko.observable();\n                self.displayIncludeTax = (typeof data.displayIncludeTax != \"undefined\")?ko.observable(data.displayIncludeTax):ko.observable(false);\n                self.removeAble = (typeof data.removeAble != \"undefined\")?((typeof data.removeAble == 'function')?data.removeAble:ko.observable(data.removeAble)):ko.observable(false);\n                self.isPrice = (typeof data.isPrice != \"undefined\")?ko.observable(data.isPrice):ko.observable(true);\n                self.formated = (typeof data.formated != \"undefined\")?ko.observable(data.formated):ko.observable(false);\n                self.actions = (typeof data.actions != \"undefined\")?ko.observable(data.actions):ko.observable({\n                    remove:function(){},\n                    collect:function(){}\n                });\n                self.value.subscribe(function(value){\n                    var newvalue = PriceHelper.correctPrice(value);\n                    if(newvalue != value){\n                        self.value(newvalue);\n                    }\n                });\n                self.valueFormated = ko.pureComputed(function(){\n                    var value = self.value();\n                    if(self.displayIncludeTax() == true && value > 0){\n                        value = self.includeTaxValue();\n                    }\n                    return (!self.isPrice())?((self.formated() !== false)?self.formated():value):PriceHelper.formatPrice(value);\n                });\n            },\n            setData: function(key,value){\n                if(typeof this[key] != \"undefined\"){\n                    this[key](value); \n                }\n            },\n            getData: function(key){\n                var self = this;\n                var data = {};\n                if(typeof key != \"undefined\"){\n                    data = self[this]();\n                }else{\n                    var data = {};\n                    $.each(this.initFields, function(){\n                        data[this] = self[this]();\n                    });\n                }\n                return data;\n            }\n        });\n    }\n);","Magestore_Webpos/js/model/checkout/cart/items/item.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/checkout/cart/discountpopup',\n        'Magestore_Webpos/js/helper/general'\n    ],\n    function ($, ko, modelAbstract, DiscountModel, Helper) {\n        \"use strict\";\n        return modelAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.CUSTOM_PRICE_CODE = \"price\";\n                this.CUSTOM_DISCOUNT_CODE = \"discount\";\n                this.FIXED_AMOUNT_CODE = \"$\";\n                this.PERCENTAGE_CODE = \"%\";\n                this.APPLY_TAX_ON_CUSTOMPRICE = \"0\";\n                this.APPLY_TAX_ON_ORIGINALPRICE = \"1\";\n                this.itemFields = [\n                    'product_id', 'product_name', 'item_id', 'tier_price', 'maximum_qty', 'minimum_qty', 'qty_increment',\n                    'qty', 'unit_price', 'has_custom_price', 'custom_type', 'custom_price_type', 'custom_price_amount', 'image_url',\n                    'super_attribute', 'super_group', 'options', 'bundle_option', 'bundle_option_qty', 'is_out_of_stock', 'row_total',\n                    'tax_class_id', 'is_virtual', 'qty_to_ship', 'tax_amount', 'tax_amount_before_discount', 'tax_rates', 'tax_origin_rates', 'item_base_discount_amount',\n                    'item_discount_amount', 'item_base_credit_amount', 'item_credit_amount', 'applied_catalog_rules', 'base_original_price', 'is_salable',\n                    'online_tax_amount', 'online_base_tax_amount', 'has_error', 'saved_online_item', 'is_qty_decimal'\n                ];\n\n                /* S: Define the init fields - use to get data for item object */\n                this.initFields = [\n                    'product_id', 'product_name', 'item_id', 'tier_price', 'maximum_qty', 'minimum_qty', 'qty_increment',\n                    'qty', 'unit_price', 'has_custom_price', 'custom_type', 'custom_price_type', 'custom_price_amount', 'image_url',\n                    'super_attribute', 'super_group', 'options', 'bundle_option', 'bundle_option_qty', 'is_out_of_stock',\n                    'tax_class_id', 'is_virtual', 'qty_to_ship', 'tax_rates', 'tax_origin_rates', 'sku', 'product_type', 'child_id',\n                    'options_label', 'stocks', 'stock', 'id', 'type_id', 'bundle_childs_qty', 'item_base_discount_amount',\n                    'item_discount_amount', 'applied_catalog_rules', 'base_original_price', 'is_salable',\n                    'online_tax_amount', 'online_base_tax_amount', 'has_error', 'saved_online_item', 'is_qty_decimal'\n                ];\n                if (Helper.isStoreCreditEnable()) {\n                    this.initFields.push('item_credit_amount');\n                    this.initFields.push('item_base_credit_amount');\n                }\n                if (Helper.isRewardPointsEnable()) {\n                    this.initFields.push('item_point_earn');\n                    this.initFields.push('item_point_spent');\n                    this.initFields.push('item_point_discount');\n                    this.initFields.push('item_base_point_discount');\n                }\n                if (Helper.isGiftCardEnable()) {\n                    this.initFields.push('item_giftcard_discount');\n                    this.initFields.push('item_base_giftcard_discount');\n                }\n                /* E: Define the init fields */\n            },\n            init: function (data) {\n                var self = this;\n                self.id = (typeof data.id != \"undefined\") ? ko.observable(data.id) : ko.observable();\n                self.product_id = (typeof data.product_id != \"undefined\") ? ko.observable(data.product_id) : ko.observable();\n                self.product_name = (typeof data.product_name != \"undefined\") ? ko.observable(data.product_name) : ko.observable();\n                self.type_id = (typeof data.type_id != \"undefined\") ? ko.observable(data.type_id) : ko.observable();\n                self.is_salable = (typeof data.is_salable != \"undefined\") ? ko.observable(data.is_salable) : ko.observable();\n\n                self.item_id = (typeof data.item_id != \"undefined\") ? ko.observable(data.item_id) : ko.observable();\n                self.applied_catalog_rules = (typeof data.applied_catalog_rules != \"undefined\") ? ko.observable(data.applied_catalog_rules) : ko.observable(false);\n                self.base_original_price = (typeof data.base_original_price != \"undefined\") ? ko.observable(data.base_original_price) : ko.observable();\n                self.tier_prices = (typeof data.tier_prices != \"undefined\") ? ko.observable(data.tier_prices) : ko.observable();\n                self.maximum_qty = (typeof data.maximum_qty != \"undefined\") ? ko.observable(data.maximum_qty) : ko.observable();\n                self.minimum_qty = (typeof data.minimum_qty != \"undefined\") ? ko.observable(data.minimum_qty) : ko.observable();\n                self.qty_increment = (typeof data.qty_increment != \"undefined\") ? ko.observable(data.qty_increment) : ko.observable(1);\n                self.is_qty_decimal = (typeof data.is_qty_decimal != \"undefined\") ? ko.observable(data.is_qty_decimal) : ko.observable(false);\n                self.qty = (typeof data.qty != \"undefined\") ? ko.observable(data.qty) : ko.observable();\n                self.qty_to_ship = (typeof data.qty_to_ship != \"undefined\") ? ko.observable(data.qty_to_ship) : ko.observable(0);\n                self.unit_price = (typeof data.unit_price != \"undefined\") ? ko.observable(data.unit_price) : ko.observable(0);\n                self.has_custom_price = (typeof data.has_custom_price != \"undefined\") ? ko.observable(data.has_custom_price) : ko.observable(false);\n                self.custom_type = (typeof data.custom_type != \"undefined\") ? ko.observable(data.custom_type) : ko.observable();\n                self.custom_price_type = (typeof data.custom_price_type != \"undefined\") ? ko.observable(data.custom_price_type) : ko.observable();\n                self.custom_price_amount = (typeof data.custom_price_amount != \"undefined\") ? ko.observable(data.custom_price_amount) : ko.observable();\n                self.image_url = (typeof data.image_url != \"undefined\") ? ko.observable(data.image_url) : ko.observable();\n                self.super_attribute = (typeof data.super_attribute != \"undefined\") ? ko.observable(data.super_attribute) : ko.observable();\n                self.super_group = (typeof data.super_group != \"undefined\") ? ko.observable(data.super_group) : ko.observable();\n                self.options = (typeof data.options != \"undefined\") ? ko.observable(data.options) : ko.observable();\n                self.bundle_option = (typeof data.bundle_option != \"undefined\") ? ko.observable(data.bundle_option) : ko.observable();\n                self.bundle_option_qty = (typeof data.bundle_option_qty != \"undefined\") ? ko.observable(data.bundle_option_qty) : ko.observable();\n                self.is_out_of_stock = (typeof data.is_out_of_stock != \"undefined\") ? ko.observable(data.is_out_of_stock) : ko.observable(false);\n                self.tax_class_id = (typeof data.tax_class_id != \"undefined\") ? ko.observable(data.tax_class_id) : ko.observable();\n                self.is_virtual = (typeof data.is_virtual != \"undefined\") ? ko.observable(data.is_virtual) : ko.observable(false);\n                self.tax_rates = (typeof data.tax_rates != \"undefined\") ? ko.observable(data.tax_rates) : ko.observable([]);\n                self.tax_origin_rates = (typeof data.tax_origin_rates != \"undefined\") ? ko.observable(data.tax_origin_rates) : ko.observable([]);\n\n                self.sku = (typeof data.sku != \"undefined\") ? ko.observable(data.sku) : ko.observable();\n                self.product_type = (typeof data.product_type != \"undefined\") ? ko.observable(data.product_type) : ko.observable();\n                self.child_id = (typeof data.child_id != \"undefined\") ? ko.observable(data.child_id) : ko.observable();\n                self.options_label = (typeof data.options_label != \"undefined\") ? ko.observable(data.options_label) : ko.observable();\n                self.tier_price = (typeof data.tier_price != \"undefined\") ? ko.observable(data.tier_price) : ko.observable();\n                self.stock = (typeof data.stock != \"undefined\") ? ko.observable(data.stock) : ko.observable();\n                self.stocks = (typeof data.stocks != \"undefined\") ? ko.observable(data.stocks) : ko.observable();\n                self.bundle_childs_qty = (typeof data.bundle_childs_qty != \"undefined\") ? ko.observable(data.bundle_childs_qty) : ko.observable();\n                self.item_discount_amount = (typeof data.item_discount_amount != \"undefined\") ? ko.observable(data.item_discount_amount) : ko.observable();\n                self.item_base_discount_amount = (typeof data.item_base_discount_amount != \"undefined\") ? ko.observable(data.item_base_discount_amount) : ko.observable();\n\n                self.online_tax_amount = (typeof data.online_tax_amount != \"undefined\") ? ko.observable(data.online_tax_amount) : ko.observable();\n                self.online_base_tax_amount = (typeof data.online_base_tax_amount != \"undefined\") ? ko.observable(data.online_base_tax_amount) : ko.observable();\n                self.has_error = (typeof data.has_error != \"undefined\") ? ko.observable(data.has_error) : ko.observable(false);\n                self.saved_online_item = (typeof data.saved_online_item != \"undefined\") ? ko.observable(data.saved_online_item) : ko.observable(false);\n\n                /* S: Integration custom discount per item - define variale to store the data */\n                if (Helper.isStoreCreditEnable()) {\n                    self.credit_price_amount = (typeof data.credit_price_amount != \"undefined\") ? ko.observable(data.credit_price_amount) : ko.observable();\n                    self.amount = (typeof data.amount != \"undefined\") ? ko.observable(data.amount) : ko.observable();\n                    self.item_credit_amount = (typeof data.item_credit_amount != \"undefined\") ? ko.observable(data.item_credit_amount) : ko.observable();\n                    self.item_base_credit_amount = (typeof data.item_base_credit_amount != \"undefined\") ? ko.observable(data.item_base_credit_amount) : ko.observable();\n                }\n                if (Helper.isRewardPointsEnable()) {\n                    self.item_point_earn = (typeof data.item_point_earn != \"undefined\") ? ko.observable(data.item_point_earn) : ko.observable();\n                    self.item_point_spent = (typeof data.item_point_spent != \"undefined\") ? ko.observable(data.item_point_spent) : ko.observable();\n                    self.item_point_discount = (typeof data.item_point_discount != \"undefined\") ? ko.observable(data.item_point_discount) : ko.observable();\n                    self.item_base_point_discount = (typeof data.item_base_point_discount != \"undefined\") ? ko.observable(data.item_base_point_discount) : ko.observable();\n                }\n                if (Helper.isGiftCardEnable()) {\n                    self.item_giftcard_discount = (typeof data.item_giftcard_discount != \"undefined\") ? ko.observable(data.item_giftcard_discount) : ko.observable();\n                    self.item_base_giftcard_discount = (typeof data.item_base_giftcard_discount != \"undefined\") ? ko.observable(data.item_base_giftcard_discount) : ko.observable();\n                }\n                /* E: Integration custom discount per item */\n\n                if (self.maximum_qty() && self.qty() > self.maximum_qty()) {\n                    self.qty(Helper.toNumber(self.maximum_qty()));\n                    Helper.alert({\n                        priority: \"warning\",\n                        title: \"Warning\",\n                        message: self.product_name() + Helper.__(\" has maximum quantity allow in cart is \") + Helper.toNumber(self.maximum_qty())\n                    });\n                }\n\n                if (self.minimum_qty() && self.qty() < self.minimum_qty()) {\n                    self.qty(Helper.toNumber(self.minimum_qty()));\n                    Helper.alert({\n                        priority: \"warning\",\n                        title: \"Warning\",\n                        message: self.product_name() + Helper.__(\" has minimum quantity allow in cart is \") + Helper.toNumber(self.minimum_qty())\n                    });\n                }\n                if (!self.item_price) {\n                    self.item_price = ko.pureComputed(function () {\n                        var itemPrice = self.item_price_origin();\n                        if (Helper.isProductPriceIncludesTax()) {\n                            var taxRates = (!Helper.isEnableCrossBorderTrade()) ? self.tax_origin_rates() : self.tax_rates();\n                            var taxRates = self.tax_origin_rates();\n                            if (taxRates && taxRates.length > 0) {\n                                $.each(taxRates, function (index, rate) {\n                                    itemPrice = itemPrice / (1 + rate / 100);\n                                });\n                            }\n                        }\n                        return Helper.correctPrice(itemPrice);\n                    });\n                }\n\n                if (!self.base_item_price) {\n                    self.base_item_price = ko.pureComputed(function () {\n                        var itemPrice = self.base_item_price_origin();\n                        if (Helper.isProductPriceIncludesTax()) {\n                            var taxRates = (!Helper.isEnableCrossBorderTrade()) ? self.tax_origin_rates() : self.tax_rates();\n                            if (taxRates && taxRates.length > 0) {\n                                $.each(taxRates, function (index, rate) {\n                                    itemPrice = itemPrice / (1 + rate / 100);\n                                });\n                            }\n                        }\n                        return Helper.correctPrice(itemPrice);\n                    });\n                }\n                if (!self.item_price_origin) {\n                    self.item_price_origin = ko.pureComputed(function () {\n                        var itemPrice = (self.tier_price() && (self.tier_price() < self.unit_price())) ? self.tier_price() : self.unit_price();\n                        var unitPrice = itemPrice;\n                        var discountPercentage = 0;\n                        var maximumPercent = Helper.toNumber(DiscountModel.maximumPercent());\n                        var customAmount = (self.custom_price_type() == self.FIXED_AMOUNT_CODE) ? Helper.toBasePrice(self.custom_price_amount()) : self.custom_price_amount();\n                        var validAmount = customAmount;\n                        if (self.has_custom_price() == true && customAmount >= 0 && self.custom_price_type()) {\n                            if (self.custom_type() == self.CUSTOM_PRICE_CODE) {\n                                itemPrice = (self.custom_price_type() == self.FIXED_AMOUNT_CODE) ?\n                                    customAmount :\n                                    (customAmount * unitPrice / 100);\n                                if (self.custom_price_type() == self.FIXED_AMOUNT_CODE) {\n                                    discountPercentage = (100 - itemPrice / unitPrice * 100);\n                                } else {\n                                    discountPercentage = customAmount;\n                                }\n                                if (maximumPercent && discountPercentage > maximumPercent) {\n                                    if (self.custom_price_type() == self.FIXED_AMOUNT_CODE) {\n                                        validAmount = unitPrice - unitPrice * maximumPercent / 100;\n                                    }\n                                }\n                            } else {\n                                if (self.custom_type() == self.CUSTOM_DISCOUNT_CODE) {\n                                    itemPrice = (self.custom_price_type() == self.FIXED_AMOUNT_CODE) ?\n                                        (unitPrice - customAmount) :\n                                        (unitPrice - customAmount * unitPrice / 100);\n                                    if (self.custom_price_type() == self.FIXED_AMOUNT_CODE) {\n                                        discountPercentage = (customAmount / unitPrice * 100);\n                                    } else {\n                                        discountPercentage = customAmount;\n                                    }\n                                }\n                                if (maximumPercent && discountPercentage > maximumPercent) {\n                                    if (self.custom_price_type() == self.FIXED_AMOUNT_CODE) {\n                                        validAmount = unitPrice * maximumPercent / 100;\n                                    }\n                                }\n                            }\n                        }\n                        if (maximumPercent && discountPercentage > maximumPercent) {\n                            if (self.custom_price_type() == self.PERCENTAGE_CODE) {\n                                self.custom_price_amount(maximumPercent);\n                            } else {\n                                self.custom_price_amount(Helper.convertPrice(validAmount));\n                            }\n                            if(self.custom_type() == self.CUSTOM_DISCOUNT_CODE){\n                                itemPrice = unitPrice - unitPrice * maximumPercent / 100;\n                                Helper.alert({\n                                    priority: \"warning\",\n                                    title: \"Warning\",\n                                    message: Helper.__(\" You are able to apply discount under \") + maximumPercent + \"% \" + Helper.__(\"only\")\n                                });\n                            }else{\n                                itemPrice = unitPrice * maximumPercent / 100;\n                            }\n                        }\n                        itemPrice = (itemPrice > 0) ? itemPrice : 0;\n                        if (window.webposConfig.currentCurrencyCode != window.webposConfig.baseCurrencyCode) {\n                            if (self.has_custom_price() == true) {\n                                itemPrice = Helper.roundPrice(itemPrice);\n                                itemPrice = Helper.correctPrice(Helper.convertPrice(itemPrice));\n                            } else {\n                                itemPrice = Helper.roundPrice(itemPrice);\n                                itemPrice = Helper.roundPrice(Helper.convertPrice(itemPrice));\n                            }\n                        }\n                        return itemPrice;\n                    });\n                }\n\n                if (!self.base_item_price_origin) {\n                    self.base_item_price_origin = ko.pureComputed(function () {\n                        var itemPrice = (self.tier_price() && (self.tier_price() < self.unit_price())) ? self.tier_price() : self.unit_price();\n                        var unitPrice = itemPrice;\n                        var discountPercentage = 0;\n                        var maximumPercent = Helper.toNumber(DiscountModel.maximumPercent());\n                        var customAmount = (self.custom_price_type() == self.FIXED_AMOUNT_CODE) ? Helper.toBasePrice(self.custom_price_amount()) : self.custom_price_amount();\n                        var validAmount = customAmount;\n                        if (self.has_custom_price() == true && customAmount >= 0 && self.custom_price_type()) {\n                            if (self.custom_type() == self.CUSTOM_PRICE_CODE) {\n                                itemPrice = (self.custom_price_type() == self.FIXED_AMOUNT_CODE) ?\n                                    customAmount :\n                                    (customAmount * unitPrice / 100);\n                                if (self.custom_price_type() == self.FIXED_AMOUNT_CODE) {\n                                    discountPercentage = (100 - itemPrice / unitPrice * 100);\n                                } else {\n                                    discountPercentage = customAmount;\n                                }\n                                if (maximumPercent && discountPercentage > maximumPercent) {\n                                    if (self.custom_price_type() == self.FIXED_AMOUNT_CODE) {\n                                        validAmount = unitPrice - unitPrice * maximumPercent / 100;\n                                    }\n                                }\n                            } else {\n                                if (self.custom_type() == self.CUSTOM_DISCOUNT_CODE) {\n                                    itemPrice = (self.custom_price_type() == self.FIXED_AMOUNT_CODE) ?\n                                        (unitPrice - customAmount) :\n                                        (unitPrice - customAmount * unitPrice / 100);\n                                    if (self.custom_price_type() == self.FIXED_AMOUNT_CODE) {\n                                        discountPercentage = (customAmount / unitPrice * 100);\n                                    } else {\n                                        discountPercentage = customAmount;\n                                    }\n                                }\n                                if (maximumPercent && discountPercentage > maximumPercent) {\n                                    if (self.custom_price_type() == self.FIXED_AMOUNT_CODE) {\n                                        validAmount = unitPrice * maximumPercent / 100;\n                                    }\n                                }\n                            }\n                        }\n                        if (maximumPercent && discountPercentage > maximumPercent) {\n                            if (self.custom_price_type() == self.PERCENTAGE_CODE) {\n                                self.custom_price_amount(maximumPercent);\n                            } else {\n                                self.custom_price_amount(Helper.convertPrice(validAmount));\n                            }\n                            if(self.custom_type() == self.CUSTOM_DISCOUNT_CODE) {\n                                itemPrice = unitPrice - unitPrice * maximumPercent / 100;\n                                Helper.alert({\n                                    priority: \"warning\",\n                                    title: \"Warning\",\n                                    message: Helper.__(\" You are able to apply discount under \") + maximumPercent + \"% \" + Helper.__(\"only\")\n                                });\n                            }else{\n                                itemPrice = unitPrice * maximumPercent / 100;\n                            }\n                        }\n                        itemPrice = (itemPrice > 0) ? itemPrice : 0;\n                        return itemPrice;\n                    });\n                }\n                if (!self.row_total) {\n                    self.row_total = ko.pureComputed(function () {\n                        var itemPrice = self.item_price();\n                        if (Helper.isProductPriceIncludesTax() && (Helper.isEnableCrossBorderTrade() || self.isUseOriginalTax())) {\n                            itemPrice = self.item_price_origin() - (self.tax_amount_before_discount() / self.qty());\n                        }\n                        var rowTotal = self.qty() * itemPrice;\n                        return Helper.correctPrice(rowTotal);\n                    });\n                }\n                if (!self.base_row_total) {\n                    self.base_row_total = ko.pureComputed(function () {\n                        var itemBasePrice = self.base_item_price();\n                        if (Helper.isProductPriceIncludesTax() && (Helper.isEnableCrossBorderTrade() || self.isUseOriginalTax())) {\n                            itemBasePrice = self.base_item_price_origin() - (self.base_tax_amount_before_discount() / self.qty());\n                        }\n                        var rowTotal = self.qty() * itemBasePrice;\n                        return Helper.correctPrice(rowTotal);\n                    });\n                }\n                if (!self.tax_amount) {\n                    self.tax_amount = ko.pureComputed(function () {\n                        if(Helper.isUseOnline('checkout') && Helper.getOnlineConfig('quote_id') && Helper.isOnCheckoutPage()){\n                            return self.online_tax_amount();\n                        }\n                        var tax = self.tax_amount_before_discount();\n                        /* temporary disable this functionality, because magento core is having a bug in here, currently they don't check this setting when creating order from backend also.\n                         * ------------- *\n                         var apply_tax_on = window.webposConfig['tax/calculation/apply_tax_on'];\n                         if(apply_tax_on == self.APPLY_TAX_ON_ORIGINALPRICE){\n                         total = self.row_total_without_discount();\n                         }\n                         * ------------- *\n                         */\n\n                        var discountItem = 0;\n                        var apply_after_discount = window.webposConfig['tax/calculation/apply_after_discount'];\n                        if (apply_after_discount == 1 && self.item_discount_amount() > 0) {\n                            discountItem += self.item_discount_amount();\n                        }\n\n                        /* S: Integration custom discount per item - recalculate tax - tax after discount */\n                        var allConfig = Helper.getBrowserConfig('plugins_config');\n                        if (Helper.isStoreCreditEnable() && allConfig['os_store_credit']) {\n                            var configs = allConfig['os_store_credit'];\n                            if (configs['customercredit/spend/tax'] && configs['customercredit/spend/tax'] == '0') {\n                                if (self.item_credit_amount() > 0) {\n                                    discountItem += self.item_credit_amount();\n                                }\n                            }\n                        }\n                        if (Helper.isRewardPointsEnable() && apply_after_discount == 1) {\n                            if (self.item_point_discount() > 0) {\n                                discountItem += self.item_point_discount();\n                            }\n                        }\n                        if (Helper.isGiftCardEnable() && allConfig['os_gift_card']) {\n                            var configs = allConfig['os_gift_card'];\n                            if (configs['giftvoucher/general/apply_after_tax'] == '0') {\n                                if (self.item_giftcard_discount() > 0) {\n                                    discountItem += self.item_giftcard_discount();\n                                }\n                            }\n\n                        }\n                        /* E: Integration custom discount per item */\n                        if (discountItem > 0 && apply_after_discount == 1) {\n                            if (Helper.isProductPriceIncludesTax()) {\n                                tax = tax - discountItem / (self.row_total() + tax) * tax;\n                            } else {\n                                tax = tax - discountItem / self.row_total() * tax;\n                            }\n                        }\n                        return Helper.correctPrice(tax);\n                    });\n                }\n                if (!self.base_tax_amount) {\n                    self.base_tax_amount = ko.pureComputed(function () {\n                        if(Helper.isUseOnline('checkout') && Helper.getOnlineConfig('quote_id') && Helper.isOnCheckoutPage()){\n                            return self.online_base_tax_amount();\n                        }\n                        var tax = self.base_tax_amount_before_discount();\n\n                        /* temporary disable this functionality, because magento core is having a bug in here, currently they don't check this setting when creating order from backend also.\n                         * ------------- *\n                         var apply_tax_on = window.webposConfig['tax/calculation/apply_tax_on'];\n                         if(apply_tax_on == self.APPLY_TAX_ON_ORIGINALPRICE){\n                         total = self.row_total_without_discount();\n                         }\n                         * ------------- *\n                         */\n\n                        var discountItem = 0;\n                        var apply_after_discount = window.webposConfig['tax/calculation/apply_after_discount'];\n                        if (apply_after_discount == 1 && self.item_base_discount_amount() > 0) {\n                            discountItem += self.item_base_discount_amount();\n                        }\n\n                        /* S: Integration custom discount per item - recalculate tax - tax after discount */\n                        var allConfig = Helper.getBrowserConfig('plugins_config');\n                        if (Helper.isStoreCreditEnable() && allConfig['os_store_credit']) {\n                            var configs = allConfig['os_store_credit'];\n                            if (configs['customercredit/spend/tax'] && configs['customercredit/spend/tax'] == '0') {\n                                if (self.item_base_credit_amount() > 0) {\n                                    discountItem += self.item_base_credit_amount();\n                                }\n                            }\n                        }\n                        if (Helper.isRewardPointsEnable() && apply_after_discount == 1) {\n                            if (self.item_base_point_discount() > 0) {\n                                discountItem += self.item_base_point_discount();\n                            }\n                        }\n                        if (Helper.isGiftCardEnable() && allConfig['os_gift_card']) {\n                            var configs = allConfig['os_gift_card'];\n                            if (configs['giftvoucher/general/apply_after_tax'] == '0') {\n                                if (self.item_base_giftcard_discount() > 0) {\n                                    discountItem += self.item_base_giftcard_discount();\n                                }\n                            }\n\n                        }\n                        /* E: Integration custom discount per item */\n                        if (discountItem > 0 && apply_after_discount == 1) {\n                            if (Helper.isProductPriceIncludesTax()) {\n                                tax = tax - discountItem / (self.base_row_total() + tax) * tax;\n                            } else {\n                                tax = tax - discountItem / self.base_row_total() * tax;\n                            }\n                        }\n                        return Helper.correctPrice(tax);\n                    });\n                }\n                if (!self.tax_amount_before_discount) {\n                    self.tax_amount_before_discount = ko.pureComputed(function () {\n                        var price = self.item_price();\n                        var tax = 0;\n                        var taxRates = self.tax_rates();\n                        if (taxRates && taxRates.length > 0) {\n                            $.each(taxRates, function (index, rate) {\n                                var value = Helper.roundPrice(rate * price / 100);\n                                tax += value;\n                                price += value;\n                            });\n                        }\n                        tax = Helper.correctPrice(tax);\n                        tax = self.qty() * tax;\n                        return Helper.correctPrice(tax);\n                    });\n                }\n                if (!self.base_tax_amount_before_discount) {\n                    self.base_tax_amount_before_discount = ko.pureComputed(function () {\n                        var price = self.base_item_price();\n                        var tax = 0;\n                        var taxRates = self.tax_rates();\n                        if (taxRates && taxRates.length > 0) {\n                            $.each(taxRates, function (index, rate) {\n                                var value = Helper.roundPrice(rate * price / 100);\n                                tax += value;\n                                price += value;\n                            });\n                        }\n                        tax = Helper.correctPrice(tax);\n                        tax = self.qty() * tax;\n                        return Helper.correctPrice(tax);\n                    });\n                }\n                if (!self.tax_amount_without_discount) {\n                    self.tax_amount_without_discount = ko.pureComputed(function () {\n                        var price = self.item_price();\n                        var tax = 0;\n                        var taxRates = self.tax_rates();\n                        if (taxRates && taxRates.length > 0) {\n                            $.each(taxRates, function (index, rate) {\n                                tax += rate * price / 100;\n                                price += tax;\n                            });\n                        }\n                        tax = Helper.correctPrice(tax);\n                        tax = self.qty() * tax;\n                        return Helper.correctPrice(tax);\n                    });\n                }\n                if (!self.base_tax_amount_without_discount) {\n                    self.base_tax_amount_without_discount = ko.pureComputed(function () {\n                        var price = self.base_item_price();\n                        var tax = 0;\n                        var taxRates = self.tax_rates();\n                        if (taxRates && taxRates.length > 0) {\n                            $.each(taxRates, function (index, rate) {\n                                tax += rate * price / 100;\n                                price += tax;\n                            });\n                        }\n                        tax = Helper.correctPrice(tax);\n                        tax = self.qty() * tax;\n                        return Helper.correctPrice(tax);\n                    });\n                }\n                if (!self.tax_amount_converted) {\n                    self.tax_amount_converted = ko.pureComputed(function () {\n                        return Helper.convertPrice(self.tax_amount());\n                    });\n                }\n                if (!self.row_total_include_tax) {\n                    self.row_total_include_tax = ko.pureComputed(function () {\n                        var rowTotal = self.qty() * self.item_price();\n                        if (!(Helper.isEnableCrossBorderTrade() || self.isUseOriginalTax())) {\n                            rowTotal += self.tax_amount_without_discount();\n                        } else {\n                            rowTotal = self.qty() * self.item_price_origin();\n                        }\n                        return Helper.correctPrice(rowTotal);\n                    });\n                }\n                if (!self.base_row_total_include_tax) {\n                    self.base_row_total_include_tax = ko.pureComputed(function () {\n                        var rowTotal = self.qty() * self.base_item_price();\n                        if (!(Helper.isEnableCrossBorderTrade() || self.isUseOriginalTax())) {\n                            rowTotal += self.base_tax_amount_without_discount();\n                        } else {\n                            rowTotal = self.qty() * self.base_item_price_origin();\n                        }\n                        return Helper.correctPrice(rowTotal);\n                    });\n                }\n                if (!self.row_total_formated) {\n                    self.row_total_formated = ko.pureComputed(function () {\n                        var displayIncludeTax = Helper.isCartDisplayIncludeTax('price');\n                        var rowTotal = self.row_total();\n                        if (displayIncludeTax) {\n                            rowTotal = self.row_total_include_tax();\n                        }\n                        return Helper.formatPrice(rowTotal);\n                    });\n                }\n                if (!self.original_row_total_formated) {\n                    self.original_row_total_formated = ko.pureComputed(function () {\n                        var displayIncludeTax = Helper.isCartDisplayIncludeTax('price');\n                        var rowTotal = self.qty() * self.unit_price();\n                        if (!Helper.isEnableCrossBorderTrade() && !displayIncludeTax) {\n                            var taxRates = self.tax_origin_rates();\n                            if (taxRates && taxRates.length > 0) {\n                                $.each(taxRates, function (index, rate) {\n                                    rowTotal = rowTotal / (1 + rate / 100);\n                                });\n                            }\n                        }\n                        if(self.applied_catalog_rules() == true){\n                            rowTotal = self.qty() * parseFloat(self.base_original_price());\n                        }\n                        return \"Reg. \" + Helper.convertAndFormatPrice(rowTotal);\n                    });\n                }\n                if (!self.show_original_price) {\n                    self.show_original_price = ko.pureComputed(function () {\n                        return ((self.has_custom_price() == true && self.custom_price_amount() >= 0 && self.custom_price_type()) || (self.applied_catalog_rules() == true));\n                    });\n                }\n            },\n            setIndividualData:function(key, value){\n                var self = this;\n                if (typeof self[key] != \"undefined\") {\n                    if (key == \"qty\") {\n                        if (self.maximum_qty() && value > self.maximum_qty()) {\n                            value = Helper.toNumber(self.maximum_qty());\n                            Helper.alert({\n                                priority: \"warning\",\n                                title: \"Warning\",\n                                message: self[\"product_name\"]() + Helper.__(\" has maximum quantity allow in cart is \") + value\n                            });\n                        }\n                        if (self.minimum_qty() && value < self.minimum_qty()) {\n                            value = Helper.toNumber(self.minimum_qty());\n                            Helper.alert({\n                                priority: \"warning\",\n                                title: \"Warning\",\n                                message: self[\"product_name\"]() + Helper.__(\" has minimum quantity allow in cart is \") + value\n                            });\n                        }\n                    }\n                    self[key](value);\n                }\n            },\n            setData: function(key, value){\n                var self = this;\n                if($.type(key) == 'string') {\n                    self.setIndividualData(key, value);\n                }else{\n                    $.each(key, function(index, val){\n                        self.setIndividualData(index, val);\n                    })\n                }\n            },\n            getData: function (key) {\n                var self = this;\n                var data = {};\n                if (typeof key != \"undefined\") {\n                    data = self[key]();\n                } else {\n                    var data = {};\n                    $.each(this.initFields, function () {\n                        data[this] = self[this]();\n                    });\n                }\n                return data;\n            },\n            getInfoBuyRequest: function () {\n                var infobuy = {};\n                infobuy.id = this.product_id();\n                infobuy.item_id = this.item_id();\n                infobuy.qty = this.qty();\n                infobuy.qty_to_ship = this.qty_to_ship();\n                infobuy.use_discount = Helper.isUseOnline('checkout')?1:0;\n\n                if (this.product_id() == \"customsale\") {\n                    infobuy.is_custom_sale = true;\n                }\n\n                if (this.has_custom_price() == true && this.custom_price_amount() >= 0) {\n                    infobuy.custom_price = this.item_price_origin();\n                }\n                if (this.super_attribute()) {\n                    infobuy.super_attribute = this.super_attribute();\n                }\n                if (this.options()) {\n                    var options = this.options();\n                    if (options && $.isArray(options) && options.length > 0) {\n                        $.each(options, function (index, option) {\n                            if (option.value && $.isArray(option.value)) {\n                                $.each(option.value, function (index, value) {\n                                    options.push({code: option.code, value: value});\n                                });\n                                delete options[index];\n                            }\n                        });\n                    }\n                    infobuy.options = options;\n                } else {\n                    if (this.product_id() == \"customsale\") {\n                        infobuy.options = [\n                            {code: \"tax_class_id\", value: this.tax_class_id()},\n                            {code: \"price\", value: this.unit_price()},\n                            {code: \"is_virtual\", value: this.is_virtual()},\n                            {code: \"name\", value: this.product_name()}\n                        ];\n                    }\n                }\n                if (this.super_group()) {\n                    infobuy.super_group = this.super_group();\n                }\n                if (this.bundle_option() && this.bundle_option_qty()) {\n                    var bundleOptions = this.bundle_option();\n                    if (bundleOptions && $.isArray(bundleOptions) && bundleOptions.length > 0) {\n                        $.each(bundleOptions, function (index, option) {\n                            if (option.value && $.isArray(option.value)) {\n                                $.each(option.value, function (index, value) {\n                                    bundleOptions.push({code: option.code, value: value});\n                                });\n                                delete bundleOptions[index];\n                            }\n                        });\n                    }\n                    infobuy.bundle_option = bundleOptions;\n                    infobuy.bundle_option_qty = this.bundle_option_qty();\n                }\n                var itemPrice = this.item_price();\n                var baseItemPrice = this.base_item_price();\n                // if(!Helper.isEnableCrossBorderTrade()){\n                //     var taxRates = this.tax_origin_rates();\n                //     if(taxRates && taxRates.length > 0){\n                //         $.each(taxRates, function (index, rate) {\n                //             itemPrice = itemPrice / (1 + rate/100);\n                //             baseItemPrice = baseItemPrice / (1 + rate/100);\n                //         });\n                //     }\n                // }\n                var rowTotalInclTax = this.row_total_include_tax();\n                var baseRowTotalInclTax = this.base_row_total_include_tax();\n                var priceInclTax = Helper.correctPrice(rowTotalInclTax) / this.qty();\n                var basePriceInclTax = Helper.correctPrice(baseRowTotalInclTax) / this.qty();\n                var discountTaxCompensationAmount = this.tax_amount_before_discount() - this.tax_amount();\n                var baseDiscountTaxCompensationAmount = this.base_tax_amount_before_discount() - this.base_tax_amount();\n\n                infobuy.extension_data = [\n                    {key: \"row_total\", value: Helper.correctPrice(this.row_total())},\n                    {key: \"base_row_total\", value: Helper.correctPrice(this.base_row_total())},\n                    {key: \"row_total_incl_tax\", value: Helper.correctPrice(rowTotalInclTax)},\n                    {key: \"base_row_total_incl_tax\", value: Helper.correctPrice(baseRowTotalInclTax)},\n                    {key: \"price\", value: Helper.correctPrice(itemPrice)},\n                    {key: \"base_price\", value: Helper.correctPrice(baseItemPrice)},\n                    {key: \"price_incl_tax\", value: priceInclTax},\n                    {key: \"base_price_incl_tax\", value: basePriceInclTax},\n                    {key: \"discount_amount\", value: Helper.correctPrice(this.item_discount_amount())},\n                    {key: \"base_discount_amount\", value: Helper.correctPrice(this.item_base_discount_amount())},\n                    {key: \"tax_amount\", value: Helper.correctPrice(this.tax_amount())},\n                    {key: \"base_tax_amount\", value: Helper.correctPrice(this.base_tax_amount())},\n                    {key: \"custom_tax_class_id\", value: Helper.correctPrice(this.tax_class_id())},\n                    {\n                        key: \"discount_tax_compensation_amount\",\n                        value: Helper.correctPrice(discountTaxCompensationAmount)\n                    },\n                    {\n                        key: \"base_discount_tax_compensation_amount\",\n                        value: Helper.correctPrice(baseDiscountTaxCompensationAmount)\n                    },\n                ];\n                /* S: Integration custom discount per item - add item discount data to save on server database */\n                if (Helper.isStoreCreditEnable()) {\n                    infobuy.amount = this.amount();\n                    infobuy.credit_price_amount = this.credit_price_amount();\n                    infobuy.extension_data.push({\n                        key: \"customercredit_discount\",\n                        value: Helper.correctPrice(this.item_credit_amount())\n                    });\n                    infobuy.extension_data.push({\n                        key: \"base_customercredit_discount\",\n                        value: Helper.correctPrice(this.item_base_credit_amount())\n                    });\n                    if (this.credit_price_amount()) {\n                        infobuy.extension_data.push({\n                            key: \"original_price\",\n                            value: Helper.convertPrice(this.credit_price_amount())\n                        });\n                        infobuy.extension_data.push({\n                            key: \"base_original_price\",\n                            value: this.credit_price_amount()\n                        });\n                    }\n                    if (!infobuy.options) {\n                        infobuy.options = [];\n                    }\n                    infobuy.options.push({\n                        code: \"credit_price_amount\",\n                        value: this.credit_price_amount()\n                    });\n                    infobuy.options.push({\n                        code: \"amount\",\n                        value: this.amount()\n                    });\n                }\n                if (Helper.isRewardPointsEnable()) {\n                    infobuy.extension_data.push({\n                        key: \"rewardpoints_earn\",\n                        value: Helper.correctPrice(this.item_point_earn())\n                    });\n                    infobuy.extension_data.push({\n                        key: \"rewardpoints_spent\",\n                        value: Helper.correctPrice(this.item_point_spent())\n                    });\n                    infobuy.extension_data.push({\n                        key: \"rewardpoints_discount\",\n                        value: Helper.correctPrice(this.item_point_discount())\n                    });\n                    infobuy.extension_data.push({\n                        key: \"rewardpoints_base_discount\",\n                        value: Helper.correctPrice(this.item_base_point_discount())\n                    });\n                }\n                if (Helper.isGiftCardEnable()) {\n                    infobuy.extension_data.push({\n                        key: \"gift_voucher_discount\",\n                        value: Helper.correctPrice(this.item_giftcard_discount())\n                    });\n                    infobuy.extension_data.push({\n                        key: \"base_gift_voucher_discount\",\n                        value: Helper.correctPrice(this.item_base_giftcard_discount())\n                    });\n                }\n                /* E: Integration custom discount per item  */\n\n                return infobuy;\n            },\n            getDataForOrder: function () {\n                var rowTotalInclTax = this.row_total_include_tax();\n                var baseRowTotalInclTax = this.base_row_total_include_tax();\n                var priceInclTax = Helper.correctPrice(rowTotalInclTax) / this.qty();\n                var basePriceInclTax = Helper.correctPrice(baseRowTotalInclTax) / this.qty();\n                var discountTaxCompensationAmount = this.tax_amount_before_discount() - this.tax_amount();\n                var baseDiscountTaxCompensationAmount = this.base_tax_amount_before_discount() - this.base_tax_amount();\n\n                var data = {\n                    item_id: this.item_id(),\n                    name: this.product_name(),\n                    product_id: this.product_id(),\n                    product_type: this.product_type(),\n                    sku: this.sku(),\n                    qty_canceled: 0,\n                    qty_invoiced: 0,\n                    qty_ordered: this.qty(),\n                    qty_refunded: 0,\n                    qty_shipped: 0,\n                    discount_amount: Helper.correctPrice(this.item_discount_amount()),\n                    base_discount_amount: Helper.correctPrice(this.item_base_discount_amount()),\n                    original_price: Helper.convertPrice(this.unit_price()),\n                    base_original_price: this.unit_price(),\n                    tax_amount: this.tax_amount(),\n                    base_tax_amount: this.base_tax_amount(),\n                    price: this.item_price(),\n                    base_price: this.base_item_price(),\n                    price_incl_tax: priceInclTax,\n                    base_price_incl_tax: basePriceInclTax,\n                    row_total: this.row_total(),\n                    base_row_total: this.base_row_total(),\n                    row_total_incl_tax: rowTotalInclTax,\n                    base_row_total_incl_tax: baseRowTotalInclTax,\n                    discount_tax_compensation_amount: discountTaxCompensationAmount,\n                    base_discount_tax_compensation_amount: baseDiscountTaxCompensationAmount\n                };\n                /* S: Integration custom discount per item - add item data for offline order */\n                if (Helper.isStoreCreditEnable()) {\n                    data.amount = this.amount();\n                    data.credit_price_amount = this.credit_price_amount();\n                    data.customercredit_discount = Helper.correctPrice(this.item_credit_amount());\n                    data.base_customercredit_discount = Helper.correctPrice(this.item_base_credit_amount());\n                    if (this.credit_price_amount()) {\n                        data.original_price = Helper.convertPrice(this.credit_price_amount());\n                        data.base_original_price = this.credit_price_amount();\n                    }\n                }\n                if (Helper.isRewardPointsEnable()) {\n                    data.rewardpoints_earn = Helper.correctPrice(this.item_point_earn());\n                    data.rewardpoints_spent = Helper.correctPrice(this.item_point_spent());\n                    data.rewardpoints_discount = Helper.correctPrice(this.item_point_discount());\n                    data.rewardpoints_base_discount = Helper.correctPrice(this.item_base_point_discount());\n                }\n                if (Helper.isGiftCardEnable()) {\n                    data.gift_voucher_discount = Helper.correctPrice(this.item_giftcard_discount());\n                    data.base_gift_voucher_discount = Helper.correctPrice(this.item_base_giftcard_discount());\n                }\n                /* E: Integration custom discount per item  */\n\n                return data;\n            },\n            isUseOriginalTax: function () {\n                var self = this;\n                var taxOriginalRates = self.tax_origin_rates();\n                var taxRates = self.tax_rates();\n                if ((taxOriginalRates && (taxOriginalRates.length == 0)) && (taxRates && (taxRates.length == 0))) {\n                    return true;\n                }\n                if ((taxRates && (taxRates.length > 0)) && (taxOriginalRates && (taxOriginalRates.length > 0))) {\n                    if (taxRates.length == taxOriginalRates.length) {\n                        var notEqual = false;\n                        $.each(taxRates, function (index, rate) {\n                            if (!taxOriginalRates[index] || (taxOriginalRates[index] && (taxOriginalRates[index] != rate))) {\n                                notEqual = true;\n                            }\n                        });\n                        return !notEqual;\n                    }\n                }\n                return false;\n            }\n        });\n    }\n);\n","Magestore_Webpos/js/model/checkout/cart/items/item-factory.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/factory',\n        'Magestore_Webpos/js/model/checkout/cart/items/item',\n    ],\n    function(Factory, ModelClass){\n         \"use strict\";\n        return {\n            get: function(){\n                var key = 'model/checkout/cart/items/item';\n                return Factory.getSingleton(key, ModelClass);              \n            },\n            \n            create: function(){\n                return ModelClass();\n            }\n        }\n    }\n);","Magestore_Webpos/js/model/synchronization/synchronization.js":"/*\n *  Copyright \u00c2\u00a9 2016 Magestore. All rights reserved.\n *  See COPYING.txt for license details.\n *\n */\n\ndefine(\n    [\n        'Magestore_Webpos/js/model/abstract',\n        'Magestore_Webpos/js/model/resource-model/indexed-db/synchronization/synchronization'\n    ],\n    function (modelAbstract, indexedDbResource) {\n        \"use strict\";\n        return modelAbstract.extend({\n            initialize: function () {\n                this._super();\n                this.setResource(null, indexedDbResource());\n            }\n        });\n    }\n);","mage/dialog.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n\n    /**\n     * Dialog Widget - this widget is a wrapper for the jQuery UI Dialog\n     */\n    $.widget('mage.dialog', $.ui.dialog, {});\n\n    return $.mage.dialog;\n});\n"}
    }
});
